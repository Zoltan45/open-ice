TMS340 COFF Macro Assembler Version 6.10     Wed Apr 21 11:41:33 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE    1

       1                            .MLIB   "HHMACS.LIB"
       2                            .FILE   "HHMENU.ASM"
       3                            .WIDTH  132
       4                            .OPTION B,D,L,T
       5                            .MNOLIST
       6                    
       7                    **************************************************************************
       8                    *                                                                        *
       9                    *       COPYRIGHT (C) 1994 MIDWAY MANUFACTURING COMPANY.                 *
      10                    *                      ALL RIGHTS RESERVED.                              *
      11                    *                                                                        *
      12                    **************************************************************************
      13                    
      14                            .INCLUDE        "HH.INC"
      15                            .INCLUDE        "HHSTRING.H"
      16                            .INCLUDE        "HHDICT.H"
      17                            .INCLUDE        "IMGTBL.GLO"
      18                            .include        "hhmenu.e"
      19                            .include        "hh.g"
      20                            .include        "hhcmos.g"
      21                            .include        "hhram.g"
      22                            .include        "hhsnd.g"
      23                            .include        "hhdtst.g"
      24                            .include        "hhd.g"
      25                            .include        "hhproc.g"
      26                            .include        "hhtext.g"
      27                            .include        "hhmisc.g"
      28                            .include        "hhutil.g"
      29                            .include        "hhadj.g"
      30                            .include        "hhcoin.g"
      31                            .include        "hhmenu.g"
      32                            .include        "hhpic.g"
      33                            .include        "hhcx.g"
      34                    
      35                    ; end of include files
      36                    
      37                    *SYMBOLS IN THIS MODULE
      38                    
      39                    *SYMBOLS IN APDTST.ASM
      40                            .REF    SWITCHTEST, CONV_PLOT, DIPTEST
      41                            .REF    COLORBAR
      42                    
      43                    *
      44                    *        MAIN_RET
      45                    *
      46                    *        POSITIVE NUMBER HERE SAYS RETURN (UPWARD) TO MAIN MENU (GEN_MENU ONLY)
      47                    *        NEGATIVE NUMBER HERE SAYS SETUP RESTORE AFTER RAM TEST. (GEN_MENU)
      48                    *
      49 00000000                   .BSS    MAIN_RET,16             ;FLAG SAYS RETURN TO MAIN MENU
      50 00000010                   .BSS    GMENULEV,16             ;HOW DEEP INTO GEN_MENU WE ARE
      51 00000020                   .BSS    SND_MADE,16             ;SOUND TEST FLAG
      52 00000030                   .BSS    NO_CLEAR,16             ;FLAG TELLS GET_MENU NOT TO CLEAR!
      53 00000040                   .BSS    LAST_BUT,32
      54 00000060                   .BSS    SCODE,16
      55 00000070                   .BSS    DCODE,16
TMS340 COFF Macro Assembler Version 6.10     Wed Apr 21 11:41:33 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE    2

      56 00000080                   .BSS    FAC_FLAG,16          ;FLAG SAYS CLEAR AUDITS AND HSTABLE
      57 00000090                   .bss    xxxx,16         ;fill space to 32 bits
      58 000000a0                   .BSS    CHAROUT,16
      59 000000b0                   .BSS    BLINE,16
      60 000000c0                   .BSS    BCHAR,16
      61 000000d0                   .BSS    PTSIZE,16               ; BOGUS 15 PT FONT FLAG
      62 000000e0                   .BSS    LASTCOLOR,32
      63 00000100                   .bss    vol_value,32            ; WBD Volume value string (0-255)
      64                    
      65 00000000                    .TEXT
      66                    
      67                    
      68              00ab  vb_height       .set    171
      69              002d  vb_y            .set    2dh
      70                    
      71                    
      72 00000000           go_volume
      73 00000000     0d5f          calla   CLR_SCRN
         00000010 00000000! 
      74                    ;        calla   MY_OINIT
      75                    
      76 00000030     5684          clr     a4
      77 00000040     0d5f          calla   SEND_RAW_SOUND
         00000050 00000000! 
      78 00000070                   sleep   2
      79                    
      80 000000b0                   PUSHP   a8
      81 000000c0     09c8          movi    100,a8
         000000d0     0064  
      82 000000e0           vol_wait:
      83 000000e0     1428          dec     a8
      84 000000f0     ca16          jrz     vol_timeout
      85 00000100                   sleep   1
      86 00000140     07a0          move    @SWITCH,a0,L
         00000150 01860000  
      87 00000170     0b80          andi    70707070h,a0
         00000180 8f8f8f8f  
      88 000001a0     05ae          move    @COINS,a14,W            ; svc credit acts as button, too
         000001b0 01860030  
      89 000001d0     0b8e          andi    40h,a14
         000001e0 ffffffbf  
      90 00000200     242e          sll     1,a14
      91 00000210     55c0          or      a14,a0
      92 00000220     0b60          cmpi    707070F0h,a0
         00000230 8f8f8f0f  
      93 00000250     cbe8          jrne    vol_wait
      94 00000260           vol_timeout:
      95 00000260     0780          move    a0,@SWSET1,L
         00000270 00000000! 
      96 00000290                   PULLP   a8
      97                    
      98                    ;       clr     a0
      99                    ;       move    a0,@NOPGFLIP,W
     100                    ;       move    a0,@f_nosound,W         ; allow sounds
     101                    ;
TMS340 COFF Macro Assembler Version 6.10     Wed Apr 21 11:41:33 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE    3

     102                    ;       movk    1,a0
     103                    ;       move    a0,@f_auto_erase,W      ; auto erase = on
     104                    ;       movi    rgb_grey,a0
     105                    ;       move    a0,@irqskye,W
     106                    
     107 000002b0     09e4          movi    [by,bx],a4                  ; upper lft
         000002c0 002a00b0  
     108 000002e0     09e5          movi    [by+bh,bx+bw],a5            ; lower rt
         000002f0 00da00e0  
     109 00000310     09e0          movi    [bh,bw],a0
         00000320 00b00030  
     110 00000340     09c9          movi    COLOR_YELLOW,a9
         00000350     0505  
     111 00000360     0d3f          callr   DOBORDER
         00000370     0d80  
     112                    
     113 00000380     09e8          movi    pf_volume_1,a8
         00000390 00001550' 
     114 000003b0                   jsrp    LM_PRINTF
     115 00000420     09e8          movi    pf_volume_2,a8
         00000430 00001680' 
     116 00000450                   jsrp    LM_PRINTF
     117 000004c0     09e8          movi    pf_volume_3,a8
         000004d0 000018d0' 
     118 000004f0                   jsrp    LM_PRINTF
     119 00000560     09e8          movi    pf_volume_4,a8
         00000570 000019b0' 
     120 00000590                   jsrp    LM_PRINTF
     121                    
     122 00000600     09e1          movi    COLOR_PRED,a1
         00000610 01010101  
     123 00000630     09e4          movi    [bh-(2*bthick)+1,bw-(2*bthick)],a4
         00000640 00ab002a  
     124 00000660     09e3          movi    [by+bthick,bx+bthick],a3
         00000670 002d00b3  
     125 00000690     0d5f          calla   FILLAREA
         000006a0 00000000! 
     126                    
     127 000006c0                   ADJUST  ADJVOLUME
     128 00000710     4c0a          move    a0,a10                          ; a10 = cmos volume
     129                    
     130 00000720     09e4          movi    set_volume_tune,a4                   ; tune to set volume by
         00000730 00000004  
     131 00000750     0d5f          calla   SEND_RAW_SOUND
         00000760 00000000! 
     132                    
     133 00000780                   ADJUST  ADJMINVOL               ;Get the minimum volume allowed
     134 000007d0     480a          CMP     A0,A10                  ;Are we lower than the minimum?
     135 000007e0     c901          JRHS    VD_OK                   ;BR = No, we are O.K.
     136 000007f0     4c0a          MOVE    A0,A10                  ;Otherwise, set minimum.
     137 00000800           VD_OK
     138 00000800                   PUSHP   a0        
     139                    *
     140                    * read cmos value
     141                    *
TMS340 COFF Macro Assembler Version 6.10     Wed Apr 21 11:41:33 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE    4

     142 00000810     0b4a  vol6    cmpi    255,a10
         00000820     ff00  
     143 00000830     c202          jrls    vol7
     144 00000840     09ca          movi    255,a10
         00000850     00ff  
     145 00000860           vol7
     146 00000860                   PULLPQ  a0                      ; get minimum vol
     147 00000870     480a          cmp     a0,a10
     148 00000880     c901          jrhs    vol8
     149 00000890     4c0a          move    a0,a10                  ; keep within limits
     150 000008a0           vol8
     151 000008a0                   PUSHP   a0 
     152                    *
     153                    * send volume call to sound board
     154                    *
     155 000008b0     0d3f          callr   set_volume_a10
         000008c0     0038  
     156                    ; WBD END
     157 000008d0                   sleep   1
     158                    
     159 00000910     07a0          move    @SWITCH,a0,L
         00000920 01860000  
     160 00000940     03e0          not     a0
     161                    ;  This allows vol+/vol- to adjust volume
     162 00000950                   PUSH    a10
     163 00000960     05aa          move    @COINS,a10,W            ; get coindoor switches
         00000970 01860030  
     164 00000990     03ea          not     a10
     165 000009a0     0b8a          andi    1800h,a10               ; leave only volume bits
         000009b0 ffffe7ff  
     166 000009d0     2fca          srl     2,a10                   ; shift vol dn (bit 11) into bit 9
     167 000009e0     5540          or      a10,a0
     168 000009f0     2fca          srl     2,a10                   ; shift vol up (bit 12) into bit 8
     169 00000a00     5540          or      a10,a0
     170 00000a10                   PULLQ   a10
     171                    ;
     172 00000a20     4c0e          move    a0,a14
     173 00000a30     0b80          andi    1010101h,a0             ; test for up
         00000a40 fefefefe  
     174 00000a60     cb00          jrne    vol_up
         00000a70     00a4  
     175                    
     176 00000a80     0b8e          andi    2020202h,a14            ; test for down
         00000a90 fdfdfdfd  
     177 00000ab0     cb00          jrne    vol_down
         00000ac0     00a2  
     178                    *
     179                    * button exit ?
     180                    *
     181 00000ad0     07a0          move    @SWITCH,a0,L
         00000ae0 01860000  
     182 00000b00     0b80          andi    70707070h,a0
         00000b10 8f8f8f8f  
     183 00000b30     05ae          move    @COINS,a14,W            ; svc credit acts as button, too
         00000b40 01860030  
TMS340 COFF Macro Assembler Version 6.10     Wed Apr 21 11:41:33 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE    5

     184 00000b60     0b8e          andi    40h,a14
         00000b70 ffffffbf  
     185 00000b90     242e          sll     1,a14
     186 00000ba0     55c0          or      a14,a0
     187 00000bb0     0b60          cmpi    707070F0h,a0
         00000bc0 8f8f8f0f  
     188 00000be0     cac2          jreq    vol6
     189 00000bf0     07ae          move    @SWSET1,a14,L   ; guard against 'stuck low' buttons
         00000c00 00000000! 
     190 00000c20     480e          cmp     a0,a14
     191 00000c30     cabd          jreq    vol6
     192 00000c40     c072          jruc    volume_done
     193                    
     194 00000c50           set_volume_a10:
     195 00000c50     09c4          movi    55aah,a4
         00000c60     55aa  
     196 00000c70     0d5f          calla   SEND_RAW_SOUND
         00000c80 00000000! 
     197 00000ca0     4d44          move    a10,a4                          ; volume
     198 00000cb0     4d41          move    a10,a1
     199 00000cc0     03e1          not     a1    
     200 00000cd0     2504          SLL     8,A4
     201 00000ce0     2701          sll     32-8,a1
     202 00000cf0     2d01          srl     32-8,a1
     203 00000d00     4024          add     a1,a4                           ; a4 = [volume,sans volume]
     204                    
     205 00000d10     0d5f          calla   SEND_RAW_SOUND
         00000d20 00000000! 
     206                    
     207 00000d40     09e1          movi    COLOR_PBLACK,a1
         00000d50 08080101  
     208 00000d70     09e4          movi    [14,bx-134],a4
         00000d80 000e002a  
     209 00000da0     09e3          movi    [118,134],a3
         00000db0 00760086  
     210 00000dd0     0d5f          calla   FILLAREA
         00000de0 00000000! 
     211                    
     212 00000e00     4d40          move    a10,a0
     213 00000e10     0d5f          CALLA   BINBCD                  ; convert volume to bcd
         00000e20 00000000! 
     214                    
     215 00000e40     4c02          move    a0,a2
     216 00000e50     2f02          srl     8,a2                    ; is there a hundreds digit?
     217 00000e60     ca01          jrz     WBCD1
     218 00000e70     1202          addk    10h,a2                  ; add 30h if a digit
     219 00000e80           WBCD1:  
     220 00000e80     1002          addk    20h,a2                  ; add 20h (space) if zero
     221                    
     222 00000e90     4c01          move    a0,a1
     223 00000ea0     2701          sll     24,a1                   ; lose leftmost digit
     224 00000eb0     2c81          srl     28,a1                    ; lose rightmost digit
     225 00000ec0     cb03          jrnz    WBCD2
     226 00000ed0     0b4a          cmpi    10,a10                  ; print zero
         00000ee0     fff5  
TMS340 COFF Macro Assembler Version 6.10     Wed Apr 21 11:41:33 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE    6

     227 00000ef0     c401          jrlt    WBCD3    
     228 00000f00           WBCD2:
     229 00000f00     1201          addk    10h,a1                  ; add 30h if a digit
     230 00000f10           WBCD3:  
     231 00000f10     1001          addk    20h,a1                  ; add 20h (space) if zero
     232 00000f20     2501          sll     8,a1
     233 00000f30     4022          add     a1,a2
     234                    
     235 00000f40     2780          sll     28,a0
     236 00000f50     2c80          srl     28,a0                   ; lose 2 leftmost digits
     237 00000f60     0b00          addi    30h,a0
         00000f70     0030  
     238 00000f80     2600          sll     16,a0
     239 00000f90     4002          add     a0,a2
     240                    
     241 00000fa0     0782          move    a2,@vol_value,L
         00000fb0 00000100- 
     242                            
     243 00000fd0                   PUSH    a10
     244 00000fe0     09e8          movi    pf_volume_5,a8
         00000ff0 00001a90' 
     245 00001010     0d5f          calla   LM_SETUP
         00001020 00000000! 
     246 00001040     09e8          movi    vol_value,a8
         00001050 00000100- 
     247 00001070                   JSRP    PRINTF
     248 000010e0                   PULLQ   a10
     249                    
     250 000010f0     09e1          movi    COLOR_PBLACK,a1
         00001100 08080101  
     251 00001120     09e4          movi    [bh-(2*bthick)+1,bw-(2*bthick)],a4
         00001130 00ab002a  
     252 00001150     09e3          movi    [by+bthick,bx+bthick],a3
         00001160 002d00b3  
     253 00001180     0d5f          calla   FILLAREA
         00001190 00000000! 
     254                    
     255 000011b0     4d41          move    a10,a1                          ; a1 = volume
     256 000011c0     09c4          movi    vb_height,a4
         000011d0     00ab  
     257 000011e0     5c81          mpys    a4,a1                           ; cross multiplication
     258 000011f0     2601          sll     16,a1
     259 00001200     09e5          movi    255*10000h,a5
         00001210 00ff0000  
     260 00001230     5aa1          divu    a5,a1                           ; scale it down for bar height
     261 00001240     4c24          move    a1,a4
     262 00001250     2604          sll     16,a4
     263 00001260     0b24          addi    bw-(2*bthick),a4
         00001270 0000002a  
     264                    
     265 00001290     09c3          movi    vb_height,a3
         000012a0     00ab  
     266 000012b0     4423          sub     a1,a3                           ; a3 = distance from top
     267 000012c0     2603          sll     16,a3
     268 000012d0     0b23          addi    [vb_y,bx+bthick],a3
TMS340 COFF Macro Assembler Version 6.10     Wed Apr 21 11:41:33 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE    7

         000012e0 002d00b3  
     269                    
     270 00001300     09e1          movi    COLOR_PRED,a1
         00001310 01010101  
     271 00001330     0d5f          calla   FILLAREA
         00001340 00000000! 
     272                    
     273 00001360     0960          rets
     274                    
     275 00001370           volume_done
     276 00001370                   PULLPQ  a0                      ; WBD clean up pushed MinVol
     277 00001380     4d41          move    a10,a1
     278 00001390     09c0          movi    ADJVOLUME,a0
         000013a0     001c  
     279 000013b0     0d5f          calla   PUT_ADJ
         000013c0 00000000! 
     280 000013e0     0d5f          calla   F_ADC_S                 ; make checksums kosher !
         000013f0 00000000! 
     281                    
     282 00001410                   sleep   2
     283                    
     284 00001450     5684          clr     a4
     285 00001460     0d5f          calla   SEND_RAW_SOUND
         00001470 00000000! 
     286 00001490                   retp    
     287                    
     288 000014c0     102a  vol_up  inc     a10             
     289 000014d0     c000          jruc    vol6
         000014e0     ff32  
     290                    
     291 000014f0           vol_down
     292                    ; WBD ST
     293 000014f0     142a          dec     a10            
     294 00001500     cf00          jrnn    vol6
         00001510     ff2f  
     295 00001520     574a          clr     a10
     296 00001530     c000          jruc    vol6
         00001540     ff2c  
     297                    ; WBD END
     298                    
     299 00001550           pf_volume_1
     300 00001550                   mess_mac RD15FONT,2,200,0fh,COLOR_YELLOW*10000h,STRCNRMS,0
     301 00001610       56          .byte   "VOLUME ADJUST",0
     302 00001680                   .even
     303                    
     304 00001680           pf_volume_2
     305 00001680                   mess_mac RD7FONT,2,200,SCRBOT-1ah,COLOR_YELLOW*10000h,STRCNRMS,0
     306 00001740       55          .string "USE JOYSTICKS OR VOLUME BUTTONS\nTO ADJUST VOLUME",0
     307 000018d0                   .even
     308                    
     309 000018d0           pf_volume_3
     310 000018d0                   mess_mac RD7FONT,2,bx+bw+4,vb_y,COLOR_GREEN*10000h,STRLNRMS,0
     311 00001990       4d          .string "MAX",0
     312 000019b0                   .even
     313                    
TMS340 COFF Macro Assembler Version 6.10     Wed Apr 21 11:41:33 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE    8

     314 000019b0           pf_volume_4
     315 000019b0                   mess_mac RD7FONT,2,bx+bw+4,vb_y+bh-10,COLOR_GREEN*10000h,STRLNRMS,0
     316 00001a70       4d          .string "MIN",0
     317 00001a90                   .even
     318                    
     319 00001a90           pf_volume_5
     320 00001a90                   mess_mac RD7FONT,2,136,120,COLOR_WHITE*10000h,STRLNRMS,0
     321                    
     322              002a  by      .set    2ah
     323              00b0  bx      .set    200-18h
     324                    
     325              00b0  bh      .set    0b0h
     326              0030  bw      .set    30h
     327                    
     328              0003  bthick  .set    3
     329                    
     330                    
     331                    **************************************************************************
     332                    *                                                                        *
     333                    *       DIAG                                                             *
     334                    *                                                                        *
     335                    *       PROCESS STARTED WHEN DIAG SWITCH IS HIT                          *
     336                    *                                                                        *
     337                    *       ENTRY                                                            *
     338                    *               NOTHING                                                  *
     339                    *                                                                        *
     340                    *       EXIT                                                             *
     341                    *               WARMBOOTS THE PROCESSOR                                  *
     342                    *                                                                        *
     343                    **************************************************************************
     344 00001b50           octo_diag
     345 00001b50     0d5f          CALLA   kill_all_sound
         00001b60 00000000! 
     346 00001b80                   SOUNDON
     347                            .if     XUNIT=0
     348 00001bc0     09c0          MOVI    VMUX_INIT,A0
         00001bd0     0000  
     349 00001be0     0580          MOVE    A0,@VMUX_CONTROL,W      ;DISABLE I/O READDRESSING
         00001bf0 01800000  
     350                            .endif
     351 00001c10     5600          CLR     A0
     352 00001c20     0580          MOVE    A0,@PTSIZE,W            ;EVERYTHING IN 7PT
         00001c30 000000d0- 
     353 00001c50     0d3f          CALLR   DIGSRT                  ;MAKE SURE WE'RE IN TEST MODE
         00001c60     00d2  
     354 00001c70     5600          CLR     A0
     355 00001c80     0580          MOVE    A0,@MAIN_RET,W          ;CLEAR THE FLOAT TO TOP FLAG.
         00001c90 00000000- 
     356 00001cb0     0580          MOVE    A0,@GMENULEV,W          ;INDICATE WE'RE AT LEVEL ZERO.
         00001cc0 00000010- 
     357 00001ce0     09e8          MOVI    OCTO_MAIN,A8
         00001cf0 00010d40' 
     358 00001d10                   JSRP    GEN_MENU                ;PROCESS THIS MENU!
     359 00001d80     c036          jruc    DIAG_EX
     360                    
TMS340 COFF Macro Assembler Version 6.10     Wed Apr 21 11:41:33 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE    9

     361 00001d90           DIAG
     362 00001d90     05ae          MOVE    @COINS,A14,W
         00001da0 01860030  
     363 00001dc0     1e4e          BTST    13,A14
     364 00001dd0     ca80          JAZ     SUCIDE                  ;BR=COIN DOOR INTERLOCK OPEN
         00001de0 00000000! 
     365                    
     366                    ;       CALLA   QSNDRST                 ;TURN OFF THAT STUPID SOUND BOARD
     367 00001e00     0d5f          CALLA   kill_all_sound
         00001e10 00000000! 
     368 00001e30                   SOUNDON
     369 00001e70     05a0          MOVE    @GAME_STATE,A0,W
         00001e80 00000000! 
     370 00001ea0     0b40          CMPI    INDIAG,A0
         00001eb0     ffbf  
     371                    ;       JRNZ    DIAG_JUMP
     372                    ;       JAUC    SUCIDE
     373 00001ec0     ca80          JAEQ    WARMSET                 ; WE BE OUTTA HERE!
         00001ed0 00000000! 
     374                    ;
     375 00001ef0           DIAG_JUMP
     376                    ;       CALLA   LAMPS_OFF               ;TURN LAMPS OFF
     377 00001ef0     57ce          clr     a14
     378 00001f00     058e          move    a14,@game_frozen,W
         00001f10 00000000! 
     379                    
     380                            .if     XUNIT=0
     381 00001f30     09c0          MOVI    VMUX_INIT,A0
         00001f40     0000  
     382 00001f50     0580          MOVE    A0,@VMUX_CONTROL,W      ;DISABLE I/O READDRESSING
         00001f60 01800000  
     383                            .endif
     384                    
     385 00001f80     5600          CLR     A0
     386 00001f90     0580          MOVE    A0,@PTSIZE,W            ;EVERYTHING IN 7PT
         00001fa0 000000d0- 
     387 00001fc0     0d3f          CALLR   DIGSRT                  ;MAKE SURE WE'RE IN TEST MODE
         00001fd0     009b  
     388                    
     389 00001fe0     5600          CLR     A0
     390 00001ff0     0580          MOVE    A0,@MAIN_RET,W          ;CLEAR THE FLOAT TO TOP FLAG.
         00002000 00000000- 
     391 00002020     0580          MOVE    A0,@GMENULEV,W          ;INDICATE WE'RE AT LEVEL ZERO.
         00002030 00000010- 
     392                    
     393 00002050           DIAG_RESTART
     394 00002050     09e8          MOVI    MEN_MAIN,A8
         00002060 000110a0' 
     395 00002080                   JSRP    GEN_MENU                ;PROCESS THIS MENU!
     396                    
     397                    **************************************************************************
     398                    *                                                                        *
     399                    *       DIAG_EX                                                          *
     400                    *                                                                        *
     401                    *       DIAGNOSTIC EXIT                                                  *
TMS340 COFF Macro Assembler Version 6.10     Wed Apr 21 11:41:33 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   10

     402                    *                                                                        *
     403                    *       ENTRY                                                            *
     404                    *               NOTHING                                                  *
     405                    *                                                                        *
     406                    *       EXIT                                                             *
     407                    *               NOTHING                                                  *
     408                    *                                                                        *
     409                    **************************************************************************
     410 000020f0           DIAG_EX:
     411 000020f0                   SLEEP   2
     412 00002130     0d5f          CALLA   CLR_SCRN
         00002140 00000000! 
     413 00002160     0d5f          CALLA   CMOS_VAL                ; VALIDATE THE CMOS
         00002170 00000000! 
     414 00002190     0d5f          CALLA   READ_DIP
         000021a0 00000000! 
     415 000021c0     0b80          ANDI    DPTEST,A0
         000021d0 ffff7fff  
     416 000021f0     ca80          JAZ     WARMSET                 ;BR=WE BE OUTTA HERE!
         00002200 00000000! 
     417                    
     418 00002220     09e8          MOVI    NOTCLOSEDDIP,A8
         00002230 000025a0' 
     419 00002250     0d5f          CALLA   LM_SETUP
         00002260 00000000! 
     420 00002280                   JSRP    PRINTF
     421                    
     422 000022f0     09e8          MOVI    NOTCLOSEDWAIT,A8
         00002300 00002720' 
     423 00002320     0d5f          CALLA   LM_SETUP
         00002330 00000000! 
     424 00002350                   JSRP    PRINTF
     425                    
     426 000023c0           DE_DIP_WAIT
     427 000023c0                   SLEEP   1
     428 00002400     0d5f          CALLA   READ_DIP
         00002410 00000000! 
     429 00002430     0b80          ANDI    DPTEST,A0
         00002440 ffff7fff  
     430 00002460     ca80          JAZ     WARMSET                 ;BR=TEST DIP SWITCH OPENED
         00002470 00000000! 
     431                    
     432 00002490     0d5f          CALLA   READ_SWITCH
         000024a0 00000000! 
     433 000024c0     0b80          ANDI    70707070H,A0            ;MASK BUTTONS
         000024d0 8f8f8f8f  
     434 000024f0     cb9f          JRNZ    DIAG_JUMP               ;BR=RETURN TO MENU
     435                    
     436 00002500     0d5f          CALLA   READ_COINSW
         00002510 00000000! 
     437 00002530     0b80          ANDI    00664H,A0               ;MASK START BUTTONS
         00002540 fffff99b  
     438 00002560     cae5          JRZ     DE_DIP_WAIT             ;BR=NO START BUTTONS
     439                    
     440 00002570     c080          JAUC    DIAG_JUMP               ;RETURN TO MENU
TMS340 COFF Macro Assembler Version 6.10     Wed Apr 21 11:41:33 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   11

         00002580 00001ef0' 
     441                    
     442 000025a0           NOTCLOSEDDIP
     443 000025a0                   MESS_MAC RD7FONT,SPACING07,200,50,COLOR_PRED,STRCNRM,0
     444 00002660       a6          .STRING W_DIPSWITCH," ",W_TEST," SELECT (SW2 # 8) ",W_CLOSED,".",0
     445 00002720                   .EVEN
     446                    
     447                    ;NOTCLOSEDJAMMA
     448                    ;       MESS_MAC RD7FONT,SPACING07,200,70,COLOR_PRED,STRCNRM,0
     449                    ;       .STRING W_COIN," DOOR ",W_TEST," ",W_SWITCH," ",W_CLOSED,".",0
     450                    ;       .EVEN
     451                    
     452 00002720           NOTCLOSEDWAIT
     453 00002720                   MESS_MAC RD7FONT,SPACING07,200,120,COLOR_PRED,STRCNRM,0
     454 000027e0       50          .STRING "PRESS ANY ",W_BUTTON," TO ",W_RETURN," TO ",W_TEST," MODE\nOR"
     455 000028d0       5c          .STRING "\nOPEN THE ",W_DIPSWITCH," TO ",W_RETURN," TO ",W_GAME,".",0
     456 00002990                   .EVEN
     457                    
     458                    **************************************************************************
     459                    *                                                                        *
     460                    *          DIGSRT                                                        *
     461                    *                                                                        *
     462                    *          THIS IS CALLED ON ENTRY TO DIAGNOSTICS.                       *
     463                    *                                                                        *
     464                    **************************************************************************
     465 00002990           DIGSRT
     466 00002990     0d3f          CALLR   DIAG_STATE
         000029a0     0018  
     467 000029b0     0d5f          CALLA   WIPEOUT         ;INITIALIZE THE OBJECT LIST
         000029c0 00000000! 
     468 000029e0                   PAGEOFF                 ;MAKE SURE PAGE FLIPPING IS OFF
     469 00002a20     0d5f          CALLA   COLOR_START     ;START UP THE COLOR PROCESSES
         00002a30 00000000! 
     470 00002a50     0d5f          CALLA   QSNDRST         ;kill any sounds in progress
         00002a60 00000000! 
     471 00002a80     0d5f          CALLA   DIPINIT         ;INITIALIZE WHAT WE CAN FROM THE DIPS
         00002a90 00000000! 
     472 00002ab0     1820          MOVK    1,A0
     473 00002ac0     0580          MOVE    A0,@DISPLAYON,W ;WE NEED TO SEE THE STUFF JACK
         00002ad0 00000000! 
     474                    
     475 00002af0     0d5f          CALLA   CLR_SCRN        ;CLEAR THE SCREEN!
         00002b00 00000000! 
     476                    
     477 00002b20     0960          RETS
     478                    
     479                    **************************************************************************
     480                    *                                                                        *
     481                    *       DIAG_STATE                                                       *
     482                    *                                                                        *
     483                    *       GET EVERYTHING SETUP/KILLED OFF FOR DIAG STATE                   *
     484                    *                                                                        *
     485                    *       ENTRY                                                            *
     486                    *               NOTHING                                                  *
     487                    *                                                                        *
TMS340 COFF Macro Assembler Version 6.10     Wed Apr 21 11:41:33 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   12

     488                    *       EXIT                                                             *
     489                    *               NOTHING                                                  *
     490                    *                                                                        *
     491                    **************************************************************************
     492 00002b30           DIAG_STATE
     493 00002b30     5621          CLR     A1
     494 00002b40     0d5f          CALLA   KILALL                  ;KILL ABSOLUTELY EVERYONE!
         00002b50 00000000! 
     495                    
     496 00002b70     09e1          MOVI    PID_DIAG,A1             ;SET OUR ID TO DIAGNOSTICS MAN
         00002b80 00008f06  
     497 00002ba0     b02d          MOVE    A1,*A13(PROCID),W       ;PASS OUR ID TO FORKED PROCESS
         00002bb0     0020  
     498                    
     499 00002bc0     09c0          MOVI    INDIAG,A0
         00002bd0     0040  
     500 00002be0     0580          MOVE    A0,@GAME_STATE,W        ;PUT US IN TEST MODE!
         00002bf0 00000000! 
     501 00002c10     0960          RETS
     502                    
     503                    **************************************************************************
     504                    *                                                                        *
     505                    *       GO_DIAG                                                          *
     506                    *                                                                        *
     507                    *       ENTER THE DIAGNOSTICS MENU                                       *
     508                    *                                                                        *
     509                    **************************************************************************
     510                    
     511 00002c20           GO_DIAG
     512 00002c20     09e8          MOVI    MEN_DIAG,A8             ;PUT UP THE MENU AND GO!
         00002c30 00013980' 
     513 00002c50     c080          JAUC    GEN_MENU                ;THIS WILL RETURN TO LEVEL ABOVE US!
         00002c60 00009430' 
     514                    
     515 00002c80           GO_SWITCH
     516 00002c80     098f          MMTM    SP,A12,A13
         00002c90     000c  
     517 00002ca0                   DISPOFF
     518 00002ce0     0d5f          CALLA   CLR_SCRN
         00002cf0 00000000! 
     519 00002d10     0d5f          CALLA   SWITCHTEST
         00002d20 00000000! 
     520 00002d40     09af          MMFM    SP,A12,A13
         00002d50     3000  
     521 00002d60           DIAG_RESTORE
     522 00002d60     0d5f          CALLA   CLRDMAQ
         00002d70 00000000! 
     523 00002d90     0d5f          CALLA   MYOINIT
         00002da0 00000000! 
     524 00002dc0                   DISPON
     525 00002e00     0d5f          CALLA   CLR_SCRN
         00002e10 00000000! 
     526 00002e30                   RETP
     527                    
     528 00002e60           GO_DIP
TMS340 COFF Macro Assembler Version 6.10     Wed Apr 21 11:41:33 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   13

     529 00002e60     098f          MMTM    SP,A12,A13
         00002e70     000c  
     530 00002e80                   DISPOFF
     531 00002ec0     0d5f          CALLA   CLR_SCRN
         00002ed0 00000000! 
     532 00002ef0     0d5f          CALLA   DIPTEST
         00002f00 00000000! 
     533 00002f20     09af          MMFM    SP,A12,A13
         00002f30     3000  
     534 00002f40     c0e1          JRUC    DIAG_RESTORE
     535                    
     536 00002f50           GO_CPU
     537 00002f50                   DISPOFF
     538 00002f90     c080          JAUC    DIAGCPUTEST
         00002fa0 00000000! 
     539                    
     540 00002fc0           GO_BURN
     541 00002fc0                   DISPOFF
     542 00003000     c080          JAUC    BURNIN
         00003010 00000000! 
     543                    
     544 00003030           CPU_RET
     545 00003030     5600          CLR     A0
     546 00003040     0580          MOVE    A0,@GMENULEV,W  ;INDICATE WE'RE AT LEVEL ZERO.
         00003050 00000010- 
     547                    
     548 00003070     09e0          MOVI    RTR_LEV,A0      ;THIS IS THE LEVEL TO DIVE TO
         00003080 00000004  
     549 000030a0     03a0          NEG     A0              ;NEGATE IT AS FLAG TO DIVE.
     550 000030b0     0580          MOVE    A0,@MAIN_RET,W  ;INDICATE
         000030c0 00000000- 
     551 000030e0                   PAGEOFF                 ;MAKE SURE PAGE FLIPPING IS OFF
     552 00003120     c080          JAUC    DIAG_RESTART    ;NOW START IT UP....
         00003130 00002050' 
     553                    
     554 00003150           GO_CONV
     555 00003150     098f          MMTM    SP,A12,A13
         00003160     000c  
     556 00003170                   DISPOFF
     557 000031b0     0d5f          CALLA   CLR_SCRN
         000031c0 00000000! 
     558 000031e0     0d5f          CALLA   CONV_PLOT
         000031f0 00000000! 
     559 00003210     09af          MMFM    SP,A12,A13
         00003220     3000  
     560 00003230                   JSRP    WAIT_BUT        ;NOW WAIT FOR ANY BUTTON!
     561 000032a0     c0ab          JRUC    DIAG_RESTORE
     562                    
     563 000032b0           GO_BARS
     564 000032b0     098f          MMTM    SP,A12,A13
         000032c0     000c  
     565 000032d0                   DISPOFF
     566 00003310     0d5f          CALLA   CLR_SCRN
         00003320 00000000! 
     567 00003340     0d5f          CALLA   COLORBAR
TMS340 COFF Macro Assembler Version 6.10     Wed Apr 21 11:41:33 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   14

         00003350 00000000! 
     568 00003370     09af          MMFM    SP,A12,A13
         00003380     3000  
     569 00003390                   JSRP    WAIT_BUT        ;NOW WAIT FOR ANY BUTTON!
     570 00003400     c095          JRUC    DIAG_RESTORE
     571                    
     572                    
     573                    **************************************************************************
     574                    *                                                                        *
     575                    *       OPERATOR MESSAGE ENTRY                                           *
     576                    *                                                                        *
     577                    **************************************************************************
     578                    
     579              0100  OP_LINE_CHAR    EQU     PDATA
     580              0110  OP_LINE_LINE    EQU     PDATA+WORD_SIZE
     581              0120  OP_LETS         EQU     OP_LINE_LINE+WORD_SIZE
     582              0210  OP_STIME        EQU     OP_LETS+(30 * BYTE_SIZE)
     583              0220  OP_SVAL         EQU     OP_STIME+WORD_SIZE
     584                    
     585              0019  LET_DIST_X      EQU     25
     586              0014  LET_DIST_Y      EQU     20
     587              0006  LET_BOX_CX      EQU     6
     588              0003  LET_BOX_CY      EQU     3
     589              0003  LET_BOX_WX      EQU     3
     590              0001  LET_BOX_WY      EQU     1
     591              00af  LET_START_Y1    EQU     175
     592              00c3  LET_START_Y2    EQU     LET_START_Y1+LET_DIST_Y
     593              00d7  LET_START_Y3    EQU     LET_START_Y2+LET_DIST_Y
     594              00eb  LET_START_Y4    EQU     LET_START_Y3+LET_DIST_Y
     595              003c  LET_INST1       EQU     60
     596              000f  LET_START_X     EQU     15
     597              0003  LET_LINE_MAX    EQU     3
     598              000e  LET_CHAR_MAX    EQU     14
     599              000b  LET_TEXT_GAP    EQU     11
     600              0078  LET_TEXT1       EQU     120
     601              0083  LET_TEXT2       EQU     LET_TEXT1+LET_TEXT_GAP
     602              008e  LET_TEXT3       EQU     LET_TEXT2+LET_TEXT_GAP
     603              0012  OP_MAX_CHARS    EQU     CMESS_CHARS
     604                    
     605                    
     606 00003410           BLASTMESS:
     607 00003410     0d5f          CALLA   CMOSUNLOCK
         00003420 00000000! 
     608                    ;XUNIT        CALLA   ADJ_PAGE          ; GUY ENTERETED A WHOLE MESSAGE
     609 00003440     5600          CLR     A0
     610 00003450     09e7          MOVI    VALID_CUSTOM,A7
         00003460 01408ca0  
     611 00003480     0d5f          CALLA   WC_WORD
         00003490 00000000! 
     612 000034b0     0d5f          CALLA   CMOSLOCK
         000034c0 00000000! 
     613 000034e0     0d5f          CALLA   F_ADC_S                 ; FIX UP THE CHECKSUM
         000034f0 00000000! 
     614 00003510     0960          RETS
     615                    
TMS340 COFF Macro Assembler Version 6.10     Wed Apr 21 11:41:33 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   15

     616                    **************************************************************************
     617                    *                                                                        *
     618                    *       SOUND SYSTEM TEST                                                *
     619                    *                                                                        *
     620                    **************************************************************************
     621                    
     622              0004  set_volume_tune         equ     4      ; tune to set volume by
     623                    
     624                    **************************************************************************
     625                    *                                                                        *
     626                    *       GO_STEST                                                         *
     627                    *                                                                        *
     628                    *       SETUP THE MENU FOR THE SOUND TEST                                *
     629                    *                                                                        *
     630                    *       ENTRY                                                            *
     631                    *               NOTHING                                                  *
     632                    *                                                                        *
     633                    *       EXIT                                                             *
     634                    *               NOTHING                                                  *
     635                    *                                                                        *
     636                    **************************************************************************
     637 00003520     5600  GO_STEST CLR     A0
     638 00003530     0580           MOVE    A0,@SCODE,W          ;NO "CURRENT" SYNTH YET
         00003540 00000060- 
     639 00003560     0580           MOVE    A0,@DCODE,W          ;NO "CURRENT" DIG YET
         00003570 00000070- 
     640 00003590     09e8           MOVI    MEN_STEST,A8         ;PUT UP THE MENU AND GO!
         000035a0 000124f0' 
     641 000035c0     c080           JAUC    GEN_MENU             ;THIS WILL RETURN TO LEVEL ABOVE US!
         000035d0 00009430' 
     642                    
     643                    
     644                    **************************************************************************
     645                    *                                                                        *
     646                    *       SHUT_UP                                                          *
     647                    *                                                                        *
     648                    *       TELL THE SOUND BOARD TO GET SCREWED                              *
     649                    *                                                                        *
     650                    *       ENTRY                                                            *
     651                    *               NOTHING                                                  *
     652                    *                                                                        *
     653                    *       EXIT                                                             *
     654                    *               NOTHING                                                  *
     655                    *                                                                        *
     656                    **************************************************************************
     657                    
     658 000035f0           SHUT_UP
     659                    ;       MOVI    SND_ALLOFF,A0   ;TURN OFF SOUNDS
     660                    ;       CALLA   ONESND
     661 000035f0                   SLEEP   1
     662 00003630                   RETP
     663                    
     664 00003660           INC_IF_NEC
     665 00003660     4c84          MOVE    A4,A4           ;IF ITS ZERO...KICK IT!
     666 00003670     ca07          JRZ     INC_IT
TMS340 COFF Macro Assembler Version 6.10     Wed Apr 21 11:41:33 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   16

     667 00003680     07a0          MOVE    @LAST_BUT,A0,L  ;SEE WHICH BUTTON
         00003690 00000040- 
     668 000036b0     0b80          andi    700070h,A0    ; if player 1 or 3, then   WBD
         000036c0 ff8fff8f  
     669 000036e0     cb01          JRNZ    NO_INC          ;THEN USE SAME CODE
     670 000036f0           INC_IT
     671 000036f0     1024          INC     A4
     672 00003700           NO_INC
     673 00003700     0960          RETS
     674                    
     675 00003710           SCTAB
     676 00003710     0004          .word   4,145,210,245,330,405,515,690
     677 00003790     02f3          .word   755,850,940,1015,1115,3077,2690,2092
     678 00003810     1418          .word   5144,5467,4001,3333,1350
     679                    
     680              0015  LAST_SCODE       EQU     ($-SCTAB)/WORD_SIZE
     681 00003860                    .EVEN
     682                    
     683                    
     684                    **************************************************************************
     685                    *                                                                        *
     686                    *       GO_DIGT                                                          *
     687                    *                                                                        *
     688                    *       SETUP A GENERIC SOUND BOARD TEST                                 *
     689                    *                                                                        *
     690                    *       ENTRY                                                            *
     691                    *               NOTHING                                                  *
     692                    *                                                                        *
     693                    *       EXIT                                                             *
     694                    *               NOTHING                                                  *
     695                    *                                                                        *
     696                    **************************************************************************
     697 00003860           GO_DIGT
     698 00003860     5684          CLR     A4
     699 00003870     0d5f          CALLA   SEND_RAW_SOUND
         00003880 00000000! 
     700 000038a0                   SLEEP   4                       ;LET IT GO A SEC!
     701 000038e0     0d5f          CALLA   CLR_SCRN
         000038f0 00000000! 
     702 00003910     09e2          MOVI    M_DIGT,A2
         00003920 00012790' 
     703 00003940     09c3          MOVI    COLOR_GREEN,A3
         00003950     0707  
     704 00003960                   JSRP    TOP_BOX                 ;PRINT TITLE BOX.
     705                    
     706 000039d0     0d5f          CALLA   SURE_BOX                ;PUT A NICE BOX UP!
         000039e0 0000f040' 
     707                    
     708 00003a00     09e0          MOVI    0FE00H,A0
         00003a10 0000fe00  
     709 00003a30     0580          MOVE    A0,@SOUND,W
         00003a40 01680000  
     710 00003a60     09ce          MOVI    8,A14
         00003a70     0008  
     711 00003a80     3c2e          DSJS    A14,$                   ;SLOW IT DOWN A BIT
TMS340 COFF Macro Assembler Version 6.10     Wed Apr 21 11:41:33 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   17

     712 00003a90     09e0          MOVI    0FF00H,A0
         00003aa0 0000ff00  
     713 00003ac0     0580          MOVE    A0,@SOUND,W             ;PULL ON THE SOUND INTERRUPT
         00003ad0 01680000  
     714                    
     715 00003af0     09ce          MOVI    8,A14
         00003b00     0008  
     716 00003b10     3c2e          DSJS    A14,$                   ;LET LINE SETTLE
     717                    
     718                    ***     jruc    SOUND_DONGER
     719                    ***
     720                    ***     movb    @TALKPORT+B_SIRQ-7,a14  ;are we connected?
     721                    ***     jrnn    SOUND_IRQ_CONNECTED     ;br = yes sirree
     722                    ***
     723                    ***;    MOVI    SIRQ_ERR,A8
     724                    ***;    JSRP    L_MESS                  ;PRINT ERROR
     725                    ***
     726                    ***;    JSRP    ANY_BUT                 ;AND TELL EM ANY BUTTON TO CONTINUE
     727                    ***
     728                    ***;    CALLR   BLNK_SURE_BOX
     729                    ***
     730                    ***     MOVI    SIRQ_ERR2,A8
     731                    ***     JSRP    L_MESS                  ;REMIND THE GUY OF THE PREVIOUS ERROR
     732                    ***     JRUC    SOUND_DONGER
     733                    ***SOUND_IRQ_CONNECTED
     734                    ***     MOVI    SIRQ_DETECT,A8
     735                    ***     JSRP    L_MESS                  ;NOTIFY THAT SOUND IRQ WAS CHECKED
     736                    
     737 00003b20           SOUND_DONGER
     738 00003b20     0d5f          CALLA   SNDRES                  ;RESET TO GET THE DINGS
         00003b30 00000000! 
     739 00003b50     09e8          MOVI    DAC_ERR,A8
         00003b60 00013030' 
     740 00003b80                   JSRP    L_MESS                  ;PRINT ERROR
     741 00003bf0     c080          JAUC    ANY_BUT                 ;AND TELL EM ANY BUTTON TO CONTINUE
         00003c00 00008d40' 
     742                    
     743                    **************************************************************************
     744                    *                                                                        *
     745                    *          GO_SYNP                                                       *
     746                    *                                                                        *
     747                    *          THIS IS THE "PLAY SYNTHESIZER" CODE.                          *
     748                    *                                                                        *
     749                    *          GET THE NEXT CODE...SEND IT TO THE YAMAHA AND                 *
     750                    *          DISPLAY THE CORRESPONDING TITLE.                              *
     751                    *                                                                        *
     752                    **************************************************************************
     753 00003c20           GO_SYNP
     754 00003c20     5684          CLR     A4
     755 00003c30     0d5f          CALLA   SEND_RAW_SOUND          
         00003c40 00000000! 
     756 00003c60     0d5f          calla   SET_VOLUME
         00003c70 00000000! 
     757                    
     758 00003c90     05a4          MOVE    @SCODE,A4,W             ;GET THE NEXT CODE
TMS340 COFF Macro Assembler Version 6.10     Wed Apr 21 11:41:33 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   18

         00003ca0 00000060- 
     759 00003cc0     0d3f          CALLR   INC_IF_NEC
         00003cd0     ff98  
     760 00003ce0     0b44          CMPI    LAST_SCODE,A4           ;HAVE WE HIT THE LAST CODE?
         00003cf0     ffea  
     761 00003d00     c201          JRLS    GO_SYNP1                ;BR = NO
     762 00003d10     1824          MOVK    1,A4                    ;RESET SOUND LIST
     763 00003d20           GO_SYNP1
     764 00003d20     0584          MOVE    A4,@SCODE,W             ;STORE CURRENT CODE COUNTER
         00003d30 00000060- 
     765 00003d50     09e0          MOVI    SCTAB,A0
         00003d60 00003710' 
     766 00003d80     1424          DEC     A4                      ;ZERO DOESN'T COUNT
     767 00003d90     2484          SLL     4,A4                    ;INDEX TO WORDS
     768 00003da0     4080          ADD     A4,A0
     769 00003db0     8404          MOVE    *A0,A4,W
     770                    
     771 00003dc0                   pushp   a4
     772 00003dd0                   sleep   1
     773 00003e10                   pullp   a4
     774 00003e30     0d5f          calla   SEND_RAW_SOUND
         00003e40 00000000! 
     775                    
     776                    
     777 00003e60     1820          MOVK    1,A0
     778 00003e70     0580          MOVE    A0,@NO_CLEAR
         00003e80 00000030- 
     779 00003ea0                   RETP                            ;THATS IT!
     780                    
     781                    **************************************************************************
     782                    *                                                                        *
     783                    *       GAME UTILITIES SELECTED                                          *
     784                    *                                                                        *
     785                    **************************************************************************
     786                    
     787 00003ed0     09e8  GO_UTIL  MOVI    MEN_UTIL,A8
         00003ee0 00019ea0' 
     788 00003f00     c080           JAUC    GEN_MENU             ;PROCESS THE UTILITY MENU!
         00003f10 00009430' 
     789                    
     790                    **************************************************************************
     791                    *                                                                        *
     792                    *       DO_FACSET                                                        *
     793                    *                                                                        *
     794                    *       RESET THE CMOS TO FACTORY SETTINGS                               *
     795                    *                                                                        *
     796                    *       ENTRY                                                            *
     797                    *               NOTHING                                                  *
     798                    *                                                                        *
     799                    *       EXIT                                                             *
     800                    *               NOTHING                                                  *
     801                    *                                                                        *
     802                    **************************************************************************
     803                    
     804 00003f30           DO_FACSET:
TMS340 COFF Macro Assembler Version 6.10     Wed Apr 21 11:41:33 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   19

     805 00003f30     09e8          MOVI    MESS_FACSET,A8
         00003f40 0001a360' 
     806 00003f60     1820          MOVK    1,A0
     807 00003f70     c004          JRUC    DEF_ADJ_PART
     808                    
     809                    **************************************************************************
     810                    *                                                                        *
     811                    *       DO_DEF_ADJ                                                       *
     812                    *                                                                        *
     813                    *       JUST RESET THE ADJUSTMENTS TO THE FACTORY SETTINGS               *
     814                    *                                                                        *
     815                    *       ENTRY                                                            *
     816                    *               NOTHING                                                  *
     817                    *                                                                        *
     818                    *       EXIT                                                             *
     819                    *               NOTHING                                                  *
     820                    *                                                                        *
     821                    **************************************************************************
     822                    
     823 00003f80           DO_DEF_ADJ:
     824 00003f80     09e8          MOVI    MESS_DEF_ADJ,A8
         00003f90 0001a500' 
     825 00003fb0     5600          CLR     A0
     826                    
     827                    ;       FALL THROUGH
     828                    
     829                    **************************************************************************
     830                    *                                                                        *
     831                    *       DEF_ADJ_PART                                                     *
     832                    *                                                                        *
     833                    *       SETUP CMOS TO DEFAULT ADJUSTMENTS                                *
     834                    *                                                                        *
     835                    *       ENTRY                                                            *
     836                    *               A0      HOW MUCH TO CLEAR                                *
     837                    *               A8      MESSAGE TO USE                                   *
     838                    *                                                                        *
     839                    *       EXIT                                                             *
     840                    *               NOTHING                                                  *
     841                    *                                                                        *
     842                    **************************************************************************
     843                    
     844 00003fc0           DEF_ADJ_PART:
     845 00003fc0     0580          MOVE    A0,@FAC_FLAG,W       ;INDICATE THIS IS ADJUSTMENTS ONLY
         00003fd0 00000080- 
     846                    
     847 00003ff0     a30c          MOVE    A8,-*A12,L           ;PUSH THE MESSAGE
     848 00004000     9788          MOVE    *A12+,A8,L           ;RESTORE MESSAGE
     849                    
     850 00004010     09e9          MOVI    DEFADJSOFT,A9
         00004020 00004150' 
     851 00004040     09ea          MOVI    NULL_ST,A10          ;DON'T PRINT ANYTHING....ROUTINE WILL.
         00004050 0001bf00' 
     852 00004070                   JSRP    AREUSURE
     853 000040e0                   RETP
     854                    *
TMS340 COFF Macro Assembler Version 6.10     Wed Apr 21 11:41:33 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   20

     855                    *        RETURN A0=0 FOR FAILURE
     856                    *
     857 00004110           DO_CANCEL
     858 00004110     5600          CLR     A0
     859 00004120                   RETP
     860                    
     861 00004150           DEFADJSOFT
     862                    *
     863                    *        NOW SMASH THE CHECKSUM
     864                    *
     865 00004150     0d5f          CALLA   FORM_ADC               ;FORM THE CKSUM
         00004160 00000000! 
     866 00004180     4c20          MOVE    A1,A0                  ;PUT IN CMOS WRITING REGGIE
     867 00004190     09e7          MOVI    ADJ_CKSUM,A7
         000041a0 01408cc0  
     868 000041c0     1020          INC     A0                     ;THIS SMASHES ADJUSTMENTS
     869 000041d0     0d5f          CALLA   CMOSUNLOCK
         000041e0 00000000! 
     870 00004200     0d5f          CALLA   WC_WORD                ;AND STORE IT
         00004210 00000000! 
     871 00004230     0d5f          CALLA   CMOSLOCK
         00004240 00000000! 
     872                    *
     873                    *        NOW MAKE SURE ITS SMASHED
     874                    *
     875 00004260     0d5f          CALLA   CMOS_VAL
         00004270 00000000! 
     876 00004290     ca23          JRZ     AD_FAIL                ;WE CAN'T DO IT.....PRINT FAILURE.
     877                    *
     878                    *        NOW SET THE ADJUSTMENTS TO THE FACTORY VALUE.
     879                    *
     880 000042a0     0d5f          CALLA   FAC_SET             ;THIS DOES THE DEED!
         000042b0 00000000! 
     881 000042d0     0d5f          CALLA   CMOS_VAL            ;IS IT OK NOW?
         000042e0 00000000! 
     882 00004300     cb1c          JRNZ    AD_FAIL             ;NOPE...PRINT FAILURE
     883                    
     884 00004310     09e8          MOVI    DEFRESMESS,A8
         00004320 00004610' 
     885 00004340     05a0          MOVE    @FAC_FLAG,A0,W      ;DO WE NEED TO CLEAR THE TABLES?
         00004350 00000080- 
     886 00004370     ca1c          JRZ     DAX                 ;NOPE...POST SINGLE MESSAGE
     887 00004380     09e8          MOVI    MESS_DEFCONF,A8     ;THIS IS SINGLE MESSAGE
         00004390 0001b480' 
     888                    
     889 000043b0     0d5f          CALLA   CLR_SCRN        ;CLEAR THE SCREEN FOR OUR MESSAGES.
         000043c0 00000000! 
     890 000043e0     0d3f          CALLR   FAC_STUF        ;DO AUDITS AND HIGH SCORE TABLE
         000043f0     0027  
     891                    
     892 00004400     09e8          MOVI    MESS_FFSCONF,A8 ;PRINT THE REST OF THE MESSAGES
         00004410 0001b3c0' 
     893 00004430                   JSRP    L_MESS          ;THAT DOES IT!
     894                    
     895 000044a0           NOTABS   RETP
TMS340 COFF Macro Assembler Version 6.10     Wed Apr 21 11:41:33 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   21

     896                    
     897 000044d0     09e8  AD_FAIL  MOVI    MESS_FACFAIL,A8
         000044e0 0001a410' 
     898 00004500     c003           JRUC    DAX
     899                    
     900 00004510     09e8  DEF_CAN  MOVI    MESS_CANCELLED,A8
         00004520 0001a4b0' 
     901                    
     902 00004540     0d5f  DAX      CALLA   CLR_SCRN
         00004550 00000000! 
     903 00004570                    JSRP    SUR_MESS
     904 000045e0                    RETP
     905                    
     906 00004610           DEFRESMESS
     907 00004610       b2          .STRING W_ADJUSTMENTS," RESTORED",0
     908 00004670                   .EVEN
     909                    
     910                    
     911                    *
     912                    *        ON A FULL FACTORY SETTING (EITHER REQUESTED OR
     913                    *        ADJUSTMENT FAILURE) THIS CLEARS THE AUDITS AND
     914                    *        HIGH SCORE TABLE.
     915                    *
     916 00004670           FAC_STUF
     917 00004670     0d5f          CALLA   CLR_AUD         ;CLEAR AUDITS TOO
         00004680 00000000! 
     918 000046a0     0d3f          CALLR   RES_ALL         ;ALL TIME TABLE
         000046b0     0447  
     919 000046c0     0d3f          CALLR   INVALID_CUSTOM
         000046d0     0001  
     920 000046e0     0960          RETS
     921                    
     922                    **************************************************************************
     923                    *                                                                        *
     924                    *       INVALID_CUSTOM                                                   *
     925                    *                                                                        *
     926                    *       THIS KILLS THE CUSTOM MESSAGE SO THAT THE FACTORY MESSAGE        *
     927                    *       WILL BE USED.  NOTE THAT THIS CHECKSUMS THE ADJUSTMENTS,         *
     928                    *       SO BE CAREFUL WITH IT!                                           *
     929                    *                                                                        *
     930                    *       ENTRY                                                            *
     931                    *               NOTHING                                                  *
     932                    *                                                                        *
     933                    *       EXIT                                                             *
     934                    *               NOTHING                                                  *
     935                    *                                                                        *
     936                    **************************************************************************
     937 000046f0           INVALID_CUSTOM:
     938 000046f0     098f          MMTM    SP,A0,A7
         00004700     8100  
     939                    ;XUNIT        CALLA   ADJ_PAGE             ;POINT AT ADJUSTMENT PAGE
     940 00004710     5600          CLR     A0
     941 00004720     09e7          MOVI    VALID_CUSTOM,A7
         00004730 01408ca0  
     942 00004750     0d5f          calla   CMOSUNLOCK
TMS340 COFF Macro Assembler Version 6.10     Wed Apr 21 11:41:33 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   22

         00004760 00000000! 
     943 00004780     0d5f          CALLA   WC_WORD
         00004790 00000000! 
     944 000047b0     0d5f          calla   CMOSLOCK
         000047c0 00000000! 
     945 000047e0     0d5f          CALLA   F_ADC_S              ;FIXUP CHECKSUM FOR OUR DEED!
         000047f0 00000000! 
     946 00004810     09af          MMFM    SP,A0,A7
         00004820     0081  
     947 00004830     0960          RETS
     948                    
     949                    **************************************************************************
     950                    *                                                                        *
     951                    *         COIN BOOKKEEPING SELECTED                                      *
     952                    *                                                                        *
     953                    **************************************************************************
     954 00004840           GO_BOOK
     955 00004840     0d5f          CALLA   CLR_SCRN
         00004850 00000000! 
     956 00004870     09e2          MOVI    MES_BOOK,A2
         00004880 00011820' 
     957 000048a0     09c3          MOVI    COLOR_WHITE,A3
         000048b0     0202  
     958 000048c0                   JSRP    TOP_BOX                 ;PRINT TITLE BOX.
     959                    
     960 00004930     09e0          MOVI    COIN_AUDS,A0            ;PUT TABLE UP.
         00004940 00013fe0' 
     961 00004960                   JSRP    PRNT_AUD
     962                    
     963 000049d0     09e8          MOVI    MEN_DETAIL,A8
         000049e0 00013d60' 
     964 00004a00     09c9          MOVI    1,A9                    ;CURSOR ON 1ST ENTRY
         00004a10     0001  
     965 00004a20                   JSRP    B_MENU                  ;SEE IF THEY WANT PAGE 2.
     966                    
     967 00004a90     0b48          CMPI    1,A8                    ;DID WE GET 1'ST ENTRY?
         00004aa0     fffe  
     968 00004ab0     cb4b          JRNZ    NO_DETAIL               ;NOPE...RETURN TO OUR CALLER
     969 00004ac0           DETAIL_SCREEN
     970 00004ac0     0d5f          CALLA   CLR_SCRN                ;CLEAR OUT FOR ACTION!
         00004ad0 00000000! 
     971 00004af0     09e2          MOVI    MES_TOTALS,A2
         00004b00 00013d40' 
     972 00004b20     09c3          MOVI    COLOR_WHITE,A3
         00004b30     0202  
     973 00004b40                   JSRP    TOP_BOX                 ;PRINT TITLE BOX.
     974                    
     975 00004bb0     1820          MOVK    1,A0
     976 00004bc0     0580          MOVE    A0,@PTSIZE,W            ;THIS BOX IS IN 15 PT
         00004bd0 000000d0- 
     977                    
     978 00004bf0     09e2          MOVI    COIN_D1,A2              ;DETAILED AUDIT 1
         00004c00 00017540' 
     979 00004c20     09c0          MOVI    ADJCDIV,A0
         00004c30     0009  
TMS340 COFF Macro Assembler Version 6.10     Wed Apr 21 11:41:33 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   23

     980 00004c40     0d5f          CALLA   GET_ADJ
         00004c50 00000000! 
     981 00004c70     cb03          JRNZ    DSGO
     982 00004c80     09e2          MOVI    COIN_SD1,A2
         00004c90 00017780' 
     983 00004cb0           DSGO
     984 00004cb0     4c40          MOVE    A2,A0
     985 00004cc0                   JSRP    PRNT_AUD                ;PRINT IT
     986 00004d30     5600          CLR     A0
     987 00004d40     0580          MOVE    A0,@PTSIZE,W
         00004d50 000000d0- 
     988                    
     989 00004d70     09e8           MOVI    MEN_CLR_SUB,A8       ;CLEAR SUBTOTAL OR RETURN TO MAIN MENU
         00004d80 00017a10' 
     990 00004da0     09c9           MOVI    2,A9                 ;CURSOR ON 2ND ENTRY
         00004db0     0002  
     991 00004dc0                    JSRP    B_MENU
     992                    
     993 00004e30     0b48           CMPI    1,A8                 ;CHOICE 1 IS CLEAR.....
         00004e40     fffe  
     994 00004e50     cb11           JRNZ    NO_CLEAR_SUB         ;NOPE...RETURN TO CALLER!
     995                    
     996 00004e60     09e8           MOVI    MESS_CLEAR_SUBS,A8   ;CLEAR COIN SUB-TOTALS...ARE YOU SURE
         00004e70 00017980' 
     997 00004e90     09e9           MOVI    CLR_COINS,A9          ;ROUTINE TO DO IT
         00004ea0 000087f0' 
     998 00004ec0     09ea           MOVI    MESS_SUBS_CLEAR,A10  ;CONFIRMATION.
         00004ed0 000179a0' 
     999 00004ef0                    JSRP    AREUSURE             ;ASK EM.
    1000 00004f60     c0b5           JRUC    DETAIL_SCREEN        ;NOW PUT THIS SCREEN BACK UP.
    1001                    
    1002 00004f70           NO_CLEAR_SUB
    1003 00004f70           NO_DETAIL
    1004 00004f70                   RETP
    1005                    
    1006                    **************************************************************************
    1007                    *                                                                        *
    1008                    *          GAME AUDITS SELECTED                                          *
    1009                    *                                                                        *
    1010                    **************************************************************************
    1011                    AUD_DO  .macro  audl,deflt,menul,brn1,brn2,brnx
    1012                            JSRP    NEW_AUDIT_PAGE
    1013                            movi    :audl:,a0
    1014                            JSRP    PRNT_AUD
    1015                            movi    :menul:,a8
    1016                            movk    :deflt:,a9
    1017                            JSRP    B_MENU
    1018                            cmpi    1,a8
    1019                            jrz     :brn1:
    1020                            cmpi    2,a8
    1021                            jrz     :brn2:
    1022                            jruc    :brnx:
    1023                            .endm
    1024                    
    1025 00004fa0           GO_AUD
TMS340 COFF Macro Assembler Version 6.10     Wed Apr 21 11:41:33 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   24

    1026 00004fa0           dpa1    AUD_DO  GAME_AUDS,1,MEN_AP1,dpa2,enda,enda
    1027 000051f0           dpa2    AUD_DO  GAME_AUD2,1,MEN_AP2,dpa3,dpa1,enda
    1028 00005430           dpa3    AUD_DO  GAME_AUD3,1,MEN_AP2,dpa4,dpa2,enda
    1029 00005670           dpa4    AUD_DO  GAME_AUD4,1,MEN_AP2,dpa5,dpa3,enda
    1030 000058b0           dpa5    AUD_DO  GAME_AUD5,1,MEN_AP2,dpa6,dpa4,enda
    1031 00005ae0           dpa6    AUD_DO  GAME_AUD6,1,MEN_AP2,dpa7,dpa5,enda
    1032 00005d10           dpa7    AUD_DO  GAME_AUD7,2,MEN_AP3,dpa6,dpxt,dpxt
    1033 00005f40     05a0  dpxt    move    @COINS,a0,W
         00005f50 01860030  
    1034 00005f70     0b80          andi    20h,a0          ;holding p2 start?
         00005f80 ffffffdf  
    1035 00005fa0     cb2a          jrnz    enda
    1036 00005fb0                   AUD_DO  GAME_AUD8,2,MEN_AP3,dpa7,ddmp,ddmp
    1037 000061e0           ddmp    JSRP    DISPDUMP                ;display the dumps
    1038 00006250           enda    RETP
    1039                    
    1040                    **************************************************************************
    1041                    *                                                                        *
    1042                    * OCTO_AUDS - PRINT OUT AUDITS DURING OCTOPUS PAGE                       *
    1043                    *                                                                        *
    1044                    **************************************************************************
    1045                    ;OCTO_AUDS
    1046                    ;       JSRP    NEW_AUDIT_PAGE
    1047                    ;       MOVI    GAME_AUDS,A0
    1048                    ;       JSRP    PRNT_AUD                ;PLOT PAGE ONE
    1049                    ;       SLEEP   15
    1050                    ;       MOVI    2000,A0
    1051                    ;;      JSRP    SLEEP_SWITCHX
    1052                    ;
    1053                    ;       JSRP    NEW_AUDIT_PAGE
    1054                    ;       MOVI    GAME_AUD2,A0
    1055                    ;       JSRP    PRNT_AUD                ;PLOT PAGE ONE
    1056                    ;       SLEEP   15
    1057                    ;       MOVI    2000,A0
    1058                    ;;      JSRP    SLEEP_SWITCHX
    1059                    ;
    1060                    ;       JSRP    NEW_AUDIT_PAGE
    1061                    ;       MOVI    GAME_AUD3,A0
    1062                    ;       JSRP    PRNT_AUD                ;PLOT PAGE ONE
    1063                    ;       SLEEP   15
    1064                    ;       MOVI    2000,A0
    1065                    ;;      JSRP    SLEEP_SWITCHX
    1066                    ;
    1067                    ;       JSRP    NEW_AUDIT_PAGE
    1068                    ;       MOVI    GAME_AUD4,A0
    1069                    ;       JSRP    PRNT_AUD                ;PLOT PAGE ONE
    1070                    ;       SLEEP   15
    1071                    ;       MOVI    2000,A0
    1072                    ;;      JSRP    SLEEP_SWITCHX
    1073                    ;
    1074                    ;       JAUC    DISPDUMP                ;DISPLAY THE DUMPS
    1075                    ;
    1076                    **************************************************************************
    1077                    *                                                                        *
    1078                    * NEW_AUDIT_PAGE - INITIALIZE A NEW AUDIT PAGE, CLEAR SCREEN AND         *
TMS340 COFF Macro Assembler Version 6.10     Wed Apr 21 11:41:33 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   25

    1079                    *                PLOT THE HEADER BOX.                                    *
    1080                    * NOTE: CALL WITH JSRP                                                   *
    1081                    *                                                                        *
    1082                    **************************************************************************
    1083 00006280           NEW_AUDIT_PAGE
    1084 00006280     0d5f          CALLA   CLR_SCRN
         00006290 00000000! 
    1085 000062b0     09e2          MOVI    MES_AUD,A2
         000062c0 00011880' 
    1086 000062e0     09c3          MOVI    COLOR_BLUE,A3
         000062f0     0303  
    1087 00006300     c000          JRUC    TOP_BOX                 ;PRINT TITLE BOX.
         00006310     037e  
    1088                    
    1089                    **************************************************************************
    1090                    *                                                                        *
    1091                    *          PRNT_AUD                                                      *
    1092                    *                                                                        *
    1093                    *          THIS IS CALLED TO PRINT OUT AN AUDIT TABLE.                   *
    1094                    *                                                                        *
    1095                    **************************************************************************
    1096              0100  AT_PTR   EQU     PDATA                ;LONG
    1097              0120  AT_Y     EQU     PDATA+LONG_SIZE      ;WORD
    1098              0130  AT_DY    EQU     AT_Y+WORD_SIZE       ;WORD
    1099              0140  AT_LX    EQU     AT_DY+WORD_SIZE      ;WORD   LEFT MARGIN X
    1100              0150  AT_RX    EQU     AT_LX+WORD_SIZE      ;WORD   RIGHT MARGIN X
    1101              0160  AT_OBJ   EQU     AT_RX+WORD_SIZE      ;LONG   OBJECT POINTER FOR COLLECTION ROUT
    1102              0180  AT_MESS  EQU     AT_OBJ+LONG_SIZE     ;LONG   PRINT_MONEY MESSAGE STASH
    1103                    
    1104 00006320           PRNT_AUD
    1105 00006320     9401          MOVE    *A0+,A1,W               ;GET STARTING HEIGHT
    1106 00006330     b02d          MOVE    A1,*A13(AT_Y),W         ;STORE
         00006340     0120  
    1107                    
    1108 00006350     9401          MOVE    *A0+,A1,W               ;GET DY TO USE
    1109 00006360     b02d          MOVE    A1,*A13(AT_DY),W        ;STASH IT AWAY
         00006370     0130  
    1110                    
    1111 00006380     09ce          MOVI    40,A14
         00006390     0028  
    1112 000063a0     05a1          MOVE    @PTSIZE,A1,W
         000063b0 000000d0- 
    1113 000063d0     ca02          JRZ     PAGO_PT
    1114 000063e0     09ce          MOVI    33,A14
         000063f0     0021  
    1115 00006400           PAGO_PT
    1116 00006400     9401          MOVE    *A0+,A1,W               ;GET LEFT MARGIN
    1117 00006410     41c1          ADD     A14,A1
    1118 00006420     b02d          MOVE    A1,*A13(AT_LX),W        ;STORE
         00006430     0140  
    1119 00006440     9401          MOVE    *A0+,A1,W               ;GET RIGHT MARGIN
    1120 00006450     45c1          SUB     A14,A1
    1121 00006460     b02d          MOVE    A1,*A13(AT_RX),W        ;STASH IT AWAY
         00006470     0150  
    1122 00006480     b20d          MOVE    A0,*A13(AT_PTR),L       ;SAVE POINTER INTO AREA
TMS340 COFF Macro Assembler Version 6.10     Wed Apr 21 11:41:33 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   26

         00006490     0100  
    1123                    
    1124 000064a0           PA1
    1125 000064a0     07ae          MOVE    @LASTCOLOR,A14,L
         000064b0 000000e0- 
    1126 000064d0     0b6e          CMPI    COLOR_PYELLOW,A14
         000064e0 fafafefe  
    1127 00006500     ca04          JRZ     PACOLFLIP1
    1128 00006510     09ee          MOVI    COLOR_PYELLOW,A14
         00006520 05050101  
    1129 00006540     c003          JRUC    PACOLFLIP2
    1130 00006550           PACOLFLIP1
    1131 00006550     09ee          MOVI    COLOR_PPURPLE,A14
         00006560 06060101  
    1132 00006580           PACOLFLIP2
    1133 00006580     078e          MOVE    A14,@LASTCOLOR,L
         00006590 000000e0- 
    1134                    
    1135 000065b0                   JSRP    DO_AN_AUDIT             ;PRINT OUT THE CURRENT AUDIT
    1136                    
    1137 00006620     b7a0          MOVE    *A13(AT_PTR),A0,L       ;GET POINTER
         00006630     0100  
    1138 00006640     0b20          ADDI    AUD_T_SIZE,A0
         00006650 00000050  
    1139 00006670     b20d          MOVE    A0,*A13(AT_PTR),L       ;PUT BACK
         00006680     0100  
    1140                    
    1141 00006690     0d3f          CALLR   ADD_AUDIT_DY
         000066a0     0005  
    1142                    
    1143 000066b0     8601          MOVE    *A0,A1,L                ;ARE WE DONE?
    1144 000066c0     cbdd          JRNZ    PA1
    1145                    
    1146 000066d0                   RETP
    1147                    
    1148                    **************************************************************************
    1149                    *                                                                        *
    1150                    *          ADD_AUDIT_DY                                                  *
    1151                    *                                                                        *
    1152                    *          THIS IS CALLED TO MOVE THE AUDIT Y (STORE IN                  *
    1153                    *          PROCESS AREA) TO THE NEXT AUDIT BY ADDING THE                 *
    1154                    *          CURRENT DY (ALSO STORED IN PROCESS AREA).                     *
    1155                    *                                                                        *
    1156                    **************************************************************************
    1157 00006700           ADD_AUDIT_DY
    1158 00006700     098f           MMTM    SP,A1,A2
         00006710     6000  
    1159 00006720     b5a1           MOVE    *A13(AT_Y),A1,W
         00006730     0120  
    1160 00006740     b5a2           MOVE    *A13(AT_DY),A2,W      ;GET DELTA Y
         00006750     0130  
    1161 00006760     4041           ADD     A2,A1                 ;MOVE THE Y DOWN
    1162 00006770     b02d           MOVE    A1,*A13(AT_Y),W
         00006780     0120  
    1163 00006790     09af          MMFM    SP,A1,A2
TMS340 COFF Macro Assembler Version 6.10     Wed Apr 21 11:41:33 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   27

         000067a0     0006  
    1164 000067b0     0960          RETS
    1165                    
    1166 000067c0           BEGIN_AUDIT
    1167 000067c0     098f           MMTM    SP,A0
         000067d0     8000  
    1168 000067e0     5600           CLR     A0
    1169 000067f0     0580           MOVE    A0,@BAD_AUD,W            ;MONITOR CORRUPTION.
         00006800 00000000! 
    1170 00006820     09af          MMFM    SP,A0
         00006830     0001  
    1171 00006840     0960          RETS
    1172                    
    1173 00006850           DO_AN_AUDIT
    1174 00006850     0d3f          CALLR   BEGIN_AUDIT
         00006860     fff5  
    1175 00006870     b7a3          MOVE    *A13(AT_PTR),A3,L       ;GET POINTER
         00006880     0100  
    1176 00006890     b664          MOVE    *A3(AUD_ROUTINE),A4,L   ;ROUTINE TO CALL?
         000068a0     0020  
    1177 000068b0     ca05          JRZ     DO_BY_NUMBER            ;NOPE....DO IT BY NUMBER
    1178                    
    1179 000068c0     09e7          MOVI    DAA_RET,A7
         000068d0 000069e0' 
    1180 000068f0     a2ec          MOVE    A7,-*A12,L              ;PUSH RET ADDR
    1181 00006900     0164          JUMP    A4                      ;"CALL" THE ROUTINE
    1182                    
    1183 00006910           DO_BY_NUMBER
    1184 00006910     b460          MOVE    *A3(AUD_NUMBER),A0,W    ;FETCH THE AUDIT NUMBER
         00006920     0040  
    1185 00006930     0d5f          CALLA   GET_AUD                 ;TURN INTO AUDIT COUNT!
         00006940 00000000! 
    1186 00006960     4c23          MOVE    A1,A3                   ;PROTECT FOR A SECOND.
    1187                    
    1188 00006970                   JSRP    NUMBER_WORK             ;GET THE NUMBER IN A3 UP THERE!
    1189                    
    1190 000069e0           DAA_RET
    1191 000069e0     09e8          MOVI    MESS_AUD_LINE,A8
         000069f0 000173c0' 
    1192 00006a10     05ae          MOVE    @PTSIZE,A14,W
         00006a20 000000d0- 
    1193 00006a40     ca03          JRZ     DAA_GO
    1194 00006a50     09e8          MOVI    MESS15_AUD_LINE,A8
         00006a60 00017480' 
    1195 00006a80           DAA_GO
    1196 00006a80     0d5f          CALLA   LM_SETUP                ;SETUP FOR AUDIT PRINTING.
         00006a90 00000000! 
    1197 00006ab0     07a5          MOVE    @LASTCOLOR,A5,L
         00006ac0 000000e0- 
    1198                    
    1199 00006ae0     b7a3          MOVE    *A13(AT_PTR),A3,L       ;GET AUDIT POINTER
         00006af0     0100  
    1200 00006b00     b668          MOVE    *A3(AUD_MESS),A8,L      ;GET TEXT POINTER
         00006b10     0000  
    1201                    
TMS340 COFF Macro Assembler Version 6.10     Wed Apr 21 11:41:33 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   28

    1202 00006b20                   JSRP    LEFT_FINISH
    1203 00006b90                   RETP                            ;THAT'S ALL WE DO!
    1204                    
    1205                    *
    1206                    *        LEFT_FINISH   AND    RIGHT_FINISH
    1207                    *
    1208                    *        THESE ARE CALLED TO PUT AUDIT INFO
    1209                    *        ON THE LEFT OR RIGHT SIDE ONCE A8 POINTS AT
    1210                    *        THE CORRECT DATA TO PRINT
    1211                    *
    1212 00006bc0           LEFT_FINISH
    1213 00006bc0     0d3f          CALLR   TURN_RED_IF_NEC
         00006bd0     0033  
    1214 00006be0     0d3f          CALLR   SET_FOR_Y               ;SET FOR AUDIT'S Y
         00006bf0     003d  
    1215 00006c00     0d3f          CALLR   SET_LEFT_X              ;SET FOR LEFT X
         00006c10     0044  
    1216 00006c20                   JSRP    PRINTF          ;AND TYPE UP THE MESSAGE!
    1217 00006c90                   RETP
    1218                    
    1219 00006cc0           RIGHT_FINISH
    1220 00006cc0     0d3f          CALLR   TURN_RED_IF_NEC         ;CHANGE COLOR IF CORRUPTED.
         00006cd0     0023  
    1221 00006ce0     0d3f          CALLR   SET_FOR_Y               ;SET FOR AUDIT'S Y
         00006cf0     002d  
    1222 00006d00     0d3f          CALLR   SET_RIGHT_X
         00006d10     003c  
    1223 00006d20                   JSRP    PRINTF          ;FINISH THE JOB!
    1224                    
    1225 00006d90     05a0          MOVE    @BAD_AUD,A0,W           ;IS IT CORRUPTED?
         00006da0 00000000! 
    1226 00006dc0     ca11          JRZ     RFX                     ;NOPE....RETURN
    1227                    
    1228 00006dd0     09e8          MOVI    MESS_ERROR,A8
         00006de0 00017160' 
    1229 00006e00     0d5f          CALLA   LM_SETUP                ;SETUP "ERROR"
         00006e10 00000000! 
    1230                    
    1231 00006e30     0d3f          CALLR   SET_FOR_Y               ;SET FOR AUDIT'S Y
         00006e40     0018  
    1232                    ****    ADDI    40000H,A9               ;PUSH 4 Y UNITS TO CENTER
    1233 00006e50     0d3f          CALLR   SET_RIGHT_X
         00006e60     0027  
    1234 00006e70                   JSRP    PRINTF          ;FINISH THE JOB!
    1235                    
    1236 00006ee0           RFX
    1237 00006ee0                   RETP
    1238                    
    1239 00006f10           TURN_RED_IF_NEC
    1240 00006f10     098f          MMTM    SP,A3
         00006f20     1000  
    1241 00006f30     05a3          MOVE    @BAD_AUD,A3,W           ;CHANGE TO RED?
         00006f40 00000000! 
    1242 00006f60     ca03          JRZ     DAA_1                   ;NOPE...ITS OK!
    1243 00006f70     09e5          MOVI    COLOR_PRED,A5           ;CHANGE COLOR TO RED
TMS340 COFF Macro Assembler Version 6.10     Wed Apr 21 11:41:33 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   29

         00006f80 01010101  
    1244 00006fa0           DAA_1
    1245 00006fa0     09af          MMFM    SP,A3
         00006fb0     0008  
    1246 00006fc0     0960          RETS
    1247                    
    1248 00006fd0           SET_FOR_Y
    1249 00006fd0     098f          MMTM    SP,A3
         00006fe0     1000  
    1250 00006ff0     b5a3          MOVE    *A13(AT_Y),A3,W         ;GET Y COORDINATE
         00007000     0120  
    1251 00007010     2603          SLL     16,A3                   ;PUT IT IN POSITION
    1252 00007020     ee69          MOVY    A3,A9                   ;PUT IT IN PLACE
    1253 00007030     09af          MMFM    SP,A3
         00007040     0008  
    1254 00007050     0960          RETS
    1255                    
    1256 00007060           SET_LEFT_X
    1257 00007060     098f          MMTM    SP,A3
         00007070     1000  
    1258 00007080     b5a3          MOVE    *A13(AT_LX),A3,W
         00007090     0140  
    1259 000070a0     ec69          MOVX    A3,A9                   ;PUT THE X IN PLACE
    1260 000070b0     09af          MMFM    SP,A3
         000070c0     0008  
    1261 000070d0     0960          RETS
    1262                    
    1263 000070e0           SET_RIGHT_X
    1264 000070e0     098f          MMTM    SP,A3
         000070f0     1000  
    1265 00007100     b5a3          MOVE    *A13(AT_RX),A3,W
         00007110     0150  
    1266 00007120     ec69          MOVX    A3,A9                   ;PUT THE X IN PLACE
    1267 00007130     09af          MMFM    SP,A3
         00007140     0008  
    1268 00007150     0960          RETS
    1269                    
    1270                    **************************************************************************
    1271                    *                                                                        *
    1272                    *          NUMBER_WORK                                                   *
    1273                    *                                                                        *
    1274                    *          A3 HAS THE NUMBER TO DISPLAY.....DO IT!                       *
    1275                    *                                                                        *
    1276                    **************************************************************************
    1277 00007160           NUMBER_WORK
    1278 00007160     09e8          MOVI    MESS_AUD_NUM,A8         ;SETUP FOR AUDIT NUMBER
         00007170 00017240' 
    1279 00007190     05ae          MOVE    @PTSIZE,A14,W
         000071a0 000000d0- 
    1280 000071c0     ca03          JRZ     NUMGO
    1281 000071d0     09e8          MOVI    MESS15_AUD_NUM,A8
         000071e0 00017300' 
    1282 00007200           NUMGO
    1283 00007200     0d5f          CALLA   LM_SETUP
         00007210 00000000! 
TMS340 COFF Macro Assembler Version 6.10     Wed Apr 21 11:41:33 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   30

    1284 00007230     07a5          MOVE    @LASTCOLOR,A5,L
         00007240 000000e0- 
    1285 00007260     4c68          MOVE    A3,A8                   ;NOW WE HAVE BINARY NUMBER
    1286 00007270     0d5f          CALLA   HEXTOASC                ;NOW WE POINT TO THE STRING.
         00007280 00000000! 
    1287                    
    1288 000072a0                   JSRP    RIGHT_FINISH
    1289                    
    1290 00007310                   RETP
    1291                    
    1292 00007340           STARTS
    1293 00007340     0d3f          CALLR   GET_STARTS
         00007350     0013  
    1294 00007360     4c43          MOVE    A2,A3                   ;GET IN PRINTOUT REG.
    1295 00007370     c0de          JRUC    NUMBER_WORK             ;AND PRINT IT
    1296                    
    1297                    ;CONTINS
    1298                    ;       CALLR   GET_CONTS
    1299                    ;       MOVE    A2,A3                   ;GET IN PRINTOUT REG.
    1300                    ;       JRUC    NUMBER_WORK             ;AND PRINT IT
    1301                    
    1302                    ;DOPLAYS
    1303                    ;       CALLR   GET_PLAYS
    1304                    ;       MOVE    A2,A3                   ;PUT IN PLACE
    1305                    ;       JRUC    NUMBER_WORK
    1306                    
    1307 00007380           DOTOTTIME
    1308 00007380     5663          CLR     A3
    1309 00007390     c0dc          JRUC    NUMBER_WORK
    1310                    
    1311 000073a0           DOHSLEFT
    1312                    ;wbd    MOVI    ADJHSRES,A0
    1313                    ;wbd    CALLA   GET_ADJ                 ;IS IF OFF?
    1314                    ;wbd    JRZ     DOHSOFF                 ;YEP...PRINT IT
    1315                    
    1316                    ;mdp    CALLA   GET_HSC                 ;GET THE COUNTER VALUE
    1317                    ;mdp    MOVE    A0,A3
    1318                    ;mdp    JRUC    NUMBER_WORK             ;AND SHOW IT!
    1319                    
    1320 000073a0           DOHSOFF
    1321 000073a0     09e8          MOVI    MESS_AUD_NUM,A8
         000073b0 00017240' 
    1322 000073d0     0d5f          CALLA   LM_SETUP                ;SETUP FOR AUDIT PRINTING.
         000073e0 00000000! 
    1323 00007400     07a5          MOVE    @LASTCOLOR,A5,L
         00007410 000000e0- 
    1324 00007430     09e8          MOVI    M_HSOFF,A8              ;THIS EFFECTIVELY ERASES LINE!
         00007440 00017140' 
    1325 00007460     c080          JAUC    RIGHT_FINISH
         00007470 00006cc0' 
    1326                    
    1327                    **************************************************************************
    1328                    *                                                                        *
    1329                    *       GET_STARTS                                                       *
    1330                    *                                                                        *
TMS340 COFF Macro Assembler Version 6.10     Wed Apr 21 11:41:33 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   31

    1331                    *       RETURN THE TOTAL GAME STARTS                                     *
    1332                    *                                                                        *
    1333                    *       ENTRY                                                            *
    1334                    *               NOTHING                                                  *
    1335                    *                                                                        *
    1336                    *       EXIT                                                             *
    1337                    *               A2      TOTAL GAME STARTS                                *
    1338                    *                                                                        *
    1339                    **************************************************************************
    1340 00007490           GET_STARTS:
    1341 00007490     098f          MMTM    SP,A0,A1
         000074a0     c000  
    1342 000074b0     09c0          MOVI    AUD_STARTS,A0
         000074c0     000a  
    1343 000074d0     0d5f          CALLA   GET_AUD
         000074e0 00000000! 
    1344 00007500     4c22          MOVE    A1,A2
    1345 00007510     09af          MMFM    SP,A0,A1
         00007520     0003  
    1346 00007530     0960          RETS
    1347                    
    1348                    **************************************************************************
    1349                    *                                                                        *
    1350                    *       GET_CONTS                                                        *
    1351                    *                                                                        *
    1352                    *       RETURN TOTAL GAME CONTINUES IN A2                                *
    1353                    *                                                                        *
    1354                    *       ENTRY                                                            *
    1355                    *               NOTHING                                                  *
    1356                    *                                                                        *
    1357                    *       EXIT                                                             *
    1358                    *               A2      TOTAL GAME CONTINUES                             *
    1359                    *                                                                        *
    1360                    **************************************************************************
    1361                    ;GET_CONTS:
    1362                    ;        MMTM    SP,A0,A1
    1363                    ;        MOVI    AUDCONTTAKEN,A0
    1364                    ;        CALLA   GET_AUD
    1365                    ;        MOVE    A1,A2
    1366                    ;       MMFM    SP,A0,A1
    1367                    ;       RETS
    1368                    
    1369                    
    1370                    **************************************************************************
    1371                    *                                                                        *
    1372                    *       GET_PLAYS                                                        *
    1373                    *                                                                        *
    1374                    *       RETURN THE TOTAL PLAYS ( STARTS + CONTINUES )                    *
    1375                    *                                                                        *
    1376                    *       ENTRY                                                            *
    1377                    *               NOTHING                                                  *
    1378                    *                                                                        *
    1379                    *       EXIT                                                             *
    1380                    *               A2      TOTAL PLAYS                                      *
    1381                    *                                                                        *
TMS340 COFF Macro Assembler Version 6.10     Wed Apr 21 11:41:33 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   32

    1382                    **************************************************************************
    1383                    ;GET_PLAYS:
    1384                    ;        MMTM    SP,A0
    1385                    ;        CALLR   GET_STARTS
    1386                    ;        MOVE    A2,A0
    1387                    ;        CALLR   GET_CONTS
    1388                    ;        ADD     A0,A2
    1389                    ;       MMFM    SP,A0
    1390                    ;       RETS
    1391                    
    1392 00007540           DO_PTIME
    1393 00007540     09c0          MOVI    AUD_PLAYTIME,A0
         00007550     0011  
    1394 00007560     c00f          JRUC    TIMEGO
    1395                    
    1396                    ;DO_AVGTC
    1397                    ;       CLR     A3
    1398                    ;       MOVI    AUDNUMTC,A0
    1399                    ;       CALLA   GET_AUD         ; GET THE DIVISOR
    1400                    ;       MOVE    A1,A2
    1401                    ;       JRZ     DTCGO           ; NO /0'S HERE, BUD
    1402                    ;       MOVI    AUDAVGTC,A0
    1403                    ;       CALLA   GET_AUD         ; GET TOTAL TIME
    1404                    ;       CLR     A0
    1405                    ;       DIVU    A2,A0           ; A0 CONTAINS THE REAL NUMBER
    1406                    ;       MOVE    A0,A3           ; NUMBER TO DISPLAY
    1407                    ;DTCGO
    1408                    ;       JRUC    PLOTTIME
    1409                    
    1410                    **************************************************************************
    1411                    *                                                                        *
    1412                    *       SET_AVGWAVE                                                      *
    1413                    *                                                                        *
    1414                    *       CALL FOR SETTING THE AVERAGE WAVE                                *
    1415                    *                                                                        *
    1416                    *       ENTRY                                                            *
    1417                    *               A1      WAVE REACHED                                     *
    1418                    *                                                                        *
    1419                    *       EXOT                                                             *
    1420                    *               NOTHING                                                  *
    1421                    *                                                                        *
    1422                    *       CALL                                                             *
    1423                    *               CALL                                                     *
    1424                    *                                                                        *
    1425                    **************************************************************************
    1426                    
    1427                    ;SET_AVGWAVE:
    1428                    ;       MMTM    SP,A0,A1,A2
    1429                    ;       MOVE    A1,A2                   ; SAVE AWAY FOR POSTERITY
    1430                    ;       MOVI    AUDNUMTG,A0
    1431                    ;       CALLA   AUD1
    1432                    ;       MOVI    AUDWAVECNT,A0           ; WAVE COUNTER THINGIE
    1433                    ;       CALLA   GET_AUD
    1434                    ;       ADD     A2,A1
    1435                    ;       CALLA   STORE_AUDIT
TMS340 COFF Macro Assembler Version 6.10     Wed Apr 21 11:41:33 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   33

    1436                    ;       MOVI    AUDAVGGC,A0
    1437                    ;       CALLA   GET_AUD
    1438                    ;       MOVE    @GAMEUNITS,A2,W         ; UNITS USED IN THIS GAME
    1439                    ;       ADD     A2,A1
    1440                    ;       CALLA   STORE_AUDIT
    1441                    ;       MMFM    SP,A0,A1,A2
    1442                    ;       RETS
    1443                    ;
    1444                    ;DO_AVGWAVE
    1445                    ;       CLR     A3
    1446                    ;       MOVI    AUDNUMTG,A0
    1447                    ;       CALLA   GET_AUD         ; GET THE DIVISOR
    1448                    ;       MOVE    A1,A2
    1449                    ;       JRZ     DAWAVEGO        ; NO /0'S HERE, BUD
    1450                    ;       MOVI    AUDWAVECNT,A0
    1451                    ;       CALLA   GET_AUD         ; GET TOTAL TIME
    1452                    ;       CLR     A0
    1453                    ;       DIVU    A2,A0           ; A0 CONTAINS THE REAL NUMBER
    1454                    ;       MOVE    A0,A3           ; NUMBER TO DISPLAY
    1455                    ;DAWAVEGO
    1456                    ;       JAUC    NUMBER_WORK
    1457                    
    1458                    *
    1459                    *CALCULATE PERCENTAGE OF CONTINUES TAKEN
    1460                    *
    1461                    ;DO_PCTCONT
    1462                    ;       CLR     A3
    1463                    ;       MOVI    AUDCONTOFFER,A0
    1464                    ;       CALLA   GET_AUD         ;CONTINUES OFFERED IS THE DIVISOR
    1465                    ;       MOVE    A1,A2
    1466                    ;       JRZ     DAPCTGO         ;BR = 0 NOT ALLOWED IN THIS DIVIDE
    1467                    ;
    1468                    ;       MOVI    AUDCONTTAKEN,A0
    1469                    ;       CALLA   GET_AUD         ;CONTINUES TAKEN IS THE DIVIDEND
    1470                    ;       MOVI    100,A0          ;MAKE IT A PERCENTAGE
    1471                    ;       MPYU    A0,A1
    1472                    ;       DIVU    A2,A1           ;AND GET IT
    1473                    ;       MOVE    A1,A3           ;NUMBER TO DISPLAY
    1474                    ;DAPCTGO
    1475                    ;       JAUC    NUMBER_WORK
    1476                    
    1477                    ;DO_AVGGC
    1478                    ;       CLR     A3
    1479                    ;       MOVI    AUDNUMTG,A0
    1480                    ;       CALLA   GET_AUD         ; GET THE DIVISOR
    1481                    ;       MOVE    A1,A2
    1482                    ;       JRZ     DAGCGO          ; NO /0'S HERE, BUD
    1483                    ;       MOVI    AUDAVGGC,A0
    1484                    ;       CALLA   GET_AUD         ; GET TOTAL CREDITS
    1485                    ;       CLR     A0
    1486                    ;       DIVU    A2,A0           ; A0 CONTAINS THE REAL NUMBER
    1487                    ;       MOVE    A0,A3           ; NUMBER TO DISPLAY
    1488                    ;DAGCGO
    1489                    ;       JAUC    NUMBER_WORK
    1490                    
TMS340 COFF Macro Assembler Version 6.10     Wed Apr 21 11:41:33 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   34

    1491                    
    1492                    
    1493 00007570           DO_UPTIME
    1494 00007570     09c0          MOVI    AUD_UPTIME,A0
         00007580     0012  
    1495 00007590     c00c          JRUC    TIMEGO
    1496                    
    1497 000075a0           DO_P1TIME
    1498 000075a0     09c0          MOVI    AUD_1_TIME,A0
         000075b0     0014  
    1499 000075c0     c009          JRUC    TIMEGO
    1500                    
    1501 000075d0           DO_P2TIME
    1502 000075d0     09c0          MOVI    AUD_2_TIME,A0
         000075e0     0015  
    1503 000075f0     c006          JRUC    TIMEGO
    1504                    
    1505 00007600           DO_P3TIME
    1506 00007600     09c0          MOVI    AUD_3_TIME,A0
         00007610     0016  
    1507 00007620     c003          JRUC    TIMEGO
    1508                    
    1509 00007630           DO_P4TIME
    1510 00007630     09c0          MOVI    AUD_4_TIME,A0
         00007640     0017  
    1511 00007650     0300          JRUC    TIMEGO
    1512                    
    1513 00007660           TIMEGO
    1514 00007660     0d5f          CALLA   GET_AUD
         00007670 00000000! 
    1515 00007690     4c23          MOVE    A1,A3
    1516 000076a0     0300          JRUC    PLOTTIME
    1517                    
    1518                    **************************************************************************
    1519                    *                                                                        *
    1520                    *       PLOTTIME                                                                 *
    1521                    *                                                                        *
    1522                    *       PLOT OUT THE TIME SPECIFIED IN A3                                *
    1523                    *                                                                        *
    1524                    *       ENTRY                                                            *
    1525                    *               A3      TIME ( IN SECONDS )                              *
    1526                    *                                                                        *
    1527                    *       EXIT                                                             *
    1528                    *               NOTHING                                                  *
    1529                    *                                                                        *
    1530                    **************************************************************************
    1531                    
    1532 000076b0           PLOTTIME:
    1533 000076b0     09e8          MOVI    MESS_AUD_NUM,A8
         000076c0 00017240' 
    1534 000076e0     0d5f          CALLA   LM_SETUP
         000076f0 00000000! 
    1535 00007710     07a5          MOVE    @LASTCOLOR,A5,L
         00007720 000000e0- 
    1536                    
TMS340 COFF Macro Assembler Version 6.10     Wed Apr 21 11:41:33 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   35

    1537 00007740     098f          MMTM    SP,A0,A1,A2,A7,A9,A10,A11
         00007750     e170  
    1538 00007760     5729          CLR     A9                      ; NO SECONDS
    1539 00007770     574a          CLR     A10                     ; NO MINUTES
    1540 00007780     576b          CLR     A11                     ; NO HOURS
    1541 00007790     09e7          MOVI    STRINGF_RAM,A7          ; STRING TO BUILD IN
         000077a0 00000000! 
    1542 000077c0     4c61          MOVE    A3,A1                   ; BASE VALUE
    1543 000077d0     ca0b          JRZ     PNOTIME
    1544                    
    1545 000077e0     5600          CLR     A0                      ; DIVIDEND IN <A0><A1>
    1546 000077f0     09c2          MOVI    60,A2                   ; 60 SECS/MINUTE
         00007800     003c  
    1547 00007810     5a40          DIVU    A2,A0                   ; A0 = MINUTES, A1 = SECONDS
    1548 00007820     4c29          MOVE    A1,A9                   ; SET SECONDS
    1549 00007830     4c01          MOVE    A0,A1                   ; MINUTES/HOURS
    1550 00007840     ca04          JRZ     PNOTIME
    1551 00007850     5600          CLR     A0
    1552 00007860     5a40          DIVU    A2,A0                   ; A0 = HOURS, A1 = MINUTES
    1553 00007870     4c2a          MOVE    A1,A10
    1554 00007880     4c0b          MOVE    A0,A11
    1555                    
    1556 00007890           PNOTIME
    1557 00007890     4d60          MOVE    A11,A0
    1558 000078a0     ca09          JRZ     PNOHOURS
    1559 000078b0     0d5f          CALLA   CAT_A0                  ; HOURS
         000078c0 00000000! 
    1560 000078e0     09e8          MOVI    ME_COLON,A8
         000078f0 00007c30' 
    1561 00007910     0d5f          CALLA   STRCAT
         00007920 00000000! 
    1562 00007940           PNOHOURS
    1563 00007940     4d40          MOVE    A10,A0
    1564 00007950     0b40          CMPI    10,A0
         00007960     fff5  
    1565 00007970     c907          JRHS    P1
    1566 00007980     4d6b          MOVE    A11,A11                 ; NO LEADING ZERO IF NO HOURS
    1567 00007990     ca05          JRZ     P1
    1568 000079a0     5600          CLR     A0
    1569 000079b0     0d5f          CALLA   CAT_A0                  ; INSERT EXTRA ZERO
         000079c0 00000000! 
    1570 000079e0     4d40          MOVE    A10,A0
    1571 000079f0           P1
    1572 000079f0     0d5f          CALLA   CAT_A0                  ; MINUTES
         00007a00 00000000! 
    1573 00007a20     09e8          MOVI    ME_COLON,A8
         00007a30 00007c30' 
    1574 00007a50     0d5f          CALLA   STRCAT
         00007a60 00000000! 
    1575 00007a80     4d20          MOVE    A9,A0
    1576 00007a90     0b40          CMPI    10,A0
         00007aa0     fff5  
    1577 00007ab0     c905          JRHS    P2
    1578 00007ac0     5600          CLR     A0
    1579 00007ad0     0d5f          CALLA   CAT_A0                  ; INSERT EXTRA ZERO
TMS340 COFF Macro Assembler Version 6.10     Wed Apr 21 11:41:33 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   36

         00007ae0 00000000! 
    1580 00007b00     4d20          MOVE    A9,A0
    1581 00007b10           P2
    1582 00007b10     0d5f          CALLA   CAT_A0                  ; SECONDS
         00007b20 00000000! 
    1583 00007b40     09af          MMFM    SP,A0,A1,A2,A7,A9,A10,A11
         00007b50     0e87  
    1584 00007b60     09e8          MOVI    STRINGF_RAM,A8
         00007b70 00000000! 
    1585 00007b90                   JSRP    RIGHT_FINISH
    1586 00007c00                   RETP
    1587                    
    1588 00007c30           ME_COLON:
    1589 00007c30       3a          .STRING ":",0
    1590 00007c40                   .EVEN
    1591                    
    1592                    **************************************************************************
    1593                    *                                                                        *
    1594                    * DO_MONEY - ROUTINE TO OUTPUT MONEY TOTALS FOR A GIVEN STANDARD COINAGE *
    1595                    *               IF THE COINAGE IS CUSTOM, IT JUST TOTALS COINS           *
    1596                    *               RECEIVED IN COIN SLOTS.  USED ON THE DETAILED            *
    1597                    *               BOOKKEEPING PAGE.                                        *
    1598                    *                                                                        *
    1599                    **************************************************************************
    1600 00007c40           DO_MONEY:
    1601 00007c40     09e8          MOVI    COLOR_PWHITE,A8
         00007c50 02020101  
    1602 00007c70     0788          MOVE    A8,@LASTCOLOR,L                 ; A GROSS KLUDGE
         00007c80 000000e0- 
    1603 00007ca0     b5a8          MOVE    *A13(AT_Y),A8,W
         00007cb0     0120  
    1604 00007cc0     0b08          ADDI    10H,A8
         00007cd0     0010  
    1605 00007ce0     b10d          MOVE    A8,*A13(AT_Y),W
         00007cf0     0120  
    1606 00007d00     09e8          MOVI    MESS_AUD_NUM,A8
         00007d10 00017240' 
    1607 00007d30     05ae          MOVE    @PTSIZE,A14,W
         00007d40 000000d0- 
    1608 00007d60     ca03          JRZ     DO_M_GO
    1609 00007d70     09e8          MOVI    MESS15_AUD_NUM,A8
         00007d80 00017300' 
    1610 00007da0           DO_M_GO
    1611 00007da0     0d5f          CALLA   LM_SETUP
         00007db0 00000000! 
    1612 00007dd0     07a5          MOVE    @LASTCOLOR,A5,L
         00007de0 000000e0- 
    1613 00007e00     098f          MMTM    SP,A0,A1,A2,A3,A4,A5,A7,A10,A11
         00007e10     fd30  
    1614                    
    1615 00007e20     0d3f          CALLR   BEGIN_AUDIT             ;KEEP TRACK OF SANITY OF CALC.
         00007e30     fe98  
    1616 00007e40     09c8          MOVI    AUDLCOIN,A8             ;NOW PRINT MONEY FOR THE CHUTES
         00007e50     0001  
    1617                    
TMS340 COFF Macro Assembler Version 6.10     Wed Apr 21 11:41:33 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   37

    1618 00007e60     0d3f          CALLR   SUM_COINS
         00007e70     004e  
    1619                    
    1620 00007e80     1820          MOVK    1,A0                    ;DIVIDE COINS BY 1 IF ITS BEEN TAMPERED WITH
    1621 00007e90     0d3f          CALLR   SIXP
         00007ea0     006b  
    1622 00007eb0     ca05          JRZ     DIV_BY_1                ;TAMPERED WITH...DIVIDE BY 1 FOR "COINS"
    1623                    
    1624 00007ec0     09c0          MOVI    ADJCDIV,A0              ;GET THE COIN PARTS PLEASE
         00007ed0     0009  
    1625 00007ee0     0d5f          CALLA   GET_ADJ
         00007ef0 00000000! 
    1626 00007f10           DIV_BY_1
    1627 00007f10     4c4b          MOVE    A2,A11                ;SETUP <A10><A11> AS DIVIDEND
    1628 00007f20     574a          CLR     A10
    1629 00007f30     5a0a          DIVU    A0,A10                ; DOLLARS IN A10, CHANGE IN A11
    1630 00007f40     09c5          MOVI    100,A5
         00007f50     0064  
    1631 00007f60     5a05          DIVU    A0,A5
    1632 00007f70     5eab          MPYU    A5,A11
    1633                    
    1634 00007f80     09e7          MOVI    STRINGF_RAM,A7          ; STRING TO BUILD IN
         00007f90 00000000! 
    1635 00007fb0     0d3f          CALLR   SIXP                    ;HAVE THE 6 BEEN TAMPERED
         00007fc0     0059  
    1636 00007fd0     ca08          JRZ     NO_PREFIX
    1637 00007fe0     0d5f          CALLA   GET_CSPT
         00007ff0 00000000! 
    1638 00008010     b6c8          MOVE    *A6(CS_LMES),A8,L
         00008020     0110  
    1639 00008030     0d5f          CALLA   STRCAT
         00008040 00000000! 
    1640 00008060           NO_PREFIX
    1641                    
    1642 00008060     4c02          MOVE    A0,A2                   ;KEEP DIVISOR FOR CHECK
    1643 00008070     4d40          MOVE    A10,A0
    1644 00008080     0d5f          CALLA   CAT_A0                  ;STUFF IN THE WHOLE GRAIN VALUE
         00008090 00000000! 
    1645 000080b0     0b42          CMPI    1,A2                    ;WE'RE WE DEALING FRACTIONS?
         000080c0     fffe  
    1646 000080d0     ca11          JREQ    NO_FRACTION             ;BR = NO
    1647 000080e0     09e8          MOVI    PERIODSIGN,A8
         000080f0 00008600' 
    1648 00008110     0d5f          CALLA   STRCAT
         00008120 00000000! 
    1649 00008140     0b4b          CMPI    10,A11
         00008150     fff5  
    1650 00008160     c904          JRHS    DM2
    1651 00008170     5600          CLR     A0
    1652 00008180     0d5f          CALLA   CAT_A0
         00008190 00000000! 
    1653 000081b0           DM2
    1654 000081b0     4d60          MOVE    A11,A0
    1655 000081c0     0d5f          CALLA   CAT_A0
         000081d0 00000000! 
TMS340 COFF Macro Assembler Version 6.10     Wed Apr 21 11:41:33 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   38

    1656 000081f0           NO_FRACTION
    1657 000081f0     0d3f          CALLR   SIXP                    ;HAVE THE 6 BEEN TAMPERED
         00008200     0035  
    1658 00008210     ca05          JRZ     NO_SUFFIX
    1659 00008220     b6c8          MOVE    *A6(CS_RMES),A8,L
         00008230     0130  
    1660 00008240     0d5f          CALLA   STRCAT
         00008250 00000000! 
    1661 00008270           NO_SUFFIX
    1662                    
    1663 00008270     09af          MMFM    SP,A0,A1,A2,A3,A4,A5,A7,A10,A11
         00008280     0cbf  
    1664 00008290     09e8          MOVI    STRINGF_RAM,A8
         000082a0 00000000! 
    1665 000082c0                   JSRP    RIGHT_FINISH
    1666 00008330                   RETP
    1667                    
    1668                    **************************************************************************
    1669                    *                                                                        *
    1670                    *          SUM_COINS                                                     *
    1671                    *                                                                        *
    1672                    *          A8 HAS FIRST OF THE "CHUTES" AUDIT NUMBERS OF INTEREST        *
    1673                    *                                                                        *
    1674                    *          RETURN COINS TIMES THEIR FACTORS IN A2.                       *
    1675                    *                                                                        *
    1676                    **************************************************************************
    1677 00008360           SUM_COINS
    1678 00008360     098f          MMTM    SP,A0,A1,A3,A6,A4
         00008370     da00  
    1679                    
    1680 00008380     4d00          MOVE    A8,A0                   ;POINT AT AUDIT NUMBER
    1681 00008390     5642          CLR     A2                      ;SUM = ZERO
    1682                    
    1683 000083a0     0d5f          CALLA   GET_CSPT                ;A6 POINTS AT CSELECT TABLE
         000083b0 00000000! 
    1684 000083d0     0b06          ADDI    CS_LVAL,A6              ;POINT AT 1ST MULTIPLIER
         000083e0     00c0  
    1685                    
    1686 000083f0     09c4          MOVI    CHUTES,A4               ;NOW...ITERATE OVER THE CHUTES
         00008400     0005  
    1687                    
    1688 00008410           NEXT_CHUTE
    1689 00008410     94c3          MOVE    *A6+,A3,W               ;GET MULTPLIER FOR THIS CHUTE
    1690 00008420     0d3f          CALLR   FIX_A3                  ;REPLACE A3 WITH 1 (MULTIPLIER) IF
         00008430     000d  
    1691                    *                                       ;ITS SOME CUSTOM MODE.
    1692 00008440     0d3f          CALLR   ADD_AUD_A0_TIMES_A3_TO_A2
         00008450     0005  
    1693 00008460     1020          INC     A0                      ;NEXT AUDIT
    1694 00008470     3ce4          DSJS    A4,NEXT_CHUTE
    1695                    
    1696 00008480     09af          MMFM    SP,A0,A1,A3,A6,A4
         00008490     005b  
    1697 000084a0     0960          RETS
    1698                    
TMS340 COFF Macro Assembler Version 6.10     Wed Apr 21 11:41:33 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   39

    1699 000084b0           ADD_AUD_A0_TIMES_A3_TO_A2
    1700 000084b0     0d5f          CALLA   GET_AUD                 ;FETCH THE AUDIT
         000084c0 00000000! 
    1701 000084e0     5e23          MPYU    A1,A3                   ;TIME THE FACTOR
    1702 000084f0     4062          ADD     A3,A2
    1703 00008500     0960          RETS
    1704                    
    1705                    **************************************************************************
    1706                    *                                                                        *
    1707                    *          FIX_A3                                                        *
    1708                    *                                                                        *
    1709                    *          THIS IS CALLED BY THE LOW LEVEL MONEY TOTALIZER.              *
    1710                    *          THE MULTIPLIER FOR THE COIN SLOT THAT ITS WORKING             *
    1711                    *          ON IS IN A3.  WE REPLACE IT WITH "1" TO SUM "TOTAL COINS"     *
    1712                    *          IF ITS IN A NON-STANDARD COIN MODE.                           *
    1713                    *                                                                        *
    1714                    **************************************************************************
    1715 00008510           FIX_A3
    1716 00008510     0d3f          CALLR   SIXP                    ;HAS IT BEEN TAMPERED WITH?
         00008520     0003  
    1717 00008530     cb01          JRNZ    FIX_A3X                 ;NOPE...LEAVE A3
    1718 00008540     1823          MOVK    1,A3
    1719 00008550           FIX_A3X
    1720 00008550     0960          RETS
    1721                    
    1722                    **************************************************************************
    1723                    *                                                                        *
    1724                    *          SIXP                                                          *
    1725                    *                                                                        *
    1726                    *          THIS IS CALLED TO SEE IF THE 1ST 6 COIN PARAMETERS HAVE       *
    1727                    *          BEEN TAMPERED WITH.                                           *
    1728                    *                                                                        *
    1729                    *          .EQ.            YES                                           *
    1730                    *          .NE.            NO                                            *
    1731                    *                                                                        *
    1732                    **************************************************************************
    1733 00008560           SIXP
    1734 00008560     098f          MMTM    SP,A0
         00008570     8000  
    1735 00008580     09c0          MOVI    ADJ1ST6,A0
         00008590     0017  
    1736 000085a0     0d5f          CALLA   GET_ADJ              ;HAS IT BEEN TAMPERED WITH?
         000085b0 00000000! 
    1737 000085d0     09af          MMFM    SP,A0
         000085e0     0001  
    1738 000085f0     0960          RETS
    1739                    
    1740 00008600           PERIODSIGN:
    1741 00008600       2e          .STRING ".",0
    1742 00008610                   .EVEN
    1743                    
    1744                    **************************************************************************
    1745                    *                                                                        *
    1746                    *       UTILITY ROUTINES FOR UTILITIES MENU                              *
    1747                    *                                                                        *
TMS340 COFF Macro Assembler Version 6.10     Wed Apr 21 11:41:33 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   40

    1748                    **************************************************************************
    1749 00008610           DO_CLCRED
    1750 00008610     09e8          MOVI    MESS_CLCRED,A8          ;CLEAR COIN SUB-TOTALS...ARE YOU SURE
         00008620 0001a260' 
    1751 00008640     09e9          MOVI    CLR_CREDITS,A9          ;ROUTINE TO DO IT
         00008650 000086d0' 
    1752 00008670     09ea          MOVI    MESS_CCCONF,A10         ;CONFIRMATION.
         00008680 0001a280' 
    1753 000086a0     c080          JAUC    AREUSURE                ;ASK EM......THEN RETURN!
         000086b0 0000e9c0' 
    1754                    
    1755 000086d0           CLR_CREDITS
    1756 000086d0     0d5f          CALLA   NO_CREDS                ;CALL THE ROUTINE THAT DOES IT
         000086e0 00000000! 
    1757 00008700                   RETP
    1758                    
    1759 00008730           DO_CLCOIN
    1760 00008730     09e8          MOVI    MESS_CLCOIN,A8          ;CLEAR COIN SUB-TOTALS...ARE YOU SURE
         00008740 0001a2b0' 
    1761 00008760     09e9          MOVI    CLR_COINS,A9            ;ROUTINE TO DO IT
         00008770 000087f0' 
    1762 00008790     09ea          MOVI    MESS_CCNCONF,A10        ;CONFIRMATION.
         000087a0 0001b5f0' 
    1763 000087c0     c080          JAUC    AREUSURE                ;ASK EM......THEN RETURN!
         000087d0 0000e9c0' 
    1764                    
    1765 000087f0           CLR_COINS
    1766 000087f0     09c0          MOVI    FRST_C,A0
         00008800     0001  
    1767 00008810     09c1          MOVI    LAST_C,A1
         00008820     0007  
    1768 00008830     0d5f          CALLA   CLR_AUDR
         00008840 00000000! 
    1769 00008860                    RETP
    1770                    
    1771 00008890           DO_CLAUD
    1772 00008890     09e8          MOVI    MESS_CLAUD,A8           ;CLEAR COIN SUB-TOTALS...ARE YOU SURE
         000088a0 0001a2d0' 
    1773 000088c0     09e9          MOVI    CLR_AUDITS,A9           ;ROUTINE TO DO IT
         000088d0 00008950' 
    1774 000088f0     09ea          MOVI    MESS_CAUDCONF,A10       ;CONFIRMATION.
         00008900 0001b700' 
    1775 00008920     c080          JAUC    AREUSURE                ;ASK EM......THEN RETURN!
         00008930 0000e9c0' 
    1776                    
    1777 00008950           CLR_AUDITS
    1778 00008950     09c0          MOVI    FRSTGAUD,A0
         00008960     000a  
    1779 00008970     09c1          MOVI    LASTGAUD,A1
         00008980     004e  
    1780 00008990     0d5f          CALLA   CLR_AUDR
         000089a0 00000000! 
    1781 000089c0     0d5f          CALLA   DUMP_FS                 ;AND START THE "DUMP" RECORDS OVER
         000089d0 00000000! 
    1782 000089f0                   RETP
TMS340 COFF Macro Assembler Version 6.10     Wed Apr 21 11:41:33 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   41

    1783                    
    1784 00008a20           DO_HSRES
    1785 00008a20     09e8          MOVI    MESS_HSRESET,A8
         00008a30 00012410' 
    1786 00008a50     09e9          MOVI    HSSOFT,A9
         00008a60 00008ae0' 
    1787 00008a80     09ea          MOVI    MESS_HSRCONF,A10
         00008a90 0001b820' 
    1788 00008ab0     c080          JAUC    AREUSURE
         00008ac0 0000e9c0' 
    1789                    
    1790 00008ae0           HSSOFT
    1791 00008ae0     0d3f          CALLR   RES_ALL
         00008af0     0003  
    1792 00008b00                   RETP                            ;PROGRAM TO DO THE JOB!
    1793                    
    1794                    **************************************************************************
    1795                    *                                                                        *
    1796                    *       RES_ALL                                                          *
    1797                    *                                                                        *
    1798                    *       RESET THE ALL TIME HIGHSCORE TABLE AND THE RESET COUNTER         *
    1799                    *                                                                        *
    1800                    *       ENTRY                                                            *
    1801                    *               NOTHING                                                  *
    1802                    *                                                                        *
    1803                    *       EXIT                                                             *
    1804                    *               NOTHING                                                  *
    1805                    *                                                                        *
    1806                    **************************************************************************
    1807 00008b30           RES_ALL:
    1808 00008b30     0d5f          CALLA   init_cmos_records
         00008b40 00000000! 
    1809 00008b60     0960          RETS
    1810                    
    1811                    **************************************************************************
    1812                    *                                                                        *
    1813                    *          MONITOR PATTERNS                                              *
    1814                    *                                                                        *
    1815                    **************************************************************************
    1816 00008b70           GO_PATTERNS
    1817 00008b70     09e8          MOVI    MEN_PATTERNS,A8         ;PUT UP THE MENU AND GO!
         00008b80 0001b8c0' 
    1818 00008ba0     c080          JAUC    GEN_MENU                ;THIS WILL RETURN TO LEVEL ABOVE US!
         00008bb0 00009430' 
    1819                    * A1 = <COLOR><PALETTE>
    1820                    * A3 = DAG OF AREA [YPOS,XPOS]
    1821                    * A4 = [Y,X] SIZE OF AREA
    1822 00008bd0           GO_RED
    1823 00008bd0     09c1          MOVI    COLOR_RED,A1
         00008be0     0101  
    1824 00008bf0     c080          JAUC    SC_COL
         00008c00 00008c90' 
    1825 00008c20           GO_GREEN
    1826 00008c20     09c1          MOVI    COLOR_GREEN,A1
         00008c30     0707  
TMS340 COFF Macro Assembler Version 6.10     Wed Apr 21 11:41:33 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   42

    1827 00008c40     c080          JAUC    SC_COL
         00008c50 00008c90' 
    1828 00008c70           GO_BLUE
    1829 00008c70     09c1          MOVI    COLOR_BLUE,A1
         00008c80     0303  
    1830 00008c90           SC_COL
    1831 00008c90     2601          SLL     16,A1                   ;PALETTE 0....COLOR UP HIGH
    1832 00008ca0     5663          CLR     A3                      ;UPPER LEFT
    1833 00008cb0     09e4          MOVI    00FF0190H,A4
         00008cc0 00ff0190  
    1834 00008ce0     0d5f          CALLA   FILLAREA                ;THIS DOES THE SCREEN
         00008cf0 00000000! 
    1835 00008d10     c080          JAUC    WAIT_BUT                ;NOW WAIT FOR ANY BUTTON!
         00008d20 00008dc0' 
    1836                    
    1837                    **************************************************************************
    1838                    *                                                                        *
    1839                    *       WAIT FOR A BUTTON MENU                                           *
    1840                    *                                                                        *
    1841                    **************************************************************************
    1842 00008d40           ANY_BUT
    1843 00008d40     09e8           MOVI    ANY_MENU,A8          ;ANY BUTTON TO CONTINUE
         00008d50 0001b1e0' 
    1844 00008d70     09c9           MOVI    1,A9                 ;CURSOR ON ENTRY 1
         00008d80     0001  
    1845 00008d90     c080           JAUC    B_MENU               ;DO IT....RETURN WHEN PRESSED.
         00008da0 0000a500' 
    1846                    
    1847                    **************************************************************************
    1848                    *                                                                        *
    1849                    *          WAIT_BUT                                                      *
    1850                    *                                                                        *
    1851                    *          THIS IS CALLED ON RETURN FROM MANY OF THE "HARD"              *
    1852                    *          DIAGNOSTIC TESTS TO HOLD CONTROL TILL ANY BUTTON IS           *
    1853                    *          HIT.                                                          *
    1854                    *                                                                        *
    1855                    **************************************************************************
    1856 00008dc0           WAIT_BUT
    1857 00008dc0                   PUSHP   A8
    1858 00008dd0     5708          CLR     A8
    1859                    *WAIT FIRST FOR ALL SWITCHES TO BE OPEN, TIMEOUT IS 8 SECONDS
    1860 00008de0           WB_OPEN_WAIT
    1861 00008de0     07a0          move    @SWITCH,a0,L
         00008df0 01860000  
    1862 00008e10     0b80          andi    70707070h,a0
         00008e20 8f8f8f8f  
    1863 00008e40     0b60          CMPI    70707070H,A0            ;ARE ALL BUTTONS (exc START) OFF?
         00008e50 8f8f8f8f  
    1864 00008e70     cb09          JRNE    WB_WAIT                 ;BR = YES
    1865 00008e80     05a1          move    @COINS,a1               ;ARE ALL START BUTTONS OFF?
         00008e90 01860030  
    1866 00008eb0     0b81          andi    664h,a1 
         00008ec0 fffff99b  
    1867 00008ee0     0b41          cmpi    664h,a1
         00008ef0     f99b  
TMS340 COFF Macro Assembler Version 6.10     Wed Apr 21 11:41:33 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   43

    1868 00008f00     ca0b          jreq    WB_GO
    1869                    
    1870 00008f10           WB_WAIT:
    1871 00008f10     1028          INC     A8
    1872 00008f20     0b48          CMPI    150,A8                  ;HAVE WE WAITED TOO LONG?
         00008f30     ff69  
    1873 00008f40     c907          JRHS    WB_GO
    1874 00008f50                   SLOOP   1,WB_OPEN_WAIT
    1875                    
    1876 00008fc0           WB_GO
    1877 00008fc0     0780          move    a0,@SWSET1,L
         00008fd0 00000000! 
    1878 00008ff0     0581          move    a1,@SWSET2,W
         00009000 00000000! 
    1879 00009020                   PULLP   A8
    1880                    
    1881 00009040           WB1
    1882 00009040     07a0          move    @SWITCH,a0,L
         00009050 01860000  
    1883 00009070     0b80          andi    70707070h,a0
         00009080 8f8f8f8f  
    1884 000090a0     07ae          move    @SWSET1,a14,L
         000090b0 00000000! 
    1885 000090d0     480e          cmp     a0,a14
    1886 000090e0     ca04          jreq    WB_CHK2
    1887 000090f0     0b60          cmpi    70707070h,a0
         00009100 8f8f8f8f  
    1888 00009120     cb13          jrne    WBEND
    1889 00009130           WB_CHK2:
    1890 00009130     05a1          move    @COINS,a1               ;ARE ANY START BUTTONS ON?
         00009140 01860030  
    1891 00009160     0b81          andi    664h,a1 
         00009170 fffff99b  
    1892 00009190     05ae          move    @SWSET2,a14,W
         000091a0 00000000! 
    1893 000091c0     482e          cmp     a1,a14
    1894 000091d0     ca03          JREQ    WB_WAIT2
    1895 000091e0     0b41          cmpi    664h,a1
         000091f0     f99b  
    1896 00009200     cb05          JRNE    WBEND
    1897                    
    1898 00009210           WB_WAIT2:
    1899 00009210                   SLEEP   1
    1900 00009250     c0de          JRUC    WB1
    1901 00009260           WBEND
    1902 00009260                   RETP
    1903                    
    1904                    **************************************************************************
    1905                    *                                                                        *
    1906                    *       CKDIAG                                                           *
    1907                    *                                                                        *
    1908                    *       CHECK TO SEE IF WE NEED TO GO OFF TO THE DIAGNOSTICS ROUTINES    *
    1909                    *                                                                        *
    1910                    *       ENTRY                                                            *
    1911                    *               NOTHING                                                  *
TMS340 COFF Macro Assembler Version 6.10     Wed Apr 21 11:41:33 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   44

    1912                    *                                                                        *
    1913                    *       EXIT                                                             *
    1914                    *               A0      0 = COOL, 1 = GO TO DIAGS                        *
    1915                    *                                                                        *
    1916                    **************************************************************************
    1917 00009290           CKDIAG
    1918 00009290     5600          CLR     A0
    1919 000092a0     0d5f          CALLA   READ_DIP
         000092b0 00000000! 
    1920 000092d0     0b80          ANDI    DPTEST,A0
         000092e0 ffff7fff  
    1921 00009300     cb08          JRNZ    CKDGO
    1922 00009310     05a0          move    @COINS,a0
         00009320 01860030  
    1923 00009340     03e0          NOT     A0
    1924 00009350     0b80          ANDI    0010H,A0            ; check test switch
         00009360 ffffffef  
    1925 00009380     ca01          JRZ     CKDRET
    1926 00009390           CKDGO
    1927 00009390     1820          MOVK    1,A0
    1928 000093a0           CKDRET
    1929 000093a0     4c00          MOVE    A0,A0
    1930 000093b0     0960          RETS
    1931                    
    1932                    **************************************************************************
    1933                    *                                                                        *
    1934                    *          FORCE_MAIN                                                    *
    1935                    *                                                                        *
    1936                    *          THIS IS CALLED TO GET TO MAIN MENU FROM LEVEL FURTHER         *
    1937                    *          THAN 1 DOWN.  IT SETS THE GLOBAL FLAG "MAIN_RET"              *
    1938                    *          NON ZERO.  GEN_MENU WILL KEEP RETURNING UNTIL                 *
    1939                    *          IT GETS BACK TO THE MAIN MENU.                                *
    1940                    *                                                                        *
    1941                    **************************************************************************
    1942 000093c0           FORCE_MAIN
    1943 000093c0     1820          MOVK    1,A0                    ;POSITIVE NUMBER FORCES MAIN MENU.
    1944 000093d0     0580          MOVE    A0,@MAIN_RET,W
         000093e0 00000000- 
    1945 00009400                   RETP                            ;NOW "RETURN TO THE MENU"
    1946                    
    1947                    
    1948                    **************************************************************************
    1949                    *                                                                        *
    1950                    *          GEN_MENU                                                      *
    1951                    *                                                                        *
    1952                    *          THIS IS A GENERAL MENU HANDLER.  IT POSTS THE MENU            *
    1953                    *          WITH SELECTION 1 AVAILABLE.  AFTER A SELECTION IS             *
    1954                    *          MADE, IF IT HAS A ROUTINE CODE OF ZERO, (EXIT)                *
    1955                    *          IT RETURNS TO THE LEVEL ABOVE IT.  ELSE, IT                   *
    1956                    *          JSRP'S THE NEW ROUTINE.  WHEN THE NEW ROUTINE                 *
    1957                    *          RETURNS, WE RE-POST THE SAME MENU WITH THE                    *
    1958                    *          BAR ON THE FOLLOWING ENTRY.                                   *
    1959                    *                                                                        *
    1960                    *          A8 = MENU DESCRIPTOR                                          *
    1961                    *                                                                        *
TMS340 COFF Macro Assembler Version 6.10     Wed Apr 21 11:41:33 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   45

    1962                    **************************************************************************
    1963                    *
    1964                    *        MENU ROM OFFSETS
    1965                    *
    1966              0000  MR_FONT  EQU     0
    1967              0020  MR_TCAL  EQU     MR_FONT+LONG_SIZE
    1968              0040  MR_TITLE EQU     MR_TCAL+LONG_SIZE    ;POINTER TO TITLE FOR TILE BOX (IF NEC)
    1969              0060  MR_TCLR  EQU     MR_TITLE+LONG_SIZE   ;COLOR OF TITLE
    1970              0070  MR_WORDS EQU     MR_TCLR+WORD_SIZE    ;STREAM OF WORDS TO COPY TO PDATA STARTS HERE
    1971              0070  MR_X     EQU     MR_WORDS
    1972              0080  MR_Y     EQU     MR_X+WORD_SIZE
    1973              0090  MR_DY    EQU     MR_Y+WORD_SIZE
    1974              00a0  MR_COL   EQU     MR_DY+WORD_SIZE
    1975              00b0  MR_HITE  EQU     MR_COL+WORD_SIZE
    1976              00c0  MR_BDY   EQU     MR_HITE+WORD_SIZE
    1977              00d0  MR_DX    EQU     MR_BDY+WORD_SIZE
    1978              00e0  MR_WID   EQU     MR_DX+WORD_SIZE
    1979                    
    1980 00009430           GEN_MENU
    1981 00009430     05a0          MOVE    @GMENULEV,A0,W          ;KICK LEVEL POINTER
         00009440 00000010- 
    1982 00009460     1020          INC     A0
    1983 00009470     0580          MOVE    A0,@GMENULEV,W
         00009480 00000010- 
    1984                    *
    1985 000094a0     a30c          MOVE    A8,-*A12,L              ;SAVE MENU PTR
    1986 000094b0     09c8          MOVI    1,A8                    ;START WITH "FIRST" ENTRY
         000094c0     0001  
    1987 000094d0     a10c          MOVE    A8,-*A12,W              ;PUT MENU NUMBER AS A WORD
    1988                    *
    1989                    *       IF WE GET HERE AND MAIN_RET IS NOT ZERO, THE WE MUST
    1990                    *       RETURN TO LEVEL ABOVE US IF WE'RE NOT THE MAIN
    1991                    *       MENU.
    1992                    *
    1993 000094e0           GEN_LOOP
    1994 000094e0     05a0          MOVE    @MAIN_RET,A0,W          ;ARE WE IN "EXIT" MODE?
         000094f0 00000000- 
    1995 00009510     ca0b          JRZ     NO_EXIT                 ;NO
    1996                    
    1997 00009520     ce44          JRN     DIVE_TO_MONITOR         ;WE'RE DIVING TO MONITOR PATTERNS.
    1998                    
    1999 00009530     05a0          MOVE    @GMENULEV,A0,W          ;CHECK LEVEL
         00009540 00000010- 
    2000 00009560     0b40          CMPI    1,A0                    ;ARE WE AT LEVEL 1
         00009570     fffe  
    2001 00009580     cb32          JRNZ    GEN_EXIT                ;NOPE.....POP UP A LEVEL.
    2002                    *
    2003                    *       WE'RE AT LEVEL 1....CLEAR OUT THE FLAG THAT
    2004                    *       GOT US HERE.
    2005                    *
    2006 00009590           DIVE_COMPLETE
    2007 00009590     5600          CLR     A0
    2008 000095a0     0580          MOVE    A0,@MAIN_RET,W          ;NOW WE MAY PROCEED!
         000095b0 00000000- 
    2009                    
TMS340 COFF Macro Assembler Version 6.10     Wed Apr 21 11:41:33 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   46

    2010 000095d0           NO_EXIT
    2011 000095d0     05a0          MOVE    @NO_CLEAR,A0,W          ;INHIBIT CLEAR?
         000095e0 00000030- 
    2012 00009600     cb03          JRNZ    SKIP_CLR
    2013                    
    2014 00009610     0d5f          CALLA   CLR_SCRN                ;CLEAR THE SCREEN
         00009620 00000000! 
    2015                    
    2016 00009640           SKIP_CLR
    2017 00009640     5600          CLR     A0
    2018 00009650     0580          MOVE    A0,@NO_CLEAR,W          ;AND RE-SET IT!
         00009660 00000030- 
    2019                    
    2020 00009680     b788          MOVE    *A12(WORD_SIZE),A8,L    ;GET MENU DESCRIPTOR
         00009690     0010  
    2021 000096a0                   JSRP    MENU_TOP
    2022 00009710                   JSRP    CYAN_BOX                ;PUT UP MAIN MENU INSTRUCTIONS
    2023                    
    2024 00009780     8589          MOVE    *A12,A9,W               ;GET MENU NUMBER TO USE
    2025 00009790                   JSRP    B_MENU                  ;GET RESULT
    2026                    
    2027 00009800           PHONEY_MENU_RET
    2028 00009800     4d4a          MOVE    A10,A10                 ;WAS IT ADVANCE?
    2029 00009810     ca01          JRZ     NO_KICK                 ;NOPE....LEAVE WHERE HE CAME FROM
    2030                    
    2031 00009820     1028          INC     A8                      ;KICK INDEX BY 1 FOR NEXT TIME
    2032 00009830           NO_KICK
    2033 00009830     810c          MOVE    A8,*A12,W               ;AND LEAVE ON THE STACK
    2034                    
    2035 00009840     4d29          MOVE    A9,A9                   ;NOW JSRP THE ROUTINE
    2036 00009850     ca05          JRZ     GEN_EXIT                ;NONE THERE....ITS "EXIT"
    2037                    *
    2038                    *       JSRP TO A9
    2039                    *
    2040 00009860     09e7          MOVI    GEN_LOOP,A7
         00009870 000094e0' 
    2041 00009890     a2ec          MOVE    A7,-*A12,L              ;PUSH RET ADDR
    2042 000098a0     0169          JUMP    A9
    2043                    
    2044 000098b0           GEN_EXIT
    2045 000098b0     0b0c          ADDI    WORD_SIZE+LONG_SIZE,A12 ;POP THE ARGUMENTS
         000098c0     0030  
    2046 000098d0     05a0          MOVE    @GMENULEV,A0,W          ;KICK LEVEL POINTER
         000098e0 00000010- 
    2047 00009900     1420          DEC     A0
    2048 00009910     0580          MOVE    A0,@GMENULEV,W
         00009920 00000010- 
    2049 00009940                   RETP
    2050                    
    2051                    **************************************************************************
    2052                    *                                                                        *
    2053                    *          DIVE_TO_MONITOR                                               *
    2054                    *                                                                        *
    2055                    *          WE GET CONTROL HERE WHEN WE ARE KLUDGING THE RETURN           *
    2056                    *          FROM "CPU" TEST (WHICH BLOWS AWAY RAM!)                       *
TMS340 COFF Macro Assembler Version 6.10     Wed Apr 21 11:41:33 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   47

    2057                    *                                                                        *
    2058                    **************************************************************************
    2059 00009970           DIVE_TO_MONITOR
    2060 00009970     05a0           MOVE    @GMENULEV,A0,W            ;CHECK LEVEL
         00009980 00000010- 
    2061 000099a0     0b40           CMPI    1,A0                      ;ARE WE AT LEVEL 1
         000099b0     fffe  
    2062 000099c0     cb06           JRNZ    DTM1                      ;NOPE....SET "MONITOR" LEVEL
    2063                    *
    2064                    *        WE'RE AT LEVEL 1......."SELECT" THE DIAGNOSTIC MENU
    2065                    *        A8 = 1.....A9 = ROUTINE FOR DIAGNOSTIC MENU
    2066                    *
    2067 000099d0     1828           MOVK    1,A8
    2068 000099e0     09e9           MOVI    GO_DIAG,A9           ;ROUTINE FOR DIAGNOSTIC MENU
         000099f0 00002c20' 
    2069 00009a10     182a           MOVK    1,A10                ;RETURN AS IF ADVANCE WAS PRESSED
    2070 00009a20     c0dd           JRUC    PHONEY_MENU_RET      ;WE'RE READY TO CALL DIAG MENU
    2071                    *
    2072                    *        WE'RE IN DIAGNOSTIC MENU....NOW WE JUST NEED TO MAKE
    2073                    *        THE "CURRENT" SELECTION THE ONE AFTER CPU TEST
    2074                    *        (MONITOR PATTERNS)
    2075                    *
    2076 00009a30     05a8  DTM1     MOVE    @MAIN_RET,A8,W            ;FLAG IS OPPOSITE OF ENTRY NUMBER
         00009a40 00000000- 
    2077 00009a60     03a8           NEG     A8                        ;THIS IS RETURN LEVEL!
    2078 00009a70     09e8           MOVI    RTR_LEV,A8                ;START WITH "RETURN" ENTRY NUMBER
         00009a80 00000004  
    2079 00009aa0     810c           MOVE    A8,*A12,W                 ;PUT MENU NUMBER AS A WORD
    2080 00009ab0     c0ad           JRUC    DIVE_COMPLETE             ;THIS COMPLETES THE DIVE!
    2081                    
    2082                    *
    2083                    *          FOR DOBORDER
    2084                    *
    2085                    *          A4 = UPPER LEFT Y,X
    2086                    *          A5 = LOWER RIGHT Y,X
    2087                    *          A0 = Y,X WIDTH OF BORDER
    2088                    *          A9 = COLOR OF BORDER.
    2089                    
    2090                    **************************************************************************
    2091                    *                                                                        *
    2092                    *          TOP_BOX                                                       *
    2093                    *                                                                        *
    2094                    *          THIS DISPLAYS THE TEST BOX AT THE TOP.                        *
    2095                    *                                                                        *
    2096                    *          A2 POINTS AT THE STRING TO CENTER IN THE BOX.                 *
    2097                    *          A3 IS COLOR TO DO IT IN.                                      *
    2098                    *                                                                        *
    2099                    **************************************************************************
    2100 00009ac0           MENU_TOP
    2101 00009ac0     b702          MOVE    *A8(MR_TITLE),A2,L      ;GET TITLE INTO A2
         00009ad0     0040  
    2102 00009ae0     b503          MOVE    *A8(MR_TCLR),A3,W       ;AND COLOR INTO A3
         00009af0     0060  
    2103                    
    2104 00009b00           TOP_BOX
TMS340 COFF Macro Assembler Version 6.10     Wed Apr 21 11:41:33 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   48

    2105 00009b00     a30c          MOVE    A8,-*A12,L              ;PUSH MENU PTR
    2106                    *
    2107                    *       FIRST MAKE THE BOX...IT BLACKS OUT THE REGION
    2108                    *
    2109 00009b10     0d3f          CALLR   SCR_BOX                 ;PUT UP THE TITLE BOX
         00009b20     0043  
    2110                    
    2111 00009b30     09e8          MOVI    MESS_TITLE,A8           ;SET PARAMETERS
         00009b40 0000f930' 
    2112 00009b60     0d5f          CALLA   LM_SETUP                ;PUT IT OUT.
         00009b70 00000000! 
    2113                    
    2114 00009b90     4c48          MOVE    A2,A8                   ;GET STRING IN THE CORRECT REGGIE
    2115 00009ba0     4c66          MOVE    A3,A6                   ;MOVE COLOR TO COLOR REGGIE
    2116                    ;       MOVE    A3,A5                   ;FIXING THIS WOULD BREAK EVERYTHING!
    2117                    *
    2118 00009bb0                   JSRP    PRINTF          ;AND PRINT IT!
    2119                    
    2120 00009c20                   JSRP    SCR_REV                 ;NOW ADD THE REV.
    2121                    
    2122 00009c90     9788          MOVE    *A12+,A8,L              ;RESTORE THE MENU PTR
    2123                    
    2124 00009ca0                   RETP
    2125                    
    2126                    **************************************************************************
    2127                    *                                                                        *
    2128                    *          SCR_REV                                                       *
    2129                    *                                                                        *
    2130                    *          DISPLAY REV IN TITLE BOX.                                     *
    2131                    *                                                                        *
    2132                    **************************************************************************
    2133 00009cd0           SCR_REV
    2134 00009cd0     09e8          MOVI    MESS_REV,A8     ;GET READY FOR REV MESSAGE
         00009ce0 0000f9f0' 
    2135 00009d00     0d5f          CALLA   LM_SETUP        ;SETUP FOR REV MESSAGE
         00009d10 00000000! 
    2136                    
    2137 00009d30     09e8          MOVI    ROM_NAME,A8     ;USE ROM COPY OF REV.
         00009d40 00010c70' 
    2138 00009d60                   JSRP    PRINTF  ;FINISH PRINTING MESSAGE
    2139 00009dd0                   RETP
    2140                    
    2141                    **************************************************************************
    2142                    *                                                                        *
    2143                    *          SCR_REV_OBJ                                                   *
    2144                    *                                                                        *
    2145                    *          DISPLAY REV IN TITLE BOX AS OBJECTS                           *
    2146                    *                                                                        *
    2147                    **************************************************************************
    2148 00009e00           SCR_REV_OBJ
    2149 00009e00     09e8          MOVI    MESS_REV,A8     ;GET READY FOR REV MESSAGE
         00009e10 0000f9f0' 
    2150 00009e30     0d5f          CALLA   LM_SETUP        ;SETUP FOR REV MESSAGE
         00009e40 00000000! 
    2151 00009e60     09e1          MOVI    STRCNRMO,A1
TMS340 COFF Macro Assembler Version 6.10     Wed Apr 21 11:41:33 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   49

         00009e70 00000000! 
    2152 00009e90     09e8          MOVI    ROM_NAME,A8     ;USE ROM COPY OF REV.
         00009ea0 00010c70' 
    2153 00009ec0                   JSRP    PRINTF  ;FINISH PRINTING MESSAGE
    2154 00009f30                   RETP
    2155                    
    2156                    **************************************************************************
    2157                    *                                                                        *
    2158                    *          SCR_BOX                                                       *
    2159                    *                                                                        *
    2160                    *          THIS DISPLAYS THE TITLE BOX.                                  *
    2161                    *                                                                        *
    2162                    **************************************************************************
    2163 00009f60           SCR_BOX
    2164 00009f60     09e4          MOVI    TIT_ULX+(10000H*TIT_ULY),A4     ;UPPER LEFT
         00009f70 00120005  
    2165 00009f90     09e5          MOVI    TIT_LRX+(10000H*TIT_LRY),A5     ;LOWER RIGHT
         00009fa0 00380185  
    2166 00009fc0     09c9          MOVI    COLOR_YELLOW,A9
         00009fd0     0505  
    2167 00009fe0     0d3f          CALLR   STD_BORD        ;TACO BELL HAS YOUR ORDER, MAKE A RU-UUUN......
         00009ff0     03f8  
    2168 0000a000     0960          RETS
    2169                    
    2170                    **************************************************************************
    2171                    *                                                                        *
    2172                    *          SCR_BOX_OBJ                                                   *
    2173                    *                                                                        *
    2174                    *          THIS DISPLAYS THE TITLE BOX AS OBJECTS                        *
    2175                    *                                                                        *
    2176                    **************************************************************************
    2177 0000a010           SCR_BOX_OBJ
    2178 0000a010     09e1          MOVI    COLOR_PYELLOW,A1
         0000a020 05050101  
    2179 0000a040     09e3          MOVI    TIT_ULX+(10000H*TIT_ULY),A3     ;UPPER LEFT
         0000a050 00120005  
    2180 0000a070     09c2          MOVI    MB_XWID,A2                      ;LINE THICKNESS
         0000a080     0003  
    2181 0000a090     09e0          MOVI    (TIT_LRX+(10000H*TIT_LRY))-(TIT_ULX+(10000H*TIT_ULY)),A0 ;SIZE
         0000a0a0 00260180  
    2182 0000a0c0     0d5f          CALLA   DRAWBOX_OBJ                     ;DRAW DAT BOX
         0000a0d0 00000000! 
    2183 0000a0f0     0960          RETS
    2184                    
    2185                    **************************************************************************
    2186                    *                                                                        *
    2187                    *          REV_TO_PDATA                                                  *
    2188                    *                                                                        *
    2189                    *          THIS COPIES THE CURRENT REV. DATA TO THE                      *
    2190                    *          CALLING (CONTROLLING) PROCESSES' PDATA AREA.                  *
    2191                    *                                                                        *
    2192                    **************************************************************************
    2193                    *                                                                        *
    2194                    * REV_TO_PDATA                                                           *
    2195                    *          MMTM    SP,A2,A7,A6,A0                                        *
TMS340 COFF Macro Assembler Version 6.10     Wed Apr 21 11:41:33 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   50

    2196                    *          CALLA   ADJ_PAGE                                              *
    2197                    *          MOVI    NAME_REV,A7          ;POINT AT CMOS NAME STORAGE      *
    2198                    *          MOVE    A13,A6               ;POINT WITH A6                   *
    2199                    *          ADDI    PDATA,A6                                              *
    2200                    *          MOVI    NAME_REV_SIZE,A2     ;MAXIMUM NAME SIZE               *
    2201                    *                                                                        *
    2202                    * REV_XFER_LOOP                                                          *
    2203                    *          CALLA   RC_BYTEI             ;FETCH A BYTE                    *
    2204                    *          MOVB    A0,*A6               ;PUT IN PROCESS AREA             *
    2205                    *          ADDI    BYTE_SIZE,A6         ;PUSH THIS POINTER               *
    2206                    *          DSJS    A2,REV_XFER_LOOP                                      *
    2207                    *                                                                        *
    2208                    *          CLR     A0                   ;STORE A ZERO BEYOND IN CASE ITS *
    2209                    *          MOVE    A0,*A6,W             ;2 BYTES DOESN'T HURT            *
    2210                    *       MMFM    SP,A2,A7,A6,A0                                          *
    2211                    *       RETS                                                            *
    2212                    *                                                                        *
    2213                    **************************************************************************
    2214                    *
    2215                    *        THIS PRINTS THE "MOVE JOYSTICK" BOX.
    2216                    *
    2217                    *        A8 = MENU DESCRIPTOR THAT WILL ACCOMPANY IT
    2218                    *        ON SCREEN.  WE ADJUST THE BOX EDGES AND
    2219                    *        MESSAGE CENTER IN "X" ONLY TO CORRESPOND
    2220                    *        TO THE MENU BOX.
    2221                    *
    2222 0000a100           CYAN_BOX
    2223 0000a100     a30c          MOVE    A8,-*A12,L              ;PUSH THE MENU PTR
    2224                    
    2225 0000a110     09c9          MOVI    COLOR_RED,A9
         0000a120     0101  
    2226 0000a130     0d3f          CALLR   COL_INST                ;THIS PRINTS BOX AND STASHES
         0000a140     0018  
    2227                    *                                       ;CENTER X AT *A13(PDATA),W
    2228                    
    2229 0000a150     09e8          MOVI    MM_INST1,A8             ;POINT AT INSTRUCTIONS MESSAGE
         0000a160 0000f230' 
    2230 0000a180                   JSRP    C_PD_M
    2231                    
    2232 0000a1f0     09e8          MOVI    MM_INST2,A8             ;POINT AT INSTRUCTIONS MESSAGE
         0000a200 0000f3c0' 
    2233 0000a220                   JSRP    C_PD_M
    2234                    
    2235 0000a290     9788          MOVE    *A12+,A8,L              ;GET BACK MENU PTR.
    2236 0000a2a0                   RETP
    2237                    
    2238                    **************************************************************************
    2239                    *                                                                        *
    2240                    *          COL_INST                                                      *
    2241                    *                                                                        *
    2242                    *          THIS PRINTS OUT THE "CYAN" INSTRUCTION BOX                    *
    2243                    *          IN THE COLOR SPECIFIED BY A9.                                 *
    2244                    *                                                                        *
    2245                    **************************************************************************
    2246 0000a2d0           COL_INST
TMS340 COFF Macro Assembler Version 6.10     Wed Apr 21 11:41:33 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   51

    2247                    *
    2248                    *       WE NEED TO DETERMINE LEFT AND RIGHT X
    2249                    *
    2250 0000a2d0     0d3f          CALLR   STUFF_MENU_PROCESS              ;MOVE DATA INTO PDATA AREA
         0000a2e0     0176  
    2251 0000a2f0     0d3f          CALLR   MEN_NUMS                        ;GET THE NUMBERS FOR THIS MENU
         0000a300     000b  
    2252 0000a310     b0cd          MOVE    A6,*A13(PDATA),W                ;STASH THE X CENTER
         0000a320     0100  
    2253 0000a330     0b24          ADDI    10000H*INST_ULY,A4              ;UPPER LEFT Y
         0000a340 003b0000  
    2254 0000a360     0b25          ADDI    10000H*INST_LRY,A5              ;UPPER LEFT X
         0000a370 00580000  
    2255 0000a390     0d3f          CALLR   STD_BORD        ;TACO BELL HAS YOUR ORDER, MAKE A RU-UUUN......
         0000a3a0     03bd  
    2256 0000a3b0     0960          RETS
    2257                    
    2258                    **************************************************************************
    2259                    *                                                                        *
    2260                    *          MEN_NUMS                                                      *
    2261                    *                                                                        *
    2262                    *          THIS IS CALLED TO GET SOME NUMBERS ASSOCIATED                 *
    2263                    *          WITH A MENU BOX.                                              *
    2264                    *                                                                        *
    2265                    *          THIS RETURNS:                                                 *
    2266                    *                                                                        *
    2267                    *          A4 = LEFT X                                                   *
    2268                    *          A5 = RIGHT X                                                  *
    2269                    *          A6 = CENTER X                                                 *
    2270                    *                                                                        *
    2271                    **************************************************************************
    2272 0000a3c0           MEN_NUMS
    2273 0000a3c0     0d3f          CALLR   MENU_UL_A4_A5           ;LEFT X IN A4
         0000a3d0     0323  
    2274 0000a3e0     0d3f          CALLR   MENU_LR_A6_A5           ;RIGHT X IN A6
         0000a3f0     0332  
    2275 0000a400     4cc5          MOVE    A6,A5                   ;COPY RIGHT X INTO A5
    2276 0000a410     4086          ADD     A4,A6                   ;FIND CENTER
    2277 0000a420     2fe6          SRL     1,A6                    ;A6 NOW HAS CENTER X (FOR LATER)
    2278 0000a430     0960          RETS
    2279                    
    2280                    **************************************************************************
    2281                    *                                                                        *
    2282                    *          C_PD_M                                                        *
    2283                    *                                                                        *
    2284                    *          THIS PRINTS A L_MESS MESSAGE PASSED IN A8, CENTERED           *
    2285                    *          ON THE X STORED AT *A13(PDATA),W                              *
    2286                    *                                                                        *
    2287                    **************************************************************************
    2288 0000a440           C_PD_M
    2289 0000a440     0d5f          CALLA   LM_SETUP                ;SETUP THE MESSAGE
         0000a450 00000000! 
    2290 0000a470     0b89          ANDI    0FFFF0000H,A9           ;REMOVE X
         0000a480 0000ffff  
    2291 0000a4a0     b5a3          MOVE    *A13(PDATA),A3,W        ;GET THE X
TMS340 COFF Macro Assembler Version 6.10     Wed Apr 21 11:41:33 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   52

         0000a4b0     0100  
    2292 0000a4c0     4069          ADD     A3,A9                   ;PUT OUR X IN
    2293                    ;       JUMP    A1                      ;AND "CALL" THE ROUTINE
    2294 0000a4d0     c080          JAUC    PRINTF
         0000a4e0 00000000! 
    2295                    
    2296                    
    2297                    **************************************************************************
    2298                    *                                                                        *
    2299                    *          GET_MENU                                                      *
    2300                    *                                                                        *
    2301                    *          This routine is called (via JSRP) to display a menu on        *
    2302                    *          screen and receive a selection from the operator.             *
    2303                    *                                                                        *
    2304                    *          The menu descriptor is passed in A8.                          *
    2305                    *                                                                        *
    2306                    *          The selection number is returned in a8. (line 1 = 1)          *
    2307                    *          The routine address is returned in a9.                        *
    2308                    *          A10 is returned non-zero if advance was the button used       *
    2309                    *                                                                        *
    2310                    *          A menu (pointed to by A8) is defined as follows:              *
    2311                    *                                                                        *
    2312                    *                      FONT TO BE USED             (LONG)                *
    2313                    *                      X FOR LEFT MARGIN           (WORD)                *
    2314                    *                      Y FOR TOP LINE              (WORD)                *
    2315                    *                      DY PER ENTRY                (WORD)                *
    2316                    *                      TEXT_COLOR                  (WORD)                *
    2317                    *                      HEIGHT OF SELECTION BAR     (WORD)                *
    2318                    *                      DX FROM TOP OF TEXT TO SEL. BAR  (WORD)           *
    2319                    *                                                                        *
    2320                    *          A9 POINTS AT ENTRY TO START WITH                              *
    2321                    *                                                                        *
    2322                    *          Then for each entry:                                          *
    2323                    *                                                                        *
    2324                    *                      TEXT POINTER        (LONG)                        *
    2325                    *                      ACTIVATION ROUTINE  (LONG)                        *
    2326                    *                                                                        *
    2327                    *          The list is terminated by a zero.                             *
    2328                    *                                                                        *
    2329                    *          This routine forks a separate process to do the work          *
    2330                    *          for it.  Therefore the caller has full use of                 *
    2331                    *          the PDATA area.                                               *
    2332                    *                                                                        *
    2333                    **************************************************************************
    2334                    *
    2335                    *        Equates for GET_MENU slave process.
    2336                    *
    2337              0100  MEN_OFF EQU     PDATA                   ;WORD-OFFSET INTO MENU OF SELECTION
    2338              0110  MEN_ROUT EQU    MEN_OFF+WORD_SIZE       ;LONG-ROUTINE FOR SELECTION
    2339              0130  MEN_ROM EQU     MEN_ROUT+LONG_SIZE      ;LONG-POINTER TO ROM STRUCTURE
    2340              0150  MEN_ULX EQU     MEN_ROM+LONG_SIZE       ;WORD-LEFT X  (CENTER X WHEN CENTERING)
    2341              0160  MEN_ULY EQU     MEN_ULX+WORD_SIZE       ;WORD-TOP Y
    2342              0170  MEN_DY  EQU     MEN_ULY+WORD_SIZE       ;WORD-Y UNITS PER ENTRY
    2343              0180  MEN_COLR EQU    MEN_DY+WORD_SIZE        ;WORD-COLOR FOR ENTRIES
    2344              0190  MEN_BAR EQU     MEN_COLR+WORD_SIZE      ;WORD-HEIGHT OF SELECTION BAR
TMS340 COFF Macro Assembler Version 6.10     Wed Apr 21 11:41:33 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   53

    2345              01a0  MEN_BDY EQU     MEN_BAR+WORD_SIZE       ;WORD-DY FROM TOP OF TEXT TO TOP OF BAR.
    2346              01b0  MEN_BDX EQU     MEN_BDY+WORD_SIZE       ;WORD-DX FROM LEFT OF WORD TO LEFT OF BAR
    2347              01c0  MEN_BWID EQU    MEN_BDX+WORD_SIZE       ;WORD-WIDTH OF BAR
    2348              01d0  MEN_SCOL EQU    MEN_BWID+WORD_SIZE      ;WORD-COLOR OF SELECTED TEXT
    2349              01e0  MEN_TPTR EQU    MEN_SCOL+WORD_SIZE      ;LONG-POINTER TO BEGINNING OF TEXT ENTRIES.
    2350              0200  MEN_ENTS EQU    MEN_TPTR+LONG_SIZE      ;WORD-NUMBER OF ENTRIES IN MENU
    2351              0210  MEN_CUR  EQU    MEN_ENTS+WORD_SIZE      ;WORD-CURRENT SELECTION (1ST IS 1)
    2352              0220  MEN_WALK EQU    MEN_CUR+WORD_SIZE       ;WORD-NUMBER OF ENTRY WE'RE ON AS WE WALK
    2353              0230  MEN_STIK EQU    MEN_WALK+WORD_SIZE      ;LONG-"STUCK" STATE OF SWITCHES
    2354              0250  MEN_ACT  EQU    MEN_STIK+LONG_SIZE      ;LONG-SWITCH WE'RE ACTING ON. (BIT)
    2355              0270  MEN_TYPO EQU    MEN_ACT+LONG_SIZE       ;WORD-TYPOMATIC COUNTER
    2356              0280  MEN_HITS EQU    MEN_TYPO+WORD_SIZE      ;WORD-CONSECUTIVE TYPOMATIC HITS
    2357              0290  MEN_ADV  EQU    MEN_HITS+WORD_SIZE      ;WORD-NON-ZERO IF ADVANCE WAS BUTTON USED
    2358                    
    2359              0009  WORD_ENTS EQU   (MEN_TPTR-MEN_ULX)/WORD_SIZE    ;NUMBER OF WORD ENTRIES
    2360                    
    2361 0000a500           B_MENU
    2362 0000a500     09e7          MOVI    BD_SLAVE,A7
         0000a510 0000a750' 
    2363 0000a530     c003          JRUC    GMJMP
    2364                    
    2365 0000a540           GET_MENU
    2366 0000a540     09e7          MOVI    GM_SLAVE,A7             ;THIS IS ROUTINE
         0000a550 0000a770' 
    2367 0000a570           GMJMP
    2368 0000a570     09c1          MOVI    MENU_PID,A1             ;THIS IS ID
         0000a580     0ac1  
    2369 0000a590     0d5f          CALLA   GETPRC                  ;CREATE IT
         0000a5a0 00000000! 
    2370                    
    2371 0000a5c0     4c0a          MOVE    A0,A10                  ;SAVE HIS POINTER
    2372 0000a5d0           GM1
    2373 0000a5d0                   SLEEP   2
    2374                    
    2375 0000a610     09c0          MOVI    MDUN_PID,A0
         0000a620     0ac2  
    2376 0000a630     0d5f          CALLA   EXISTP_ALL              ;WAIT FOR ID TO CHANGE TO THIS!
         0000a640 00000000! 
    2377                    
    2378 0000a660     caf6          JRZ     GM1                     ;LOOP UNTIL IT EXISTS!
    2379                    
    2380 0000a670     b548          MOVE    *A10(MEN_OFF),A8,W      ;RETURN OFFSET OF SELECTION
         0000a680     0100  
    2381 0000a690     b749          MOVE    *A10(MEN_ROUT),A9,L     ;AND ROUTINE THAT WAS SELECTED.
         0000a6a0     0110  
    2382 0000a6b0     b54a          MOVE    *A10(MEN_ADV),A10,W     ;INDICATE WHETHER ADVANCE WAS USED
         0000a6c0     0290  
    2383                    
    2384 0000a6d0     09c0          MOVI    MDUN_PID,A0
         0000a6e0     0ac2  
    2385 0000a6f0     0d5f          CALLA   KILLPROC_ALL            ;KILL THE HANGING MENU GETTER!
         0000a700 00000000! 
    2386 0000a720                   RETP                            ;AND RETURN
    2387                    
    2388                    **************************************************************************
TMS340 COFF Macro Assembler Version 6.10     Wed Apr 21 11:41:33 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   54

    2389                    *                                                                        *
    2390                    *          GM_SLAVE                                                      *
    2391                    *                                                                        *
    2392                    *          This displays the menu.......moves the selection bar          *
    2393                    *          and returns the selection information by stuffing             *
    2394                    *          it in its process area and changing its ID to                 *
    2395                    *          MDUN_PID once selection is made.                              *
    2396                    *                                                                        *
    2397                    *          On entry....A8 points at the GET_MENU data structure.         *
    2398                    *                      A9 is which entry to start with selected.         *
    2399                    *                                                                        *
    2400                    **************************************************************************
    2401 0000a750           BD_SLAVE
    2402 0000a750     0d3f          CALLR   MENU_BORDER             ;DRAW THE BORDER FOR SELCTIONS.
         0000a760     02cd  
    2403 0000a770           GM_SLAVE
    2404 0000a770                   JSRP    ST_STICK                ;TELL STICK(S) AND BUTTONS WE'RE STARTING.
    2405                    
    2406 0000a7e0     0d3f          CALLR   STUFF_MENU_PROCESS      ;MOVE DATA INTO PDATA AREA
         0000a7f0     0125  
    2407                    *
    2408                    *       PLOT ENTIRE MENU
    2409                    *
    2410                    *       DO_MENU_LINE WILL RETURN CARRY SET
    2411                    *       WHEN WE GET BEYOND THE END.
    2412                    *
    2413 0000a800     1820          MOVK    1,A0                    ;SETUP FOR LINE 1.
    2414 0000a810           DO_ANOTHER_LINE
    2415 0000a810     b00d          MOVE    A0,*A13(MEN_WALK),W     ;WALK THROUGH.
         0000a820     0220  
    2416                    
    2417 0000a830                   JSRP    DO_MENU_LINE            ;PUT OUT LINE IN A0.
    2418 0000a8a0     b5a0          MOVE    *A13(MEN_WALK),A0,W     ;GET BACK THE COUNTER
         0000a8b0     0220  
    2419                    
    2420 0000a8c0     1020          INC     A0                      ;MOVE TO NEXT ENTRY.
    2421 0000a8d0     b5a1          MOVE    *A13(MEN_ENTS),A1,W     ;SEE IF WE'RE DONE.
         0000a8e0     0200  
    2422 0000a8f0     4820          CMP     A1,A0
    2423 0000a900     c2f0          JRLS    DO_ANOTHER_LINE
    2424                    *
    2425                    *       MAIN MENU PLOTTED......NOW LET THE DMA UN-LOAD BEFORE PLOTTING HELP
    2426                    *
    2427 0000a910     0d3f          CALLR   PLOT_HELP               ;PLOT HELP FOR 1ST IF NECESSARY
         0000a920     0229  
    2428                    
    2429                    *
    2430                    *       NOW WE JUST WANT TO UPDATE BASED ON STICK...ACT
    2431                    *       ON BUTTONS!
    2432                    *
    2433                    *       RESPONSES:   UP....DOWN....BUTTON....NOTHING....
    2434                    *
    2435                    *       NOTHING = 0
    2436                    *       UP = 1
    2437                    *       DOWN = 2
TMS340 COFF Macro Assembler Version 6.10     Wed Apr 21 11:41:33 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   55

    2438                    *       BUTTON = 3
    2439                    *
    2440                    *       A0 = RESPONSE
    2441                    *       A1 = MEN_CUR VALUE.
    2442                    *
    2443                    
    2444 0000a930     5600          CLR     A0
    2445 0000a940     b00d          MOVE    A0,*A13(MEN_HITS),W
         0000a950     0280  
    2446 0000a960     b20d          MOVE    A0,*A13(MEN_TYPO),L
         0000a970     0270  
    2447 0000a980           MENU_LOOP
    2448 0000a980                   SLEEP   1
    2449 0000a9c0                   JSRP    GETSTICK                ;CHECK OUT THE PLAYER BOARD
    2450 0000aa30     4c00          MOVE    A0,A0
    2451 0000aa40     cb05          JRNZ    ML1                     ;BR = GOT SOMETHING
    2452 0000aa50     b00d          MOVE    A0,*A13(MEN_HITS),W     ;CLEAR TIMER AND DIRECTION
         0000aa60     0280  
    2453 0000aa70     b00d          MOVE    A0,*A13(MEN_TYPO),W
         0000aa80     0270  
    2454 0000aa90     c0ee          JRUC    MENU_LOOP
    2455 0000aaa0           ML1
    2456                    ;************
    2457                    ;       movi    03e1H,a4
    2458                    ;       calla   SEND_RAW_CODE
    2459                    ;************
    2460                    
    2461 0000aaa0     b5a1          MOVE    *A13(MEN_HITS),A1,W     ;GET LAST DIRECTION
         0000aab0     0280  
    2462 0000aac0     0b81          ANDI    7,A1                    ;MASK OFF REPEAT BIT
         0000aad0 fffffff8  
    2463 0000aaf0     4801          CMP     A0,A1
    2464 0000ab00     ca06          JRZ     ML2                     ;BR = YES, STILL SAME THING
    2465 0000ab10     b00d          MOVE    A0,*A13(MEN_HITS),W
         0000ab20     0280  
    2466 0000ab30     5621          CLR     A1
    2467 0000ab40     b02d          MOVE    A1,*A13(MEN_TYPO),W     ;CLEAR THE TIMER
         0000ab50     0270  
    2468 0000ab60     c02a          JRUC    MLDONE                  ;PROCESS INITIAL HIT
    2469 0000ab70           ML2
    2470 0000ab70     b5a1          MOVE    *A13(MEN_HITS),A1,W     ;SNAG THE REPEAT BIT
         0000ab80     0280  
    2471 0000ab90     0b81          ANDI    80H,A1
         0000aba0 ffffff7f  
    2472 0000abc0     cb14          JRNZ    ML3                     ;BR = IN REPEAT MODE
    2473 0000abd0     b5a0          MOVE    *A13(MEN_TYPO),A0,W     ;GET TIMER
         0000abe0     0270  
    2474 0000abf0     1020          INC     A0
    2475 0000ac00     b00d          MOVE    A0,*A13(MEN_TYPO),W
         0000ac10     0270  
    2476 0000ac20     0b40          CMPI    15,A0
         0000ac30     fff0  
    2477 0000ac40     c8d3          JRLO    MENU_LOOP               ;GO BACK TO SLEEP
    2478 0000ac50     5600          CLR     A0
    2479 0000ac60     b00d          MOVE    A0,*A13(MEN_TYPO),W     ;CLEAR OUT THE TIMER
TMS340 COFF Macro Assembler Version 6.10     Wed Apr 21 11:41:33 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   56

         0000ac70     0270  
    2480 0000ac80     b5a1          MOVE    *A13(MEN_HITS),A1,W
         0000ac90     0280  
    2481 0000aca0     4c20          MOVE    A1,A0
    2482 0000acb0     0ba1          ORI     80H,A1                  ;PUT UPPER BIT ON
         0000acc0 00000080  
    2483 0000ace0     b02d          MOVE    A1,*A13(MEN_HITS),W     ;SET DIRECTION WITH REPEAT ON
         0000acf0     0280  
    2484 0000ad00     c010          JRUC    MLDONE
    2485 0000ad10           ML3
    2486 0000ad10     b5a0          MOVE    *A13(MEN_TYPO),A0,W     ;GET TIMER
         0000ad20     0270  
    2487 0000ad30     1020          INC     A0
    2488 0000ad40     b00d          MOVE    A0,*A13(MEN_TYPO),W
         0000ad50     0270  
    2489 0000ad60     0b40          CMPI    5,A0
         0000ad70     fffa  
    2490 0000ad80     c8bf          JRLO    MENU_LOOP               ;GO BACK TO SLEEP
    2491 0000ad90     5600          CLR     A0
    2492 0000ada0     b00d          MOVE    A0,*A13(MEN_TYPO),W     ;CLEAR OUT THE TIMER
         0000adb0     0270  
    2493 0000adc0     b5a0          MOVE    *A13(MEN_HITS),A0,W
         0000add0     0280  
    2494 0000ade0     0b80          ANDI    7H,A0                   ;TURN OFF REPEAT BIT
         0000adf0 fffffff8  
    2495 0000ae10           MLDONE
    2496 0000ae10     b5a1          MOVE    *A13(MEN_CUR),A1,W      ;GET CURRENT ENTRY...IN A1
         0000ae20     0210  
    2497                    
    2498 0000ae30     0b40          CMPI    3,A0                    ;BUTTON?
         0000ae40     fffc  
    2499 0000ae50     ca35          JRZ     MENU_BUTTON             ;YEP....WE'RE OUT OF HERE.
    2500                    
    2501 0000ae60     0b40          CMPI    2,A0
         0000ae70     fffd  
    2502 0000ae80     ca0e          JRZ     MENU_DOWN               ;ITS DOWN....
    2503                    *
    2504                    *       REQUEST TO GO UP....ARE WE AT #1
    2505                    *
    2506 0000ae90     0b41          CMPI    1,A1                    ;WELL?
         0000aea0     fffe  
    2507 0000aeb0     c2ac          JRLS    MENU_LOOP               ;YEP....IGNORE
    2508                    
    2509 0000aec0                   JSRP    UN_SELECT               ;PUT BACK THE OLD "CURRENT ONE
    2510 0000af30     b5a0          MOVE    *A13(MEN_CUR),A0,W      ;GET CURRENT ENTRY
         0000af40     0210  
    2511 0000af50     1420          DEC     A0                      ;MAKE ONE LESS.
    2512 0000af60     c00e          JRUC    JOIN_DOWN               ;NOW PLOT THE NEW ONE.
    2513                    
    2514 0000af70           MENU_DOWN
    2515 0000af70     b5a2          MOVE    *A13(MEN_ENTS),A2,W     ;GET NUMBER IN MENU
         0000af80     0200  
    2516 0000af90     4841          CMP     A2,A1                   ;ARE WE AT MAX
    2517 0000afa0     c99d          JRHS    MENU_LOOP               ;YEP...NO ACTION
    2518                    
TMS340 COFF Macro Assembler Version 6.10     Wed Apr 21 11:41:33 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   57

    2519 0000afb0                   JSRP    UN_SELECT               ;PUT BACK THE OLD "CURRENT ONE
    2520                    
    2521 0000b020     b5a0          MOVE    *A13(MEN_CUR),A0,W      ;GET CURRENT ENTRY
         0000b030     0210  
    2522 0000b040     1020          INC     A0                      ;MAKE THIS THE NEXT.
    2523                    
    2524 0000b050           JOIN_DOWN
    2525 0000b050     b00d          MOVE    A0,*A13(MEN_CUR),W      ;PUT BACK
         0000b060     0210  
    2526 0000b070                   JSRP    DO_MENU_LINE            ;PUT OUT LINE IN A0.
    2527                    *
    2528                    *       MAKE THE "DINK" SOUND HERE FOR ENTRY TO ENTRY MOVEMENT
    2529                    *
    2530 0000b0e0     0d3f          CALLR   PLOT_HELP               ;PLOT HELP NEW ONE
         0000b0f0     01ac  
    2531 0000b100                   SLEEP   1                       ;DELAY BEEP 1 FRAME
    2532 0000b140     09c4          movi    S_CURSOR_MOVE,a4
         0000b150     0107  
    2533 0000b160     0d5f          calla   do_sound                ; Make a CURSOR MOVE beep
         0000b170 00000000! 
    2534 0000b190     c000          JRUC    MENU_LOOP               ;AND WAIT FOR NEXT RESPONSE.
         0000b1a0     ff7d  
    2535                    *
    2536                    *       CONTROL COMES HERE WHEN A BUTTON IS PRESSED
    2537                    *
    2538                    *       The selection number is returned in a8. (line 1 = 1)
    2539                    *       The routine address is returned in a9.
    2540                    
    2541 0000b1b0           MENU_BUTTON
    2542                    *
    2543                    *       A0 HAS A 3.
    2544                    *       A2 HAS THE BUTTON BIT.....IS IT ADVANCE?
    2545                    *
    2546 0000b1b0     b7a0          MOVE    *A13(MEN_ROM),A0,L
         0000b1c0     0130  
    2547 0000b1d0     0b60          CMPI    MEN_PADJ,A0             ;WBD SPECIAL CASE FOR PRICING ADJ
         0000b1e0 ffffffff! 
    2548 0000b200     cb19          JRNZ    MBNOTADJ
    2549 0000b210     0d5f          CALLA   CKDIP
         0000b220 00000000! 
    2550 0000b240     cb15          JRNZ    MBNOTADJ                ;NOT USING DIP SWITCHES
    2551 0000b250     b5a0          MOVE    *A13(MEN_CUR),A0,W      ;GET THE SELECT ITEM
         0000b260     0210  
    2552 0000b270     0b40          CMPI    2,A0                    ;"STANDARD PRICING"
         0000b280     fffd  
    2553 0000b290     ca09          JRZ     MBABORT
    2554 0000b2a0     0b40          CMPI    3,A0                    ;"CUSTOM MULTIPLIERS"  WBD
         0000b2b0     fffc  
    2555 0000b2c0     ca06          JRZ     MBABORT
    2556 0000b2d0     0b40          CMPI    4,A0                    ;"CUSTOM PRICING"
         0000b2e0     fffb  
    2557                    ; WBD ST
    2558 0000b2f0     ca03          JRZ     MBABORT
    2559 0000b300     0b40          CMPI    5,A0                    ;"FREE PLAY"
         0000b310     fffa  
TMS340 COFF Macro Assembler Version 6.10     Wed Apr 21 11:41:33 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   58

    2560                    ; WBD END
    2561 0000b320     cb07          JRNZ    MBNOTADJ
    2562 0000b330           MBABORT
    2563 0000b330     09c4          movi    S_TOPTEN_PLAYER,a4
         0000b340     010f  
    2564 0000b350     0d5f          calla   do_sound                ; reject sound
         0000b360 00000000! 
    2565 0000b380     c000          JRUC    MENU_LOOP
         0000b390     ff5e  
    2566 0000b3a0           MBNOTADJ
    2567 0000b3a0     5600          CLR     A0                      ;NOT ADVANCE
    2568 0000b3b0           IS_ADV
    2569 0000b3b0     b00d          MOVE    A0,*A13(MEN_ADV),W      ;NON ZERO IF IT WAS ADVANCE
         0000b3c0     0290  
    2570                    
    2571 0000b3d0                   JSRP    BUTTON_STALL            ;HIGHLIGHT SELECTION AND HANG ON BUTTON
    2572                    
    2573 0000b440     b5a0          MOVE    *A13(MEN_CUR),A0,W      ;GET "CURRENT" ENTRY.
         0000b450     0210  
    2574 0000b460     0d3f          CALLR   GET_MENU_DATA           ;A1=CURRENT_OFFSET  A2=TEXT  A3=ROUTINE
         0000b470     015b  
    2575 0000b480     b00d          MOVE    A0,*A13(MEN_OFF),W      ;STORE THE OFFSET (CHOICE NUM)
         0000b490     0100  
    2576 0000b4a0     b26d          MOVE    A3,*A13(MEN_ROUT),L     ;AND THE ROUTINE POINTER
         0000b4b0     0110  
    2577 0000b4c0     09c0          MOVI    MDUN_PID,A0
         0000b4d0     0ac2  
    2578 0000b4e0     b00d          MOVE    A0,*A13(PROCID),W       ;CHANGE OUR ID.
         0000b4f0     0020  
    2579 0000b500           MENU_DONE
    2580 0000b500                   SLEEP   20
    2581 0000b540     c0fb          JRUC    MENU_DONE               ;NOW HANG TILL DISPATCHER SEES ID.
    2582                    
    2583                    **************************************************************************
    2584                    *                                                                        *
    2585                    *                 MENU UTILITIES                                         *
    2586                    *                                                                        *
    2587                    **************************************************************************
    2588                    **************************************************************************
    2589                    *                                                                        *
    2590                    *          BUTTON_STALL                                                  *
    2591                    *                                                                        *
    2592                    *          THIS IS CALLED WHEN THE MENU GETS A BUTTON HIT.               *
    2593                    *          A1 HAS THE BIT OF THE BUTTON.                                 *
    2594                    *                                                                        *
    2595                    *          WE PAINT THE MENU SQUARE TO FEEDBACK THE HIT.                 *
    2596                    *                                                                        *
    2597                    *          THEN WE HANG ON THE BUTTON UNTIL ITS LET GO.                  *
    2598                    *                                                                        *
    2599                    **************************************************************************
    2600 0000b550           BUTTON_STALL
    2601 0000b550     0782           MOVE    A2,@LAST_BUT,L       ;PUSH THE BUTTON STATE
         0000b560 00000040- 
    2602                    
    2603 0000b580     05a0           MOVE    @SCODE,A0,W          ;NO CASH FOR REPEAT SOUND CODES
TMS340 COFF Macro Assembler Version 6.10     Wed Apr 21 11:41:33 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   59

         0000b590 00000060- 
    2604 0000b5b0     05a1           MOVE    @DCODE,A1,W
         0000b5c0 00000070- 
    2605 0000b5e0     5401           OR      A0,A1
    2606 0000b5f0     cb2e           JRNZ    DONT_WAIT            ;ITS A SOUND REPEAT....DON'T HOLD EITHER!
    2607                    
    2608 0000b600     09c4           movi    S_FULL_GAME,a4                 ;MAKE THE SELECT SOUND
         0000b610     010e  
    2609 0000b620     0d5f           calla   do_sound
         0000b630 00000000! 
    2610                    
    2611 0000b650     b5a0           MOVE    *A13(MEN_CUR),A0,W   ;GET CURRENT SELECTION
         0000b660     0210  
    2612 0000b670     09c1           MOVI    COLOR_YELLOW,A1
         0000b680     0505  
    2613 0000b690     0d3f           CALLR   MENU_BAR             ;CHANGE THE BAR COLOR.
         0000b6a0     0091  
    2614                    
    2615 0000b6b0     0d3f           CALLR   GET_MENU_DATA             ;GET OUR TEXT POINTER BACK
         0000b6c0     0136  
    2616 0000b6d0     09c1           MOVI    COLOR_WHITE,A1            ;WHITE ON ORANGE DURING HOT MOMENT
         0000b6e0     0202  
    2617 0000b6f0                    JSRP    MENU_TEXT                 ;AND WRITE INVERTED TEXT
    2618                    
    2619 0000b760     07a8           MOVE    @LAST_BUT,A8,L            ;GET BUTTON BACK
         0000b770 00000040- 
    2620 0000b790     09c9           MOVI    08H,A9                    ;MINIMUM TIME FOR BUTTON HIGHLITE
         0000b7a0     0008  
    2621                    
    2622 0000b7b0     09ca           MOVI    2AH,A10              ;.5 SECONDS OF ADVANCE HOLD-DOWN
         0000b7c0     002a  
    2623                    *                                     ;WILL EXIT TEST MODE.
    2624 0000b7d0           WAIT_FOR_RELEASE
    2625                    ;         CMPI    ADV_HIGH,A8               ;IS IT ADVANCE BUTTON?
    2626                    ;         JRNZ    NOT_ADV                   ;NOPE.....NEVER MIND
    2627                    
    2628                    ;         DEC     A10                  ;1 LESS TIME UNIT
    2629                    ;         JRZ     DIAG_EX            ;IF HE HOLDS ADVANCE...WE'RE GONE!
    2630                    
    2631 0000b7d0           NOT_ADV  SLEEP   1
    2632                    
    2633 0000b810     4d29           MOVE    A9,A9                ;REDUCE FOR HELD TIME
    2634 0000b820     ca01           JRZ     WAIT_1               ;ZEROED OUT ALREADY.
    2635 0000b830     1429           DEC     A9
    2636                    
    2637 0000b840           WAIT_1
    2638 0000b840     0d3f           CALLR   FORM_SWS        ;WAIT FOR THIS ONE TO GO TO ZERO
         0000b850     0114  
    2639 0000b860     5100           AND     A8,A0                ;IS OUR BUTTON STILL DOWN?
    2640 0000b870     cbf5           JRNZ    WAIT_FOR_RELEASE
    2641                    *
    2642                    *        ITS RELEASED...NOW SHOW ORANGE BAR FOR MINIMUM TIME
    2643                    
    2644 0000b880     1029           INC     A9                   ;MAKE SURE A9 HAS 1 OR MORE
    2645 0000b890           WAIT_2
TMS340 COFF Macro Assembler Version 6.10     Wed Apr 21 11:41:33 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   60

    2646 0000b890                    SLEEP   1
    2647 0000b8d0     3ca9           DSJS    A9,WAIT_2
    2648                    
    2649 0000b8e0           DONT_WAIT
    2650 0000b8e0     b5a0           MOVE    *A13(MEN_CUR),A0,W   ;GET CURRENT SELECTION
         0000b8f0     0210  
    2651 0000b900     5621           CLR     A1                   ;ERASE BAR
    2652 0000b910     0d3f           CALLR   MENU_BAR             ;CHANGE THE BAR COLOR.
         0000b920     0069  
    2653                    
    2654 0000b930     0d3f           CALLR   GET_MENU_DATA             ;GET OUR TEXT POINTER BACK
         0000b940     010e  
    2655 0000b950     b5a1           MOVE    *A13(MEN_COLR),A1,W       ;RE-PLOT THE NORMAL TEXT
         0000b960     0180  
    2656 0000b970                    JSRP    MENU_TEXT
    2657                    
    2658 0000b9e0                    SLEEP   2                    ;NOW GIVE SOME BOUNCE PROTECTION.
    2659                    
    2660 0000ba20                    RETP
    2661                    
    2662                    **************************************************************************
    2663                    *                                                                        *
    2664                    *          STUFF_MENU_PROCESS                                            *
    2665                    *                                                                        *
    2666                    *          THIS IS CALLED TO STUFF THE MENU ROM DATA INTO THE            *
    2667                    *          CURRENT PROCESSES PDATA AREA.                                 *
    2668                    *                                                                        *
    2669                    **************************************************************************
    2670 0000ba50           STUFF_MENU_PROCESS
    2671 0000ba50     098f           MMTM    SP,A0,A1,A2,A3,A8
         0000ba60     f080  
    2672 0000ba70     4da0           MOVE    A13,A0               ;POINT IN PROCESS AREA
    2673 0000ba80     0b00           ADDI    MEN_ROM,A0           ;THIS IS WHERE 1ST TIDBIT GOES
         0000ba90     0130  
    2674 0000baa0     9300           MOVE    A8,*A0+,L            ;STORE OUR BASE POINTER IN STRUCTURE
    2675 0000bab0     0b08           ADDI    MR_WORDS,A8          ;MOVE TO WORD LIST
         0000bac0     0070  
    2676                    
    2677 0000bad0     09c2           MOVI    WORD_ENTS,A2         ;NOW THIS MANY MORE WORDS.
         0000bae0     0009  
    2678                    
    2679 0000baf0     9501  GMS1     MOVE    *A8+,A1,W
    2680 0000bb00     9020           MOVE    A1,*A0+,W
    2681 0000bb10     3c62           DSJS    A2,GMS1
    2682                    *
    2683                    *        ALL THE MENU PARAMETERS ARE NOW IN THE PDATA AREA.
    2684                    *        A8 POINTS AT THE FIRST ITEM TO DISPLAY.
    2685                    *
    2686 0000bb20     b30d           MOVE    A8,*A13(MEN_TPTR),L  ;STORE IN PROCESS AREA.
         0000bb30     01e0  
    2687                    *
    2688                    *        NOW WE WANT TO FIND THE NUMBER OF ENTRIES IN THE MENU
    2689                    *
    2690 0000bb40     5600           CLR     A0                        ;START AT #1.
    2691 0000bb50           HOW_MANY
TMS340 COFF Macro Assembler Version 6.10     Wed Apr 21 11:41:33 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   61

    2692 0000bb50     1020           INC     A0                        ;MOVE TO NEXT ENTRY.
    2693 0000bb60     0d3f           CALLR   GET_MENU_DATA             ;GET THE PARAMETERS FOR THIS ENTRY
         0000bb70     00eb  
    2694 0000bb80     4c42           MOVE    A2,A2                     ;AND SEE IF A2=0
    2695 0000bb90     cbfb           JRNZ    HOW_MANY                  ;ITS REAL.....PUT IT UP.
    2696                    
    2697 0000bba0     1420           DEC     A0                        ;PREVIOUS LINE WAS THE LAST.
    2698 0000bbb0     b00d           MOVE    A0,*A13(MEN_ENTS),W       ;STUFF NUMBER IN MENU.
         0000bbc0     0200  
    2699                    
    2700 0000bbd0     4d29           MOVE    A9,A9                     ;DID BOZO PASS ZERO AS CURRENT?
    2701 0000bbe0     ca03           JRZ     USE_LAST
    2702 0000bbf0     4809           CMP     A0,A9                     ;MAKE SURE ITS NOT TOO HIGH
    2703 0000bc00     c301           JRHI    USE_LAST                  ;A9 IS TOO HIGH
    2704 0000bc10     4d20           MOVE    A9,A0                     ;USE THE ONE PAST
    2705                    
    2706 0000bc20     b00d  USE_LAST MOVE    A0,*A13(MEN_CUR),W   ;MAKE ENTRY "1" CURRENT.
         0000bc30     0210  
    2707                    
    2708 0000bc40     09af          MMFM    SP,A0,A1,A2,A3,A8
         0000bc50     010f  
    2709 0000bc60     0960          RETS
    2710                    
    2711                    **************************************************************************
    2712                    *                                                                        *
    2713                    *          DO_MENU_LINE                                                  *
    2714                    *                                                                        *
    2715                    *          A0 HAS THE LINE TO DO. (1 THROUGH N).                         *
    2716                    *          PRINT TEXT NORMAL IF NOT "MEN_CUR".                           *
    2717                    *          PRINT INVERT BAR FOLLOWED BY BLACK TEXT IF                    *
    2718                    *          ITS THE CURRENT ENTRY.                                        *
    2719                    *                                                                        *
    2720                    **************************************************************************
    2721 0000bc70           DO_MENU_LINE
    2722 0000bc70     0d3f           CALLR   GET_MENU_DATA             ;GET "CURRENT" IN A1
         0000bc80     00da  
    2723 0000bc90     4801           CMP     A0,A1                     ;IS IT "CURRENT" ENTRY?
    2724 0000bca0     ca0c           JRZ     DO_CURRENT_ENT            ;YEP....DO INVERSE STUFF
    2725                    *
    2726                    *        A0 HAS OFFSET (FOR POSITIONING)
    2727                    *        A2 HAS TEXT POINTER (FOR MESSAGE)
    2728                    *        A1 NEEDS COLOR FOR MESSAGE.
    2729                    *
    2730 0000bcb0     b5a1           MOVE    *A13(MEN_COLR),A1,W       ;USE THE NORMAL ENTRY COLOR
         0000bcc0     0180  
    2731 0000bcd0                    JSRP    MENU_TEXT                 ;PUT UP THE "TEXT" PORTION.
    2732 0000bd40                    RETP                              ;AND RETURN
    2733                    
    2734 0000bd70           DO_CURRENT_ENT
    2735 0000bd70     09c1           MOVI    COLOR_WHITE,A1            ;DO THE BAR IN WHITE (AT A0 HEIGHT)
         0000bd80     0202  
    2736 0000bd90     0d3f           CALLR   MENU_BAR                  ;PUT IT UP (A0 PRESERVED)
         0000bda0     0021  
    2737                    
    2738 0000bdb0     0d3f           CALLR   GET_MENU_DATA             ;GET OUR TEXT POINTER BACK
TMS340 COFF Macro Assembler Version 6.10     Wed Apr 21 11:41:33 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   62

         0000bdc0     00c6  
    2739 0000bdd0     b5a1           MOVE    *A13(MEN_SCOL),A1,W       ;GET "SELECTED" COLOR
         0000bde0     01d0  
    2740 0000bdf0                    JSRP    MENU_TEXT                 ;AND WRITE INVERTED TEXT
    2741 0000be60                    RETP                              ;THAT'S ALL FOLKS.
    2742                    
    2743                    **************************************************************************
    2744                    *                                                                        *
    2745                    *          UN_SELECT                                                     *
    2746                    *                                                                        *
    2747                    *          THIS IS CALLED TO "UN-SELECT" THE CURRENT ENTRY.              *
    2748                    *                                                                        *
    2749                    **************************************************************************
    2750 0000be90           UN_SELECT
    2751 0000be90     b5a0           MOVE    *A13(MEN_CUR),A0,W        ;POINT AT CURRENT ENTRY
         0000bea0     0210  
    2752 0000beb0     5621           CLR     A1                        ;USE BLACK FOR BACKGROUND
    2753 0000bec0     0d3f           CALLR   MENU_BAR                  ;THIS REMOVES THE BAR.
         0000bed0     000e  
    2754                    
    2755 0000bee0     0d3f           CALLR   GET_MENU_DATA             ;NOW GET A2 TO TEXT POINTER
         0000bef0     00b3  
    2756 0000bf00     b5a1           MOVE    *A13(MEN_COLR),A1,W       ;USE THE NORMAL ENTRY COLOR
         0000bf10     0180  
    2757 0000bf20                    JSRP    MENU_TEXT                 ;PUT UP THE "TEXT" PORTION.
    2758 0000bf90                    RETP                              ;AND RETURN
    2759                    
    2760                    **************************************************************************
    2761                    *                                                                        *
    2762                    *          MENU_BAR                                                      *
    2763                    *                                                                        *
    2764                    *          THIS IS CALLED TO PUT UP THE SELECTION BAR FOR                *
    2765                    *          THE ENTRY IN A0, IN THE COLOR IN A1.                          *
    2766                    *                                                                        *
    2767                    *          THIS ROUTINE MUST PRESERVE A0.                                *
    2768                    *                                                                        *
    2769                    **************************************************************************
    2770                    * STRNGLEN - RETURNS THE LENGTH, IN PIXELS, OF A GIVEN STRING            *
    2771                    * A8 = PTR TO STRING                                                     *
    2772                    * A10 = [Y,X] SPACING OF STRING                                          *
    2773                    * A11 = PTR TO FONT TABLE                                                *
    2774                    * RETURNS:                                                               *
    2775                    * A7 = LENGTH OF STRING                                                  *
    2776                    * Z BIT SET IF LENGTH IS ZERO                                            *
    2777                    *
    2778                    *        FOR FILLAREA
    2779                    *
    2780                    * A1 = <COLOR><PALETTE>
    2781                    * A3 = DAG OF AREA [YPOS,XPOS]
    2782                    * A4 = [Y,X] SIZE OF AREA
    2783                    *
    2784 0000bfc0     098f  MENU_BAR MMTM    SP,A0,A1,A3,A4,A5,A6,A7,A8    ;SAVE THE OFFSET
         0000bfd0     df80  
    2785 0000bfe0     098f           MMTM    SP,A1                     ;SAVE COLOR!
         0000bff0     4000  
TMS340 COFF Macro Assembler Version 6.10     Wed Apr 21 11:41:33 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   63

    2786 0000c000     0d3f           CALLR   GET_MENU_DATA             ;GET THE TEXT POINTER
         0000c010     00a1  
    2787 0000c020     0d3f           CALLR   STLEN_SETUP               ;SETUP FOR STRLEN CALL.
         0000c030     0040  
    2788 0000c040     0d5f           CALLA   STRNGLEN                  ;FIND WIDTH OF STRING.
         0000c050 00000000! 
    2789                    *
    2790                    *        A7 HAS LENGTH OF STRING.
    2791                    *
    2792                    *        WE NEED TO GET INTO A3 THE COORDINATES UF UPPER LEFT
    2793                    *        AND A4 THE LENGTH.
    2794                    *
    2795                    *        IF WE'RE CENTERING, WE USE THE BAR WIDTH PARAMETER
    2796                    *        ALONG THE CENTER LINE.
    2797                    *
    2798                    *        IF WE'RE LEFT JUSTIFIED, WE'LL LET THE BOX GO THE
    2799                    *        LENGTH OF THE TEXT FOR NOW.
    2800                    *
    2801 0000c070     b5a3           MOVE    *A13(MEN_ULX),A3,W        ;LEFT X IN A3
         0000c080     0150  
    2802                    *
    2803                    *        IF WE'RE CENTERING....WE NEED TO MOVE THE "LEFT X" BACK HALF
    2804                    *        THE WIDTH OF THE STRING.
    2805                    *
    2806 0000c090     b7a6           MOVE    *A13(MEN_ROM),A6,L        ;GET ROM POINTER
         0000c0a0     0130  
    2807 0000c0b0     b6c6           MOVE    *A6(MR_TCAL),A6,L         ;CHECK ROUTINE
         0000c0c0     0020  
    2808 0000c0d0     0b66           CMPI    STRCNRM,A6
         0000c0e0 ffffffff! 
    2809 0000c100     cb06           JRNZ    NOT_CENTERING
    2810                    *
    2811                    *        WE'RE CENTERING....CENTER X IS IN A3
    2812                    *
    2813 0000c110     b5a7           MOVE    *A13(MEN_BWID),A7,W       ;A7 IS THE REGISTER FOR BAR WIDTH
         0000c120     01c0  
    2814 0000c130     4ce4           MOVE    A7,A4                     ;GET COPY IN A4
    2815 0000c140     2fe4           SRL     1,A4                      ;1/2 OF WIDTH COMES OFF OF CENTER
    2816 0000c150     4483           SUB     A4,A3                     ;A3 NOW HAS "LEFT X"
    2817 0000c160     c005           JRUC    CENTERING                 ;A7 IS WIDTH...A3 IS X
    2818                    
    2819                    *
    2820                    *        LEFT JUSTIFIED....DO IT THE OLD WAY!
    2821                    *
    2822 0000c170           NOT_CENTERING
    2823 0000c170     b5a4           MOVE    *A13(MEN_BDX),A4,W        ;GET EXTRA X UNITS FOR BAR
         0000c180     01b0  
    2824 0000c190     4483           SUB     A4,A3
    2825                    
    2826                    *        NOW ADD TWICE THE EXTRA X TO THE STRING LENGTH TO
    2827                    *        FORM THE BAR LENGTH.
    2828                    *
    2829 0000c1a0     2424           SLL     1,A4                      ;NOW DOUBLE THE EXCESS DX FOR BAR
    2830 0000c1b0     4087           ADD     A4,A7                     ;NOW A7 HAS WIDTH OF BAR
    2831                    
TMS340 COFF Macro Assembler Version 6.10     Wed Apr 21 11:41:33 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   64

    2832 0000c1c0           CENTERING
    2833 0000c1c0     0be3           SUBI    C_KLUDGE,A3          ;KLUDGE TO NULLIFY FINAL SPACE.
         0000c1d0     fffe  
    2834                    
    2835 0000c1e0     0d3f           CALLR   GET_ENTRY_Y               ;GET Y FOR ENTRY IN A5
         0000c1f0     0118  
    2836                    
    2837 0000c200     b5a6           MOVE    *A13(MEN_BDY),A6,W        ;GET BAR DY (NEGATIVE)
         0000c210     01a0  
    2838 0000c220     40c5           ADD     A6,A5                     ;ADJUST Y BY BAR DY
    2839 0000c230     2605           SLL     16,A5                     ;SHIFT Y INTO POSITION
    2840                    
    2841 0000c240     40a3           ADD     A5,A3                     ;A3 NOW POINTS AT UPPER LEFT
    2842                    
    2843 0000c250     b5a4           MOVE    *A13(MEN_BAR),A4,W        ;Y HEIGHT OF BAR
         0000c260     0190  
    2844 0000c270     2604           SLL     16,A4                     ;IN POSITION
    2845 0000c280     40e4           ADD     A7,A4                     ;A7 HAS X WIDTH OF BAR.
    2846                    
    2847 0000c290     09af           MMFM    SP,A1                     ;NOW GET COLOR BACK!
         0000c2a0     0002  
    2848 0000c2b0     2601           SLL     16,A1                     ;SHIFT COLOR TO HIGH HALF (PAL. 0)
    2849 0000c2c0     0d5f           CALLA   FILLAREA                  ;FILL IT UP!
         0000c2d0 00000000! 
    2850                    
    2851 0000c2f0     09af          MMFM    SP,A0,A1,A3,A4,A5,A6,A7,A8    ;SAVE THE OFFSET
         0000c300     01fb  
    2852 0000c310     0960          RETS
    2853                    
    2854                    **************************************************************************
    2855                    *                                                                        *
    2856                    *          MENU_TEXT                                                     *
    2857                    *                                                                        *
    2858                    *          THIS IS CALLED TO DISPLAY THE TEXT FOR AN ENTRY.              *
    2859                    *                                                                        *
    2860                    *          A0 HAS OFFSET (FOR POSITIONING)                               *
    2861                    *          A1 HAS COLOR FOR MESSAGE.                                     *
    2862                    *          A2 HAS TEXT POINTER (FOR MESSAGE)                             *
    2863                    *                                                                        *
    2864                    *          WE NEED TO SHIFT THE DATA FOR THE TEXT ROUTINE                *
    2865                    *          AS FOLLOWS:                                                   *
    2866                    *                                                                        *
    2867                    *          A0 = SLEEP                                                    *
    2868                    *          A5 = COLOR                                                    *
    2869                    *          A8 = POINTER                                                  *
    2870                    *          A9 = ADDRESS                                                  *
    2871                    *          A10 = SPACING                                                 *
    2872                    *          A11 = FONT                                                    *
    2873                    *                                                                        *
    2874                    **************************************************************************
    2875 0000c320           MENU_TEXT
    2876 0000c320     0d3f           CALLR   GET_ENTRY_Y               ;GET Y FOR ENTRY IN A5
         0000c330     0104  
    2877 0000c340     2605           SLL     16,A5                     ;SHIFT Y INTO POSITION
    2878 0000c350     b5a9           MOVE    *A13(MEN_ULX),A9,W        ;GET THE X
TMS340 COFF Macro Assembler Version 6.10     Wed Apr 21 11:41:33 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   65

         0000c360     0150  
    2879 0000c370     40a9           ADD     A5,A9                     ;A9 SET WITH SCREEN ADDRESS
    2880                    
    2881                    ;         MOVE    A1,A6                     ;COLOR -- THIS IS NARC STYLE
    2882 0000c380     4c25          MOVE    A1,A5                   ; FIX FOR PASSING COLORS -- JKM
    2883 0000c390     2605          SLL     16,A5
    2884 0000c3a0     5600           CLR     A0                        ;NO SLEEP
    2885                    
    2886 0000c3b0     0d3f           CALLR   STLEN_SETUP
         0000c3c0     0007  
    2887                    
    2888 0000c3d0     b7a1           MOVE    *A13(MEN_ROM),A1,L
         0000c3e0     0130  
    2889 0000c3f0     b621           MOVE    *A1(MR_TCAL),A1,L         ;GET THE ROUTINE TO USE
         0000c400     0020  
    2890                    ;         JUMP    A1                        ;AND CALL IT!
    2891 0000c410     c080          JAUC    PRINTF
         0000c420 00000000! 
    2892                    
    2893 0000c440           STLEN_SETUP
    2894 0000c440     4c48           MOVE    A2,A8                     ;TEXT POINTER
    2895 0000c450     09ca           MOVI    SPACING20,A10             ;SPACING
         0000c460     0002  
    2896 0000c470     b7ab           MOVE    *A13(MEN_ROM),A11,L
         0000c480     0130  
    2897 0000c490     b76b           MOVE    *A11(MR_FONT),A11,L       ;LOAD FONT
         0000c4a0     0000  
    2898 0000c4b0     0960           RETS
    2899                    
    2900                    **************************************************************************
    2901                    *                                                                        *
    2902                    *          MENU JOYSTICK HANDLING                                        *
    2903                    *                                                                        *
    2904                    **************************************************************************
    2905                    
    2906                    **************************************************************************
    2907                    *                                                                        *
    2908                    *       ST_STICK                                                         *
    2909                    *                                                                        *
    2910                    *       INITIALIZE THE STUCK STICK STUFF                                 *
    2911                    *                                                                        *
    2912                    *       ENTRY                                                            *
    2913                    *               NOTHING                                                  *
    2914                    *                                                                        *
    2915                    *       EXIT                                                             *
    2916                    *               NOTHING                                                  *
    2917                    *                                                                        *
    2918                    **************************************************************************
    2919 0000c4c0           ST_STICK
    2920 0000c4c0                   PUSH    a2
    2921 0000c4d0     07a2          MOVE    @SWITCH,A2,L
         0000c4e0 01860000  
    2922 0000c500     03e2          not     a2
    2923 0000c510     05a0          move    @COINS,a0
         0000c520 01860030  
TMS340 COFF Macro Assembler Version 6.10     Wed Apr 21 11:41:33 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   66

    2924 0000c540     03e0          not     a0
    2925 0000c550     0b80          andi    1840h,a0
         0000c560 ffffe7bf  
    2926 0000c580     2fc0          srl     2,a0
    2927 0000c590     5402          or      a0,a2
    2928 0000c5a0     2f00          srl     8,a0                   ; shift vol up (bit 12) into bit 8
    2929 0000c5b0     24c0          sll     6,a0                   ; shift vol up (bit 12) into bit 8
    2930 0000c5c0     5440          or      a2,a0
    2931 0000c5d0     03e0          not     a0
    2932 0000c5e0     b20d          move    a0,*a13(MEN_STIK),L     ; bits to ignore part 1
         0000c5f0     0230  
    2933 0000c600                   PULLQ   a2
    2934 0000c610                   RETP
    2935                    
    2936                    **************************************************************************
    2937                    *                                                                        *
    2938                    *       GETSTICK                                                         *
    2939                    *                                                                        *
    2940                    *       CHECKS OUT ALL THE STICKS ON THE BOARD AND RETURNS SOME          *
    2941                    *       USEFUL INFO ABOUT THEM                                           *
    2942                    *                                                                        *
    2943                    *       ENTRY                                                            *
    2944                    *               NOTHING                                                  *
    2945                    *                                                                        *
    2946                    *       EXIT                                                             *
    2947                    *               A0      STICK/BUTTON CONDITION                           *
    2948                    *                       0 = NOTHING                                      *
    2949                    *                       1 = STICK UP                                     *
    2950                    *                       2 = STICK DOWN                                   *
    2951                    *                       3 = BUTTON DOWN                                  *
    2952                    *                                                                        *
    2953                    **************************************************************************
    2954                    
    2955 0000c640           GETSTICK:
    2956                    ;
    2957                    ;
    2958 0000c640     098f          MMTM    SP,A3,A4
         0000c650     1800  
    2959                    ;
    2960                    ;       THIS ALSO TAKES CARE OF STUCK SWITCHES
    2961                    ;
    2962 0000c660     07a2          move    @SWITCH,a2,L
         0000c670 01860000  
    2963 0000c690     03e2          not     a2
    2964                    ; This allows vol+/vol-/test to work menus
    2965 0000c6a0     05a0          move    @COINS,a0
         0000c6b0 01860030  
    2966 0000c6d0     03e0          not     a0
    2967 0000c6e0     0b80          andi    1840h,a0
         0000c6f0 ffffe7bf  
    2968 0000c710     2fc0          srl     2,a0
    2969 0000c720     5402          or      a0,a2
    2970 0000c730     2f00          srl     8,a0             ; shift vol up (bit 12) into bit 8
    2971 0000c740     24c0          sll     6,a0             ; shift vol up (bit 12) into bit 8
    2972 0000c750     5402          or      a0,a2
TMS340 COFF Macro Assembler Version 6.10     Wed Apr 21 11:41:33 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   67

    2973                    
    2974 0000c760     b7a0          MOVE    *A13(MEN_STIK),A0,L
         0000c770     0230  
    2975 0000c780     03e0          not     a0
    2976 0000c790     5040          and     A2,A0
    2977 0000c7a0     03e0          not     a0
    2978 0000c7b0     b20d          MOVE    A0,*A13(MEN_STIK),L
         0000c7c0     0230  
    2979 0000c7d0     5002          and     a0,a2                   ; ignore some bits
    2980                    ;
    2981                    ;       SCAN FOR BUTTONS
    2982                    ;
    2983                    
    2984 0000c7e0     4c4e          MOVE    A2,A14                  ;CHECK ALL BUTTONS
    2985 0000c7f0     0b8e          ANDI    070707070H,A14
         0000c800 8f8f8f8f  
    2986 0000c820     cb10          JRNZ    GSGOTBUTS               ;BR = BUTTONS
    2987                    
    2988                    *
    2989                    *       SCAN FOR UP/DOWN
    2990                    *
    2991 0000c830           GSCKSTK
    2992 0000c830     4c4e          MOVE    A2,A14
    2993 0000c840     0b8e          ANDI    01010101H,A14
         0000c850 fefefefe  
    2994 0000c870     cb07          JRNZ    GSGOTUP                 ;BR = GO UP
    2995                    
    2996 0000c880     4c4e          MOVE    A2,A14
    2997 0000c890     0b8e          ANDI    02020202H,A14
         0000c8a0 fdfdfdfd  
    2998 0000c8c0     cb04          JRNZ    GSGOTDOWN               ;BR = GO DOWN
    2999                    
    3000 0000c8d0           GSAINTGOT
    3001 0000c8d0     5600          CLR     A0
    3002 0000c8e0     c005          JRUC    GSRET
    3003                    
    3004 0000c8f0           GSGOTUP
    3005 0000c8f0     1820          MOVK    1,A0
    3006 0000c900     c003          JRUC    GSRET
    3007                    
    3008 0000c910           GSGOTDOWN
    3009 0000c910     1840          MOVK    2,A0
    3010 0000c920     c001          JRUC    GSRET
    3011                    
    3012 0000c930           GSGOTBUTS
    3013 0000c930     1860          MOVK    3,A0
    3014                    
    3015 0000c940           GSRET
    3016 0000c940     4c00          MOVE    A0,A0                   ; SET THE FLAGS
    3017 0000c950     09af          MMFM    SP,A3,A4
         0000c960     0018  
    3018 0000c970                   RETP
    3019                    
    3020                    **************************************************************************
    3021                    *                                                                        *
TMS340 COFF Macro Assembler Version 6.10     Wed Apr 21 11:41:33 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   68

    3022                    *          FORM_SWS                                                      *
    3023                    *                                                                        *
    3024                    *          GET THE SWITCHES....1=CLOSED.....AND SAVE                     *
    3025                    *          THIS SCAN AS "LAST STATE".  RETURN:                           *
    3026                    *                                                                        *
    3027                    *          CURRENT STATE IN A0                                           *
    3028                    *          PREVIOUS STATE IN A1                                          *
    3029                    *                                                                        *
    3030                    **************************************************************************
    3031 0000c9a0           FORM_SWS
    3032 0000c9a0     b7a1          MOVE    *A13(MEN_STIK),A1,L     ;RETURN PREVIOUS STATE
         0000c9b0     0230  
    3033 0000c9c0     07a0          move    @SWITCH,a0,L
         0000c9d0 01860000  
    3034 0000c9f0     03e0          NOT     A0                      ;COMPLEMENT
    3035 0000ca00     b20d          MOVE    A0,*A13(MEN_STIK),L     ;SAVE "STUCK" STATE.
         0000ca10     0230  
    3036 0000ca20     0960          RETS
    3037                    
    3038                    **************************************************************************
    3039                    *                                                                        *
    3040                    *          GET_MENU_DATA                                                 *
    3041                    *                                                                        *
    3042                    *          A0 IS OFFSET OF ENTRY OF INTEREST                             *
    3043                    *                                                                        *
    3044                    *          RETURN  A1 = CURRENT OFFSET                                   *
    3045                    *                  A2 = TEXT POINTER                                     *
    3046                    *                  A3 = ROUTINE                                          *
    3047                    *                                                                        *
    3048                    **************************************************************************
    3049 0000ca30           GET_MENU_DATA
    3050 0000ca30     098f           MMTM    SP,A0                ;DON'T ALTER A0
         0000ca40     8000  
    3051                    
    3052 0000ca50     0d3f           CALLR   PM_ENTRY     ;POINT A1 AT ENTRY
         0000ca60     0009  
    3053                    
    3054 0000ca70     b622           MOVE    *A1(MENU_TEXT_PTR),A2,L   ;FETCH THE TEXT POINTER
         0000ca80     0000  
    3055 0000ca90     b623           MOVE    *A1(MENU_ROUTINE),A3,L    ;FETCH THE ROUTINE
         0000caa0     0020  
    3056 0000cab0     b5a1           MOVE    *A13(MEN_CUR),A1,W        ;RETURN CURRENT ENTRY IN A1
         0000cac0     0210  
    3057 0000cad0     09af          MMFM    SP,A0                ;DON'T ALTER A0
         0000cae0     0001  
    3058 0000caf0     0960          RETS
    3059                    
    3060                    **************************************************************************
    3061                    *                                                                        *
    3062                    *          PM_ENTRY                                                      *
    3063                    *                                                                        *
    3064                    *          A0 = MENU ENTRY OF INTEREST                                   *
    3065                    *          RETURN A1 -> POINTS AT <TEXT><ROUTINE><HELP> FOR THIS         *
    3066                    *          ENTRY.                                                        *
    3067                    *                                                                        *
TMS340 COFF Macro Assembler Version 6.10     Wed Apr 21 11:41:33 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   69

    3068                    **************************************************************************
    3069 0000cb00           PM_ENTRY
    3070 0000cb00     098f           MMTM    SP,A0
         0000cb10     8000  
    3071 0000cb20     1420           DEC     A0                   ;INDEX FROM ZERO
    3072 0000cb30     09c1           MOVI    MENU_ENTRY_SIZE,A1   ;TIMES SIZE PER ENTRY
         0000cb40     0060  
    3073 0000cb50     5e01           MPYU    A0,A1                ;A1 CONTAINS OFFSET INTO TABLE
    3074                    
    3075 0000cb60     b7a0           MOVE    *A13(MEN_TPTR),A0,L  ;GET THE BASE OF THE MENU TEXT ENTRIES
         0000cb70     01e0  
    3076 0000cb80     4001           ADD     A0,A1                ;ADD TO OFFSET
    3077 0000cb90     09af          MMFM    SP,A0
         0000cba0     0001  
    3078 0000cbb0     0960          RETS
    3079                    
    3080                    **************************************************************************
    3081                    *                                                                        *
    3082                    *          PLOT_HELP                                                     *
    3083                    *                                                                        *
    3084                    *          THIS ROUTINE PLOTS (OR CLEARS) THE HELP AREA                  *
    3085                    *          FOR THE CURRENT ENTRY.                                        *
    3086                    *                                                                        *
    3087                    **************************************************************************
    3088 0000cbc0           PLOT_HELP
    3089 0000cbc0     b5a0           MOVE    *A13(MEN_CUR),A0,W        ;GET CURRENT ENTRY
         0000cbd0     0210  
    3090 0000cbe0     0d3f           CALLR   PM_ENTRY          ;A1 POINTS AT GROUP
         0000cbf0     fff0  
    3091 0000cc00     b628           MOVE    *A1(MENU_HELP),A8,L       ;GET HELP TABLE
         0000cc10     0040  
    3092 0000cc20     0b48           CMPI    NO_HELP,A8                ;NOT A "HELP" SITUATION?
         0000cc30     fffe  
    3093 0000cc40     ca0d           JRZ     NO_HELP_FOR_THIS_ONE
    3094 0000cc50     0b48           CMPI    ADJ_HELP,A8               ;ADJUSTMENT HELP REQUESTED?
         0000cc60     fffd  
    3095 0000cc70     ca80           JAEQ    DO_ADJH                   ;THEN DO IT IN ADJ MODULE!
         0000cc80 00000000! 
    3096 0000cca0     0b48           CMPI    SND_HELP,A8               ;ARE WE IN SOUND TEST?
         0000ccb0     fffc  
    3097 0000ccc0     ca06           JREQ    DO_SHELP
    3098 0000ccd0     0b48           CMPI    SND_PLAY,A8
         0000cce0     fffb  
    3099 0000ccf0     ca17           JREQ    DO_SPLAY
    3100 0000cd00     0d3f           CALLR   DO_HELP_MENU
         0000cd10     0131  
    3101 0000cd20           NO_HELP_FOR_THIS_ONE
    3102 0000cd20     0960           RETS
    3103                    
    3104                    **************************************************************************
    3105                    *                                                                        *
    3106                    *          DO_SHELP                                                      *
    3107                    *                                                                        *
    3108                    *          THIS IS CALLED FOR EACH NON PLAYING ENTRY IN THE SOUND        *
    3109                    *          TABLE MENU.  IT CAUSES THE SOUND BOARD TO BE SHUT             *
TMS340 COFF Macro Assembler Version 6.10     Wed Apr 21 11:41:33 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   70

    3110                    *          UP AND THE BOTTOM LINE (WHERE TITLES APPEAR)                  *
    3111                    *          TO BE ERASED.                                                 *
    3112                    *                                                                        *
    3113                    **************************************************************************
    3114 0000cd30           DO_SHELP
    3115 0000cd30     05a0          MOVE    @SND_MADE,A0,W  ;DID SOMEONE MAKE A SOUND?
         0000cd40 00000020- 
    3116 0000cd60     ca0d          JRZ     DO_SH1          ;NOPE
    3117 0000cd70     5600          CLR     A0
    3118 0000cd80     0580          MOVE    A0,@SND_MADE,W  ;CLEAR THIS AND RESET THE BOARD!
         0000cd90 00000020- 
    3119 0000cdb0     0580          MOVE    A0,@SCODE,W
         0000cdc0 00000060- 
    3120 0000cde0     0580          MOVE    A0,@DCODE,W
         0000cdf0 00000070- 
    3121 0000ce10     0d5f          CALLA   QSNDRST         ;kill any sounds in progress
         0000ce20 00000000! 
    3122 0000ce40           DO_SH1
    3123 0000ce40     0d3f          CALLR   BLNKSNAM        ;BLANK OUT ANY WRITING!
         0000ce50     0049  
    3124 0000ce60     0960          RETS
    3125                    *
    3126                    *       A0 CONTAINS 3 FOR SYNTHESIZER...4 FOR DIGITIZER...
    3127                    *       IF CORRESPONDING "CODE" BYTE IS NON ZERO, THEN DISPLAY
    3128                    *       THE TEXTLINE THAT CORRESPONDS.  ELSE BLANK OUT THE
    3129                    *       AREA.
    3130                    *
    3131 0000ce70           DO_SPLAY
    3132 0000ce70     0d3f          CALLR   BLNKSNAM        ;BLANK OUT LAST MESSAGE
         0000ce80     0046  
    3133 0000ce90     0b40          CMPI    2,A0            ;SYNTHESIZER?
         0000cea0     fffd  
    3134 0000ceb0     ca02          JRZ     CK_SYNT         ;YEP.
    3135                    
    3136 0000cec0     5621          CLR     A1
    3137 0000ced0     c037          JRUC    DO_SPQX
    3138                    
    3139 0000cee0           CK_SYNT
    3140 0000cee0     05a1          MOVE    @DCODE,A1,W     ;HOLD INFO IF DIGITIZER WAS RUNNING
         0000cef0 00000070- 
    3141 0000cf10     5600          CLR     A0
    3142 0000cf20     0580          MOVE    A0,@DCODE,W     ;CLEAR OUT DIG CODE
         0000cf30 00000070- 
    3143 0000cf50     05a0          MOVE    @SCODE,A0       ;ANY CODE
         0000cf60 00000060- 
    3144 0000cf80     ca2c          JRZ     DO_SPQX         ;NOTHING HERE.
    3145                    
    3146 0000cf90     09e1          MOVI    STABLE,A1       ;BASE OF POINTER TABLE FOR DIGITIZER
         0000cfa0 000101e0' 
    3147 0000cfc0           DO_SP1
    3148 0000cfc0     0d3f          CALLR   MEN_NUMS        ;A4 = LEFT X  A5 = RIGHT X
         0000cfd0     fd3e  
    3149 0000cfe0     0b24          ADDI    10000H*SND_MESS_Y,A4               ;UPPER LEFT Y
         0000cff0 00be0000  
    3150 0000d010     0b25          ADDI    10000H*(SND_MESS_Y+SND_BOX_H),A5   ;UPPER LEFT X
TMS340 COFF Macro Assembler Version 6.10     Wed Apr 21 11:41:33 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   71

         0000d020 00f70000  
    3151 0000d040     09c9          MOVI    COLOR_WHITE,A9
         0000d050     0202  
    3152 0000d060     0d3f          CALLR   STD_BORD        ;TACO BELL HAS YOUR ORDER, MAKE A RU-UUUN......
         0000d070     00f0  
    3153                    
    3154 0000d080     1420          DEC     A0              ;INDEX FROM 1.
    3155 0000d090     24a0          SLL     5,A0
    3156 0000d0a0     4001          ADD     A0,A1
    3157 0000d0b0     8622          MOVE    *A1,A2,L        ;NOW WE HAVE THE MESSAGE
    3158                    
    3159 0000d0c0     09e8          MOVI    SND_INST,A8
         0000d0d0 0000fd70' 
    3160 0000d0f0                   JSRP    L_MESS          ;PUT INSTRUCTION OUT.
    3161                    
    3162 0000d160     09e8          MOVI    SND_SETUP,A8
         0000d170 00010120' 
    3163 0000d190     0d5f          CALLA   LM_SETUP
         0000d1a0 00000000! 
    3164                    
    3165 0000d1c0     4c48          MOVE    A2,A8
    3166 0000d1d0                   JSRP    PRINTF  ;DO THE DEED
    3167 0000d240     0960          RETS                    ;AND RETURN
    3168                    
    3169 0000d250           DO_SPQX
    3170 0000d250     4c21          MOVE    A1,A1           ;OUR SELECTION ISN'T RUNNING...WAS OTHER?
    3171 0000d260     ca07          JRZ     DO_SPX          ;NOPE
    3172 0000d270     0d5f          CALLA   QSNDRST         ;KILL SOUNDS IN PROGRESS
         0000d280 00000000! 
    3173 0000d2a0     5600          CLR     A0
    3174 0000d2b0     0580          MOVE    A0,@SND_MADE,W  ;NO RESET NECESSARY NOW
         0000d2c0 00000020- 
    3175 0000d2e0           DO_SPX
    3176 0000d2e0     0960          RETS
    3177                    
    3178                    **************************************************************************
    3179                    *                                                                        *
    3180                    *          BLNKSNAM                                                      *
    3181                    *                                                                        *
    3182                    *          CALLED TO BLANK OUT THE SOUND CODE NAME DURING                *
    3183                    *          SOUND TEST.                                                   *
    3184                    *                                                                        *
    3185                    **************************************************************************
    3186                    *
    3187                    *        A3 = POINTER
    3188                    *        A4 = SIZE
    3189                    *
    3190 0000d2f0           BLNKSNAM
    3191 0000d2f0     09e3           MOVI    (SND_MESS_Y*10000H)+20H,A3
         0000d300 00be0020  
    3192 0000d320     09e4           MOVI    (SND_BOX_H*10000H)+1E0H,A4
         0000d330 003901e0  
    3193 0000d350     c080           JAUC    BLNKAREA                  ;ITS BLANK!
         0000d360 00000000! 
    3194                    
TMS340 COFF Macro Assembler Version 6.10     Wed Apr 21 11:41:33 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   72

    3195                    **************************************************************************
    3196                    *                                                                        *
    3197                    *          GET_ENTRY_Y                                                   *
    3198                    *                                                                        *
    3199                    *          THIS RETURNS THE Y POSITIONS FOR THE ENTRY SPECIFIED          *
    3200                    *          IN A0.                                                        *
    3201                    *                                                                        *
    3202                    *          A5 = Y VALUE IN UNITS.                                        *
    3203                    *                                                                        *
    3204                    **************************************************************************
    3205 0000d380           GET_ENTRY_Y
    3206 0000d380     098f           MMTM    SP,A0,A1
         0000d390     c000  
    3207 0000d3a0     b5a5           MOVE    *A13(MEN_ULY),A5,W
         0000d3b0     0160  
    3208 0000d3c0     b5a1           MOVE    *A13(MEN_DY),A1,W
         0000d3d0     0170  
    3209 0000d3e0     1420           DEC     A0
    3210 0000d3f0     5e01           MPYU    A0,A1                ;A1 HAS OFFSET PER ENTRY
    3211 0000d400     4025           ADD     A1,A5
    3212 0000d410     09af          MMFM    SP,A0,A1
         0000d420     0003  
    3213 0000d430     0960          RETS
    3214                    
    3215                    **************************************************************************
    3216                    *                                                                        *
    3217                    *          MENU_BORDER                                                   *
    3218                    *                                                                        *
    3219                    *          THIS IS CALLED TO PUT A BORDER AROUND THE MENU.               *
    3220                    *                                                                        *
    3221                    *          A8 = MENU STRUCTURE                                           *
    3222                    *          A9 = 1st item to activate as current                          *
    3223                    *                                                                        *
    3224                    *          BORDER IS DONE IN MENU TEXT COLOR                             *
    3225                    *                                                                        *
    3226                    *          THIS ASSUMES MENU IS IN THE CENTERING FORMAT                  *
    3227                    *                                                                        *
    3228                    **************************************************************************
    3229                    *
    3230                    *        1ST WE NEED TO FIND UPPER LEFT.
    3231                    *
    3232                    *
    3233                    *        X = MENU_X - (BAR_WIDTH/2) - 2       (LESS BORDER WIDTH)
    3234                    *        Y = MENU_Y - BDY                     (LESS BORDER HEIGHT)
    3235                    *
    3236                    *        LOWER RIGHT :
    3237                    *
    3238                    *        X = MENU_X + (BAR_WIDTH/2) - 2       (PLUS BORDER WIDTH)
    3239                    *        Y = MENU_Y + (MENU_ENTRIES-1) * DY)) - BDY + BAR_HITE
    3240                    *
    3241                    *
    3242 0000d440           MENU_BORDER
    3243 0000d440     098f           MMTM    SP,A0,A1,A2,A3,A4,A5,A6,A7,A8,A9
         0000d450     ffc0  
    3244 0000d460     0d3f           CALLR   STUFF_MENU_PROCESS   ;MOVE DATA INTO PDATA AREA
TMS340 COFF Macro Assembler Version 6.10     Wed Apr 21 11:41:33 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   73

         0000d470     fe5d  
    3245                    *
    3246                    *        FIRST COMPUTE UPPER LEFT
    3247                    *
    3248 0000d480     0d3f           CALLR   MENU_UL_A4_A5             ;GET UPPER LEFT COORDINATES
         0000d490     0017  
    3249 0000d4a0     2605           SLL     16,A5
    3250 0000d4b0     40a4           ADD     A5,A4                     ;A4 POINTS TO UPPER LEFT.
    3251                    *
    3252                    *        FORM LOWER RIGHT
    3253                    *
    3254 0000d4c0     0d3f           CALLR   MENU_LR_A6_A5
         0000d4d0     0024  
    3255 0000d4e0     2605           SLL     16,A5                     ;SHIFT A5 DOWN
    3256 0000d4f0     40c5           ADD     A6,A5                     ;A5 POINTS AT LOWER RIGHT
    3257                    
    3258 0000d500     b5a9           MOVE    *A13(MEN_COLR),A9,W       ;GET MENU TEXT COLOR
         0000d510     0180  
    3259 0000d520     0d3f           CALLR   STD_BORD
         0000d530     00a4  
    3260                    
    3261 0000d540     09af          MMFM    SP,A0,A1,A2,A3,A4,A5,A6,A7,A8,A9
         0000d550     03ff  
    3262 0000d560     0960          RETS
    3263                    
    3264                    **************************************************************************
    3265                    *                                                                        *
    3266                    *          MCSETUP                                                       *
    3267                    *                                                                        *
    3268                    *          RETURN:                                                       *
    3269                    *                  A0 = CENTER OF MENU                                   *
    3270                    *                  A1 = 1/2 BAR WIDTH                                    *
    3271                    *                  A2 = Y FOR FIRST LINE OF TEXT OF MENU                 *
    3272                    *                  A3 = DELTA Y (NEGATIVE TO GET FROM TEXT TO BAR.       *
    3273                    *                                                                        *
    3274                    **************************************************************************
    3275 0000d570           MCSETUP
    3276 0000d570     b5a0           MOVE    *A13(MEN_ULX),A0,W        ;UPPER LEFT X (ACTUALLY CENTER)
         0000d580     0150  
    3277 0000d590     b5a1           MOVE    *A13(MEN_BWID),A1,W       ;BAR_WIDTH
         0000d5a0     01c0  
    3278 0000d5b0     2fe1           SRL     1,A1                      ;ALL CALCS USE BAR_WIDTH/2
    3279 0000d5c0     b5a2           MOVE    *A13(MEN_ULY),A2,W        ;UPPER LEFT Y
         0000d5d0     0160  
    3280 0000d5e0     b5a3           MOVE    *A13(MEN_BDY),A3,W        ;DELTA Y (NEGATIVE)
         0000d5f0     01a0  
    3281 0000d600     0960           RETS
    3282                    
    3283                    
    3284                    **************************************************************************
    3285                    *                                                                        *
    3286                    *          MENU_UL_A4_A5                                                 *
    3287                    *                                                                        *
    3288                    *          RETURN WINDOW UPPER LEFT CORNER                               *
    3289                    *                                                                        *
TMS340 COFF Macro Assembler Version 6.10     Wed Apr 21 11:41:33 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   74

    3290                    *          A4 = X                                                        *
    3291                    *          A5 = Y                                                        *
    3292                    *                                                                        *
    3293                    **************************************************************************
    3294 0000d610           MENU_UL_A4_A5
    3295 0000d610     098f           MMTM    SP,A0,A1,A2,A3
         0000d620     f000  
    3296 0000d630     0d3f           CALLR   MCSETUP                   ;STUFF THE REGGIES
         0000d640     fff2  
    3297 0000d650     4c04           MOVE    A0,A4                     ;FORM ULX
    3298 0000d660     4424           SUB     A1,A4
    3299 0000d670     0be4           SUBI    C_KLUDGE,A4          ;A4 HAS UPPER LEFT X
         0000d680     fffe  
    3300                    
    3301 0000d690     4c45           MOVE    A2,A5
    3302 0000d6a0     4065           ADD     A3,A5                     ;A5 HAS UPPER LEFT Y
    3303                    
    3304 0000d6b0     0be4           SUBI    MB_XWID+GAP,A4            ;NOW WE POINT AT UPPER LEFT FOR FRAME
         0000d6c0     fffa  
    3305 0000d6d0     0be5           SUBI    MB_YWID+GAP,A5
         0000d6e0     fffa  
    3306 0000d6f0     09af          MMFM    SP,A0,A1,A2,A3
         0000d700     000f  
    3307 0000d710     0960          RETS
    3308                    
    3309                    **************************************************************************
    3310                    *                                                                        *
    3311                    *          MENU_LR_A6_A5                                                 *
    3312                    *                                                                        *
    3313                    *          RETURN WINDOW LOWER RIGHT CORNER                              *
    3314                    *                                                                        *
    3315                    *          A6 = X                                                        *
    3316                    *          A5 = Y                                                        *
    3317                    *                                                                        *
    3318                    **************************************************************************
    3319 0000d720           MENU_LR_A6_A5
    3320 0000d720     098f           MMTM    SP,A0,A1,A2,A3
         0000d730     f000  
    3321 0000d740     0d3f           CALLR   MCSETUP                   ;STUFF THE REGGIES
         0000d750     ffe1  
    3322                    
    3323 0000d760     4c06           MOVE    A0,A6                     ;LOWER RIGHT X
    3324 0000d770     4026           ADD     A1,A6
    3325 0000d780     0be6           SUBI    C_KLUDGE,A6          ;THIS IS THE X
         0000d790     fffe  
    3326                    
    3327 0000d7a0     b5a0           MOVE    *A13(MEN_ENTS),A0,W       ;THIS IS LAST ENTRY
         0000d7b0     0200  
    3328 0000d7c0     0d3f           CALLR   GET_ENTRY_Y               ;A5 HAS THE Y FOR THE LAST ENTRY
         0000d7d0     ffba  
    3329 0000d7e0     4065           ADD     A3,A5                     ;A5 NOW HAS TOP OF LAST BOX
    3330 0000d7f0     b5a7           MOVE    *A13(MEN_BAR),A7,W        ;HEIGHT OF BAR
         0000d800     0190  
    3331 0000d810     40e5           ADD     A7,A5                     ;A5 NOW HAS LOWER RIGHT Y
    3332                    
TMS340 COFF Macro Assembler Version 6.10     Wed Apr 21 11:41:33 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   75

    3333 0000d820     0b05           ADDI    MB_YWID+GAP,A5
         0000d830     0005  
    3334 0000d840     0b06           ADDI    MB_XWID+GAP,A6            ;THIS IS END OF BORDER
         0000d850     0005  
    3335 0000d860     09af          MMFM    SP,A0,A1,A2,A3
         0000d870     000f  
    3336 0000d880     0960          RETS
    3337                    
    3338                    
    3339                    **************************************************************************
    3340                    *                                                                        *
    3341                    *          F_TITLE                                                       *
    3342                    *                                                                        *
    3343                    *          THIS IS CALLED TO FRAME A TITLE IN THE SAME WIDTH             *
    3344                    *          AS THE MAIN TITLE.                                            *
    3345                    *                                                                        *
    3346                    *          A0 = Y LEVEL OF 15 POINT TEXT                                 *
    3347                    *          A9 = COLOR                                                    *
    3348                    *                                                                        *
    3349                    **************************************************************************
    3350 0000d890     098f  F_TITLE  MMTM    SP,A4,A5,A0
         0000d8a0     8c00  
    3351 0000d8b0     4c04           MOVE    A0,A4           ;COPY Y
    3352                    ;         SUBI    12,A4
    3353 0000d8c0     0be4          SUBI    8,A4
         0000d8d0     fff7  
    3354 0000d8e0     2604           SLL     16,A4
    3355 0000d8f0     0b04           ADDI    TIT_ULX,A4      ;UPPER LEFT SET
         0000d900     0005  
    3356                    
    3357 0000d910     4c05           MOVE    A0,A5           ;LOWER RIGHT
    3358                    ;         ADDI    27,A5
    3359 0000d920     0b05          ADDI    23,A5
         0000d930     0017  
    3360 0000d940     2605           SLL     16,A5
    3361 0000d950     0b05           ADDI    TIT_LRX,A5      ;LOWER RIGHT SET
         0000d960     0185  
    3362                    
    3363 0000d970     0d3f           CALLR   STD_BORD       ;TACO BELL HAS YOUR ORDER, MAKE A RU-UUUN......
         0000d980     005f  
    3364 0000d990     09af          MMFM    SP,A4,A5,A0
         0000d9a0     0031  
    3365 0000d9b0     0960          RETS
    3366                    
    3367              e0e0  FIRST_BORDER_COLOR       EQU     0E0E0H
    3368              efef  LAST_BORDER_COLOR        EQU     0EFEFH
    3369                    **************************************************************************
    3370                    *                                                                        *
    3371                    *          G_BORDER                                                      *
    3372                    *                                                                        *
    3373                    *          THIS IS CALLED TO DO A "HSTD TABLE" TYPE CYCLING              *
    3374                    *          BORDER.  THIS ROUTINE GETS:                                   *
    3375                    *                                                                        *
    3376                    *          A4 = UPPER LEFT Y,X                                           *
    3377                    *          A5 = LOWER RIGHT Y,X                                          *
TMS340 COFF Macro Assembler Version 6.10     Wed Apr 21 11:41:33 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   76

    3378                    *          A6 = NUMBER OF SLICES GOING IN.                               *
    3379                    *                                                                        *
    3380                    **************************************************************************
    3381 0000d9c0     098f  G_BORDER MMTM    SP,A0,A1,A2,A3,A4,A5,A6
         0000d9d0     fe00  
    3382 0000d9e0     09e0           MOVI    10001H,A0                 ;1 BY 1 DIMENSION
         0000d9f0 00010001  
    3383                    
    3384 0000da10     09e9           MOVI    LAST_BORDER_COLOR,A9      ;USE LAST ONE 1ST
         0000da20 0000efef  
    3385 0000da40           NEXT_RING
    3386 0000da40     0d3f           CALLR   DOBORDER                  ;DO THIS RING
         0000da50     0012  
    3387                    
    3388 0000da60     09e1           MOVI    10001H,A1                  ;THIS IS 1 UNIT IN X AND Y
         0000da70 00010001  
    3389 0000da90     e024           ADDXY   A1,A4
    3390 0000daa0     e225           SUBXY   A1,A5
    3391                    
    3392 0000dab0     0be9           SUBI    101H,A9
         0000dac0     fefe  
    3393 0000dad0     0b69           CMPI    FIRST_BORDER_COLOR,A9
         0000dae0 ffff1f1f  
    3394 0000db00     c903           JRHS    COLOK
    3395 0000db10     09e9           MOVI    LAST_BORDER_COLOR,A9
         0000db20 0000efef  
    3396                    
    3397 0000db40     3e26  COLOK    DSJS    A6,NEXT_RING
    3398 0000db50     09af          MMFM    SP,A0,A1,A2,A3,A4,A5,A6
         0000db60     007f  
    3399 0000db70     0960          RETS
    3400                    
    3401                    **************************************************************************
    3402                    *                                                                        *
    3403                    *          DOBORDER                                                     *
    3404                    *                                                                        *
    3405                    *          THIS IS CALLED TO DRAW A BORDER FRAME.                        *
    3406                    *                                                                        *
    3407                    *          A4 = UPPER LEFT Y,X                                           *
    3408                    *          A5 = LOWER RIGHT Y,X                                          *
    3409                    *          A0 = Y,X WIDTH OF BORDER                                      *
    3410                    *          A9 = COLOR OF BORDER.                                         *
    3411                    *                                                                        *
    3412                    *          THIS ROUTINE *** CLEARS OUT ALL AREA INSIDE THE BORDER***     *
    3413                    *          AS A FUNCTION OF ITS OPERATION.                               *
    3414                    *                                                                        *
    3415                    *          THE BORDER IS DONE IN THE "FIXED" PALETTE                     *
    3416                    *                                                                        *
    3417                    *          IT IS ASSUMED THAT THE DISPLAY SYSTEM IS RUNNING!             *
    3418                    *                                                                        *
    3419                    **************************************************************************
    3420                    *
    3421                    * A1 = <COLOR><PALETTE>
    3422                    * A3 = DAG OF AREA [YPOS,XPOS]
    3423                    * A4 = [Y,X] SIZE OF AREA
TMS340 COFF Macro Assembler Version 6.10     Wed Apr 21 11:41:33 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   77

    3424                    *
    3425 0000db80           DOBORDER
    3426 0000db80     098f          MMTM    SP,A0,A1,A2,A3,A4,A5,A6,A7,A8,A9
         0000db90     ffc0  
    3427 0000dba0     4d21          MOVE    A9,A1                   ;GET COLOR
    3428 0000dbb0     2601          SLL     16,A1                   ;COLOR ON TOP..PALETTE 0
    3429                    *
    3430                    *       NOW WE NEED TO MAKE 4 BARS!
    3431                    *
    3432 0000dbc0     4c02          MOVE    A0,A2                   ;SEPARATE DELTA
    3433 0000dbd0     0b80          ANDI    SX_MASK,A0
         0000dbe0 ffff0000  
    3434 0000dc00     0b82          ANDI    SY_MASK,A2
         0000dc10 0000ffff  
    3435                    
    3436 0000dc30     4c86          MOVE    A4,A6                   ;UPPER LEFTS HERE
    3437 0000dc40     4c87          MOVE    A4,A7
    3438                    
    3439 0000dc50     4ca8          MOVE    A5,A8                   ;LOWER RIGHTS HERE
    3440 0000dc60     4ca9          MOVE    A5,A9
    3441                    
    3442 0000dc70     0b86          ANDI    SX_MASK,A6              ;LEFT X
         0000dc80 ffff0000  
    3443 0000dca0     0b88          ANDI    SX_MASK,A8              ;RIGHT X
         0000dcb0 ffff0000  
    3444                    
    3445 0000dcd0     0b87          ANDI    SY_MASK,A7              ;TOP Y
         0000dce0 0000ffff  
    3446 0000dd00     0b89          ANDI    SY_MASK,A9              ;BOTTOM Y
         0000dd10 0000ffff  
    3447                    
    3448                    *
    3449                    *       FIRST BAR GOES FROM ORIGINAL UL XY TO RIGHT X
    3450                    *       AND TOP Y+DELTA Y
    3451                    *
    3452                    *       A3 IS ORIGINAL A4 PASSED.
    3453                    *       FORM DESTINATION IN A4
    3454                    *
    3455 0000dd30     4c83          MOVE    A4,A3
    3456                    
    3457 0000dd40     ed04          MOVX    A8,A4
    3458 0000dd50     eee4          MOVY    A7,A4
    3459 0000dd60     e044          ADDXY   A2,A4                   ;ADD THE DELTA
    3460                    
    3461 0000dd70     0d3f          CALLR   DO_A_LINE               ;DO THIS LINE
         0000dd80     0016  
    3462                    *
    3463                    *       GOING AROUND CLOCKWISE.....THIS ONE STARTS AT RIGHT X-DELTA
    3464                    *       AND TOP Y
    3465                    *
    3466 0000dd90     ed03          MOVX    A8,A3
    3467 0000dda0     e203          SUBXY   A0,A3
    3468 0000ddb0     eee3          MOVY    A7,A3
    3469                    *
    3470                    *       THIS IS THE NATURAL LOWER RIGHT CORNER
TMS340 COFF Macro Assembler Version 6.10     Wed Apr 21 11:41:33 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   78

    3471                    *
    3472 0000ddc0     ed04          MOVX    A8,A4
    3473 0000ddd0     ef24          MOVY    A9,A4
    3474                    
    3475 0000dde0     0d3f          CALLR   DO_A_LINE
         0000ddf0     000f  
    3476                    *
    3477                    *       NOW FOR BOTTOM LINE.....A4 IS STILL SET!
    3478                    *
    3479 0000de00     ecc3          MOVX    A6,A3
    3480 0000de10     ef23          MOVY    A9,A3
    3481 0000de20     e243          SUBXY   A2,A3
    3482                    
    3483 0000de30     0d3f          CALLR   DO_A_LINE
         0000de40     000a  
    3484                    *
    3485                    *       LEFT WALL....FROM UPPER LEFT
    3486                    *
    3487 0000de50     ecc3          MOVX    A6,A3
    3488 0000de60     eee3          MOVY    A7,A3
    3489                    
    3490 0000de70     ecc4          MOVX    A6,A4
    3491 0000de80     e004          ADDXY   A0,A4
    3492 0000de90     ef24          MOVY    A9,A4
    3493                    
    3494 0000dea0     0d3f          CALLR   DO_A_LINE
         0000deb0     0003  
    3495                    
    3496 0000dec0     09af          MMFM    SP,A0,A1,A2,A3,A4,A5,A6,A7,A8,A9
         0000ded0     03ff  
    3497 0000dee0     0960          RETS
    3498                    
    3499 0000def0           DO_A_LINE
    3500 0000def0     098f          MMTM    SP,A4
         0000df00     0800  
    3501 0000df10     e264          SUBXY   A3,A4           ;FORM DISTANCE
    3502 0000df20     0d5f          CALLA   FILLAREA        ;AND DO THE FILL
         0000df30 00000000! 
    3503 0000df50     09af          MMFM    SP,A4
         0000df60     0010  
    3504 0000df70     0960          RETS
    3505                    
    3506 0000df80           STD_BORD
    3507 0000df80     098f          MMTM    SP,A0
         0000df90     8000  
    3508 0000dfa0     09e0          MOVI    BORDER_SIZE,A0
         0000dfb0 00030003  
    3509 0000dfd0     0d5f          CALLA   DOBORDER
         0000dfe0 0000db80' 
    3510 0000e000     09af          MMFM    SP,A0
         0000e010     0001  
    3511 0000e020     0960          RETS
    3512                    
    3513                    **************************************************************************
    3514                    *                                                                        *
TMS340 COFF Macro Assembler Version 6.10     Wed Apr 21 11:41:33 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   79

    3515                    *          DO_HELP_MENU                                                  *
    3516                    *                                                                        *
    3517                    *          THIS IS CALLED TO DISPLAY A HELP MENU FOR THE CURRENT         *
    3518                    *          MENU ENTRY.                                                   *
    3519                    *                                                                        *
    3520                    *          A HELP MENU IS DEFINED AS FOLLOWS:                            *
    3521                    *                                                                        *
    3522                    *          HM_JUST         WORD    0=CENTER   1=LEFT                     *
    3523                    *          HM_COLOR        WORD    COLOR OF MENU                         *
    3524                    *          HM_ENTS         WORD    NUMBER OF LINES IN MENU               *
    3525                    *                          LONG    LONG WORD POINTERS FOR EACH LINE!     *
    3526                    *                                                                        *
    3527                    *          THE PROCESS AREA IS FILLED WITH THE CURRENT MENU              *
    3528                    *          PARAMETERS.                                                   *
    3529                    *                                                                        *
    3530                    *          A8 = POINTER TO HELP MENU STRUCTURE ABOVE                     *
    3531                    *                                                                        *
    3532                    **************************************************************************
    3533 0000e030           DO_HELP_MENU
    3534 0000e030     0d3f           CALLR   BLNKHELP
         0000e040     0015  
    3535                    
    3536 0000e050     4d08           MOVE    A8,A8                ;CHECK IF HELP MENU EXISTS.
    3537 0000e060     ca12           JRZ     DHMX                 ;NOPE JUST CLEARING WAS OUR JOB.
    3538                    
    3539 0000e070     b5a0           MOVE    *A13(MEN_CUR),A0,W   ;THIS IS CURRENT ENTRY
         0000e080     0210  
    3540 0000e090     4c0b           MOVE    A0,A11               ;PASS ENTRY NUMBER IN A11
    3541 0000e0a0     0d3f           CALLR   GET_ENTRY_Y          ;A5 HAS THE Y FOR THE CURRENT ENTRY
         0000e0b0     ff2c  
    3542                    *
    3543                    *        NOW WE NEED TO MOVE TO MAKE TOP ENTRY BOX LINE UP.
    3544                    *
    3545 0000e0c0     b5aa           MOVE    *A13(MEN_BDY),A10,W  ;THIS IS NEGATIVE TO GIVE US BOX TOP
         0000e0d0     01a0  
    3546 0000e0e0     40aa           ADD     A5,A10               ;NOW WE HAVE BOX TOP
    3547                    
    3548 0000e0f0     b5a5           MOVE    *A13(MEN_BAR),A5,W   ;GET BAR HEIGHT
         0000e100     0190  
    3549 0000e110     2fe5           SRL     1,A5                 ;FIND CENTER OF BAR
    3550 0000e120     40aa           ADD     A5,A10               ;NOW WE'RE AT BAR CENTER.
    3551                    
    3552                    *         SUBI    MB_YWID+GAP,A10      ;THIS IS MAIN MENU TOP. (FOR TOP ENTRY)
    3553                    
    3554                    ;         MOVI    H_SLAVE,A7        ;FORK OFF SO IT CAN USE PDATA!
    3555                    ;         CALLA   P_FORK               ;START UP ANOTHER W/ SAME ID TO FLASH!
    3556 0000e130                    P_FORK H_SLAVE
    3557 0000e190     0960  DHMX     RETS
    3558                    
    3559                    **************************************************************************
    3560                    *                                                                        *
    3561                    *          BLNKHELP                                                      *
    3562                    *                                                                        *
    3563                    *          THIS IS CALLED TO BLANK OUT THE HELP AREA.  IT IS             *
    3564                    *          USED BY BOTH THE "NORMAL" HELP PLOTTER AND IS                 *
TMS340 COFF Macro Assembler Version 6.10     Wed Apr 21 11:41:33 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   80

    3565                    *          CALLED BY THE ADJUSTMENT HELP PROGRAM.                        *
    3566                    *                                                                        *
    3567                    *          THIS RETURNS THE LEFT X FOR THE HELP MENU IN A9               *
    3568                    *                                                                        *
    3569                    **************************************************************************
    3570 0000e1a0           BLNKHELP
    3571 0000e1a0     098f           MMTM    SP,A3,A4,A5,A6
         0000e1b0     1e00  
    3572 0000e1c0     0d3f           CALLR   MENU_LR_A6_A5        ;GET RIGHT X OF MAIN MENU IN A6
         0000e1d0     ff54  
    3573 0000e1e0     4cc9           MOVE    A6,A9                ;PASS TO HELP MENU SLAVE
    3574                    *
    3575                    *        NOW BLANK OUT THE "HELP" REGION
    3576                    *
    3577 0000e1f0     4cc3           MOVE    A6,A3                ;UPPER LEFT X OF REGION TO BLANK OUT
    3578 0000e200     0b23           ADDI    INST_ULY*10000H,A3   ;THIS IS UPPER LEFT OF BLOCK
         0000e210 003b0000  
    3579                    
    3580 0000e230     09e4           MOVI    TIT_LRX+(10000H*400),A4 ;COORDINATE OF LOWER RIGHT OF HELP AREA
         0000e240 01900185  
    3581 0000e260     e264           SUBXY   A3,A4                   ;THIS IS SIZE OF REGION TO BLANK
    3582 0000e270     0d5f           CALLA   BLNKAREA                ;BLANK OUT THE HELP AREA
         0000e280 00000000! 
    3583 0000e2a0     0b09           ADDI    BOX_XGAP,A9             ;RETURN X FOR HELP MENUS
         0000e2b0     0005  
    3584 0000e2c0     09af          MMFM    SP,A3,A4,A5,A6
         0000e2d0     0078  
    3585 0000e2e0     0960          RETS
    3586                    
    3587                    ;P_FORK
    3588                    ;        MMTM    SP,A1
    3589                    ;        MOVE    *A13(PROCID),A1,W    ;PASS OUR ID TO FORKED PROCESS
    3590                    ;        CALLA   GETPRC               ;MAKE THE PROCESS
    3591                    ;       MMFM    SP,A1
    3592                    ;       RETS
    3593                    
    3594                    
    3595                    **************************************************************************
    3596                    *                                                                        *
    3597                    *          H_SLAVE                                                       *
    3598                    *                                                                        *
    3599                    *          THIS IS A PROCESS CREATED TO PLOT THE HELP BOX.               *
    3600                    *          IT DOES ITS PLOTTING THEN DIES.   THIS ALLOWS IT              *
    3601                    *          TO USE THE PDATA AREA WITHOUT DISTURBING THE CALLER.          *
    3602                    *                                                                        *
    3603                    *          A8 = POINTER TO HELP BOX STRUCTURE                            *
    3604                    *          A9 = LEFT MARGIN FOR THE HELP BOX.                            *
    3605                    *          A10 = Y OF CENTER OF BOX ...HIGH HALF IS ZERO FOR Y CENTING   *
    3606                    *                IF HIGH HALF IS NON-ZERO, THEN THIS IS TOP OF BOX       *
    3607                    *                                                                        *
    3608                    **************************************************************************
    3609              0000  HM_JUST          EQU     0
    3610              0010  HM_COLOR         EQU     HM_JUST+WORD_SIZE
    3611              0020  HM_ENTS          EQU     HM_COLOR+WORD_SIZE
    3612              0030  HM_DATA          EQU     HM_ENTS+WORD_SIZE      ;ENTRY POINTERS
TMS340 COFF Macro Assembler Version 6.10     Wed Apr 21 11:41:33 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   81

    3613                    
    3614              0100  HS_ROUT          EQU     PDATA             ;LONG-TEXT ROUTINE
    3615              0120  HS_X             EQU     HS_ROUT+LONG_SIZE ;WORD-X FOR TEXT ROUTINE
    3616              0130  HS_Y             EQU     HS_X+WORD_SIZE    ;WORD-CURRENT Y
    3617              0140  HS_ENTS          EQU     HS_Y+WORD_SIZE    ;WORD-ENTRIES LEFT TO DO
    3618              0150  HS_COLOR         EQU     HS_ENTS+WORD_SIZE ;WORD-COLOR OF MENU
    3619              0160  HS_PTR           EQU     HS_COLOR+WORD_SIZE ;LONG-CURRENT TEXT POINTER
    3620                    
    3621 0000e2f0           H_SLAVE
    3622                    *
    3623                    *        A9 HAS RIGHT X OF MENU
    3624                    *
    3625 0000e2f0     4d21           MOVE    A9,A1                     ;PUT THIS X VALUE IN A1
    3626                    
    3627 0000e300     b500           MOVE    *A8(HM_JUST),A0,W         ;0 = CENTER  1=LEFT
         0000e310     0000  
    3628 0000e320     ca06           JRZ     HS_CENT                   ;CENTER....SETUP X ACCORDINGLY
    3629                    *
    3630                    *        LEFT JUSTIFY....STORE ROUTINE
    3631                    *
    3632 0000e330     09e0           MOVI    STRLNRM,A0                ;LEFT JUSTIFY ROUTIN
         0000e340 00000000! 
    3633                    *
    3634                    *        NOW FORM X AS SOME MARGIN FROM WINDOW....
    3635                    *
    3636 0000e360     0b01           ADDI    MB_XWID+HELP_X_MARGIN,A1  ;ADD MARGIN TO FORM X FOR TEXT
         0000e370     000d  
    3637 0000e380     c006           JRUC    CENTER_JOIN               ;CONTINUE
    3638                    
    3639 0000e390     09e0  HS_CENT  MOVI    STRCNRM,A0                ;USE CENTERING ROUTINE
         0000e3a0 00000000! 
    3640                    *
    3641                    *        A1 HAS LEFT X OF HELP BOX...FIND RIGHT X
    3642                    *
    3643 0000e3c0     0b01           ADDI    TIT_LRX,A1
         0000e3d0     0185  
    3644 0000e3e0     2fe1           SRL     1,A1                      ;THIS IS CENTER X
    3645                    
    3646 0000e3f0           CENTER_JOIN
    3647 0000e3f0     b02d           MOVE    A1,*A13(HS_X),W           ;STORE X
         0000e400     0120  
    3648 0000e410     b20d           MOVE    A0,*A13(HS_ROUT),L        ;STORE ROUTINE
         0000e420     0100  
    3649                    
    3650 0000e430     b501           MOVE    *A8(HM_ENTS),A1,W         ;GET NUMBER OF ENTRIES
         0000e440     0020  
    3651 0000e450     b02d           MOVE    A1,*A13(HS_ENTS),W        ;COUNT IT DOWN IN P-AREA
         0000e460     0140  
    3652                    
    3653 0000e470     b500           MOVE    *A8(HM_COLOR),A0,W        ;GET COLOR
         0000e480     0010  
    3654 0000e490     b00d           MOVE    A0,*A13(HS_COLOR),W       ;STASH IT
         0000e4a0     0150  
    3655                    
    3656 0000e4b0     0b08           ADDI    HM_DATA,A8                ;POINT AT 1ST ENTRY
TMS340 COFF Macro Assembler Version 6.10     Wed Apr 21 11:41:33 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   82

         0000e4c0     0030  
    3657 0000e4d0     b30d           MOVE    A8,*A13(HS_PTR),L         ;NOW WE'RE READY.
         0000e4e0     0160  
    3658                    *
    3659                    *        ALL PDATA AREA SET.....NOW WE NEED TO DRAW THE BORDER
    3660                    *
    3661                    *          FOR DOBORDER
    3662                    *
    3663                    *          A4 = UPPER LEFT Y,X
    3664                    *          A5 = LOWER RIGHT Y,X
    3665                    *          A0 = Y,X WIDTH OF BORDER
    3666                    *          A9 = COLOR OF BORDER.
    3667                    *
    3668                    *        LOWER RIGHT X IS SUCH THAT IT LINES UP WITH TITLE BOX.
    3669                    *        THE Y IS A BIT TRICKIER......NUMBER OF ENTRIES IS
    3670                    *        SITTING IN A1
    3671                    *
    3672 0000e4f0     09c5           MOVI    HELP_DY,A5                ;DISTANCE PER ENTRY
         0000e500     000c  
    3673 0000e510     5e25           MPYU    A1,A5                     ;DISTANCE FOR ALL ENTRIES
    3674 0000e520     0b05           ADDI    HELP_Y_MARGIN+(MB_YWID*2)+HELP_YLO_MARGIN,A5
         0000e530     0012  
    3675                    *
    3676                    *        A5 NOW CONTAINS FULL HEIGHT OF BOX
    3677                    *
    3678                    *        NOW SEE IF WE'RE CENTERING ON A10 OR IF A10 IS THE TOP.
    3679                    *
    3680 0000e540     0d3f           CALLR   TOP_IN_A10
         0000e550     003b  
    3681                    *
    3682                    *        NOW FORM UPPER LEFT IN A4
    3683                    *
    3684 0000e560     4d44           MOVE    A10,A4                    ;MOVE Y OVER
    3685 0000e570     2604           SLL     16,A4                     ;MAKE ROOM FOR X
    3686 0000e580     4124           ADD     A9,A4                     ;PUT IN THE X...THIS IS UPPER LEFT!
    3687                    
    3688 0000e590     4145           ADD     A10,A5                    ;ADD BASE TO OFFSET
    3689 0000e5a0     2605           SLL     16,A5                     ;PUT IN Y POSITION
    3690 0000e5b0     0b05           ADDI    TIT_LRX,A5                ;ADD IN THE X FOR THE CORNER
         0000e5c0     0185  
    3691                    *
    3692                    *        NOW ADJUST FROM TOP OF BOX TO POSITION OF
    3693                    *        1ST ENTRY.
    3694                    *
    3695 0000e5d0     0b0a           ADDI    MB_YWID+HELP_Y_MARGIN,A10  ;Y OF 1ST ENTRY
         0000e5e0     000b  
    3696 0000e5f0     b14d           MOVE    A10,*A13(HS_Y),W           ;PUT AWAY
         0000e600     0130  
    3697                    
    3698 0000e610     b5a9           MOVE    *A13(HS_COLOR),A9,W       ;GET THE COLOR FOR DOBORDER
         0000e620     0150  
    3699                    
    3700 0000e630     0d3f           CALLR   STD_BORD
         0000e640     ff93  
    3701                    *
TMS340 COFF Macro Assembler Version 6.10     Wed Apr 21 11:41:33 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   83

    3702                    *        NOW WE NEED TO WALK THROUGH AND PLOT THE HELP
    3703                    *        MENU ENTRIES.
    3704                    *
    3705                    *        A0 = SLEEP
    3706                    *        A1 = ROUTINE
    3707                    *        A6 = COLOR
    3708                    *        A8 = POINTER
    3709                    *        A9 = ADDRESS
    3710                    *        A10 = SPACING
    3711                    *        A11 = FONT
    3712                    *        A14 = FLAGS
    3713                    *
    3714 0000e650           NEXT_HELP
    3715 0000e650     b7a2           MOVE    *A13(HS_PTR),A2,L         ;GET OUR CURRENT POINTER
         0000e660     0160  
    3716 0000e670     9648           MOVE    *A2+,A8,L                 ;GET THE CURRENT MESSAGE POINTER
    3717 0000e680     b24d           MOVE    A2,*A13(HS_PTR),L         ;AND PUT POINTER BACK
         0000e690     0160  
    3718                    
    3719 0000e6a0     5600           CLR     A0
    3720 0000e6b0     b7a1           MOVE    *A13(HS_ROUT),A1,L        ;ROUTINE IN A1
         0000e6c0     0100  
    3721                    ;         MOVE    *A13(HS_COLOR),A6,W       ;STUFF COLOR -- OLD NARC STYLE
    3722 0000e6d0     b5a5          MOVE    *A13(HS_COLOR),A5,W       ;STUFF COLOR
         0000e6e0     0150  
    3723 0000e6f0     2605          SLL     16,A5
    3724                    
    3725 0000e700     b5a9           MOVE    *A13(HS_Y),A9,W           ;GET Y
         0000e710     0130  
    3726 0000e720     2609           SLL     16,A9                     ;SHIFT INTO PLACE
    3727 0000e730     b5aa           MOVE    *A13(HS_X),A10,W
         0000e740     0120  
    3728 0000e750     4149           ADD     A10,A9                    ;A9 IS NOW POINTING AT SCREEN
    3729                    
    3730 0000e760     09ca           MOVI    SPACING07,A10             ;SPACING
         0000e770     0001  
    3731 0000e780     09eb           MOVI    RD7FONT,A11               ;FONT IS BABY FONT
         0000e790 00000000! 
    3732 0000e7b0                    JSRP    PRINTF                  ;PRINT IT OUT!
    3733                    
    3734 0000e820     b5a9           MOVE    *A13(HS_Y),A9,W           ;GET THE Y
         0000e830     0130  
    3735 0000e840     0b09           ADDI    HELP_DY,A9                ;KICK IT
         0000e850     000c  
    3736 0000e860     b12d           MOVE    A9,*A13(HS_Y),W           ;PUT IT BACK
         0000e870     0130  
    3737                    
    3738 0000e880     b5a0           MOVE    *A13(HS_ENTS),A0,W        ;ENTRY COUNT
         0000e890     0140  
    3739 0000e8a0     1420           DEC     A0
    3740 0000e8b0     b00d           MOVE    A0,*A13(HS_ENTS),W        ;PUT IT BACK
         0000e8c0     0140  
    3741 0000e8d0     cbd7           JRNZ    NEXT_HELP
    3742                    
    3743 0000e8e0     c080           JAUC    SUCIDE                    ;OUR WORK IS DONE!
TMS340 COFF Macro Assembler Version 6.10     Wed Apr 21 11:41:33 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   84

         0000e8f0 00000000! 
    3744                    
    3745                    **************************************************************************
    3746                    *                                                                        *
    3747                    *          TOP_IN_A10                                                    *
    3748                    *                                                                        *
    3749                    *          THIS IS CALLED BY H_SLAVE TO GET THE UPPER LEFT               *
    3750                    *          CORNER OF THE BOX IN A10.  A10 HAS THE PASSED PARAMETER.      *
    3751                    *          A5 HAS THE HEIGHT OF THE BOX.  IF THE TOP HALF OF A10         *
    3752                    *          IS ZERO, THEN THEN WE WANT THE BOX CENTER AT THE              *
    3753                    *          A10 LEVEL.  IF THE TOP HALF OF A10 IS NON-ZERO THEN           *
    3754                    *          A10 WAS PASSED AS THE TOP.                                    *
    3755                    *                                                                        *
    3756                    *          RETURN A10 AS THE Y FOR THE TOP OF THE HELP BOX.              *
    3757                    *                                                                        *
    3758                    **************************************************************************
    3759 0000e910           TOP_IN_A10
    3760 0000e910     098f           MMTM    SP,A5
         0000e920     0400  
    3761 0000e930     0b6a           CMPI    0FFFFH,A10                ;IS THE TOP HALF ZERO?
         0000e940 ffff0000  
    3762 0000e960     c302           JRHI    TOP_IS_TOP                ;TOP IS SET..RETURN
    3763 0000e970     2fe5           SRL     1,A5                      ;TOP OF BOX IS HALF UP FROM MAIN MENU BAR CENTER
    3764 0000e980     44aa           SUB     A5,A10                    ;NOW A10 HAS Y BASE OF BOX
    3765 0000e990           TOP_IS_TOP
    3766 0000e990     09af          MMFM    SP,A5
         0000e9a0     0020  
    3767 0000e9b0     0960          RETS
    3768                    
    3769                    **************************************************************************
    3770                    *                                                                        *
    3771                    *          AREUSURE                                                      *
    3772                    *                                                                        *
    3773                    *          THIS IS CALLED TO GET A CONFIRMATION FROM THE USER.           *
    3774                    *          A8 = PROMPT...THIS WILL APPEAR ABOVE THE "ARE YOU SURE"       *
    3775                    *          A9 = ROUTINE TO JSRP TO DO THE DESIRED ACTION                 *
    3776                    *          A10 = MESSAGE TO DISPLAY CONFIRMING COMPLETION                *
    3777                    *                                                                        *
    3778                    *          RETURN A0=0 MEANS YES WAS CHOSEN.                             *
    3779                    *                 A0 .NE. 0 MEANS NO                                     *
    3780                    *                                                                        *
    3781                    **************************************************************************
    3782 0000e9c0           AREUSURE
    3783 0000e9c0     0d5f           CALLA   CLR_SCRN             ;BLANK IT ALL OUT!
         0000e9d0 00000000! 
    3784 0000e9f0     b32d           MOVE    A9,*A13(PDATA),L     ;SAVE ROUTINE
         0000ea00     0100  
    3785 0000ea10     a34c           MOVE    A10,-*A12,L          ;AND CONFIRM MESSAGE
    3786                    
    3787 0000ea20     0d3f           CALLR   SURE_BOX
         0000ea30     0060  
    3788                    
    3789 0000ea40     4d02           MOVE    A8,A2                ;PUT MESSAGE TEXT IN SAFE PLACE
    3790 0000ea50     09e8           MOVI    MESS_SURE,A8         ;SETUP FOR TITLE
         0000ea60 0000fab0' 
TMS340 COFF Macro Assembler Version 6.10     Wed Apr 21 11:41:33 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   85

    3791 0000ea80     0d5f           CALLA   LM_SETUP             ;STUFF REGGIES
         0000ea90 00000000! 
    3792 0000eab0     4c48           MOVE    A2,A8                ;GET STRING IN THERE
    3793 0000eac0                    JSRP    PRINTF             ;AND PRINT IT
    3794                    
    3795 0000eb30     09e8           MOVI    M_SURE,A8            ;NOW THE "ARE YOU SURE" PART
         0000eb40 0000fb70' 
    3796 0000eb60                    JSRP    L_MESS               ;PUT IT UP.
    3797                    
    3798 0000ebd0     09e8           MOVI    MEN_YN,A8            ;PUT UP THE "YES/NO" SELECTOR.
         0000ebe0 00017bf0' 
    3799 0000ec00     09c9           MOVI    2,A9                 ;CURSOR ON 2ND ENTRY (NO)
         0000ec10     0002  
    3800                    
    3801 0000ec20                    JSRP    B_MENU               ;AND GET A RESPONSE.
    3802 0000ec90     0b48           CMPI    1,A8                 ;WAS IT YES?
         0000eca0     fffe  
    3803 0000ecb0     cb1f           JRNZ    SURE_X               ;NOPE....GET OUT
    3804                    
    3805 0000ecc0     0d5f           CALLA   CLR_SCRN             ;CLEAR THE SCREEN FIRST, SO ROUTINE CAN PLOT!
         0000ecd0 00000000! 
    3806                    
    3807 0000ecf0     b7a0           MOVE    *A13(PDATA),A0,L     ;GET THE ROUTINE TO CALL
         0000ed00     0100  
    3808 0000ed10     09e7           MOVI    SURE_RET,A7
         0000ed20 0000ed60' 
    3809 0000ed40     a2ec           MOVE    A7,-*A12,L           ;PUSH RETURN ADDRESS
    3810 0000ed50     0160           JUMP    A0                   ;AND "JSRP" THE ROUTINE
    3811                    
    3812 0000ed60     0d3f  SURE_RET CALLR   SURE_BOX             ;BOX IT!
         0000ed70     002c  
    3813 0000ed80     9788           MOVE    *A12+,A8,L
    3814 0000ed90                    JSRP    SUR_MESS             ;PRINT THE MESSAGE
    3815                    
    3816 0000ee00                    JSRP    ANY_BUT              ;NOW RETRIEVE ANY BUTTON THEN RETURN
    3817                    
    3818 0000ee70     5600           CLR     A0                   ;RETURN SUCCESS
    3819 0000ee80                    RETP
    3820                    
    3821 0000eeb0     0b0c  SURE_X   ADDI    LONG_SIZE,A12        ;POP MESSAGE
         0000eec0     0020  
    3822 0000eed0     09c0           MOVI    2,A0                 ;RETURN FAILURE
         0000eee0     0002  
    3823 0000eef0                    RETP
    3824                    
    3825                    **************************************************************************
    3826                    *                                                                        *
    3827                    *          SUR_MESS                                                      *
    3828                    *                                                                        *
    3829                    *          THIS PRINTS MESSAGE IN A8 IN THE ARE U SURE BOX               *
    3830                    *          CONFIRMATION SPOT.                                            *
    3831                    *                                                                        *
    3832                    **************************************************************************
    3833 0000ef20           SUR_MESS
    3834 0000ef20     a30c          MOVE    A8,-*A12,L
TMS340 COFF Macro Assembler Version 6.10     Wed Apr 21 11:41:33 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   86

    3835 0000ef30     09e8          MOVI    MESS_CONFIRM,A8
         0000ef40 0000fcb0' 
    3836 0000ef60     0d5f          CALLA   LM_SETUP                ;GET CONFIRMATION DATA READY.
         0000ef70 00000000! 
    3837 0000ef90     9788          MOVE    *A12+,A8,L
    3838 0000efa0                   JSRP    PRINTF          ;PRINT OUR PART
    3839 0000f010                   RETP
    3840                    
    3841 0000f040           SURE_BOX
    3842 0000f040     09c9          MOVI    COLOR_YELLOW,A9
         0000f050     0505  
    3843 0000f060     09e4          MOVI    003D0025H,A4
         0000f070 003d0025  
    3844 0000f090     09e5          MOVI    00F6016AH,A5
         0000f0a0 00f6016a  
    3845 0000f0c0     0d3f          CALLR   STD_BORD                ;BORDER-IZE THE WHOLE THING.
         0000f0d0     feea  
    3846 0000f0e0     0960          RETS
    3847                    
    3848                    *
    3849                    *BLANK THE INSIDE OF THE "ARE YOU SURE BOX"
    3850                    *
    3851 0000f0f0           BLNK_SURE_BOX
    3852 0000f0f0     09e3          MOVI    [41H,29H],A3
         0000f100 00410029  
    3853 0000f120     09e4          MOVI    [0F2H,166H]-[41H,29H],A4
         0000f130 00b1013d  
    3854 0000f150     c080          JAUC    BLNKAREA                ;ITS BLANK!
         0000f160 00000000! 
    3855                    
    3856 0000f180           CENT_BOX
    3857 0000f180     09c9          MOVI    COLOR_RED,A9
         0000f190     0101  
    3858 0000f1a0           CBOX_COL
    3859 0000f1a0     09e4          MOVI    0006E0030H,A4
         0000f1b0 006e0030  
    3860 0000f1d0     09e5          MOVI    0011A01D0H,A5
         0000f1e0 011a01d0  
    3861 0000f200     0d3f          CALLR   STD_BORD                ;BORDER-IZE THE WHOLE THING.
         0000f210     fed6  
    3862 0000f220     0960          RETS
    3863                    
    3864                    *----------------------------------------------------------------------------*
    3865                    *----------------------------------------------------------------------------*
    3866                    *****************************    MESSAGES    *********************************
    3867                    *----------------------------------------------------------------------------*
    3868                    *----------------------------------------------------------------------------*
    3869                    
    3870              0041  INSTR_Y  EQU     INST_ULY+6
    3871              004b  INSTR_2Y EQU     INSTR_Y+10
    3872                    
    3873 0000f230           MM_INST1
    3874 0000f230                   MESS_MAC RD7FONT,SPACING07,MENU_X,INSTR_Y,COLOR_PRGB,STRCNRM,0
    3875                    ;       .STRING "P1 START-UP/P2 START-DOWN",0
    3876 0000f2f0       53          .STRING "SELECT WITH ANY JOYSTICK",0
TMS340 COFF Macro Assembler Version 6.10     Wed Apr 21 11:41:33 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   87

    3877 0000f3c0                   .EVEN
    3878                    
    3879 0000f3c0           MM_INST2
    3880 0000f3c0                   MESS_MAC RD7FONT,SPACING07,MENU_X,INSTR_2Y,COLOR_PRGB,STRCNRM,0
    3881 0000f480       41          .STRING "ACTIVATE WITH ACTION BUTTON",0
    3882 0000f560                   .EVEN
    3883                    
    3884 0000f560           MESS_FAIL
    3885 0000f560                    MESS_MAC  RD15FONT,SPACING20,256,176,COLOR_PRED,STRCNRM,0
    3886 0000f620       49           .STRING  "INVALID ",W_GAME," ",W_SETTINGS
    3887 0000f678       00           .BYTE   0,1                  ;0 = END OF STRING...1 = MORE MESSAGES!
    3888 0000f690                    .EVEN
    3889 0000f690                    MESS_MAC  RD15FONT,SPACING20,256,226,COLOR_PWHITE,STRCNRM,0
    3890 0000f750       41           .STRING  "ATTEMPT TO RESTORE"
    3891 0000f7e0       00           .BYTE   0,1                  ;0 = END OF STRING...1 = MORE MESSAGES!
    3892 0000f7f0                    .EVEN
    3893 0000f7f0                    MESS_MAC  RD15FONT,SPACING20,256,256,COLOR_PWHITE,STRCNRM,0
    3894 0000f8b0       90           .STRING  W_FACSET,"S HAS FAILED."
    3895 0000f920       00           .BYTE    0,0
    3896 0000f930                    .EVEN
    3897                    
    3898 0000f930           MESS_TITLE
    3899 0000f930                    MESS_MAC  RD15FONT,SPACING20,TM_X,TM_Y,COLOR_PGREEN,STRCNRM,0
    3900                    
    3901              002a  RV_Y    EQU     TM_Y+18
    3902                    
    3903 0000f9f0           MESS_REV
    3904 0000f9f0                    MESS_MAC  RD7FONT,SPACING07,TM_X,RV_Y,COLOR_PYELLOW,STRCNRM,0
    3905                    *
    3906                    *        THIS IS SETUP FOR THE QUESTION BEING ASKED
    3907                    *        BY "ARE YOU SURE"
    3908                    *
    3909 0000fab0           MESS_SURE
    3910 0000fab0                    MESS_MAC  RD15FONT,SPACING20,200,102,COLOR_PLF,STRCNRM,0
    3911                    *
    3912                    *        THIS IS THE "ARE YOU SURE" PART.
    3913                    *
    3914 0000fb70           M_SURE
    3915 0000fb70                    MESS_MAC  RD15FONT,SPACING20,200,128,COLOR_PYELLOW,STRCNRM,0
    3916 0000fc30       41           .STRING   "ARE YOU SURE?"
    3917                    
    3918                    
    3919 0000fc98       00          .BYTE   0
    3920 0000fca0                   .EVEN
    3921 0000fca0     0000          .WORD   0
    3922                    
    3923 0000fcb0           MESS_CONFIRM
    3924 0000fcb0                    MESS_MAC  RD15FONT,SPACING20,200,115,COLOR_PLF,STRCNRM,0
    3925                    
    3926              00dc  SIY1     EQU     SND_MESS_Y+30
    3927              00e7  SIY3     EQU     SND_MESS_Y+41
    3928              00c6  SIY2     EQU     SND_MESS_Y+8
    3929                    
    3930 0000fd70           SND_INST
    3931 0000fd70                   MESS_MAC RD7FONT,SPACING07,200,SIY1,COLOR_PWHITE,STRCNRM,0
TMS340 COFF Macro Assembler Version 6.10     Wed Apr 21 11:41:33 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   88

    3932 0000fe30       41          .STRING "ANY P1 OR P3 BUTTON TO REPEAT",0               ; WBD
    3933 0000ff20                   .EVEN
    3934 0000ff20     0001          .WORD   1
    3935 0000ff30                   MESS_MAC RD7FONT,SPACING07,200,SIY3,COLOR_PWHITE,STRCNRM,0
    3936 0000fff0       41          .STRING "ANY P2 OR P4 BUTTON FOR NEXT SOUND",0          ; WBD
    3937 00010110                   .EVEN
    3938 00010110     0000          .WORD   0
    3939                    
    3940                    
    3941 00010120           SND_SETUP MESS_MAC  RD15FONT,SPACING20,200,SIY2,COLOR_PLF,STRCNRM,0
    3942                    
    3943 000101e0           STABLE
    3944 000101e0 00010b40'         .long   ST4,ST145,ST210,ST245,ST330,ST405,ST515,ST690
    3945 000102e0 000108f0'         .long   ST755,ST850,ST940,ST1015,ST1115,ST3077,ST2690,ST2092
    3946 000103e0 00010750'         .long   ST5144,ST5470,ST4001,ST3333,ST1350
    3947                    
    3948                    
    3949 00010480       41  ST1350   .STRING "AIR HORN BLAST",0
    3950 00010500                   .even
    3951                    
    3952 00010500       42  ST2092   .STRING "BREAKAWAY",0
    3953 00010550                   .even
    3954                    
    3955 00010550       48  ST2690   .STRING "HE STACKS THE PADS",0
    3956 000105f0                   .even
    3957                    
    3958 000105f0       42  ST3077   .STRING "BONDRA",0
    3959 00010630                   .even
    3960                    
    3961 00010630       54  ST3333   .STRING "THE GREAT ONE",0
    3962 000106a0                   .even
    3963                    
    3964 000106a0       48  ST4001   .STRING "HE SHOOTS",0
    3965 000106f0                   .even
    3966                    
    3967 000106f0       54  ST5470   .STRING "TO ZALAPSKI",0
    3968 00010750                   .even
    3969                    
    3970 00010750       43  ST5144   .STRING "CROWD CHEER",0
    3971 000107b0                   .even
    3972                    
    3973 000107b0       50  ST1115   .STRING "PLAYER GRUNT",0
    3974 00010820                   .even
    3975                    
    3976 00010820       4f  ST1015   .STRING "ORGAN",0
    3977 00010850                   .even
    3978                    
    3979 00010850       42  ST940   .STRING "BODY SLAM",0
    3980 000108a0                   .even
    3981                    
    3982 000108a0       42  ST850   .STRING "BODY FALL",0
    3983 000108f0                   .even
    3984                    
    3985 000108f0       4c  ST755   .STRING "LONG PUCK SLIDE",0
    3986 00010970                   .even
TMS340 COFF Macro Assembler Version 6.10     Wed Apr 21 11:41:33 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   89

    3987                    
    3988 00010970       53  ST690   .STRING "SLAPSHOT",0
    3989 000109c0                   .even
    3990                    
    3991 000109c0       53  ST515   .STRING "SKATE",0
    3992 000109f0                   .even
    3993                    
    3994 000109f0       50  ST405   .STRING "PUCK TO METAL",0
    3995 00010a60                   .even
    3996                    
    3997 00010a60       50  ST330   .STRING "PUCK HIT BOARD",0
    3998 00010ae0                   .even
    3999                    
    4000 00010ae0       49  ST245   .STRING "ICE CRUNCH",0
    4001 00010b40                   .even
    4002                    
    4003 00010b40       49  ST4     .STRING "INTRO TUNE",0
    4004 00010ba0                   .even
    4005                    
    4006 00010ba0       47  ST145   .STRING "GOALIE MITT",0
    4007 00010c00                   .even
    4008                    
    4009 00010c00       47  ST210   .STRING "GOALIE STICK",0
    4010 00010c70                   .even
    4011                    
    4012                    
    4013                    ;ROM_NAME .STRING   "MIDWAY MANUFACTURING",0
    4014 00010c70       4f  ROM_NAME .STRING   "OPEN ICE - REVISION 1.21",0
    4015 00010d40                    .EVEN
    4016                    
    4017                    **************************************************************************
    4018                    *                                                                        *
    4019                    *                            MENU DATA                                   *
    4020                    *                                                                        *
    4021                    **************************************************************************
    4022                    
    4023                    **************************************************************************
    4024                    *                                                                        *
    4025                    *       MAIN TEST MENU AND ASSOCIATED DATA                               *
    4026                    *                                                                        *
    4027                    **************************************************************************
    4028 00010d40           OCTO_MAIN
    4029 00010d40 00000000!         .LONG   RD7FONT         ;FONT
    4030 00010d60 00000000!         .LONG   STRCNRM         ;CENTER PLEASE
    4031 00010d80 000116f0'         .LONG   MESSOCTO        ;TITLE
    4032 00010da0     0202          .WORD   COLOR_WHITE     ;COLOR OF TITLE
    4033 00010db0     0066          .WORD   MENU_X          ;UL X
    4034 00010dc0     006a          .WORD   MENU_Y+2        ;UL Y
    4035 00010dd0     0011          .WORD   MENU_DY-6       ;VERTICAL SPACING
    4036 00010de0     0202          .WORD   COLOR_WHITE     ;COLOR WHEN NOT SELECTED
    4037 00010df0     0013          .WORD   BAR_HITE-7      ;HEIGHT OF SELECTION BAR
    4038 00010e00     fffa          .WORD   -6              ;DISTANCE OF BAR FROM TOP OF TEXT (NEGATIVE)
    4039 00010e10     0006          .WORD   BAR_DX          ;EXTRA X ON EACH SIDE.
    4040 00010e20     00b7          .WORD   BAR_WID         ;WIDTH OF BAR!
    4041 00010e30     3c3c          .WORD   COLOR_DECAY     ;TEXT COLOR OF SELECTED ITEM
TMS340 COFF Macro Assembler Version 6.10     Wed Apr 21 11:41:33 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   90

    4042 00010e40 000117b0'         .LONG   MESS_DIAG,GO_DIAG,DIAG_HELP
    4043 00010ea0 00011820'         .LONG   MESS_COIN_AUD,GO_BOOK,COIN_HELP
    4044 00010f00 00011880'         .LONG   MESS_GAME_AUD,GO_AUD,AUDIT_HELP
    4045 00010f60 00000000!         .long   mess_hardware,go_hardware,hardware_help
    4046 00010fc0 00011680'         .long   mess_volume,go_volume,volume_help
    4047 00011020 00011960'         .LONG   MESS_EXIT,0,EXIT_HELP
    4048 00011080 00000000          .LONG   0               ;END
    4049                    
    4050                    ; WBD ST
    4051 000110a0           MEN_MAIN
    4052 000110a0 00000000!         .LONG   RD7FONT         ;FONT
    4053 000110c0 00000000!         .LONG   STRCNRM         ;CENTER PLEASE
    4054 000110e0 00011760'         .LONG   MESSMAIN        ;TITLE
    4055 00011100     0202          .WORD   COLOR_WHITE     ;COLOR OF TITLE
    4056 00011110     0066          .WORD   MENU_X          ;UL X
    4057 00011120     0068          .WORD   MENU_Y          ;UL Y
    4058 00011130     0010          .WORD   MENU_DY-7       ;VERTICAL SPACING
    4059 00011140     0202          .WORD   COLOR_WHITE     ;COLOR WHEN NOT SELECTED
    4060 00011150     0012          .WORD   BAR_HITE-8      ;HEIGHT OF SELECTION BAR
    4061 00011160     fffb          .WORD   -5              ;DISTANCE OF BAR FROM TOP OF TEXT (NEGATIVE)
    4062 00011170     0006          .WORD   BAR_DX          ;EXTRA X ON EACH SIDE.
    4063 00011180     00b7          .WORD   BAR_WID         ;WIDTH OF BAR!
    4064 00011190     3c3c          .WORD   COLOR_DECAY     ;TEXT COLOR OF SELECTED ITEM
    4065 000111a0 000117b0'         .LONG   MESS_DIAG,GO_DIAG,DIAG_HELP
    4066 00011200 00011820'         .LONG   MESS_COIN_AUD,GO_BOOK,COIN_HELP
    4067 00011260 00011880'         .LONG   MESS_GAME_AUD,GO_AUD,AUDIT_HELP
    4068 000112c0 000118a0'         .LONG   MESS_PRICING,GO_PADJ,PADJUST_HELP
    4069 00011320 000118f0'         .LONG   MESS_GAME_ADJ,GO_GADJ,GADJUST_HELP
    4070                    ; WBD END
    4071 00011380 00011910'         .LONG   MESS_UTIL,GO_UTIL,UTIL_HELP
    4072                    ;MJL - New menu item
    4073 000113e0 00000000!         .long   mess_hardware,go_hardware,hardware_help
    4074                    ;MJL END
    4075 00011440 00011680'         .long   mess_volume,go_volume,volume_help
    4076 000114a0 00011960'         .LONG   MESS_EXIT,0,EXIT_HELP
    4077 00011500 00000000          .LONG   0               ;END
    4078                    
    4079                    
    4080 00011520           volume_help
    4081 00011520     0000          .word   0               ; center justify
    4082 00011530     0303          .word   COLOR_BLUE      ; color
    4083 00011540     0002          .word   2               ; # of entries
    4084 00011550 00011590'         .long   txt_vh1
    4085 00011570 00011620'         .long   txt_vh2
    4086                    
    4087 00011590       41  txt_vh1 .string "ADJUST THE VOLUME",0
    4088 00011620                   .even
    4089                    
    4090 00011620       4f  txt_vh2 .string "OF THE GAME",0
    4091 00011680                   .even
    4092                    
    4093 00011680           mess_volume
    4094 00011680       56          .string "VOLUME ADJUST",0
    4095 000116f0                   .even
    4096                    
TMS340 COFF Macro Assembler Version 6.10     Wed Apr 21 11:41:33 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   91

    4097 000116f0           MESSOCTO
    4098                    ;       .string "OPEN ICE  -  OCTOPUS MENU",0
    4099 000116f0       4f          .string "OCTOPUS MENU",0
    4100 00011760                   .even
    4101                    
    4102 00011760           MESSMAIN
    4103                    ;       .STRING "OPEN ICE  -  MAIN MENU",0  ;
    4104 00011760       4d          .STRING "MAIN MENU",0  ;
    4105 000117b0                   .EVEN
    4106                    
    4107 000117b0           MESS_DIAG
    4108 000117b0       44          .STRING "DIAGNOSTIC ",W_TEST,"S",0
    4109 00011820                   .EVEN
    4110                    
    4111 00011820           MES_BOOK
    4112 00011820           MESS_COIN_AUD
    4113 00011820       8b          .STRING W_COIN," ",W_BOOK,"KEEPING",0
    4114 00011880                   .EVEN
    4115                    
    4116 00011880           MES_AUD
    4117 00011880           MESS_GAME_AUD
    4118 00011880       84          .STRING W_GAME," ",W_AUDITS,0
    4119 000118a0                   .EVEN
    4120                    
    4121                    ; WBD ST
    4122 000118a0           MESS_PRICING
    4123 000118a0       87          .STRING W_PRICING," OPTIONS",0
    4124 000118f0                   .EVEN
    4125                    ; WBD ST
    4126                    
    4127 000118f0           MESS_GAME_ADJ
    4128 000118f0       84          .STRING W_GAME," ",W_ADJUSTMENT,0
    4129 00011910                   .EVEN
    4130                    
    4131 00011910           MESS_UTIL
    4132 00011910       55          .STRING "UTILITIES",0
    4133 00011960                   .EVEN
    4134                    
    4135                    ;M_CALIBRATE
    4136                    ;       .STRING "CALIBRATE GUNS",0
    4137                    ;       .EVEN
    4138                    
    4139 00011960           MESS_EXIT
    4140 00011960       45          .STRING "EXIT TO ",W_GAME," OVER",0
    4141 000119e0                   .EVEN
    4142                    
    4143 000119e0           DIAG_HELP
    4144 000119e0     0000          .WORD   0               ;CENTER JUSTIFY
    4145 000119f0     0303          .WORD   COLOR_BLUE      ;COLOR
    4146 00011a00     0007          .WORD   7               ;2 ENTRIES
    4147 00011a10 00011df0'         .LONG   MESS_SWTEST
    4148 00011a30 00011e10'         .LONG   MESS_DIPTEST
    4149 00011a50 00011e50'         .LONG   MESS_CPUTEST
    4150 00011a70 00011e90'         .LONG   M_STEST
    4151 00011a90 00011ee0'         .LONG   MESS_PATTERNS
TMS340 COFF Macro Assembler Version 6.10     Wed Apr 21 11:41:33 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   92

    4152 00011ab0 00011f70'         .LONG   MESS_DRIVER
    4153 00011ad0 00011fd0'         .LONG   U_BURNIN
    4154                    
    4155 00011af0           COIN_HELP
    4156 00011af0     0000           .WORD   0               ;CENTER JUSTIFY
    4157 00011b00     0303           .WORD  COLOR_BLUE      ;COLOR
    4158 00011b10     0003           .WORD   3               ;2 ENTRIES
    4159 00011b20 00012020'          .LONG   CH_0
    4160 00011b40 00012090'          .LONG   CH_1
    4161 00011b60 000120c0'          .LONG   CH_2
    4162                    
    4163 00011b80           AUDIT_HELP
    4164 00011b80     0000           .WORD   0               ;CENTER JUSTIFY
    4165 00011b90     0303           .WORD  COLOR_BLUE      ;COLOR
    4166 00011ba0     0002           .WORD   2               ;2 ENTRIES
    4167 00011bb0 00012120'          .LONG   AH_1
    4168 00011bd0 00012160'          .LONG   AH_2
    4169                    ; WBD ST
    4170 00011bf0           PADJUST_HELP
    4171 00011bf0     0000           .WORD   0               ;CENTER JUSTIFY
    4172 00011c00     0303           .WORD  COLOR_BLUE      ;COLOR
    4173 00011c10     0002           .WORD   2               ;3 ENTRIES
    4174 00011c20 000121d0'          .LONG   AD_1
    4175 00011c40 00012250'          .LONG   AD_2
    4176                    
    4177 00011c60           GADJUST_HELP
    4178 00011c60     0000           .WORD   0               ;CENTER JUSTIFY
    4179 00011c70     0303           .WORD  COLOR_BLUE      ;COLOR
    4180 00011c80     0002           .WORD   2               ;3 ENTRIES
    4181 00011c90 000121d0'          .LONG   AD_1
    4182 00011cb0 000122e0'          .LONG   AD_3
    4183                    ; WBD END
    4184                    
    4185                    ;CALIBRATE_HELP
    4186                    ;         .WORD   0               ;CENTER JUSTIFY
    4187                    ;         .WORD COLOR_BLUE      ;COLOR
    4188                    ;         .WORD   3               ;3 ENTRIES
    4189                    ;         .LONG   GCH_1
    4190                    ;         .LONG   GCH_2
    4191                    ;         .LONG   GCH_3
    4192                    
    4193 00011cd0           UTIL_HELP
    4194 00011cd0     0000          .WORD   0               ;CENTER JUSTIFY
    4195 00011ce0     0303          .WORD   COLOR_BLUE      ;COLOR
    4196 00011cf0     0005          .WORD   5               ;NUMBER OF ENTRIES
    4197                    ****    .LONG   U_OPMESS
    4198 00011d00 0001a260'         .LONG   U_CLR_CRED
    4199 00011d20 0001a2b0'         .LONG   U_CLR_COIN
    4200 00011d40 0001a2d0'         .LONG   U_CLR_AUD
    4201 00011d60 00012410'         .LONG   U_HSRESET
    4202 00011d80 00012480'         .LONG   U_FACTORY
    4203                    
    4204 00011da0           EXIT_HELP
    4205 00011da0     0000           .WORD   0               ;CENTER JUSTIFY
    4206 00011db0     0303           .WORD  COLOR_BLUE      ;COLOR
TMS340 COFF Macro Assembler Version 6.10     Wed Apr 21 11:41:33 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   93

    4207 00011dc0     0001           .WORD   1               ;1 ENTRY
    4208 00011dd0 000124a0'          .LONG   U_END
    4209                    
    4210                    
    4211 00011df0           MESS_SWTEST
    4212 00011df0       98          .STRING W_SWITCH," ",W_TEST,0
    4213 00011e10                   .EVEN
    4214 00011e10           MESS_DIPTEST
    4215 00011e10       44          .STRING "DIP ",W_SWITCH," ",W_TEST,0
    4216 00011e50                   .EVEN
    4217 00011e50           MESS_CPUTEST
    4218 00011e50       43          .STRING "CPU ",W_BOARD," ",W_TEST,0
    4219 00011e90                   .EVEN
    4220 00011e90           MESS_STEST
    4221 00011e90           M_STEST
    4222 00011e90       53          .STRING "SOUND ",W_BOARD," ",W_TEST,0
    4223 00011ee0                   .EVEN
    4224 00011ee0           MESS_PATTERNS
    4225 00011ee0       4d          .STRING "MONITOR PATTERNS",0
    4226 00011f70                   .EVEN
    4227 00011f70           MESS_DRIVER
    4228 00011f70       44          .STRING "DRIVER ",W_BOARD," ",W_TEST,0
    4229 00011fd0                   .EVEN
    4230                    
    4231 00011fd0           MESS_BURN
    4232 00011fd0           U_BURNIN
    4233 00011fd0       42          .STRING "BURN-IN ",W_TEST,0
    4234 00012020                   .EVEN
    4235                    
    4236                    
    4237 00012020           CH_0
    4238 00012020       56          .STRING "VIEW COINBOX",0
    4239 00012090                   .EVEN
    4240 00012090           CH_1
    4241 00012090       b4          .STRING W_TOTALS," AND",0
    4242 000120c0                   .EVEN
    4243 000120c0           CH_2
    4244 000120c0       84          .STRING W_GAME,W_PLAY," COUNTERS",0
    4245 00012120                   .EVEN
    4246                    
    4247 00012120           AH_1
    4248 00012120       56          .STRING "VIEW ",W_GAME,0
    4249 00012160                   .EVEN
    4250 00012160           AH_2
    4251 00012160       8a          .STRING W_PLAY," STATISTICS",0
    4252 000121d0                   .EVEN
    4253                    
    4254                    ;WBD ST
    4255 000121d0           AD_1
    4256 000121d0       4d          .STRING "MAKE CHANGES TO",0
    4257 00012250                   .EVEN
    4258 00012250           AD_2
    4259 00012250       50          .STRING "PRICING SETTINGS",0
    4260 000122e0                   .EVEN
    4261 000122e0           AD_3
TMS340 COFF Macro Assembler Version 6.10     Wed Apr 21 11:41:33 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   94

    4262 000122e0       84          .STRING W_GAME," CHARACTERISTICS",0
    4263 00012370                   .EVEN
    4264                    ;WBD END
    4265                    
    4266                    ;GCH_1
    4267                    ;       .STRING "ALIGN GUNS",0
    4268                    ;       .EVEN
    4269                    ;GCH_2
    4270                    ;       .STRING "SO THAT CURSOR",0
    4271                    ;       .EVEN
    4272                    ;GCH_3
    4273                    ;       .STRING "TRACKS ACCURATELY.",0
    4274                    ;       .EVEN
    4275                    
    4276                    
    4277 00012370           MESS_MM
    4278 00012370       52          .STRING "RETURN TO MAIN MENU",0
    4279 00012410                   .EVEN
    4280 00012410           MESS_HSRESET
    4281 00012410           U_HSRESET
    4282 00012410       52          .STRING "RESET RECORDS",0
    4283 00012480                   .EVEN
    4284 00012480           U_FACTORY
    4285 00012480       90          .STRING W_FACSET,"S",0
    4286 000124a0                   .EVEN
    4287                    
    4288                    
    4289                    ****U_OPMESS
    4290                    ****    .STRING "OPERATOR ",W_MESSAGE,0
    4291                    ****    .EVEN
    4292 000124a0           U_END
    4293 000124a0       45          .STRING "END ",W_TEST,"ING",0
    4294 000124f0                   .EVEN
    4295                    
    4296                    **************************************************************************
    4297                    *                                                                        *
    4298                    *       SOUNDS SYSTEM TESTS MENU                                         *
    4299                    *                                                                        *
    4300                    **************************************************************************
    4301                    
    4302 000124f0           MEN_STEST
    4303 000124f0 00000000!          .LONG   RD7FONT        ;FONT
    4304 00012510 00000000!          .LONG   STRCNRM        ;CENTER PLEASE
    4305 00012530 00011e90'          .LONG   M_STEST        ;TITLE
    4306 00012550     0707           .WORD   COLOR_GREEN    ;COLOR OF TITLE
    4307 00012560     00c8           .WORD   200            ;UL X
    4308 00012570     0065           .WORD   MENU_Y-3       ;UL Y
    4309 00012580     0012           .WORD   18             ;VERTICAL SPACING
    4310 00012590     0101           .WORD   COLOR_RED      ;COLOR WHEN NOT SELECTED
    4311 000125a0     0012           .WORD   18             ;HEIGHT OF SELECTION BAR
    4312 000125b0     fffa           .WORD   -6             ;DISTANCE OF BAR FROM TOP OF TEXT (NEGATIVE)
    4313 000125c0     0006           .WORD   BAR_DX         ;EXTRA X ON EACH SIDE.
    4314 000125d0     00e8           .WORD   0e8h           ;WIDTH OF BAR!
    4315 000125e0     3c3c           .WORD   COLOR_DECAY    ;TEXT COLOR OF SELECTED ITEM
    4316 000125f0 00012790'          .LONG   M_DIGT,GO_DIGT,SND_HELP
TMS340 COFF Macro Assembler Version 6.10     Wed Apr 21 11:41:33 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   95

    4317 00012650 000127e0'          .LONG   M_SYNP,GO_SYNP,SND_PLAY
    4318                    
    4319 000126b0 0001be30'          .LONG   MESS_DIAGM,0,SND_HELP
    4320 00012710 00012370'          .LONG   MESS_MM,FORCE_MAIN,SND_HELP
    4321 00012770 00000000           .LONG   0
    4322                    
    4323                    
    4324 00012790           M_DIGT
    4325 00012790       47          .STRING "GENERAL ",W_TEST,0
    4326 000127e0                   .EVEN
    4327 000127e0           M_SYNP
    4328 000127e0       8a          .STRING W_PLAY," SOUNDS",0
    4329 00012830                   .EVEN
    4330                    
    4331                    
    4332              007d  DAC_LX   EQU     125
    4333                    
    4334                    *
    4335                    *MESSAGE FOR SOUND BOARD IRQ NOT WORKING
    4336                    *
    4337 00012830           SIRQ_ERR
    4338 00012830                   MESS_MAC RD15FONT,SPACING07,200,95,COLOR_PLF,STRCNRM,0
    4339 000128f0       2a          .STRING "** WARNING! **",0
    4340 00012970                   .EVEN
    4341 00012970     0001          .WORD   1
    4342 00012980                   MESS_MAC RD7FONT,SPACING07,200,120,COLOR_PYELLOW,STRCNRM,0
    4343 00012a40       55          .STRING "UNABLE TO DETECT ",W_SOUND," BOARD IRQ.",0
    4344 00012b30                   .EVEN
    4345 00012b30     0001          .WORD   1
    4346 00012b40                   MESS_MAC RD7FONT,SPACING07,200,135,COLOR_PYELLOW,STRCNRM,0
    4347 00012c00       54          .STRING "THIS MAY RESULT IN ERRANT ",W_SOUND,"S.",0
    4348 00012cf0                   .EVEN
    4349 00012cf0     0000          .WORD   0
    4350                    
    4351                    *
    4352                    *FOOTNOTE MESSAGE TO REMIND US THAT THE IRQ FAILED
    4353                    *
    4354 00012d00           SIRQ_ERR2
    4355 00012d00                   MESS_MAC RD7FONT,SPACING07,200,165,COLOR_PRED,STRCNRM,0
    4356 00012dc0       b3          .STRING W_ERROR," - ",W_SOUND," IRQ NOT DETECTED.",0
    4357 00012e80                   .EVEN
    4358 00012e80     0000          .WORD   0
    4359                    
    4360                    
    4361                    *
    4362                    *FOOTNOTE MESSAGE TO TELL US THAT THE IRQ LINE WAS CHECKED
    4363                    *
    4364 00012e90           SIRQ_DETECT
    4365 00012e90                    MESS_MAC  RD7FONT,SPACING07,200,165,COLOR_PGREEN,STRCNRM,0
    4366 00012f50       b1          .STRING W_SOUND," IRQ DETECT FUNCTIONAL.",0
    4367 00013020                   .EVEN
    4368 00013020     0000          .WORD   0
    4369                    
    4370                    *
    4371                    *CLUE OPERATOR IN ON HOW TO TELL IF HIS SOUND BOARD IS WORKING
TMS340 COFF Macro Assembler Version 6.10     Wed Apr 21 11:41:33 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   96

    4372                    *
    4373              00b1  DAC_LX2  EQU     DAC_LX+52
    4374                    
    4375 00013030           DAC_ERR
    4376 00013030                   MESS_MAC RD7FONT,SPACING07,200,80,COLOR_PLF,STRCNRM,0
    4377 000130f0       4c          .STRING "LISTEN FOR ",W_TONE,"S:",0
    4378 00013170                   .EVEN
    4379 00013170     0001          .WORD   1
    4380 00013180                   MESS_MAC RD7FONT,SPACING07,200,92,COLOR_PLF,STRCNRM,0
    4381 00013240       28          .STRING "(WAIT AT LEAST 5 SECONDS)",0
    4382 00013310                   .EVEN
    4383 00013310     0001          .WORD   1
    4384 00013320                   MESS_MAC RD7FONT,SPACING07,DAC_LX,115,COLOR_PYELLOW,STRLNRM,0
    4385 000133e0       30          .STRING "0 ",W_TONE,"S - CHECK HARDWARE",0
    4386 00013490                   .EVEN
    4387 00013490     0001          .WORD   1
    4388 000134a0                   MESS_MAC RD7FONT,SPACING07,DAC_LX,127,COLOR_PYELLOW,STRLNRM,0
    4389 00013560       31          .STRING "1 ",W_TONE," ",0
    4390 00013590                   .EVEN
    4391 00013590     0001          .WORD   1
    4392 000135a0                   MESS_MAC RD7FONT,SPACING07,DAC_LX2,127,COLOR_PYELLOW,STRLNRM,0
    4393 00013660       2d          .STRING "- ",W_SOUND," BOARD OK",0
    4394 000136d0                   .EVEN
    4395 000136d0     0001          .WORD   1
    4396 000136e0                   MESS_MAC RD7FONT,SPACING07,DAC_LX,139,COLOR_PYELLOW,STRLNRM,0
    4397 000137a0       32          .STRING "2 ",W_TONE,"S - RAM ",W_ERROR," U2",0
    4398 00013820                   .EVEN
    4399 00013820     0001          .WORD   1
    4400 00013830                    MESS_MAC  RD7FONT,SPACING07,DAC_LX,151,COLOR_PYELLOW,STRLNRM,0
    4401 000138f0       33          .STRING "3 ",W_TONE,"S - ROM ",W_ERROR," U3",0
    4402 00013970                   .EVEN
    4403 00013970     0000          .WORD   0
    4404                    
    4405                    
    4406                    **************************************************************************
    4407                    *                                                                        *
    4408                    *       DIAGNOSTIC TESTS MENU                                            *
    4409                    *                                                                        *
    4410                    **************************************************************************
    4411                    
    4412 00013980           MEN_DIAG
    4413 00013980 00000000!         .LONG   RD7FONT         ;FONT
    4414 000139a0 00000000!         .LONG   STRCNRM         ;CENTER PLEASE
    4415 000139c0 000117b0'         .LONG   MESS_DIAG       ;TITLE
    4416 000139e0     0101          .WORD   COLOR_RED       ;COLOR OF TITLE
    4417 000139f0     00c8          .WORD   200             ;UL X
    4418 00013a00     0065          .WORD   MENU_Y-3        ;UL Y
    4419 00013a10     0011          .WORD   MENU_DY-6       ;VERTICAL SPACING
    4420 00013a20     0101          .WORD   COLOR_RED       ;COLOR WHEN NOT SELECTED
    4421 00013a30     0013          .WORD   BAR_HITE-7      ;HEIGHT OF SELECTION BAR
    4422 00013a40     fffa          .WORD   -6              ;DISTANCE OF BAR FROM TOP OF TEXT (NEGATIVE)
    4423 00013a50     0006          .WORD   BAR_DX          ;EXTRA X ON EACH SIDE.
    4424 00013a60     00c3          .WORD   195             ;WIDTH OF BAR!  (A LITTLE FATTER)
    4425 00013a70     3c3c          .WORD   COLOR_DECAY     ;TEXT COLOR OF SELECTED ITEM (SHOULD BE DECAY)
    4426 00013a80 00011df0'         .LONG   MESS_SWTEST,GO_SWITCH,BLNK_HELP
TMS340 COFF Macro Assembler Version 6.10     Wed Apr 21 11:41:33 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   97

    4427 00013ae0 00011e10'         .LONG   MESS_DIPTEST,GO_DIP,BLNK_HELP
    4428              0003  ROM_LEV EQU     3               ;TEST NUMBER FOLLOWING ROM TEST
    4429 00013b40 00011e50'         .LONG   MESS_CPUTEST,GO_CPU,BLNK_HELP
    4430              0004  RTR_LEV EQU     4               ;TEST NUMBER FOLLOWING CPU TEST (FOR RETURN)
    4431 00013ba0 00011e90'         .LONG   M_STEST,GO_STEST,BLNK_HELP
    4432 00013c00 00011ee0'         .LONG   MESS_PATTERNS,GO_PATTERNS,BLNK_HELP
    4433                    ;       .LONG   MESS_DRIVER,GO_DRIVER,BLNK_HELP
    4434 00013c60 00011fd0'         .LONG   MESS_BURN,GO_BURN,BLNK_HELP
    4435 00013cc0 00012370'         .LONG   MESS_MM,0,BLNK_HELP        ;RETURN TO MAIN MENU
    4436 00013d20 00000000          .LONG   0
    4437                    
    4438                    **************************************************************************
    4439                    *                                                                        *
    4440                    *       BOOKKEEPING                                                      *
    4441                    *                                                                        *
    4442                    **************************************************************************
    4443                    
    4444                    **************************************************************************
    4445                    *                                                                        *
    4446                    *          AUDIT TABLE STRUCTURE                                         *
    4447                    *                                                                        *
    4448                    **************************************************************************
    4449                    
    4450              0000  AUD_MESS        EQU     0                       ;LONG-PTR TO TEXT
    4451              0020  AUD_ROUTINE     EQU     AUD_MESS+LONG_SIZE      ;LONG - NON ZERO MEANS CALL FOR NUMBER
    4452              0040  AUD_NUMBER      EQU     AUD_ROUTINE+LONG_SIZE   ;WORD - IF ABOVE ZERO, THEN AUDIT NUMBER
    4453              0050  AUD_T_SIZE      EQU     AUD_NUMBER+WORD_SIZE
    4454                    
    4455                    AMAC     .MACRO  MESS,ROUT,AUDIT
    4456                             .LONG   :MESS:
    4457                             .LONG   :ROUT:
    4458                             .WORD   :AUDIT:
    4459                             .ENDM
    4460                    
    4461              0005  AUD_LM          EQU     TIT_ULX                 ;SQUARE OFF AUDITS W/ HEADER.
    4462              0185  AUD_RM          EQU     TIT_LRX
    4463              003d  AUD_Y_START     EQU     61
    4464              0012  AUD_DY          EQU     18
    4465                    
    4466              008e  CP2_Y           EQU     142                     ;PART 2 OF COIN AUDIT PAGE.
    4467                    
    4468 00013d40           MES_TOTALS
    4469 00013d40       af          .STRING W_TOTAL," ",W_COLLECTION,0
    4470 00013d60                   .EVEN
    4471                    
    4472                    *
    4473                    *       DETAILED COINAGE AVAILABLE (ON 1ST COINAGE PAGE)
    4474                    *
    4475 00013d60           MEN_DETAIL
    4476 00013d60 00000000!         .LONG   RD7FONT         ;FONT
    4477 00013d80 00000000!         .LONG   STRCNRM         ;CENTER PLEASE
    4478 00013da0 00011ee0'         .LONG   MESS_PATTERNS   ;TITLE
    4479 00013dc0     0505          .WORD   COLOR_YELLOW    ;COLOR OF TITLE
    4480 00013dd0     00c8          .WORD   200             ;UL X   (CENTER IT!)
    4481 00013de0     00e3          .WORD   227             ;UL Y
TMS340 COFF Macro Assembler Version 6.10     Wed Apr 21 11:41:33 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   98

    4482 00013df0     000c          .WORD   12              ;VERTICAL SPACING
    4483 00013e00     0303          .WORD   COLOR_BLUE      ;COLOR WHEN NOT SELECTED
    4484 00013e10     000c          .WORD   12              ;HEIGHT OF SELECTION BAR
    4485 00013e20     fffe          .WORD   -2              ;DISTANCE OF BAR FROM TOP OF TEXT (NEGATIVE)
    4486 00013e30     0006          .WORD   BAR_DX          ;EXTRA X ON EACH SIDE.
    4487 00013e40     00aa          .WORD   170             ;WIDTH OF BAR!
    4488 00013e50     3c3c          .WORD   COLOR_DECAY     ;TEXT COLOR OF SELECTED ITEM
    4489 00013e60 00013f40'         .LONG   MESS_DETAIL,0,NO_HELP           ;DETAILED SECTION
    4490 00013ec0 00012370'         .LONG   MESS_MM,FORCE_MAIN,NO_HELP      ;RETURN TO MAIN MENU
    4491 00013f20 00000000          .LONG   0
    4492                    
    4493                    
    4494 00013f40           MESS_DETAIL
    4495 00013f40       4d           .STRING         "MORE DETAILED DATA"
    4496 00013fd0       00           .BYTE           0
    4497 00013fe0                    .EVEN
    4498                    
    4499                    
    4500                    
    4501                    *
    4502                    *        TOP HALF OF COIN AUDIT PAGE 1 TABLE
    4503                    *
    4504 00013fe0           COIN_AUDS
    4505 00013fe0     003d          .WORD   AUD_Y_START             ;Y START
    4506 00013ff0     0010          .WORD   16                      ;Y BETWEEN ENTRIES
    4507 00014000     0005          .WORD   AUD_LM                  ;LEFT MARGIN X
    4508 00014010     0185          .WORD   AUD_RM                  ;RIGHT MARGIN X
    4509 00014020                   AMAC    M_LCOIN,0,AUDLCOIN
    4510 00014070                   AMAC    M_RCOIN,0,AUDRCOIN
    4511 000140c0                   AMAC    M_CCOIN,0,AUDCCOIN
    4512 00014110                   AMAC    M_4COIN,0,AUD4COIN
    4513 00014160                   AMAC    M_DBV,0,AUD_DBV
    4514 000141b0                   AMAC    M_SCOIN,0,AUDSCOIN
    4515 00014200                   AMAC    M_PAIDC,0,AUDPAIDC
    4516                    ;       AMAC    M_START,STARTS,0
    4517                    ;       AMAC    M_CONT,CONTINS,0
    4518                    ;       AMAC    M_PLAYS,DOPLAYS,0
    4519                    ;       AMAC    M_HSLEFT,DOHSLEFT,0
    4520 00014250 00000000          .LONG   0
    4521                    
    4522                    
    4523 00014270           M_WDOG:
    4524 00014270       57          .STRING "WATCHDOGS TRIGGERED",0
    4525 00014310                   .EVEN
    4526 00014310           M_SECURITY
    4527 00014310       53          .STRING "START FAILURES",0
    4528 00014390                   .EVEN
    4529                    
    4530                    
    4531 00014390           M_BADTRAP
    4532 00014390       53          .STRING "SOFTWARE TRAPS",0
    4533 00014410                   .EVEN
    4534 00014410           M_WARNING
    4535 00014410       53          .STRING "SOFTWARE WARNINGS",0
    4536 000144a0                   .EVEN
TMS340 COFF Macro Assembler Version 6.10     Wed Apr 21 11:41:33 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   99

    4537                    
    4538                    
    4539 000144a0           MS_STARTS
    4540 000144a0       47          .STRING "GAMES STARTED",0
    4541 00014510                   .EVEN
    4542 00014510           MS_PERIOD1
    4543 00014510       50          .STRING "PERIOD 1 PLAYED",0
    4544 00014590                   .EVEN
    4545 00014590           MS_PERIOD2
    4546 00014590       50          .STRING "PERIOD 2 PLAYED",0
    4547 00014610                   .EVEN
    4548 00014610           MS_PERIOD3
    4549 00014610       50          .STRING "PERIOD 3 PLAYED",0
    4550 00014690                   .EVEN
    4551 00014690           MS_PERIODOT
    4552 00014690       4f          .STRING "OVERTIME PLAYED",0
    4553 00014710                   .EVEN
    4554 00014710           MS_PL_STARTS
    4555 00014710       50          .STRING "PLAYER STARTS",0
    4556 00014780                   .EVEN
    4557 00014780           MS_PL_PERIODS
    4558 00014780       50          .STRING "PERIODS BOUGHT",0
    4559 00014800                   .EVEN
    4560 00014800           MS_FREEP
    4561 00014800       50          .string "PERIODS GIVEN FREE",0
    4562 000148a0                   .even
    4563 000148a0           MS_PLAYTIME
    4564 000148a0       54          .STRING "TOTAL PLAYTIME",0
    4565 00014920                   .EVEN
    4566 00014920           MS_UPTIME
    4567 00014920       54          .STRING "TOTAL GAME UPTIME",0
    4568 000149b0                   .EVEN
    4569 000149b0           MS_ONTIME
    4570 000149b0       47          .STRING "GAME ON FOR",0
    4571 00014a10                   .EVEN
    4572 00014a10           MS_1_TIME
    4573 00014a10       54          .STRING "TIME 1 PLAYER ONLY",0
    4574 00014ab0                   .EVEN
    4575 00014ab0           MS_2_TIME
    4576 00014ab0       54          .STRING "TIME 2 PLAYER SIMULTANEOUS",0
    4577 00014b90                   .EVEN
    4578 00014b90           MS_3_TIME
    4579 00014b90       54          .STRING "TIME 3 PLAYER SIMULTANEOUS",0
    4580 00014c70                   .EVEN
    4581 00014c70           MS_4_TIME
    4582 00014c70       54          .STRING "TIME 4 PLAYER SIMULTANEOUS",0
    4583 00014d50                   .EVEN
    4584 00014d50           MS_INITIALS_ENTERED
    4585 00014d50       49          .STRING "INITIALS ENTERED",0
    4586 00014de0                   .EVEN
    4587 00014de0           MS_TIES
    4588 00014de0       54          .STRING "TIE GAMES",0
    4589 00014e30                   .EVEN
    4590 00014e30           MS_LEFT_WINS
    4591 00014e30       4c          .STRING "LEFT TEAM WINS",0
TMS340 COFF Macro Assembler Version 6.10     Wed Apr 21 11:41:33 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE  100

    4592 00014eb0                   .EVEN
    4593 00014eb0           MS_RIGHT_WINS
    4594 00014eb0       52          .STRING "RIGHT TEAM WINS",0
    4595 00014f30                   .EVEN
    4596 00014f30           MS_CPU_WIN
    4597 00014f30       43          .STRING "CPU TEAM WINS",0
    4598 00014fa0                   .EVEN
    4599 00014fa0           MS_CPU_LOSS
    4600 00014fa0       43          .STRING "CPU TEAM LOSSES",0
    4601 00015020                   .EVEN
    4602 00015020           MS_CPU_TIE
    4603 00015020       43          .STRING "CPU TEAM TIES",0
    4604 00015090                   .EVEN
    4605 00015090           MS_GOALS
    4606 00015090       47          .STRING "GOALS SCORED",0
    4607 00015100                   .EVEN
    4608 00015100           MS_ASSISTS
    4609 00015100       41          .STRING "ASSISTS",0
    4610 00015140                   .EVEN
    4611 00015140           MS_LEFT_GOALS
    4612 00015140       4c          .STRING "LEFT TEAM GOALS",0
    4613 000151c0                   .EVEN
    4614 000151c0           MS_RIGHT_GOALS
    4615 000151c0       52          .STRING "RIGHT TEAM GOALS",0
    4616 00015250                   .EVEN
    4617 00015250           MS_CPU_TEAM_GOALS
    4618 00015250       43          .STRING "CPU TEAM GOALS",0
    4619 000152d0                   .EVEN
    4620 000152d0           MS_CPU_PLAYER_GOALS
    4621 000152d0       43          .STRING "CPU PLAYER GOALS",0
    4622 00015360                   .EVEN
    4623 00015360           MS_HUMAN_GOALS
    4624 00015360       48          .STRING "HUMAN PLAYER GOALS",0
    4625 00015400                   .EVEN
    4626 00015400           MS_UNCREDITED_GOALS
    4627 00015400       47          .STRING "GOALIE ON FIRE",0
    4628 00015480                   .EVEN
    4629 00015480           MS_GOALIE_SAVES
    4630 00015480       47          .STRING "GOALIE SAVES",0
    4631 000154f0                   .EVEN
    4632 000154f0           MS_GOALIE_MISSES
    4633 000154f0       47          .STRING "GOALIE MISSES",0
    4634 00015560                   .EVEN
    4635 00015560           MS_ON_FIRE
    4636 00015560       4f          .STRING "ON FIRES",0
    4637 000155b0                   .EVEN
    4638 000155b0           MS_ON_FIRE_GOALS
    4639 000155b0       4f          .STRING "ON FIRE GOALS",0
    4640 00015620                   .EVEN
    4641 00015620           MS_BRUINS
    4642 00015620       42          .STRING "BOSTON BRUINS SELECTED",0
    4643 000156e0                   .EVEN
    4644 000156e0           MS_SABRES
    4645 000156e0       42          .STRING "BUFFALO SABRES SELECTED",0
    4646 000157a0                   .EVEN
TMS340 COFF Macro Assembler Version 6.10     Wed Apr 21 11:41:33 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE  101

    4647 000157a0           MS_WHALERS
    4648 000157a0       48          .STRING "HARTFORD WHALERS SELECTED",0
    4649 00015870                   .EVEN
    4650 00015870           MS_CANADIENS
    4651 00015870       4d          .STRING "MONTREAL CANADIENS SELECTED",0
    4652 00015950                   .EVEN
    4653 00015950           MS_SENATORS
    4654 00015950       4f          .STRING "OTTAWA SENATORS SELECTED",0
    4655 00015a20                   .EVEN
    4656 00015a20           MS_PENGUINS
    4657 00015a20       50          .STRING "PITTSBURGH PENGUINS SELECTED",0
    4658 00015b10                   .EVEN
    4659 00015b10           MS_AVALANCHE
    4660 00015b10       43          .STRING "COLORADO AVALANCHE SELECTED",0
    4661 00015bf0                   .EVEN
    4662 00015bf0           MS_PANTHERS
    4663 00015bf0       46          .STRING "FLORIDA PANTHERS SELECTED",0
    4664 00015cc0                   .EVEN
    4665 00015cc0           MS_DEVILS
    4666 00015cc0       4e          .STRING "NEW JERSEY DEVILS SELECTED",0
    4667 00015da0                   .EVEN
    4668 00015da0           MS_ISLANDERS
    4669 00015da0       4e          .STRING "NEW YORK ISLANDERS SELECTED",0
    4670 00015e80                   .EVEN
    4671 00015e80           MS_RANGERS
    4672 00015e80       4e          .STRING "NEW YORK RANGERS SELECTED",0
    4673 00015f50                   .EVEN
    4674 00015f50           MS_FLYERS
    4675 00015f50       50          .STRING "PHILADELPHIA FLYERS SELECTED",0
    4676 00016040                   .EVEN
    4677 00016040           MS_LIGHTNING
    4678 00016040       54          .STRING "TAMPA BAY LIGHTNING SELECTED",0
    4679 00016130                   .EVEN
    4680 00016130           MS_CAPITALS
    4681 00016130       57          .STRING "WASHINGTON CAPITALS SELECTED",0
    4682 00016220                   .EVEN
    4683 00016220           MS_BLACKHAWKS
    4684 00016220       43          .STRING "CHICAGO BLACKHAWKS SELECTED",0
    4685 00016300                   .EVEN
    4686 00016300           MS_STARS
    4687 00016300       44          .STRING "DALLAS STARS SELECTED",0
    4688 000163b0                   .EVEN
    4689 000163b0           MS_RED_WINGS
    4690 000163b0       44          .STRING "DETROIT RED WINGS SELECTED",0
    4691 00016490                   .EVEN
    4692 00016490           MS_BLUES
    4693 00016490       53          .STRING "ST. LOUIS BLUES SELECTED",0
    4694 00016560                   .EVEN
    4695 00016560           MS_MAPLE_LEAFS
    4696 00016560       54          .STRING "TORONTO MAPLE LEAFS SELECTED",0
    4697 00016650                   .EVEN
    4698 00016650           MS_JETS
    4699 00016650       57          .STRING "WINNIPEG JETS SELECTED",0
    4700 00016710                   .EVEN
    4701 00016710           MS_MIGHTY_DUCKS
TMS340 COFF Macro Assembler Version 6.10     Wed Apr 21 11:41:33 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE  102

    4702 00016710       4d          .STRING "MIGHT DUCKS OF ANAHEIM SELECTED",0
    4703 00016810                   .EVEN
    4704 00016810           MS_FLAMES
    4705 00016810       43          .STRING "CALGARY FLAMES SELECTED",0
    4706 000168d0                   .EVEN
    4707 000168d0           MS_OILERS
    4708 000168d0       45          .STRING "EDMONTON OILERS SELECTED",0
    4709 000169a0                   .EVEN
    4710 000169a0           MS_KINGS
    4711 000169a0       4c          .STRING "LOS ANGELES KINGS SELECTED",0
    4712 00016a80                   .EVEN
    4713 00016a80           MS_SHARKS
    4714 00016a80       53          .STRING "SAN JOSE SHARKS SELECTED",0
    4715 00016b50                   .EVEN
    4716 00016b50           MS_CANUCKS
    4717 00016b50       56          .STRING "VANCOUVER CANUCKS SELECTED",0
    4718 00016c30                   .EVEN
    4719 00016c30           MS_ALL_BEATEN
    4720 00016c30       41          .STRING "ALL TEAMS BEATEN",0
    4721 00016cc0                   .EVEN
    4722 00016cc0           MS_RANDOM_PICKED
    4723 00016cc0       52          .STRING "RANDOM TEAM SELECTED",0
    4724 00016d70                   .EVEN
    4725 00016d70           MS_SECRET_CHAR
    4726 00016d70       53          .STRING "SPECIAL CHARACTER SELECTED",0
    4727 00016e50                   .EVEN
    4728                    
    4729                    *
    4730                    *        BOTTOM HALF OF COIN AUDIT PAGE 1 TABLE
    4731                    *
    4732                    
    4733                    
    4734 00016e50           M_LCOIN
    4735 00016e50       aa          .STRING W_LEFT," ",W_SLOT," ",W_COINS,0
    4736 00016e80                   .EVEN
    4737 00016e80           M_CCOIN
    4738 00016e80       54          .STRING "THIRD ",W_SLOT," ",W_COINS,0
    4739 00016ed0                   .EVEN
    4740 00016ed0           M_RCOIN
    4741 00016ed0       9e          .STRING W_RIGHT," ",W_SLOT," ",W_COINS,0
    4742 00016f00                   .EVEN
    4743 00016f00           M_4COIN
    4744 00016f00       97          .STRING W_FOURTH," ",W_SLOT," ",W_COINS,0
    4745 00016f30                   .EVEN
    4746                    
    4747 00016f30       42  M_DBV   .STRING "BILL VALIDATOR ",W_COINS,0
    4748 00016fc0                   .EVEN
    4749                    
    4750 00016fc0           M_SCOIN
    4751 00016fc0       53          .STRING "SERVICE ",W_CREDITS,0
    4752 00017010                   .EVEN
    4753 00017010           M_PAIDC
    4754 00017010       50          .STRING "PAID ",W_CREDITS,0
    4755 00017050                   .EVEN
    4756 00017050           M_START
TMS340 COFF Macro Assembler Version 6.10     Wed Apr 21 11:41:33 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE  103

    4757 00017050       9c          .STRING W_GAMES," ",W_START,"ED",0
    4758 00017080                   .EVEN
    4759                    ;M_CONT
    4760                    ;       .STRING W_GAMES," ",W_CONTINUE,"D",0
    4761                    ;       .STRING W_GAMES," FINISHED",0
    4762                    ;       .EVEN
    4763 00017080           M_PLAYS
    4764 00017080       af          .STRING W_TOTAL," ",W_PLAYS,0
    4765 000170a0                   .EVEN
    4766 000170a0           M_HSLEFT
    4767 000170a0       9f          .STRING W_PLAYS," UNTIL H.S. RESET",0
    4768 00017140                   .EVEN
    4769 00017140           M_HSOFF
    4770 00017140       4f          .STRING "OFF",0
    4771 00017160                   .EVEN
    4772                    
    4773                    
    4774                    *
    4775                    *        AUDIT TEXT
    4776                    *
    4777 00017160           MESS_ERROR
    4778 00017160                    MESS_MAC  RD7FONT,SPACING07,0,0,COLOR_PRED,STRLNRM,0
    4779 00017220       20           .STRING   "  ",W_ERROR
    4780 00017238       00           .BYTE     0
    4781 00017240                    .EVEN
    4782                    
    4783 00017240           MESS_AUD_NUM
    4784 00017240                    MESS_MAC  RD7FONT,SPACING07,367,227,COLOR_PYELLOW,STRRNRM,0
    4785                    
    4786 00017300           MESS15_AUD_NUM
    4787 00017300                    MESS_MAC  RD15FONT,SPACING07,367,227,COLOR_PYELLOW,STRRNRM,0
    4788                    
    4789 000173c0           MESS_AUD_LINE
    4790 000173c0                    MESS_MAC  RD7FONT,SPACING07,30,355,COLOR_PYELLOW,STRLNRM,0
    4791                    
    4792 00017480           MESS15_AUD_LINE
    4793 00017480                    MESS_MAC  RD15FONT,SPACING07,30,355,COLOR_PYELLOW,STRLNRM,0
    4794                    
    4795                    **************************************************************************
    4796                    *                                                                        *
    4797                    *          COIN_D1                                                       *
    4798                    *                                                                        *
    4799                    *          THIS IS TOP HALF OF DETAILED COIN AUDIT PAGE                  *
    4800                    *          ITS THE SAME AS THE OTHER COIN PAGE WITH THE Y POSITIONING    *
    4801                    *          A LITTLE DIFFERENT                                            *
    4802                    *                                                                        *
    4803                    **************************************************************************
    4804 00017540           COIN_D1
    4805 00017540     0043          .WORD   AUD_Y_START+6
    4806 00017550     0015          .WORD   21                      ;Y BETWEEN ENTRIES
    4807 00017560     0005          .WORD   AUD_LM                  ;LEFT MARGIN X
    4808 00017570     0185          .WORD   AUD_RM                  ;RIGHT MARGIN X
    4809 00017580                   AMAC    M_LCOIN,0,AUDLCOIN
    4810 000175d0                   AMAC    M_RCOIN,0,AUDRCOIN
    4811 00017620                   AMAC    M_CCOIN,0,AUDCCOIN
TMS340 COFF Macro Assembler Version 6.10     Wed Apr 21 11:41:33 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE  104

    4812 00017670                   AMAC    M_4COIN,0,AUD4COIN
    4813 000176c0                   AMAC    M_DBV,0,AUD_DBV
    4814 00017710                   AMAC    M_TOTCOL,DO_MONEY,0
    4815 00017760 00000000          .LONG   0
    4816                    
    4817 00017780           COIN_SD1
    4818 00017780     0043          .WORD   AUD_Y_START+6
    4819 00017790     0015          .WORD   21                      ;Y BETWEEN ENTRIES
    4820 000177a0     0005          .WORD   AUD_LM                  ;LEFT MARGIN X
    4821 000177b0     0185          .WORD   AUD_RM                  ;RIGHT MARGIN X
    4822 000177c0                   AMAC    M_LCOIN,0,AUDLCOIN
    4823 00017810                   AMAC    M_RCOIN,0,AUDRCOIN
    4824 00017860                   AMAC    M_CCOIN,0,AUDCCOIN
    4825 000178b0                   AMAC    M_4COIN,0,AUD4COIN
    4826 00017900                   AMAC    M_DBV,0,AUD_DBV
    4827 00017950 00000000          .LONG   0
    4828                    
    4829                    *
    4830                    *        DOOR CLOSED AUDITS.
    4831                    *
    4832 00017970           M_TOTCOL
    4833 00017970       af          .STRING W_TOTAL,0
    4834 00017980                   .EVEN
    4835                    
    4836                    
    4837 00017980           MESS_CLEAR_SUBS
    4838 00017980       94          .STRING W_CLEAR," ",W_COINCOUNTS,0
    4839 000179a0                   .EVEN
    4840                    
    4841                    
    4842 000179a0           MESS_SUBS_CLEAR
    4843 000179a0       b5          .STRING W_COINCOUNTS," ",W_CLEAR,"ED",0
    4844 000179d0                   .EVEN
    4845                    
    4846                    
    4847 000179d0           MESS_YES
    4848 000179d0       59          .STRING "YES",0
    4849 000179f0                   .EVEN
    4850 000179f0           MESS_NO
    4851 000179f0       4e          .STRING "NO",0
    4852 00017a10                   .EVEN
    4853                    
    4854                    
    4855                    *
    4856                    *       CLEAR SUB-TOTALS (ON DETAILED COINAGE PAGE)
    4857                    *
    4858 00017a10           MEN_CLR_SUB
    4859 00017a10 00000000!         .LONG   RD7FONT         ;FONT
    4860 00017a30 00000000!         .LONG   STRCNRM         ;CENTER PLEASE
    4861 00017a50 00011ee0'         .LONG   MESS_PATTERNS   ;TITLE
    4862 00017a70     0505          .WORD   COLOR_YELLOW    ;COLOR OF TITLE
    4863 00017a80     00c8          .WORD   200             ;UL X   (CENTER IT!)
    4864 00017a90     00e3          .WORD   227             ;UL Y
    4865 00017aa0     000c          .WORD   12              ;VERTICAL SPACING
    4866 00017ab0     0303          .WORD   COLOR_BLUE      ;COLOR WHEN NOT SELECTED
TMS340 COFF Macro Assembler Version 6.10     Wed Apr 21 11:41:33 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE  105

    4867 00017ac0     000c          .WORD   12              ;HEIGHT OF SELECTION BAR
    4868 00017ad0     fffe          .WORD   -2              ;DISTANCE OF BAR FROM TOP OF TEXT (NEGATIVE)
    4869 00017ae0     0006          .WORD   BAR_DX          ;EXTRA X ON EACH SIDE.
    4870 00017af0     00aa          .WORD   170             ;WIDTH OF BAR!
    4871 00017b00     3c3c          .WORD   COLOR_DECAY     ;TEXT COLOR OF SELECTED ITEM
    4872 00017b10 00017980'         .LONG   MESS_CLEAR_SUBS,0,NO_HELP       ;CLEAR SUB-TOTALS
    4873 00017b70 00012370'         .LONG   MESS_MM,FORCE_MAIN,NO_HELP      ;RETURN TO MAIN MENU
    4874 00017bd0 00000000          .LONG   0
    4875                    
    4876                    *
    4877                    *       YES/NO  (FOR ARE YOU SURE?)
    4878                    *
    4879 00017bf0           MEN_YN
    4880 00017bf0 00000000!         .LONG   RD7FONT         ;FONT
    4881 00017c10 00000000!         .LONG   STRCNRM         ;CENTER PLEASE
    4882 00017c30 00011ee0'         .LONG   MESS_PATTERNS   ;TITLE
    4883 00017c50     0101          .WORD   COLOR_RED       ;COLOR OF TITLE
    4884 00017c60     00c8          .WORD   200             ;UL X
    4885 00017c70     00a6          .WORD   166             ;UL Y
    4886 00017c80     0011          .WORD   17              ;VERTICAL SPACING
    4887 00017c90     0505          .WORD   COLOR_YELLOW    ;COLOR WHEN NOT SELECTED
    4888 00017ca0     0011          .WORD   17              ;HEIGHT OF SELECTION BAR
    4889 00017cb0     fffc          .WORD   -4              ;DISTANCE OF BAR FROM TOP OF TEXT (NEGATIVE)
    4890 00017cc0     0006          .WORD   BAR_DX          ;EXTRA X ON EACH SIDE.
    4891 00017cd0     004e          .WORD   78              ;WIDTH OF BAR!  (A LITTLE FATTER)
    4892 00017ce0     3c3c          .WORD   COLOR_DECAY     ;TEXT COLOR OF SELECTED ITEM
    4893 00017cf0 000179d0'         .LONG   MESS_YES,0,NO_HELP
    4894 00017d50 000179f0'         .LONG   MESS_NO,0,NO_HELP
    4895 00017db0 00000000          .LONG   0
    4896                    
    4897                    **************************************************************************
    4898                    *                                                                        *
    4899                    *               GAME PLAY AUDIT PAGES                                    *
    4900                    *                                                                        *
    4901                    **************************************************************************
    4902 00017dd0           GAME_AUDS
    4903 00017dd0     003d          .word   61                      ;Y START
    4904 00017de0     000b          .word   11                      ;Y BETWEEN ENTRIES
    4905 00017df0     0005          .word   AUD_LM                  ;LEFT MARGIN X
    4906 00017e00     0185          .word   AUD_RM                  ;RIGHT MARGIN X
    4907 00017e10                   AMAC    MS_STARTS,0,AUD_STARTS
    4908 00017e60                   AMAC    MS_PERIOD1,0,AUD_PERIOD1
    4909 00017eb0                   AMAC    MS_PERIOD2,0,AUD_PERIOD2
    4910 00017f00                   AMAC    MS_PERIOD3,0,AUD_PERIOD3
    4911 00017f50                   AMAC    MS_PERIODOT,0,AUD_PERIODOT
    4912 00017fa0                   AMAC    MS_PL_STARTS,0,AUD_PL_STARTS
    4913 00017ff0                   AMAC    MS_PL_PERIODS,0,AUD_PL_PERIODS
    4914 00018040                   AMAC    MS_FREEP,0,AUD_FREEP
    4915 00018090                   AMAC    MS_PLAYTIME,DO_PTIME,0
    4916 000180e0                   AMAC    MS_UPTIME,DO_UPTIME,0
    4917 00018130                   AMAC    MS_1_TIME,DO_P1TIME,0
    4918 00018180                   AMAC    MS_2_TIME,DO_P2TIME,0
    4919 000181d0                   AMAC    MS_3_TIME,DO_P3TIME,0
    4920 00018220                   AMAC    MS_4_TIME,DO_P4TIME,0
    4921 00018270 00000000          .long   0
TMS340 COFF Macro Assembler Version 6.10     Wed Apr 21 11:41:33 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE  106

    4922 00018290 00000000          .long   0
    4923                    
    4924 000182b0           GAME_AUD2
    4925 000182b0     003d          .word   61                      ;Y START
    4926 000182c0     000c          .word   12                      ;Y BETWEEN ENTRIES
    4927 000182d0     0005          .word   AUD_LM                  ;LEFT MARGIN X
    4928 000182e0     0185          .word   AUD_RM                  ;RIGHT MARGIN X
    4929 000182f0                   AMAC    MS_INITIALS_ENTERED,0,AUD_INITIALS_ENTERED
    4930 00018340                   AMAC    MS_ALL_BEATEN,0,AUD_ALL_BEATEN
    4931 00018390                   AMAC    MS_LEFT_WINS,0,AUD_LEFT_WINS
    4932 000183e0                   AMAC    MS_RIGHT_WINS,0,AUD_RIGHT_WINS
    4933 00018430                   AMAC    MS_TIES,0,AUD_TIES
    4934 00018480                   AMAC    MS_CPU_WIN,0,AUD_CPU_WIN
    4935 000184d0                   AMAC    MS_CPU_LOSS,0,AUD_CPU_LOSS
    4936 00018520                   AMAC    MS_CPU_TIE,0,AUD_CPU_TIE
    4937 00018570 00000000          .long   0
    4938                    
    4939 00018590           GAME_AUD3
    4940 00018590     003d          .word   61                      ;Y START
    4941 000185a0     000c          .word   12                      ;Y BETWEEN ENTRIES
    4942 000185b0     0005          .word   AUD_LM                  ;LEFT MARGIN X
    4943 000185c0     0185          .word   AUD_RM                  ;RIGHT MARGIN X
    4944 000185d0                   AMAC    MS_GOALS,0,AUD_GOALS
    4945 00018620                   AMAC    MS_ASSISTS,0,AUD_ASSISTS
    4946 00018670                   AMAC    MS_LEFT_GOALS,0,AUD_LEFT_GOALS
    4947 000186c0                   AMAC    MS_RIGHT_GOALS,0,AUD_RIGHT_GOALS
    4948 00018710                   AMAC    MS_CPU_TEAM_GOALS,0,AUD_CPU_TEAM_GOALS
    4949 00018760                   AMAC    MS_CPU_PLAYER_GOALS,0,AUD_CPU_PLAYER_GOALS
    4950 000187b0                   AMAC    MS_HUMAN_GOALS,0,AUD_HUMAN_GOALS
    4951 00018800                   AMAC    MS_UNCREDITED_GOALS,0,AUD_UNCREDITED_GOALS
    4952 00018850                   AMAC    MS_GOALIE_SAVES,0,AUD_GOALIE_SAVES
    4953                    ;       AMAC    MS_GOALIE_MISSES,0,AUD_GOALIE_MISSES
    4954 000188a0                   AMAC    MS_ON_FIRE,0,AUD_ON_FIRE
    4955 000188f0                   AMAC    MS_ON_FIRE_GOALS,0,AUD_ON_FIRE_GOALS
    4956 00018940 00000000          .long   0
    4957                    
    4958 00018960           GAME_AUD4
    4959 00018960     003d          .word   61                      ;Y START
    4960 00018970     000c          .word   12                      ;Y BETWEEN ENTRIES
    4961 00018980     0005          .word   AUD_LM                  ;LEFT MARGIN X
    4962 00018990     0185          .word   AUD_RM                  ;RIGHT MARGIN X
    4963 000189a0                   AMAC    MS_BRUINS,0,AUD_BRUINS
    4964 000189f0                   AMAC    MS_SABRES,0,AUD_SABRES
    4965 00018a40                   AMAC    MS_WHALERS,0,AUD_WHALERS
    4966 00018a90                   AMAC    MS_CANADIENS,0,AUD_CANADIENS
    4967 00018ae0                   AMAC    MS_SENATORS,0,AUD_SENATORS
    4968 00018b30                   AMAC    MS_PENGUINS,0,AUD_PENGUINS
    4969 00018b80                   AMAC    MS_AVALANCHE,0,AUD_AVALANCHE
    4970 00018bd0                   AMAC    MS_PANTHERS,0,AUD_PANTHERS
    4971 00018c20                   AMAC    MS_DEVILS,0,AUD_DEVILS
    4972 00018c70                   AMAC    MS_ISLANDERS,0,AUD_ISLANDERS
    4973 00018cc0 00000000          .long   0
    4974                    
    4975                    
    4976 00018ce0           GAME_AUD5
TMS340 COFF Macro Assembler Version 6.10     Wed Apr 21 11:41:33 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE  107

    4977 00018ce0     003d          .word   61                      ;Y START
    4978 00018cf0     000c          .word   12                      ;Y BETWEEN ENTRIES
    4979 00018d00     0005          .word   AUD_LM                  ;LEFT MARGIN X
    4980 00018d10     0185          .word   AUD_RM                  ;RIGHT MARGIN X
    4981 00018d20                   AMAC    MS_RANGERS,0,AUD_RANGERS
    4982 00018d70                   AMAC    MS_FLYERS,0,AUD_FLYERS
    4983 00018dc0                   AMAC    MS_LIGHTNING,0,AUD_LIGHTNING
    4984 00018e10                   AMAC    MS_CAPITALS,0,AUD_CAPITALS
    4985 00018e60                   AMAC    MS_BLACKHAWKS,0,AUD_BLACKHAWKS
    4986 00018eb0                   AMAC    MS_STARS,0,AUD_STARS
    4987 00018f00                   AMAC    MS_RED_WINGS,0,AUD_RED_WINGS
    4988 00018f50                   AMAC    MS_BLUES,0,AUD_BLUES
    4989 00018fa0                   AMAC    MS_MAPLE_LEAFS,0,AUD_MAPLE_LEAFS
    4990 00018ff0                   AMAC    MS_JETS,0,AUD_JETS
    4991 00019040 00000000          .long   0
    4992                    
    4993 00019060           GAME_AUD6
    4994 00019060     003d          .word   61                      ;Y START
    4995 00019070     000c          .word   12                      ;Y BETWEEN ENTRIES
    4996 00019080     0005          .word   AUD_LM                  ;LEFT MARGIN X
    4997 00019090     0185          .word   AUD_RM                  ;RIGHT MARGIN X
    4998 000190a0                   AMAC    MS_MIGHTY_DUCKS,0,AUD_MIGHTY_DUCKS
    4999 000190f0                   AMAC    MS_FLAMES,0,AUD_FLAMES
    5000 00019140                   AMAC    MS_OILERS,0,AUD_OILERS
    5001 00019190                   AMAC    MS_KINGS,0,AUD_KINGS
    5002 000191e0                   AMAC    MS_SHARKS,0,AUD_SHARKS
    5003 00019230                   AMAC    MS_CANUCKS,0,AUD_CANUCKS
    5004 00019280                   AMAC    MS_RANDOM_PICKED,0,AUD_RANDOM_PICKED
    5005 000192d0                   AMAC    MS_SECRET_CHAR,0,AUD_SECRET_CHAR
    5006 00019320 00000000          .long   0
    5007                    
    5008 00019340           GAME_AUD7
    5009 00019340     003d          .word   61                      ;Y START
    5010 00019350     000c          .word   12                      ;Y BETWEEN ENTRIES
    5011 00019360     0005          .word   AUD_LM                  ;LEFT MARGIN X
    5012 00019370     0185          .word   AUD_RM                  ;RIGHT MARGIN X
    5013 00019380                   AMAC    M_SLAMS,0,AUD_SLAMS
    5014 000193d0                   AMAC    M_BURNIN,0,AUD_AUTO
    5015 00019420                   AMAC    M_SECURITY,0,AUD_SECURITY
    5016 00019470 00000000          .long   0
    5017                    
    5018 00019490           GAME_AUD8
    5019 00019490     003d          .WORD   61                      ;Y START
    5020 000194a0     000c          .WORD   12                      ;Y BETWEEN ENTRIES
    5021 000194b0     0005          .WORD   AUD_LM                  ;LEFT MARGIN X
    5022 000194c0     0185          .WORD   AUD_RM                  ;RIGHT MARGIN X
    5023 000194d0                   AMAC    M_WDOG,0,AUD_DOG
    5024 00019520                   AMAC    M_WARNING,0,AUD_WARNING
    5025 00019570                   AMAC    M_BADTRAP,0,AUD_BADTRAP
    5026 000195c0                   AMAC    MS_GOALIE_MISSES,0,AUD_GOALIE_MISSES
    5027 00019610 00000000          .long   0
    5028                    
    5029                    **************************************************************************
    5030                    *                                                                        *
    5031                    *                   AUDIT PAGE OPTIONS #1                                *
TMS340 COFF Macro Assembler Version 6.10     Wed Apr 21 11:41:33 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE  108

    5032                    *                                                                        *
    5033                    *                       TO NEXT PAGE                                     *
    5034                    *                    RETURN TO MAIN MENU                                 *
    5035                    *                                                                        *
    5036                    **************************************************************************
    5037 00019630           MEN_AP1
    5038 00019630 00000000!         .LONG   RD7FONT                 ;FONT
    5039 00019650 00000000!         .LONG   STRCNRM                 ;CENTER PLEASE
    5040 00019670 00011ee0'         .LONG   MESS_PATTERNS           ;TITLE
    5041 00019690     0505          .WORD   COLOR_YELLOW            ;COLOR OF TITLE
    5042 000196a0     00c8          .WORD   200                     ;UL X      (CENTER IT!)
    5043 000196b0     00e3          .WORD   227                     ;UL Y
    5044 000196c0     000c          .WORD   12                      ;VERTICAL SPACING
    5045 000196d0     0303          .WORD   COLOR_BLUE              ;COLOR WHEN NOT SELECTED
    5046 000196e0     000c          .WORD   12                      ;HEIGHT OF SELECTION BAR
    5047 000196f0     fffe          .WORD   -2                      ;DISTANCE OF BAR FROM TOP OF TEXT (NEGATIVE)
    5048 00019700     000b          .WORD   BAR_DX+5                ;EXTRA X ON EACH SIDE.
    5049 00019710     00aa          .WORD   170                     ;WIDTH OF BAR!
    5050 00019720     3c3c          .WORD   COLOR_DECAY             ;TEXT COLOR OF SELECTED ITEM
    5051 00019730 00019c30'         .LONG   MESS_TOPAGE2,0,NO_HELP          ;"TO NEXT PAGE"
    5052 00019790 00012370'         .LONG   MESS_MM,FORCE_MAIN,NO_HELP      ;"RETURN TO MAIN MENU"
    5053 000197f0 00000000          .LONG   0
    5054                    
    5055                    **************************************************************************
    5056                    *                                                                        *
    5057                    *                   AUDIT PAGE OPTIONS #2                                *
    5058                    *                                                                        *
    5059                    *                       TO NEXT PAGE                                     *
    5060                    *                     TO PREVIOUS PAGE                                   *
    5061                    *                    RETURN TO MAIN MENU                                 *
    5062                    *                                                                        *
    5063                    **************************************************************************
    5064 00019810           MEN_AP2
    5065 00019810 00000000!         .LONG   RD7FONT                 ;FONT
    5066 00019830 00000000!         .LONG   STRCNRM                 ;CENTER PLEASE
    5067 00019850 00011ee0'         .LONG   MESS_PATTERNS           ;TITLE
    5068 00019870     0505          .WORD   COLOR_YELLOW            ;COLOR OF TITLE
    5069 00019880     00c8          .WORD   200                     ;UL X      (CENTER IT!)
    5070 00019890     00d8          .WORD   216                     ;UL Y
    5071 000198a0     000c          .WORD   12                      ;VERTICAL SPACING
    5072 000198b0     0303          .WORD   COLOR_BLUE              ;COLOR WHEN NOT SELECTED
    5073 000198c0     000c          .WORD   12                      ;HEIGHT OF SELECTION BAR
    5074 000198d0     fffe          .WORD   -2                      ;DISTANCE OF BAR FROM TOP OF TEXT (NEGATIVE)
    5075 000198e0     000b          .WORD   BAR_DX+5                ;EXTRA X ON EACH SIDE.
    5076 000198f0     00aa          .WORD   170                     ;WIDTH OF BAR!
    5077 00019900     3c3c          .WORD   COLOR_DECAY             ;TEXT COLOR OF SELECTED ITEM
    5078 00019910 00019c30'         .LONG   MESS_TOPAGE2,0,NO_HELP          ;"TO NEXT PAGE"
    5079 00019970 00019c90'         .LONG   MESS_BACKP1,0,NO_HELP           ;"TO PREVIOUS PAGE"
    5080 000199d0 00012370'         .LONG   MESS_MM,FORCE_MAIN,NO_HELP      ;"RETURN TO MAIN MENU"
    5081 00019a30 00000000          .LONG   0
    5082                    
    5083                    **************************************************************************
    5084                    *                                                                        *
    5085                    *                   AUDIT PAGE OPTIONS #3                                *
    5086                    *                                                                        *
TMS340 COFF Macro Assembler Version 6.10     Wed Apr 21 11:41:33 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE  109

    5087                    *                     TO PREVIOUS PAGE                                   *
    5088                    *                    RETURN TO MAIN MENU                                 *
    5089                    *                                                                        *
    5090                    **************************************************************************
    5091 00019a50           MEN_AP3
    5092 00019a50 00000000!         .LONG   RD7FONT                 ;FONT
    5093 00019a70 00000000!         .LONG   STRCNRM                 ;CENTER PLEASE
    5094 00019a90 00011ee0'         .LONG   MESS_PATTERNS           ;TITLE
    5095 00019ab0     0505          .WORD   COLOR_YELLOW            ;COLOR OF TITLE
    5096 00019ac0     00c8          .WORD   200                     ;UL X      (CENTER IT!)
    5097 00019ad0     00e3          .WORD   227                     ;UL Y
    5098 00019ae0     000c          .WORD   12                      ;VERTICAL SPACING
    5099 00019af0     0303          .WORD   COLOR_BLUE              ;COLOR WHEN NOT SELECTED
    5100 00019b00     000c          .WORD   12                      ;HEIGHT OF SELECTION BAR
    5101 00019b10     fffe          .WORD   -2                      ;DISTANCE OF BAR FROM TOP OF TEXT (NEGATIVE)
    5102 00019b20     000b          .WORD   BAR_DX+5                ;EXTRA X ON EACH SIDE.
    5103 00019b30     00aa          .WORD   170                     ;WIDTH OF BAR!
    5104 00019b40     3c3c          .WORD   COLOR_DECAY             ;TEXT COLOR OF SELECTED ITEM
    5105 00019b50 00019c90'         .LONG   MESS_BACKP1,0,NO_HELP   ;"TO PREVIOUS PAGE"
    5106 00019bb0 00012370'         .LONG   MESS_MM,FORCE_MAIN,NO_HELP      ;"RETURN TO MAIN MENU"
    5107 00019c10 00000000          .LONG   0
    5108                    
    5109                    
    5110                    **************************************************************************
    5111                    *                                                                        *
    5112                    *                       AUDIT PAGE MESSAGES                              *
    5113                    *                                                                        *
    5114                    **************************************************************************
    5115                    
    5116 00019c30           MESS_TOPAGE2
    5117 00019c30       4e          .STRING "NEXT ",W_AUDIT," PAGE",0
    5118 00019c90                   .EVEN
    5119 00019c90           MESS_BACKP1
    5120 00019c90       50          .STRING "PREVIOUS ",W_AUDIT," PAGE",0
    5121 00019d10                   .EVEN
    5122                    ;M_GAMEC
    5123                    ;       .STRING W_GAME,"S ",W_PLAY,"ED TO COMPLETION",0
    5124                    ;       .EVEN
    5125                    ;M_WAVER
    5126                    ;       .STRING W_AVERAGE," WAVE REACHED",0
    5127                    ;       .EVEN
    5128                    ;M_COSTPG
    5129                    ;       .STRING W_AVERAGE," ",W_CREDITS,"/",W_GAME,0
    5130                    ;       .EVEN
    5131 00019d10           M_BURNIN
    5132 00019d10       42          .STRING "BURNIN LOOPS SUCCESSFULLY COMPLETED",0
    5133 00019e30                   .EVEN
    5134                    ;M_1TIME
    5135                    ;       .STRING W_TIME," 1 ",W_PLAYER," ONLY",0
    5136                    ;       .EVEN
    5137                    ;M_2TIME
    5138                    ;       .STRING W_TIME," 2 ",W_PLAYER," ",W_SIMULTANEOUS,0
    5139                    ;       .EVEN
    5140                    ;M_3TIME
    5141                    ;       .STRING W_TIME," 3 ",W_PLAYER," ",W_SIMULTANEOUS,0
TMS340 COFF Macro Assembler Version 6.10     Wed Apr 21 11:41:33 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE  110

    5142                    ;       .EVEN
    5143                    ;M_4TIME
    5144                    ;       .STRING W_TIME," 4 ",W_PLAYER," ",W_SIMULTANEOUS,0
    5145                    ;       .EVEN
    5146                    ;M_TTIME
    5147                    ;       .STRING W_TOTAL," ",W_PLAY," ",W_TIME,0
    5148                    ;       .EVEN
    5149                    ;M_UPTIME
    5150                    ;       .STRING W_TOTAL," ",W_GAME," UPTIME",0
    5151                    ;       .EVEN
    5152                    ;M_AVGTL
    5153                    ;       .STRING W_AVERAGE," ",W_TIME," / LIFE",0
    5154                    ;       .EVEN
    5155                    ;M_AVGTC
    5156                    ;       .STRING W_AVERAGE," ",W_TIME," / ",W_CREDIT,0
    5157                    ;       .EVEN
    5158                    ;M_MAXWAVE
    5159                    ;       .STRING "MAXIMUM WAVE COMPLETED",0
    5160                    ;       .EVEN
    5161                    ;M_CONTOFF
    5162                    ;       .STRING W_GAME," ",W_CONTINUES," OFFERED",0
    5163                    ;       .EVEN
    5164                    ;M_CONTTAK
    5165                    ;       .STRING W_GAME," ",W_CONTINUES," TAKEN",0
    5166                    ;       .EVEN
    5167                    ;M_PCTCONT
    5168                    ;       .STRING "PERCENTAGE OF ",W_CONTINUES," TAKEN",0
    5169                    ;       .EVEN
    5170 00019e30           M_SLAMS
    5171 00019e30       8b          .STRING W_COIN," DOOR SLAMS",0
    5172 00019ea0                   .EVEN
    5173                    
    5174                    
    5175                    **************************************************************************
    5176                    *                                                                        *
    5177                    *       UTILITIES MENU                                                   *
    5178                    *                                                                        *
    5179                    **************************************************************************
    5180                    
    5181                    *
    5182                    *        UTILITES MENU GOES LEFT OF CENTER
    5183                    *
    5184                    
    5185              00ce  UM_WID   EQU     206
    5186              0072  UM_X     EQU     TIT_ULX+GAP+MB_XWID+(UM_WID/2)+C_KLUDGE
    5187                    
    5188 00019ea0           MEN_UTIL
    5189 00019ea0 00000000!         .LONG   RD7FONT         ;FONT
    5190 00019ec0 00000000!         .LONG   STRCNRM         ;CENTER PLEASE
    5191 00019ee0 00011910'         .LONG   MESS_UTIL       ;TITLE
    5192 00019f00     0202          .WORD   COLOR_WHITE     ;COLOR OF TITLE
    5193 00019f10     0072          .WORD   UM_X            ;UL X
    5194 00019f20     0063          .WORD   MENU_Y-5        ;UL Y
    5195 00019f30     0014          .WORD   20              ;VERTICAL SPACING
    5196 00019f40     0202          .WORD   COLOR_WHITE     ;COLOR WHEN NOT SELECTED
TMS340 COFF Macro Assembler Version 6.10     Wed Apr 21 11:41:33 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE  111

    5197 00019f50     0013          .WORD   19              ;HEIGHT OF SELECTION BAR
    5198 00019f60     fffb          .WORD   -5              ;DISTANCE OF BAR FROM TOP OF TEXT (NEGATIVE)
    5199 00019f70     0006          .WORD   BAR_DX          ;EXTRA X ON EACH SIDE.
    5200 00019f80     00ce          .WORD   UM_WID          ;WIDTH OF BAR!
    5201 00019f90     3c3c          .WORD   COLOR_DECAY     ;TEXT COLOR OF SELECTED ITEM
    5202                    ****    .LONG   MESS_OPMESS,DO_OPMESS,OPMESS_HELP
    5203 00019fa0 0001a260'         .LONG   MESS_CLCRED,DO_CLCRED,CLCRED_HELP
    5204 0001a000 0001a2b0'         .LONG   MESS_CLCOIN,DO_CLCOIN,CLCOIN_HELP
    5205 0001a060 0001a2d0'         .LONG   MESS_CLAUD,DO_CLAUD,CLAUD_HELP
    5206 0001a0c0 0001a300'         .LONG   MESS_HSRES,DO_HSRES,HSRES_HELP
    5207 0001a120 0001a500'         .LONG   MESS_DEF_ADJ,DO_DEF_ADJ,DEF_ADJ_HELP
    5208 0001a180 0001a360'         .LONG   MESS_FACSET,DO_FACSET,FACSET_HELP
    5209 0001a1e0 00012370'         .LONG   MESS_MM,0,BLNK_HELP             ;RETURN TO MAIN MENU
    5210 0001a240 00000000          .LONG   0               ;END
    5211                    
    5212 0001a260           MESS_CLCRED
    5213 0001a260           U_CLR_CRED
    5214 0001a260       94          .STRING W_CLEAR," ",W_CREDITS,0
    5215 0001a280                   .EVEN
    5216 0001a280           MESS_CCCONF
    5217 0001a280       86          .STRING W_CREDITS," ",W_CLEAR,"ED",0
    5218 0001a2b0                   .EVEN
    5219 0001a2b0           MESS_CLCOIN
    5220 0001a2b0           U_CLR_COIN
    5221 0001a2b0       94          .STRING W_CLEAR," ",W_COINCOUNTS,0
    5222 0001a2d0                   .EVEN
    5223 0001a2d0           MESS_CLAUD
    5224 0001a2d0           U_CLR_AUD
    5225 0001a2d0       94          .STRING W_CLEAR," ",W_GAME," ",W_AUDITS,0
    5226 0001a300                   .EVEN
    5227 0001a300           MESS_HSRES
    5228 0001a300       52          .STRING "RESET ",W_HIGH," ",W_SCORE,"S",0
    5229 0001a360                   .EVEN
    5230 0001a360           MESS_FACSET
    5231 0001a360       46          .STRING "FULL FACTORY RESTORE",0
    5232 0001a410                   .EVEN
    5233 0001a410           MESS_FACFAIL
    5234 0001a410       46          .STRING  "FAILURE IN CMOS RAM",0
    5235 0001a4b0                   .EVEN
    5236 0001a4b0           MESS_CANCELLED
    5237 0001a4b0       43          .STRING "CANCELLED",0
    5238 0001a500                   .EVEN
    5239 0001a500           MESS_DEF_ADJ
    5240 0001a500       44          .STRING "DEFAULT ",W_ADJUSTMENTS,0
    5241 0001a550                   .EVEN
    5242                    
    5243                    
    5244                    *
    5245                    *        HELP FOR UTILITY MENU
    5246                    *
    5247 0001a550           CLCRED_HELP
    5248 0001a550     0000          .WORD   0               ;CENTER JUSTIFY
    5249 0001a560     0303          .WORD   COLOR_BLUE      ;COLOR
    5250 0001a570     0003          .WORD   3               ;2 ENTRIES
    5251 0001a580 0001a980'         .LONG   MEH_CLCRED1
TMS340 COFF Macro Assembler Version 6.10     Wed Apr 21 11:41:33 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE  112

    5252 0001a5a0 0001a9e0'         .LONG   MEH_CLCRED2
    5253 0001a5c0 0001aa30'         .LONG   MEH_CLCRED3
    5254                    
    5255 0001a5e0           CLCOIN_HELP
    5256 0001a5e0     0000          .WORD   0               ;CENTER JUSTIFY
    5257 0001a5f0     0303          .WORD   COLOR_BLUE      ;COLOR
    5258 0001a600     0004          .WORD   4               ;2 ENTRIES
    5259 0001a610 0001aa90'         .LONG   MEH_CLCOIN1
    5260 0001a630 0001aaf0'         .LONG   MEH_CLCOIN2
    5261 0001a650 0001ab10'         .LONG   MEH_CLCOIN3
    5262 0001a670 0001ab60'         .LONG   MEH_CLCOIN4
    5263                    
    5264 0001a690           CLAUD_HELP
    5265 0001a690     0000          .WORD   0               ;CENTER JUSTIFY
    5266 0001a6a0     0303          .WORD   COLOR_BLUE      ;COLOR
    5267 0001a6b0     0002          .WORD   2               ;2 ENTRIES
    5268 0001a6c0 0001abc0'         .LONG   MEH_CLAUD1
    5269 0001a6e0 0001abf0'         .LONG   MEH_CLAUD2
    5270                    
    5271 0001a700           HSRES_HELP
    5272 0001a700     0000          .WORD   0               ;CENTER JUSTIFY
    5273 0001a710     0303          .WORD   COLOR_BLUE      ;COLOR
    5274 0001a720     0003          .WORD   3               ;2 ENTRIES
    5275 0001a730 0001ac50'         .LONG   MEH_RESHS1
    5276 0001a750 0001aca0'         .LONG   MEH_RESHS2
    5277 0001a770 0001ad30'         .LONG   MEH_RESHS3
    5278                    
    5279 0001a790           OPMESS_HELP
    5280 0001a790     0000          .WORD   0               ;CENTER JUSTIFY
    5281 0001a7a0     0303          .WORD   COLOR_BLUE      ;COLOR
    5282 0001a7b0     0004          .WORD   4               ;2 ENTRIES
    5283 0001a7c0 0001adb0'         .LONG   MEH_CUSM1
    5284 0001a7e0 0001ae30'         .LONG   MEH_CUSM2
    5285 0001a800 0001ae60'         .LONG   MEH_CUSM3
    5286 0001a820 0001aed0'         .LONG   MEH_CUSM4
    5287                    
    5288 0001a840           DEF_ADJ_HELP
    5289 0001a840     0000          .WORD   0               ;CENTER JUSTIFY
    5290 0001a850     0303          .WORD   COLOR_BLUE      ;COLOR
    5291 0001a860     0004          .WORD   4               ;2 ENTRIES
    5292 0001a870 0001af40'         .LONG   MEH_DEFA1
    5293 0001a890 0001af90'         .LONG   MEH_DEFA2
    5294 0001a8b0 0001afc0'         .LONG   MEH_DEFA3
    5295 0001a8d0 0001b030'         .LONG   MEH_DEFA4
    5296                    
    5297 0001a8f0           FACSET_HELP
    5298 0001a8f0     0000          .WORD   0               ;CENTER JUSTIFY
    5299 0001a900     0303          .WORD   COLOR_BLUE      ;COLOR
    5300 0001a910     0003          .WORD   3               ;2 ENTRIES
    5301 0001a920 0001b0a0'         .LONG   MEH_FAC1
    5302 0001a940 0001b110'         .LONG   MEH_FAC2
    5303 0001a960 0001b170'         .LONG   MEH_FAC3
    5304                    
    5305                    **************************************************************************
    5306                    *                                                                        *
TMS340 COFF Macro Assembler Version 6.10     Wed Apr 21 11:41:33 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE  113

    5307                    *          STRINGS FOR UTILITY HELP MENUS                                *
    5308                    *                                                                        *
    5309                    **************************************************************************
    5310 0001a980           MEH_CLCRED1
    5311 0001a980       52          .STRING "REMOVE ANY",0
    5312 0001a9e0                   .EVEN
    5313 0001a9e0           MEH_CLCRED2
    5314 0001a9e0       50          .STRING "POSTED ",W_CREDITS,0
    5315 0001aa30                   .EVEN
    5316 0001aa30           MEH_CLCRED3
    5317 0001aa30       46          .STRING "FROM THE ",W_GAME,0
    5318 0001aa90                   .EVEN
    5319 0001aa90           MEH_CLCOIN1
    5320 0001aa90       94          .STRING W_CLEAR," OUT PAID",0
    5321 0001aaf0                   .EVEN
    5322 0001aaf0           MEH_CLCOIN2
    5323 0001aaf0       86          .STRING W_CREDITS," ",W_TOTAL,0
    5324 0001ab10                   .EVEN
    5325 0001ab10           MEH_CLCOIN3
    5326 0001ab10       41          .STRING "AND THE ",W_COIN,0
    5327 0001ab60                   .EVEN
    5328 0001ab60           MEH_CLCOIN4
    5329 0001ab60       9a          .STRING W_SLOT," COUNTERS",0
    5330 0001abc0                   .EVEN
    5331 0001abc0           MEH_CLAUD1
    5332 0001abc0       94          .STRING W_CLEAR," ",W_GAME,W_PLAY,0
    5333 0001abf0                   .EVEN
    5334 0001abf0           MEH_CLAUD2
    5335 0001abf0       53          .STRING "STATISTICS",0
    5336 0001ac50                   .EVEN
    5337 0001ac50           MEH_RESHS1
    5338 0001ac50       52          .STRING "RESET ",W_HIGH," ",W_SCORE,0
    5339 0001aca0                   .EVEN
    5340 0001aca0           MEH_RESHS2
    5341 0001aca0       54          .STRING "TABLE TO FACTORY",0
    5342 0001ad30                   .EVEN
    5343 0001ad30           MEH_RESHS3
    5344 0001ad30       44          .STRING "DEFAULT VALUES",0
    5345 0001adb0                   .EVEN
    5346 0001adb0           MEH_CUSM1
    5347 0001adb0       45          .STRING "ENTER YOUR OWN",0
    5348 0001ae30                   .EVEN
    5349 0001ae30           MEH_CUSM2
    5350 0001ae30       b6          .STRING W_MESSAGE," TO",0
    5351 0001ae60                   .EVEN
    5352 0001ae60           MEH_CUSM3
    5353 0001ae60       41          .STRING "APPEAR IN THE",0
    5354 0001aed0                   .EVEN
    5355 0001aed0           MEH_CUSM4
    5356 0001aed0       41          .STRING "ATTRACT MODE",0
    5357 0001af40                   .EVEN
    5358 0001af40           MEH_DEFA1
    5359 0001af40       53          .STRING "SET ALL ",W_GAME,0
    5360 0001af90                   .EVEN
    5361 0001af90           MEH_DEFA2
TMS340 COFF Macro Assembler Version 6.10     Wed Apr 21 11:41:33 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE  114

    5362 0001af90       b2          .STRING W_ADJUSTMENTS," TO",0
    5363 0001afc0                   .EVEN
    5364 0001afc0           MEH_DEFA3
    5365 0001afc0       54          .STRING "THEIR FACTORY",0
    5366 0001b030                   .EVEN
    5367 0001b030           MEH_DEFA4
    5368 0001b030       44          .STRING "DEFAULT VALUE",0
    5369 0001b0a0                   .EVEN
    5370 0001b0a0           MEH_FAC1
    5371 0001b0a0       52          .STRING "RESET ALL ",W_AUDITS,",",0
    5372 0001b110                   .EVEN
    5373 0001b110           MEH_FAC2
    5374 0001b110       43          .STRING "COUNTERS, ",W_ADJUSTMENTS,0
    5375 0001b170                   .EVEN
    5376 0001b170           MEH_FAC3
    5377 0001b170       41          .STRING "AND THE ",W_HIGH," ",W_SCORE,"S.",0
    5378 0001b1e0                   .EVEN
    5379                    
    5380                    **************************************************************************
    5381                    *                                                                        *
    5382                    *       PRESS ANY BUTTON TO CONTINUE                                     *
    5383                    *                                                                        *
    5384                    **************************************************************************
    5385 0001b1e0           ANY_MENU
    5386 0001b1e0 00000000!         .LONG   RD7FONT         ;FONT
    5387 0001b200 00000000!         .LONG   STRCNRM         ;CENTER PLEASE
    5388 0001b220 00000000          .LONG   0               ;TITLE
    5389 0001b240     0000          .WORD   0               ;COLOR OF TITLE
    5390 0001b250     00c8          .WORD   200             ;UL X
    5391 0001b260     00c3          .WORD   195             ;UL Y
    5392 0001b270     0017          .WORD   MENU_DY         ;VERTICAL SPACING
    5393 0001b280     0303          .WORD   COLOR_BLUE      ;COLOR WHEN NOT SELECTED
    5394 0001b290     001a          .WORD   BAR_HITE        ;HEIGHT OF SELECTION BAR
    5395 0001b2a0     fff8          .WORD   BAR_DY          ;DISTANCE OF BAR FROM TOP OF TEXT (NEGATIVE)
    5396 0001b2b0     0006          .WORD   BAR_DX          ;EXTRA X ON EACH SIDE.
    5397 0001b2c0     00ea          .WORD   234             ;WIDTH OF BAR!
    5398 0001b2d0     3c3c          .WORD   COLOR_DECAY     ;TEXT COLOR OF SELECTED ITEM
    5399 0001b2e0 0001b360'         .LONG   MESS_ANY,0,NO_HELP
    5400 0001b340 00000000          .LONG   0
    5401                    
    5402                    
    5403 0001b360           MESS_ANY
    5404 0001b360       41          .STRING "ANY ",W_BUTTON," TO ",W_CONTINUE,0
    5405 0001b3c0                   .EVEN
    5406                    
    5407 0001b3c0           MESS_FFSCONF
    5408 0001b3c0           MESS_FAC
    5409 0001b3c0                   MESS_MAC  RD7FONT,SPACING07,200,96,COLOR_PWHITE,STRCNRM,0
    5410 0001b480           MESS_DEFCONF
    5411 0001b480       44          .STRING "DEFAULT ",W_ADJUSTMENTS," RESTORED.",0
    5412 0001b520                   .EVEN
    5413 0001b520     0001          .WORD   1
    5414 0001b530                   MESS_MAC RD7FONT,SPACING07,200,112,COLOR_PYELLOW,STRCNRM,0
    5415 0001b5f0                   .EVEN
    5416 0001b5f0           MESS_CCNCONF
TMS340 COFF Macro Assembler Version 6.10     Wed Apr 21 11:41:33 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE  115

    5417 0001b5f0       b5          .STRING W_COINCOUNTS," ",W_CLEAR,"ED.",0
    5418 0001b630                   .EVEN
    5419 0001b630     0001          .WORD   1
    5420 0001b640                   MESS_MAC RD7FONT,SPACING07,200,128,COLOR_PBLUE,STRCNRM,0
    5421 0001b700           MESS_CAUDCONF
    5422 0001b700       84          .STRING W_GAME," ",W_AUDITS," ",W_CLEAR,"ED.",0
    5423 0001b750                   .EVEN
    5424 0001b750     0001          .WORD   1
    5425 0001b760                   MESS_MAC RD7FONT,SPACING07,200,144,COLOR_PRED,STRCNRM,0
    5426 0001b820           MESS_HSRCONF
    5427 0001b820       a0          .STRING  W_HIGH," ",W_SCORE," TABLE RESET.",0
    5428 0001b8b0                   .EVEN
    5429 0001b8b0     0000          .WORD   0
    5430                    
    5431                    
    5432                    *
    5433                    *        MONITOR PATTERNS
    5434                    *
    5435                    
    5436 0001b8c0           MEN_PATTERNS
    5437 0001b8c0 00000000!          .LONG   RD7FONT        ;FONT
    5438 0001b8e0 00000000!          .LONG   STRCNRM         ;CENTER PLEASE
    5439 0001b900 00011ee0'          .LONG   MESS_PATTERNS         ;TITLE
    5440 0001b920     0101           .WORD  COLOR_RED    ;COLOR OF TITLE
    5441 0001b930     00c8           .WORD   200             ;UL X      (CENTER IT!)
    5442 0001b940     0065           .WORD   MENU_Y-3        ;UL Y
    5443 0001b950     0014           .WORD   20              ;VERTICAL SPACING
    5444 0001b960     0505           .WORD  COLOR_YELLOW    ;COLOR WHEN NOT SELECTED
    5445 0001b970     0014           .WORD   20              ;HEIGHT OF SELECTION BAR
    5446 0001b980     fffa           .WORD   -6             ;DISTANCE OF BAR FROM TOP OF TEXT (NEGATIVE)
    5447 0001b990     0006           .WORD   BAR_DX          ;EXTRA X ON EACH SIDE.
    5448 0001b9a0     00ea           .WORD   234             ;WIDTH OF BAR!
    5449 0001b9b0     3c3c           .WORD  COLOR_DECAY      ;TEXT COLOR OF SELECTED ITEM
    5450 0001b9c0 0001bc80'          .LONG   MESS_RED,GO_RED,BLNK_HELP
    5451 0001ba20 0001bcb0'          .LONG   MESS_GREEN,GO_GREEN,BLNK_HELP
    5452 0001ba80 0001bcf0'          .LONG   MESS_BLUE,GO_BLUE,BLNK_HELP
    5453 0001bae0 0001bd30'          .LONG   MESS_BARS,GO_BARS,BLNK_HELP
    5454 0001bb40 0001bd90'          .LONG   MESS_CROSS,GO_CONV,BLNK_HELP
    5455 0001bba0 0001be30'          .LONG   MESS_DIAGM,0,BLNK_HELP
    5456 0001bc00 00012370'          .LONG   MESS_MM,FORCE_MAIN,NO_HELP        ;RETURN TO MAIN MENU
    5457 0001bc60 00000000           .LONG   0
    5458                    
    5459                    
    5460 0001bc80           MESS_RED
    5461 0001bc80       52          .STRING "RED ",W_SCREEN,0
    5462 0001bcb0                   .EVEN
    5463 0001bcb0           MESS_GREEN
    5464 0001bcb0       47          .STRING "GREEN ",W_SCREEN,0
    5465 0001bcf0                   .EVEN
    5466 0001bcf0           MESS_BLUE
    5467 0001bcf0       42          .STRING "BLUE ",W_SCREEN,0
    5468 0001bd30                   .EVEN
    5469 0001bd30           MESS_BARS
    5470 0001bd30       43          .STRING "COLOR BARS",0
    5471 0001bd90                   .EVEN
TMS340 COFF Macro Assembler Version 6.10     Wed Apr 21 11:41:33 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE  116

    5472 0001bd90           MESS_CROSS
    5473 0001bd90       43          .STRING "CROSSHATCH  PATTERN",0
    5474 0001be30                   .EVEN
    5475 0001be30           MESS_DIAGM
    5476 0001be30       42          .STRING "BACK TO DIAGNOSTICS MENU",0
    5477 0001bf00                   .EVEN
    5478                    
    5479                    
    5480                    
    5481 0001bf00           NULL_ST
    5482 0001bf00       00          .BYTE   0
    5483 0001bf10                   .EVEN

 No Errors,  No Warnings
