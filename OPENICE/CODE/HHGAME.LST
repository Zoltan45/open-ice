TMS340 COFF Macro Assembler Version 6.10     Wed Apr 21 11:31:43 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE    1

       1                            .MLIB   "HHMACS.LIB"
       2                            .FILE   "HHGAME.ASM"
       3                            .WIDTH  132
       4                            .OPTION B,D,L,T
       5                            .MNOLIST
       6                    
       7                    *
       8                    *GET THE SYSTEM STUFF
       9                    *
      10                            .INCLUDE        "HH.INC"
      11                            .INCLUDE        "HHSTRING.H"
      12                            .INCLUDE        "IMGTBL.GLO"
      13                            .include        "goals.tbl"
      14                            .include        "HHGAME.TBL"
      15                            .include        "HHHELP.TBL"
      16                            .include        "hhgame.e"
      17                            .include        "hhpick.g"
      18                            .include        "hhtimer.g"
      19                            .include        "hhattrct.g"
      20                            .include        "hhselect.g"
      21                            .include        "hhstabl2.g"
      22                            .include        "hhstabl3.g"
      23                            .include        "hhram.g"
      24                            .include        "hhutil.g"
      25                            .include        "hhsnd.g"
      26                            .include        "hhpuck.g"
      27                            .include        "hhtg.g"
      28                            .include        "hhcontr2.g"
      29                            .include        "hhtext.g"
      30                            .include        "hhd.g"
      31                            .include        "hhpall.g"
      32                    ;       .include        "hhmath.g"
      33                            .ref    find_dir_to_point
      34                            .ref    dir_to_182
      35                            .ref    set_obj_to_polar
      36                            .include        "hhcoin.g"
      37                    ;       .include        "hhcx.g"
      38                            .ref    cx_game_start
      39                            .ref    cx_game_over
      40                            .include        "hhstats.g"
      41                            .include        "hhproc.g"
      42                    ;       .include        "hhcmos.g"
      43                            .ref    GET_ADJ
      44                            .ref    AUD1
      45                            .include        "hhplayer.g"
      46                            .include        "hhmisc.g"
      47                            .include        "hhfade.g"
      48                    ;       .include        "hhc.g"
      49                            .ref    ANI
      50                            .ref    maybe_ani
      51                            .ref    small_timer_on
      52                            .include        "hhscore.g"
      53                            .include        "hhstable.g"
      54                            .include        "hh.g"
      55                    ;       .include        "hhcontrl.g"
TMS340 COFF Macro Assembler Version 6.10     Wed Apr 21 11:31:43 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE    2

      56                             .ref   global_control_slow
      57                             .ref   clean_up_players
      58                    ;       .include        "hhndrone.g"
      59                            .ref    set_drone_levels
      60                            .ref    maybe_set_drone_levels
      61                            .include        "hhspeech.g"
      62                            .include        "hhtables.g"
      63                            .include        "hhpick2.g"
      64                            .include        "hhpup.g"
      65                            .include        "hhhigher.g"
      66                            .include        "hhfix.g"
      67                            .include        "hhcontr3.g"
      68                    
      69                    ; end of include files
      70                    
      71 00000000                   .bss    team1,16                ;team 1 1-26
      72 00000010                   .bss    team2,16                ;team 2 1-26
      73 00000020                   .bss    TEAM1_SWAP,16
      74 00000030                   .bss    TEAM2_SWAP,16
      75 00000040                   .bss    team1_home,16
      76 00000050                   .bss    team2_home,16
      77                    
      78                            ;DON'T CHANGE ORDER FROM HERE
      79 00000060                   .bss    team1_score_P1,16
      80 00000070                   .bss    team1_score_P2,16
      81 00000080                   .bss    team1_score_P3,16
      82 00000090                   .bss    team1_score,16
      83 000000a0                   .bss    team2_score_P1,16
      84 000000b0                   .bss    team2_score_P2,16
      85 000000c0                   .bss    team2_score_P3,16
      86 000000d0                   .bss    team2_score,16
      87                            ;TO HERE, DAMMIT!
      88                    
      89 000000e0                   .bss    period,16
      90 000000f0                   .bss    lgoalF_object,32        ;LEFT GOAL FRONT PART FACING PLAYERS
      91 00000110                   .bss    lgoalR_object,32        ;LEFT GOAL REAR PART
      92 00000130                   .bss    rgoalF_object,32        ;RIGHT GOAL FRONT PART
      93 00000150                   .bss    rgoalR_object,32        ;RIGHT GOAL REAR PART
      94 00000170                   .bss    ledge_object,32
      95 00000190                   .bss    redge_object,32
      96 000001b0                   .bss    ledge2_object,32
      97 000001d0                   .bss    redge2_object,32
      98 000001f0                   .bss    world_mt_point,16       ;for rink_watch
      99 00000200                   .bss    last_wp_oxval,32        ;for rink_watch, last watch oxval
     100 00000220                   .bss    xobj1,32
     101 00000240                   .bss    xobj2,32
     102 00000260                   .bss    xobj3,32
     103 00000280                   .bss    xobj4,32
     104 000002a0                   .bss    zobj1,32
     105 000002c0                   .bss    zobj2,32
     106 000002e0                   .bss    zobj3,32
     107 00000300                   .bss    zobj4,32
     108 00000320                   .bss    plwatch,16
     109 00000330                   .bss    puck_op,16              ;used for world points
     110 00000340                   .bss    hold_net_anim,16        ;non zero means we don't do normal net update (front only)
TMS340 COFF Macro Assembler Version 6.10     Wed Apr 21 11:31:43 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE    3

     111 00000350                   .bss    record_data,32*10
     112 00000490                   .bss    record_data_pointer,32
     113 000004b0                   .bss    force_buyin,16          ;force bill's buyin page to come up
     114                    
     115 000004c0                   .BSS    HELP_WINDOW_COUNT,16    ;NUMBER OF HELP WINDOWS ON SCREEN
     116                    
     117 000004d0                   .BSS    SHOW_START_SHIT,16      ;SLIDE GRAPHICS, SHOW GOALIE CARDS,
     118                                                            ; SHOW HELP WINDOWS, REPORT POWER-UPS
     119 000004e0                   .bss    edge_28_piece,32
     120 00000500                   .bss    back_wall_script,32
     121 00000520                   .bss    edge_28_script,32
     122 00000540                   .bss    teampal1,32
     123 00000560                   .bss    teampal2,32
     124 00000580                   .bss    all_beaten_bits,16
     125                    
     126 00000590                   .bss    saved_period_players,16
     127 000005a0                   .bss    last_control_scroll,16
     128 000005b0                   .bss    side_brightness,16
     129                    
     130 00000000                   .even
     131                    
     132                    ;attract mode           inamode
     133                    ;initial entry          inintro
     134                    ;TONIGHTS GAME          inintro
     135                    ;period one             inplay
     136                    ;period over            ingame
     137                    ; END OF PERIOD STATS   INSTAT
     138                    ; SUBSTITUTIONS         INSUBST
     139                    ; buy in                INBUYIN
     140                    ;period two             inplay
     141                    ;period over            ingame
     142                    ; END OF PERIOD STATS   INSTAT
     143                    ; SUBSTITUTIONS         INSUBST
     144                    ; buy in                INBUYIN
     145                    ;period three           inplay
     146                    ;period over            ingame
     147                    ; END OF PERIOD STATS   INSTAT
     148                    ; SUBSTITUTIONS         INSUBST
     149                    ; buy in                INBUYIN
     150                    ;period overtime        inplay
     151                    ;period over            ingame
     152                    ;FINAL GAME STATS(CMOS) INEPILOG
     153                    ;game over              ingameov
     154                    
     155                    **************************************************************************
     156                    *                                                                        *
     157                    * player_start - START A PLAYER WHEN A PLAYER START BUTTON IS HIT        *
     158                    *                                                                        *
     159                    * PASS:                                                                  *
     160                    * A0 = PLAYER NUMBER (1, 2, 5, OR 6)                                     *
     161                    * RETURN:                                                                *
     162                    * NUTIN'                                                                 *
     163                    *                                                                        *
     164                    **************************************************************************
     165                    
TMS340 COFF Macro Assembler Version 6.10     Wed Apr 21 11:31:43 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE    4

     166 00000000           player_start
     167 00000000     05ae          MOVE    @VOLUME_SET,A14,W
         00000010 00000000! 
     168 00000030     ca80          JAZ     SUCIDE                          ;BR=VOLUME NOT SET
         00000040 00000000! 
     169                    
     170 00000060     05a3          move    @GAME_STATE,a3,W
         00000070 00000000! 
     171                    
     172 00000090     0b43          CMPI    ININTRO_TEAMSEL,A3
         000000a0     ffe4  
     173 000000b0     cb30          JRNE    PLS_GO                          ;BR=NOT TEAM SELECT
     174 000000c0     4c01          MOVE    A0,A1
     175 000000d0     1421          DEC     A1
     176 000000e0     0b41          CMPI    2,A1
         000000f0     fffd  
     177 00000100     c401          JRLT    PLS_GET_PBITS                   ;BR=PLAYER INDEX OKAY
     178 00000110     1441          SUBK    2,A1
     179 00000120           PLS_GET_PBITS
     180 00000120     07ee          MOVB    @TEAM_SELECT_BITS,A14
         00000130 00000000! 
     181 00000150     4a2e          BTST    A1,A14
     182 00000160     ca25          JRZ     PLS_GO                          ;BR=PLAYER NOT SELECTING TEAM
     183                    
     184 00000170     07a2          MOVE    @SWITCH,A2,L
         00000180 01860000  
     185 000001a0     03e2          NOT     A2
     186                    
     187 000001b0                   KITN    4
     188 000001f0     ca05          JREQ    PLS_TRANSLATE                   ;BR=4 PLAYER KIT
     189 00000200     4c21          MOVE    A1,A1
     190 00000210     ca06          JRZ     PLS_CHECK_SWITCHES              ;BR=PLAYER 1
     191 00000220     2f02          SRL     8,A2                            ;PLAYER 2(4) FUDGE
     192 00000230     1b01          MOVK    24,A1
     193 00000240     c003          JRUC    PLS_CHECK_SWITCHES
     194                    
     195 00000250           PLS_TRANSLATE
     196 00000250     2461          SLL     3,A1                            ;TRANSLATE INDEX TO SHIFT VALUE
     197 00000260     03a1          NEG     A1
     198 00000270     6622          SRL     A1,A2
     199                    
     200 00000280           PLS_CHECK_SWITCHES
     201 00000280     0b82          ANDI    M_SW_ALL,A2
         00000290 ffffff80  
     202 000002b0     ca10          JRZ     PLS_GO                          ;BR=NO SWITCHES
     203                    
     204 000002c0     0bc2          XORI    M_SW_U,A2
         000002d0 00000001  
     205                    ;       JRNZ    PLS_ABORT                       ;BR=SWITCHES OTHER THAN UP
     206 000002f0     cb0c          JRNZ    PLS_GO                          ;BR=SWITCHES OTHER THAN UP
     207                    
     208 00000300     182e          MOVK    1,A14                           ;FLAG RANDOM SELECT ENABLED
     209 00000310     0381          ABS     A1
     210 00000320     2fa1          SRL     3,A1
     211 00000330     622e          SLL     A1,A14
TMS340 COFF Macro Assembler Version 6.10     Wed Apr 21 11:31:43 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE    5

     212 00000340     07e1          MOVB    @RANDOM_ENABLE_BITS,A1
         00000350 00000000! 
     213 00000370     55c1          OR      A14,A1
     214 00000380     05e1          MOVB    A1,@RANDOM_ENABLE_BITS
         00000390 00000000! 
     215 000003b0     c012          JRUC    PLS_ABORT                       ;DON'T EVEN START
     216                    
     217 000003c0           PLS_GO
     218 000003c0     2fa3          SRL     3,A3                            ;SHIFT OUT SUB-STATE
     219 000003d0     2463          SLL     3,A3
     220 000003e0     09e1          movi    player_start_table,a1
         000003f0 00000510' 
     221 00000410     8422  ps_l    move    *a1,a2,W
     222 00000420     ca05          jrz     ps_9                            ;BR=END OF TABLE
     223 00000430     4843          cmp     a2,a3
     224 00000440     ca06          jrz     ps_g                            ;BR=FOUND THE STATE
     225 00000450     0b01          addi    48,a1
         00000460     0030  
     226 00000470     c0f9          jruc    ps_l
     227 00000480           ps_9    LOCKUP
     228 000004b0     b622  ps_g    move    *a1(16),a2,L
         000004c0     0010  
     229 000004d0     0162          jump    a2
     230 000004e0           PLS_ABORT
     231 000004e0     c080          JAUC    SUCIDE
         000004f0 00000000! 
     232                    
     233 00000510           player_start_table
     234 00000510                   WL      INGAME,pcheck_game
     235 00000540                   WL      ININTRO,pcheck_intro
     236 00000570                   WL      INPLAY,pcheck_play
     237 000005a0                   WL      INAMODE,pcheck_amode
     238 000005d0                   WL      INDIAG,pcheck_diag
     239 00000600                   WL      INGAMEOV,pcheck_gameov
     240 00000630                   WL      INEPILOG,pcheck_epilog
     241 00000660                   WL      INSTAT,PCHECK_SUCIDE
     242 00000690                   WL      INSUBST,PCHECK_SUBST
     243 000006c0                   WL      INBUYIN,PCHECK_BUYIN
     244 000006f0     0000          .word   0
     245                    
     246                    **************************************************************************
     247                    *                                                                        *
     248                    * PCHECK_SUCIDE - JUST DIE!                                              *
     249                    *                                                                        *
     250                    * PASS:                                                                  *
     251                    * A0 = PLAYER NUMBER (1, 2, 5, OR 6)                                     *
     252                    *                                                                        *
     253                    * RETURN:                                                                *
     254                    * NUTIN'                                                                 *
     255                    *                                                                        *
     256                    **************************************************************************
     257                    
     258 00000700           PCHECK_SUCIDE
     259 00000700     c080          JAUC    SUCIDE
         00000710 00000000! 
TMS340 COFF Macro Assembler Version 6.10     Wed Apr 21 11:31:43 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE    6

     260                    
     261                    **************************************************************************
     262                    *                                                                        *
     263                    * PCHECK_SUBST - DISPLAY "PLEASE WAIT" IF ENOUGH CREDITS                 *
     264                    *                                                                        *
     265                    * PASS:                                                                  *
     266                    * A0 = PLAYER NUMBER (1, 2, 5, OR 6)                                     *
     267                    *                                                                        *
     268                    * RETURN:                                                                *
     269                    * NUTIN'                                                                 *
     270                    *                                                                        *
     271                    **************************************************************************
     272                    
     273 00000730           PCHECK_SUBST
     274                    ;;;;;;; callr   restart_if_new_player_rsgap
     275 00000730     05a1          MOVE    @period,A1,W
         00000740 000000e0- 
     276 00000760     0d3f          CALLR   can_we_add_period_player
         00000770     157e  
     277 00000780     c940          JRNC    PCS_DONE                        ;BR=NOPE
     278                    
     279 00000790     0d3f          CALLR   do_we_continue_start
         000007a0     15d3  
     280 000007b0     c904          JRNC    PCS_START                       ;BR=we need a start(not continue)
     281                    
     282 000007c0     0d3f          CALLR   do_we_have_continue_credits
         000007d0     1676  
     283 000007e0     c93a          JRNC    PCS_DONE                        ;BR=NOT enough to continue
     284 000007f0     c003          JRUC    PCS_MESS
     285 00000800           PCS_START
     286 00000800     0d3f          CALLR   do_we_have_start_credits
         00000810     167d  
     287 00000820     c936          JRNC    PCS_DONE                        ;BR=we don't have start credits
     288 00000830           PCS_MESS
     289 00000830     4c09          MOVE    A0,A9
     290 00000840     1429          DEC     A9
     291 00000850     0b49          CMPI    4,A9
         00000860     fffb  
     292 00000870     c401          JRLT    PCS_NO_FUDGE
     293 00000880     1449          SUBK    2,A9
     294 00000890           PCS_NO_FUDGE
     295 00000890     0d5f          CALLA   get_period_players
         000008a0 00015be0' 
     296 000008c0     4b20          BTST    A9,A0
     297 000008d0     cb2b          JRNZ    PCS_DONE                        ;BR=PLAYED LAST PERIOD
     298                    
     299 000008e0     2489          SLL     4,A9
     300 000008f0     4d2e          MOVE    A9,A14
     301 00000900     0b2e          ADDI    SUBST_OID_TABLE,A14
         00000910 00000c10' 
     302 00000930     85c2          MOVE    *A14,A2,W
     303                    
     304 00000940     09e0          MOVI    SUPPLSTS-OSLINK+020H,A0
         00000950 ffffffe0! 
     305 00000970     09e1          MOVI    0FFFFH,A1
TMS340 COFF Macro Assembler Version 6.10     Wed Apr 21 11:31:43 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE    7

         00000980 0000ffff  
     306 000009a0     0d5f          CALLA   FINDOID
         000009b0 00000000! 
     307 000009d0     cb1b          JRNZ    PCS_DONE                        ;BR=ALREADY WAITING
     308                    
     309 000009e0     182e          MOVK    1,A14
     310 000009f0     058e          MOVE    A14,@force_buyin,W
         00000a00 000004b0- 
     311                    
     312 00000a20     4c4a          MOVE    A2,A10
     313                    
     314 00000a30     09f0          MOVI    PLEASE_WAIT_INIT,B0
         00000a40 00000bc0' 
     315 00000a60     0d5f          CALLA   EASYMAKE
         00000a70 00000000! 
     316                    
     317 00000a90     b148          MOVE    A10,*A8(OID),W
         00000aa0     0430  
     318                    
     319 00000ab0     0b29          ADDI    SUBST_X_TABLE,A9
         00000ac0 00000c50' 
     320 00000ae0     8521          MOVE    *A9,A1,W
     321 00000af0     0b21          ADDI    [243,0],A1
         00000b00 00f30000  
     322 00000b20     5642          CLR     A2
     323 00000b30     0d5f          CALLA   SET_SCRNOBJ
         00000b40 00000000! 
     324                    
     325 00000b60     0d5f          CALLA   INSERT_OBJ
         00000b70 00000000! 
     326 00000b90           PCS_DONE
     327 00000b90     c080          JAUC    SUCIDE
         00000ba0 00000000! 
     328                    
     329 00000bc0           PLEASE_WAIT_INIT
     330 00000bc0 000005a0"         .long   PLWAIT
     331 00000be0     8002          .word   DMAWNZ,M_SCRNOBJ|M_NOVEL|M_NOSCALE
     332 00000c00     0000          .word   0
     333                    
     334 00000c10           SUBST_OID_TABLE
     335 00000c10     0910          .WORD   OID_PLAYER_1,OID_PLAYER_2,OID_PLAYER_3,OID_PLAYER_4
     336                    
     337 00000c50           SUBST_X_TABLE
     338 00000c50     003f          .WORD   63,143,258,338
     339                    
     340                    **************************************************************************
     341                    *                                                                        *
     342                    * pcheck_amode - START GAME FROM ATTRACT MODE                            *
     343                    *                                                                        *
     344                    * PASS:                                                                  *
     345                    * A0 = PLAYER NUMBER (1, 2, 5, OR 6)                                     *
     346                    *                                                                        *
     347                    * RETURN:                                                                *
     348                    * NUTIN'                                                                 *
     349                    *                                                                        *
TMS340 COFF Macro Assembler Version 6.10     Wed Apr 21 11:31:43 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE    8

     350                    **************************************************************************
     351                    
     352 00000c90           pcheck_gameov
     353 00000c90     0d3f          CALLR   do_we_have_start_credits
         00000ca0     1634  
     354 00000cb0     c980          JANC    SUCIDE                          ;BR=NOT ENOUGH CREDITS
         00000cc0 00000000! 
     355                    
     356 00000ce0     57ce          CLR     A14
     357 00000cf0     058e          MOVE    A14,@IRQSKYE,W                  ;BLACK BACKGROUND
         00000d00 00000000! 
     358 00000d20     0d5f          CALLA   OINIT                           ;FREE ALL OBJECTS
         00000d30 00000000! 
     359                    
     360 00000d50           pcheck_amode
     361                            .if     self_play
     362                    
     363                            callr   start_game      ;this better set a different mode
     364                            callr   fix_curplyrs
     365                    
     366                            .else
     367                    
     368 00000d50     0d3f          callr   do_we_have_start_credits
         00000d60     1628  
     369 00000d70     c90d          jrnc    pca99n
     370                    
     371 00000d80     098f          mmtm    sp,a0
         00000d90     8000  
     372 00000da0     09c0          movi    AUD_STARTS,a0           ;audit games started
         00000db0     000a  
     373 00000dc0     0d5f          calla   AUD1
         00000dd0 00000000! 
     374 00000df0     0d3f          callr   start_game      ;this better set a different mode
         00000e00     02ed  
     375 00000e10     09af          mmfm    sp,a0
         00000e20     0001  
     376 00000e30     c000          jruc    player_start
         00000e40     ff1b  
     377                    
     378                            .endif
     379                    
     380 00000e50           pca99
     381 00000e50           pca99n
     382 00000e50     05ae          MOVE    @COINFLAG,A14,W
         00000e60 00000000! 
     383 00000e80     cb80          JANZ    SUCIDE                          ;BR=ON CREDIT PAGE ALREADY
         00000e90 00000000! 
     384 00000eb0     05ae          MOVE    @CREDIT_PAGE_JUMPS,A14,W
         00000ec0 00000000! 
     385 00000ee0     142e          DEC     A14
     386 00000ef0     ce80          JAN     SUCIDE                          ;BR=TAKE OFF YOU HOSER!
         00000f00 00000000! 
     387 00000f20     058e          MOVE    A14,@CREDIT_PAGE_JUMPS,W
         00000f30 00000000! 
     388 00000f50     0d5f          calla   ATSTRT_CREDITS_NOCPJ
TMS340 COFF Macro Assembler Version 6.10     Wed Apr 21 11:31:43 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE    9

         00000f60 00000000! 
     389 00000f80     c080          jauc    SUCIDE
         00000f90 00000000! 
     390                    ;       MOVE    A14,@CREDIT_PAGE_JUMPS,W
     391                    ;       JAUC    CREDIT_JUMP2                    ;SHOW CREDIT PAGE
     392                    
     393                    **************************************************************************
     394                    *                                                                        *
     395                    * pcheck_intro - CHECK IF PLAYER MAY START DURING INTRO GAME MODE        *
     396                    *                                                                        *
     397                    * PASS:                                                                  *
     398                    * A0 = PLAYER NUMBER (1, 2, 5, OR 6)                                     *
     399                    *                                                                        *
     400                    * RETURN:                                                                *
     401                    * NUTIN'                                                                 *
     402                    *                                                                        *
     403                    **************************************************************************
     404                    
     405 00000fb0           pcheck_intro
     406 00000fb0     1821          movk    1,a1
     407 00000fc0     0d3f          callr   do_start_button
         00000fd0     1619  
     408 00000fe0     c934          jrnc    pcin99
     409                    
     410 00000ff0     07e1          MOVB    @TEAM_SELECT_BITS,A1
         00001000 00000000! 
     411 00001020     4c22          MOVE    A1,A2
     412 00001030     4c25          MOVE    A1,A5
     413                    
     414 00001040     09e3          MOVI    team1_home,A3
         00001050 00000040- 
     415 00001070     09e4          MOVI    team2_home,A4
         00001080 00000050- 
     416                    
     417 000010a0                   KITN    4
     418 000010e0     ca08          JREQ    PCI_4P                  ;BR=4 PLAYER KIT
     419                    
     420 000010f0     0b40          CMPI    2,A0
         00001100     fffd  
     421 00001110     c40d          JRLT    PCI_MASK                ;BR=CHECK PLAYER 1
     422 00001120     1440          SUBK    2,A0                    ;OFFSET 2 BITS LOWER
     423 00001130                   SWAP    A3,A4
     424 00001160     c00c          JRUC    PCI_ADD
     425 00001170           PCI_4P
     426 00001170     0b40          CMPI    5,A0
         00001180     fffa  
     427 00001190     c405          JRLT    PCI_MASK                ;BR=CHECK PLAYERS 1 AND 2
     428 000011a0     2fc2          SRL     2,A2                    ;CHECK PLAYERS 5 AND 6
     429 000011b0     1440          SUBK    2,A0                    ;OFFSET 2 BITS LOWER
     430 000011c0                   SWAP    A3,A4
     431 000011f0           PCI_MASK
     432 000011f0     0b82          ANDI    011B,A2                 ;MASK OUT TEAM
         00001200 fffffffc  
     433 00001220     cb10          JRNZ    pcin99                  ;BR=TEAMMATE ALREADY CHOSEN
     434 00001230           PCI_ADD
TMS340 COFF Macro Assembler Version 6.10     Wed Apr 21 11:31:43 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   10

     435 00001230     1420          DEC     A0
     436 00001240     182e          MOVK    1,A14
     437 00001250     620e          SLL     A0,A14
     438 00001260     55c1          OR      A14,A1                  ;ADD PLAYER TO CHOOSE TEAM
     439 00001270     05e1          MOVB    A1,@TEAM_SELECT_BITS
         00001280 00000000! 
     440                    
     441 000012a0     4ca5          MOVE    A5,A5
     442 000012b0     cb02          JRNZ    PCI_TOGGLE              ;BR=ALREADY CHOSE DEFAULT HOME/AWAY
     443                    
     444 000012c0     57ce          CLR     A14
     445 000012d0     81c4          MOVE    A14,*A4,W               ;SET FIRST PLAYER'S OPPONENT'S SIDE
     446 000012e0           PCI_TOGGLE
     447 000012e0     848e          MOVE    *A4,A14,W
     448 000012f0     0bce          XORI    1,A14                   ;TOGGLE OTHER SIDE                      
         00001300 00000001  
     449 00001320     81c3          MOVE    A14,*A3,W
     450 00001330     c080  pcin99  jauc    SUCIDE
         00001340 00000000! 
     451                    
     452                    **************************************************************************
     453                    *                                                                        *
     454                    * pcheck_game                                                            *
     455                    * PCHECK_BUYIN                                                           *
     456                    *                                                                        *
     457                    **************************************************************************
     458                    
     459 00001360           pcheck_game
     460 00001360           PCHECK_BUYIN
     461 00001360     4c01          MOVE    A0,A1
     462 00001370     1421          DEC     A1
     463 00001380     0b41          CMPI    1,A1
         00001390     fffe  
     464 000013a0     c601          JRLE    PCG_SAVE_STARTSW                ;BR=PLAYER 1 OR 2
     465 000013b0     1441          SUBK    2,A1                            ;ADJUST PLAYER 3 OR 4
     466 000013c0           PCG_SAVE_STARTSW
     467 000013c0     182e          MOVK    1,A14
     468 000013d0     622e          SLL     A1,A14
     469 000013e0     05a1          MOVE    @STARTSW,A1,W
         000013f0 00000000! 
     470 00001410     55c1          OR      A14,A1
     471 00001420     0581          MOVE    A1,@STARTSW,W
         00001430 00000000! 
     472                    
     473 00001450     05a1          move    @period,a1
         00001460 000000e0- 
     474 00001480     1021          inc     a1
     475                    ;;;;;   callr   do_start_button_rsgap
     476 00001490     0d3f          callr   do_start_button
         000014a0     15cc  
     477 000014b0     c080          jauc    SUCIDE
         000014c0 00000000! 
     478                    
     479 000014e0           pcheck_play
     480 000014e0     0d3f          callr   check_for_player
TMS340 COFF Macro Assembler Version 6.10     Wed Apr 21 11:31:43 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   11

         000014f0     0e92  
     481 00001500     c808          jrc     pcp_ig
     482 00001510     05a1          move    @period,a1,W
         00001520 000000e0- 
     483                    ;;;;;   callr   do_start_button_rsgap
     484 00001540     0d3f          callr   do_start_button
         00001550     15c1  
     485 00001560     c080          jauc    SUCIDE
         00001570 00000000! 
     486                    
     487 00001590           pcp_ig                  ;button pressed during gameplay
     488 00001590     05a1          move    @period,a1,W
         000015a0 000000e0- 
     489                    ;;;;;   callr   do_start_button_rsgap
     490 000015c0     0d3f          callr   do_start_button
         000015d0     15b9  
     491 000015e0     c080          jauc    SUCIDE
         000015f0 00000000! 
     492                    
     493 00001610           pcheck_diag
     494 00001610           pcheck_epilog
     495 00001610     c080          jauc    SUCIDE
         00001620 00000000! 
     496                    
     497                    **************************************************************************
     498                    *                                                                        *
     499                    * CROWD_NOISE_PROC                                                       *
     500                    *                                                                        *
     501                    * PASS:                                                                  *
     502                    * NUTIN'                                                                 *
     503                    *                                                                        *
     504                    **************************************************************************
     505                    
     506              007f  SOFTEST_CROWD   EQU     127     ;80
     507              00df  LOUDEST_CROWD   EQU     223     ;191
     508                    
     509 00001640           CROWD_NOISE_PROC
     510 00001640     18a8          MOVK    CROWD_NOISES,A8
     511 00001650     09e9          MOVI    CROWD_NOISE_TABLE,A9
         00001660 00002460' 
     512 00001680     09ca          MOVI    SOFTEST_CROWD,A10
         00001690     007f  
     513 000016a0     c00b          JRUC    CN_START
     514 000016b0           CN_LUPE
     515 000016b0     05a0          MOVE    @crowd_track,A0,W
         000016c0 00000000! 
     516 000016e0     ca07          JRZ     CN_START                        ;BR=NO CROWD NOISE
     517 000016f0     5621          CLR     A1                              ;OPEN CROWD TRACK
     518 00001700     0581          MOVE    A1,@crowd_track,W
         00001710 00000000! 
     519 00001730     0d5f          CALLA   set_track_time
         00001740 00000000! 
     520 00001760           CN_START
     521 00001760     05ae          MOVE    @PUCK_MODE,A14,W
         00001770 00000000! 
TMS340 COFF Macro Assembler Version 6.10     Wed Apr 21 11:31:43 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   12

     522 00001790     0b4e          CMPI    PUM_ENDPER,A14
         000017a0     ff9a  
     523 000017b0     ca80          JAEQ    SUCIDE
         000017c0 00000000! 
     524                    
     525 000017e0     05a0          MOVE    @PUCK_CONTROL,A0,W
         000017f0 00000000! 
     526 00001810     cb23          JRNZ    CN_NOSCORE                      ;BR=SOMEBODY HAS CONTROL
     527                    
     528 00001820     0b4e          CMPI    PUM_SCORE,A14
         00001830     ff9c  
     529 00001840     cb20          JRNE    CN_NOSCORE                      ;BR=NO GOAL
     530                    
     531 00001850     09c0          MOVI    PID_CROWD_REACT_NOISE,A0
         00001860     1002  
     532 00001870     0d5f          CALLA   EXISTP_ALL
         00001880 00000000! 
     533 000018a0     cb1a          JRNZ    CN_NOSCORE                      ;BR=ALREADY GOT ONE GOING
     534                    
     535 000018b0     09e7          MOVI    CROWD_CHEER_PROC,A7
         000018c0 00001f60' 
     536                    
     537 000018e0     05ae          MOVE    @PLAYER_BITS,A14,W              ;GET CURRENT PLAYERS
         000018f0 00000000! 
     538 00001910     ca0e          JRZ     CN_REACT                        ;BR=ATTRACT MODE
     539 00001920     07a1          MOVE    @PUCK_OBJECT,A1,L
         00001930 00000000! 
     540 00001950     b621          MOVE    *A1(OXVAL),A1,L
         00001960     0140  
     541 00001970     cf01          JRNN    CN_HUMAN_TEST                   ;BR=TEST FOR PLAYERS 1 AND 2
     542 00001980     2fce          SRL     2,A14                           ;TEST FOR PLAYERS 5 AND 6
     543 00001990           CN_HUMAN_TEST
     544 00001990     0b8e          ANDI    3,A14
         000019a0 fffffffc  
     545 000019c0     cb03          JRNZ    CN_REACT                        ;BR=AT LEAST ONE HUMAN PLAYER
     546 000019d0     09e7          MOVI    CROWD_BOO_PROC,A7
         000019e0 000021e0' 
     547 00001a00           CN_REACT
     548 00001a00     09c1          MOVI    PID_CROWD_REACT_NOISE,A1
         00001a10     1002  
     549 00001a20     0d5f          CALLA   GETPRC
         00001a30 00000000! 
     550                    
     551 00001a50           CN_NOSCORE
     552 00001a50     4d00          MOVE    A8,A0
     553 00001a60     4d41          MOVE    A10,A1
     554 00001a70     0d5f          CALLA   RAND0                           ;PICK SOUND FROM TABLE
         00001a80 00000000! 
     555 00001aa0     24a0          SLL     5,A0
     556 00001ab0     4120          ADD     A9,A0
     557 00001ac0     9404          MOVE    *A0+,A4,W
     558 00001ad0     0d5f          CALLA   do_sound_at_volume
         00001ae0 00000000! 
     559 00001b00     c805          JRC     CN_SUCCESS                      ;BR=COULDN'T MAKE SOUND
     560 00001b10                   SLEEP   1
TMS340 COFF Macro Assembler Version 6.10     Wed Apr 21 11:31:43 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   13

     561 00001b50     c0b5          JRUC    CN_LUPE
     562 00001b60           CN_SUCCESS
     563 00001b60     0584          MOVE    A4,@crowd_track,W               ;SAVE CROWD TRACK
         00001b70 00000000! 
     564 00001b90     840b          MOVE    *A0,A11,W
     565 00001ba0           CN_NAP
     566 00001ba0                   SLEEP   1
     567                    
     568 00001be0     05ae          MOVE    @PUCK_MODE,A14,W
         00001bf0 00000000! 
     569 00001c10     0b4e          CMPI    PUM_ENDPER,A14
         00001c20     ff9a  
     570 00001c30     ca80          JAEQ    SUCIDE
         00001c40 00000000! 
     571                    
     572 00001c60     05a0          MOVE    @PUCK_CONTROL,A0,W
         00001c70 00000000! 
     573 00001c90     cb09          JRNZ    CN_CHECK_ZONE                   ;BR=SOMEBODY HAS CONTROL
     574                    
     575 00001ca0     0b4e          CMPI    PUM_SCORE,A14
         00001cb0     ff9c  
     576                    ;       JREQ    CN_LUPE                         ;BR=GOAL! MAKE CROWD REACT
     577 00001cc0     cb06          JRNE    CN_CHECK_ZONE                   ;BR=NO GOAL
     578                    
     579 00001cd0     09c0          MOVI    PID_CROWD_REACT_NOISE,A0
         00001ce0     1002  
     580 00001cf0     0d5f          CALLA   EXISTP_ALL
         00001d00 00000000! 
     581 00001d20     ca98          JRZ     CN_LUPE                         ;BR=GOAL! MAKE CROWD REACT
     582                    
     583 00001d30           CN_CHECK_ZONE
     584 00001d30     07ae          MOVE    @PUCK_OBJECT,A14,L
         00001d40 00000000! 
     585 00001d60     b7c0          MOVE    *A14(OXVAL),A0,L                ;WHERE "PUCK" IS IT?
         00001d70     0140  
     586                    
     587 00001d80     0b60          CMPI    LEFT_BLUELINE_X,A0
         00001d90 00e8ffff  
     588 00001db0     c604          JRLE    CN_OFFZONE                      ;BR=IN LEFT ZONE
     589 00001dc0     0b60          CMPI    RGHT_BLUELINE_X,A0
         00001dd0 ff16ffff  
     590 00001df0     c405          JRLT    CN_NEUTRAL                      ;BR=IN NEUTRAL ZONE
     591 00001e00           CN_OFFZONE
     592 00001e00     0b4a          CMPI    LOUDEST_CROWD,A10
         00001e10     ff20  
     593 00001e20     c50f          JRGE    CN_NEXT
     594 00001e30     102a          INC     A10
     595 00001e40     c004          JRUC    CN_ADJUST_CROWD
     596 00001e50           CN_NEUTRAL
     597 00001e50     0b4a          CMPI    SOFTEST_CROWD,A10
         00001e60     ff80  
     598 00001e70     c60a          JRLE    CN_NEXT
     599 00001e80     142a          DEC     A10
     600 00001e90           CN_ADJUST_CROWD
     601 00001e90     05a0          MOVE    @crowd_track,A0,W               ;CROWD TRACK
TMS340 COFF Macro Assembler Version 6.10     Wed Apr 21 11:31:43 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   14

         00001ea0 00000000! 
     602                    ;       JRZ     CN_NEXT
     603 00001ec0     ca00          JRZ     CN_LUPE
         00001ed0     ff7d  
     604 00001ee0     4d41          MOVE    A10,A1
     605 00001ef0     0d5f          CALLA   set_track_volume
         00001f00 00000000! 
     606 00001f20           CN_NEXT
     607 00001f20     0d8b          DSJ     A11,CN_NAP
         00001f30     ffc6  
     608                    
     609 00001f40     c000          JRUC    CN_LUPE
         00001f50     ff75  
     610                    
     611                    **************************************************************************
     612                    *                                                                        *
     613                    * CROWD_CHEER_PROC                                                       *
     614                    *                                                                        *
     615                    **************************************************************************
     616                    
     617 00001f60           CROWD_CHEER_PROC
     618 00001f60     09c8          MOVI    S_CROWD_5,A8
         00001f70     0116  
     619 00001f80     09c9          MOVI    S_CROWD_9,A9
         00001f90     011a  
     620 00001fa0     09ca          MOVI    265,A10
         00001fb0     0109  
     621                    
     622 00001fc0     09c0          MOVI    511,A0
         00001fd0     01ff  
     623 00001fe0     0d5f          CALLA   RANDPER
         00001ff0 00000000! 
     624 00002010     c805          JRC     CCP_GO
     625 00002020                   SWAP    A8,A9
     626 00002050     09ca          MOVI    195,A10
         00002060     00c3  
     627 00002070           CCP_GO
     628 00002070     4d04          MOVE    A8,A4
     629 00002080     0d5f          CALLA   do_sound
         00002090 00000000! 
     630                    
     631 000020b0     1be0          MOVK    31,A0
     632 000020c0     0d5f          CALLA   RAND0
         000020d0 00000000! 
     633 000020f0                   SLEEPR  A0
     634                    
     635 00002130     4d24          MOVE    A9,A4
     636 00002140     0d5f          CALLA   do_sound
         00002150 00000000! 
     637                    
     638 00002170                   SLEEPR  A10
     639                    
     640 000021b0                   DIE
     641                    
     642                    **************************************************************************
TMS340 COFF Macro Assembler Version 6.10     Wed Apr 21 11:31:43 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   15

     643                    *                                                                        *
     644                    * CROWD_BOO_PROC                                                         *
     645                    *                                                                        *
     646                    **************************************************************************
     647                    
     648 000021e0           CROWD_BOO_PROC
     649 000021e0     09c8          MOVI    crowd_noise_2,A8
         000021f0     00e2  
     650 00002200     09c9          MOVI    crowd_noise_7,A9
         00002210     00e7  
     651 00002220     09ca          MOVI    162,A10
         00002230     00a2  
     652                    
     653 00002240     09c0          MOVI    511,A0
         00002250     01ff  
     654 00002260     0d5f          CALLA   RANDPER
         00002270 00000000! 
     655 00002290     c805          JRC     CBP_GO
     656 000022a0                   SWAP    A8,A9
     657 000022d0     09ca          MOVI    225,A10
         000022e0     00e1  
     658 000022f0           CBP_GO
     659 000022f0     4d04          MOVE    A8,A4
     660 00002300     0d5f          CALLA   do_sound
         00002310 00000000! 
     661                    
     662 00002330     1be0          MOVK    31,A0
     663 00002340     0d5f          CALLA   RAND0
         00002350 00000000! 
     664 00002370                   SLEEPR  A0
     665                    
     666 000023b0     4d24          MOVE    A9,A4
     667 000023c0     0d5f          CALLA   do_sound
         000023d0 00000000! 
     668                    
     669 000023f0                   SLEEPR  A10
     670                    
     671 00002430                   DIE
     672                    
     673                    
     674              0005  CROWD_NOISES    EQU     5
     675                    
     676 00002460           CROWD_NOISE_TABLE
     677 00002460     0112          .word   S_CROWD_1,195
     678 00002480     0115          .word   S_CROWD_4,268                   ;FIX HEAD-TAIL OVERLAP
     679                    
     680 000024a0     0118          .word   S_CROWD_7,249
     681                    
     682 000024c0     0114          .word   S_CROWD_3,160
     683 000024e0     011b          .word   S_CROWD_10,130
     684                    
     685              0002  CROWD_CHEERS    EQU     2
     686                    
     687 00002500           CROWD_CHEER_TABLE
     688 00002500     0116          .word   S_CROWD_5,174
TMS340 COFF Macro Assembler Version 6.10     Wed Apr 21 11:31:43 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   16

     689 00002520     011a          .word   S_CROWD_9,226
     690                    
     691              0002  CROWD_BOOS      EQU     2
     692                    
     693 00002540           CROWD_BOO_TABLE
     694 00002540     00e2          .word   crowd_noise_2,214
     695 00002560     00e7          .word   crowd_noise_7,151
     696                    
     697                    
     698                    **************************************************************************
     699                    *                                                                        *
     700                    * ORGAN_PROC - ORGAN PROCESS                                             *
     701                    *                                                                        *
     702                    * PASS:                                                                  *
     703                    * NUTIN'                                                                 *
     704                    *                                                                        *
     705                    **************************************************************************
     706                    
     707                    ;ORGAN_CHARGE_TABLE
     708                    ;       .LONG   S_ORGAN_CHARGE_C,S_ORGAN_CHARGE_BFLAT,S_ORGAN_CHARGE_B
     709                    
     710 00002580           ORGAN_PROC
     711 00002580     07aa          MOVE    @WAVEIRQS,A10,L                 ;DON'T PLAY UNTIL THIS TIME
         00002590 00000000! 
     712 000025b0           OP_FACEOFF
     713 000025b0     05a8          MOVE    @team1_score,A8,W
         000025c0 00000090- 
     714 000025e0     05ae          MOVE    @team2_score,A14,W
         000025f0 000000d0- 
     715 00002610     45c8          SUB     A14,A8                          ;LEFT - RIGHT SCORE
     716 00002620           OP_F_WATCH
     717 00002620                   SLEEP   1
     718 00002660     05ae          MOVE    @PUCK_MODE,A14,W
         00002670 00000000! 
     719 00002690     0b4e          CMPI    PUM_ENDPER,A14
         000026a0     ff9a  
     720 000026b0     ca80          JAEQ    SUCIDE
         000026c0 00000000! 
     721                    
     722 000026e0     05a0          MOVE    @PUCK_CONTROL,A0,W
         000026f0 00000000! 
     723 00002710     cbf0          JRNZ    OP_F_WATCH                      ;BR=SOMEBODY HAS CONTROL
     724                    
     725 00002720     0b4e          CMPI    PUM_FACEOFF,A14
         00002730     ff9b  
     726 00002740     cbed          JRNE    OP_F_WATCH                      ;BR=NOT AT FACEOFF
     727                    
     728 00002750           OP_F_NOPOSS
     729 00002750                   SLEEP   1
     730 00002790     05a1          MOVE    @PUCK_CONTROL,A1,W
         000027a0 00000000! 
     731 000027c0     caf8          JRZ     OP_F_NOPOSS                     ;BR=NOBODY HAS CONTROL
     732                    
     733 000027d0     1421          DEC     A1                              ;COMPUTE TEAM (0=LEFT, 1=RIGHT)
     734 000027e0     2fc1          SRL     2,A1
TMS340 COFF Macro Assembler Version 6.10     Wed Apr 21 11:31:43 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   17

     735                    
     736 000027f0     5729          CLR     A9                              ;IN NEUTRAL ZONE
     737 00002800     4c2b          MOVE    A1,A11                          ;TEAM IN POSSESSION OF PUCK
     738                    
     739 00002810     cb07          JRNZ    OP_F_RIGHT_CHECK                ;BR=RIGHT TEAM HAS PUCK
     740 00002820     4d08          MOVE    A8,A8                           ;LEFT TEAM HAS PUCK
     741 00002830     c100          JRP     OP_P_CHANGE                     ;BR=LEFT SIDE WINNING
         00002840     0099  
     742 00002850     ca00          JRZ     OP_P_CHANGE
         00002860     0097  
     743 00002870     1822          MOVK    1,A2                            ;PLAY FOR LEFT SIDE
     744 00002880     c006          JRUC    OP_F_PLAY
     745 00002890           OP_F_RIGHT_CHECK
     746 00002890     4d08          MOVE    A8,A8
     747 000028a0     ce00          JRN     OP_P_CHANGE                     ;BR=RIGHT SIDE WINNING
         000028b0     0092  
     748 000028c0     ca00          JRZ     OP_P_CHANGE
         000028d0     0090  
     749 000028e0     1842          MOVK    2,A2                            ;PLAY FOR RIGHT SIDE
     750 000028f0           OP_F_PLAY
     751 000028f0     09c3          MOVI    60*10,A3                        ;DELAY TIL NEXT ORGAN
         00002900     0258  
     752                    ;       MOVK    3,A0
     753                    ;       CALLA   RAND0
     754                    ;       SLL     5,A0
     755                    ;       ADDI    ORGAN_CHARGE_TABLE,A0
     756                    ;       MOVE    *A0,A4,L
     757 00002910     09c4          MOVI    S_ORGAN_CHARGE_C,A4             ;FACEOFF CHARGE
         00002920     00f2  
     758 00002930     09c0          MOVI    1024*3/4,A0                     ;% CHANCE OF PLAYING
         00002940     0300  
     759 00002950     0d3f          CALLR   PLAY_ORGAN
         00002960     0104  
     760 00002970     c000          JRUC    OP_P_CHANGE
         00002980     0085  
     761 00002990           OP_POSS
     762 00002990     07ab          MOVE    @PUCK_OBJECT,A11,L
         000029a0 00000000! 
     763 000029c0           OP_P_WATCH
     764 000029c0                   SLEEP   1
     765 00002a00     05ae          MOVE    @PUCK_MODE,A14,W
         00002a10 00000000! 
     766 00002a30     0b4e          CMPI    PUM_ENDPER,A14
         00002a40     ff9a  
     767 00002a50     ca80          JAEQ    SUCIDE
         00002a60 00000000! 
     768                    
     769 00002a80     05a1          MOVE    @PUCK_CONTROL,A1,W
         00002a90 00000000! 
     770 00002ab0     cb07          JRNZ    OP_P_CHECK                      ;BR=SOMEBODY HAS CONTROL
     771                    
     772 00002ac0     0b4e          CMPI    PUM_SCORE,A14
         00002ad0     ff9c  
     773 00002ae0     caac          JREQ    OP_FACEOFF                      ;BR=SOMEBODY JUST SCORED
     774 00002af0     0b4e          CMPI    PUM_FACEOFF,A14
TMS340 COFF Macro Assembler Version 6.10     Wed Apr 21 11:31:43 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   18

         00002b00     ff9b  
     775 00002b10     cac3          JREQ    OP_F_NOPOSS                     ;BR=WE'RE AT A FACEOFF
     776                    
     777 00002b20     c0e9          JRUC    OP_P_WATCH
     778 00002b30           OP_P_CHECK
     779                    
     780                    **************************************************************************
     781                    *                                                                        *
     782                    * ADD RANDOM PLAY?                                                       *
     783                    *                                                                        *
     784                    **************************************************************************
     785                    
     786 00002b30     b760          MOVE    *A11(OXVAL),A0,L                ;WHERE "PUCK" IS IT?
         00002b40     0140  
     787                    
     788                    ;       CALLR   GET_ZONE
     789                    
     790 00002b50     57ce          CLR     A14
     791 00002b60     142e          DEC     A14
     792 00002b70     0b60          CMPI    LEFT_BLUELINE_X,A0
         00002b80 00e8ffff  
     793 00002ba0     c606          JRLE    OP_GOT_ZONE                     ;BR=IN LEFT ZONE
     794 00002bb0     102e          INC     A14
     795 00002bc0     0b60          CMPI    RGHT_BLUELINE_X,A0
         00002bd0 ff16ffff  
     796 00002bf0     c401          JRLT    OP_GOT_ZONE                     ;BR=IN NEUTRAL ZONE
     797 00002c00     102e          INC     A14                             ;IN RIGHT ZONE
     798 00002c10           OP_GOT_ZONE
     799 00002c10     4dce          MOVE    A14,A14
     800 00002c20     cb02          JRNZ    OP_P_GET_TEAM                   ;BR=NOT IN NEUTRAL ZONE
     801 00002c30     5729          CLR     A9                              ;IN NEUTRAL ZONE
     802 00002c40     c0d7          JRUC    OP_P_WATCH
     803 00002c50           OP_P_GET_TEAM
     804 00002c50     1421          DEC     A1
     805 00002c60     2fc1          SRL     2,A1
     806 00002c70     cb09          JRNZ    OP_P_RIGHT_CHECK                ;BR=RIGHT TEAM HAS PUCK
     807 00002c80     4d08          MOVE    A8,A8                           ;LEFT TEAM HAS PUCK
     808 00002c90     cad2          JRZ     OP_P_WATCH                      ;BR=TIE SCORE
     809 00002ca0     c1d1          JRP     OP_P_WATCH                      ;BR=LEFT SIDE WINNING
     810 00002cb0     4dce          MOVE    A14,A14
     811 00002cc0     c1cf          JRP     OP_P_WATCH                      ;BR=ON RIGHT SIDE
     812                    
     813 00002cd0     1822          MOVK    1,A2                            ;PLAY FOR LEFT SIDE
     814 00002ce0     5739          CLR     B9
     815 00002cf0     1439          DEC     B9                              ;FLAG LEFT ZONE
     816                    
     817 00002d00     c007          JRUC    OP_P_PLAY
     818 00002d10           OP_P_RIGHT_CHECK
     819 00002d10     4d08          MOVE    A8,A8
     820 00002d20     cac9          JRZ     OP_P_WATCH                      ;BR=TIE SCORE
     821 00002d30     cec8          JRN     OP_P_WATCH                      ;BR=RIGHT SIDE WINNING
     822 00002d40     4dce          MOVE    A14,A14
     823 00002d50     cec6          JRN     OP_P_WATCH                      ;BR=ON LEFT SIDE
     824                    
     825 00002d60     1842          MOVK    2,A2                            ;PLAY FOR RIGHT SIDE
TMS340 COFF Macro Assembler Version 6.10     Wed Apr 21 11:31:43 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   19

     826 00002d70     1839          MOVK    1,B9                            ;FLAG RIGHT ZONE
     827 00002d80           OP_P_PLAY
     828 00002d80     4d29          MOVE    A9,A9
     829 00002d90     cbc2          JRNZ    OP_P_WATCH                      ;BR=ALREADY PLAYED
     830 00002da0     4e21          MOVE    A1,B1
     831 00002db0     09c3          MOVI    60*15,A3
         00002dc0     0384  
     832                    ;       MOVI    1024/2,A0
     833 00002dd0     09c0          MOVI    1024*3/4,A0
         00002de0     0300  
     834                    
     835 00002df0     05ae          MOVE    @WAVEIRQS,A14,W
         00002e00 00000000! 
     836 00002e20     4d04          MOVE    A8,A4
     837 00002e30     0384          ABS     A4
     838 00002e40     0b44          CMPI    3,A4
         00002e50     fffc  
     839 00002e60     c40c          JRLT    OP_P_NORM                       ;BR=NOT BEHIND ENOUGH
     840                    ;       MOVI    1024*3/4,A0
     841 00002e70     09c0          MOVI    1024,A0
         00002e80     0400  
     842 00002e90     2fee          SRL     1,A14
     843 00002ea0     c808          JRC     OP_P_NORM                       ;BR=PLAY A NORMAL SCRIPT
     844 00002eb0     09c3          MOVI    60*20,A3
         00002ec0     04b0  
     845 00002ed0     09c4          MOVI    S_ORGAN_CHARGE_A,A4             ;SUCCESSIVE CHARGES
         00002ee0     00f6  
     846                    ;       MOVI    S_ORGAN_CHARGE_BFLAT,A4
     847 00002ef0     09f2          MOVI    CHARGE_SCRIPT,B2
         00002f00 000034b0' 
     848 00002f20     c00c          JRUC    OP_P_PLAY_SET
     849 00002f30           OP_P_NORM
     850 00002f30     09c4          MOVI    S_ORGAN_DAH_F,A4
         00002f40     00ef  
     851 00002f50     09f2          MOVI    DAH_SCRIPT,B2                   ;DAH-DAH-DAH TUNE
         00002f60 00003440' 
     852 00002f80     2fee          SRL     1,A14
     853 00002f90     c805          JRC     OP_P_PLAY_SET                   ;BR=PLAY THE OTHER ONE
     854 00002fa0     09c4          MOVI    S_ORGAN_LINE_G,A4               ;THE OTHER TUNE
         00002fb0     00f3  
     855 00002fc0     09f2          MOVI    LINE_SCRIPT,B2
         00002fd0 000033d0' 
     856 00002ff0           OP_P_PLAY_SET
     857 00002ff0     0d3f          CALLR   PLAY_ORGAN
         00003000     009a  
     858 00003010     cb18          JRNZ    OP_P_SCRIPT                     ;BR=ORGAN HAS STARTED
     859                    
     860 00003020     07a2          MOVE    @WAVEIRQS,A2,L                  ;CHECK LAST TIME ORGAN PLAYED
         00003030 00000000! 
     861 00003050     4c4e          MOVE    A2,A14
     862 00003060     454e          SUB     A10,A14
     863 00003070     0b4e          CMPI    60*45,A14
         00003080     f573  
     864 00003090     c592          JRGE    OP_P_WATCH                      ;BR=DON'T DELAY ANY MORE
     865                    
TMS340 COFF Macro Assembler Version 6.10     Wed Apr 21 11:31:43 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   20

     866 000030a0     09c0          MOVI    1024/2,A0
         000030b0     0200  
     867 000030c0     0d5f          CALLA   RANDPER
         000030d0 00000000! 
     868 000030f0     c98c          JRNC    OP_P_WATCH                      ;BR=DON'T DELAY
     869                    
     870 00003100     09c0          MOVI    60*5,A0                         ;ADD RANDOM DELAY
         00003110     012c  
     871 00003120     09c1          MOVI    60,A1
         00003130     003c  
     872 00003140     0d5f          CALLA   RANGERND
         00003150 00000000! 
     873 00003170     4c4a          MOVE    A2,A10
     874 00003180     400a          ADD     A0,A10
     875                    
     876 00003190     c082          JRUC    OP_P_WATCH
     877 000031a0           OP_P_SCRIPT
     878 000031a0     4f39          MOVE    B9,A9                           ;ZONE ORGAN STARTED PLAYING
     879 000031b0     4e3b          MOVE    B1,A11                          ;TEAM IN POSSESSION OF PUCK
     880                    
     881 000031c0     4e52          MOVE    B2,A2
     882 000031d0     c032          JRUC    ORGAN_SCRIPT
     883                    
     884 000031e0           OP_P_CHANGE
     885 000031e0                   SLEEP   1
     886                    
     887                    **************************************************************************
     888                    *                                                                        *
     889                    * ADD RANDOM PLAY?                                                       *
     890                    *                                                                        *
     891                    **************************************************************************
     892                    
     893 00003220     05ae          MOVE    @PUCK_MODE,A14,W
         00003230 00000000! 
     894 00003250     0b4e          CMPI    PUM_ENDPER,A14
         00003260     ff9a  
     895 00003270     ca80          JAEQ    SUCIDE
         00003280 00000000! 
     896                    
     897 000032a0     05a1          MOVE    @PUCK_CONTROL,A1,W
         000032b0 00000000! 
     898 000032d0     cb09          JRNZ    OP_P_CHANGE_CHECK               ;BR=SOMEBODY HAS CONTROL
     899                    
     900 000032e0     0b4e          CMPI    PUM_SCORE,A14
         000032f0     ff9c  
     901 00003300     ca00          JREQ    OP_FACEOFF                      ;BR=SOMEBODY JUST SCORED
         00003310     ff29  
     902 00003320     0b4e          CMPI    PUM_FACEOFF,A14
         00003330     ff9b  
     903 00003340     ca00          JREQ    OP_F_NOPOSS                     ;BR=WE'RE AT A FACEOFF
         00003350     ff3f  
     904 00003360     c0e7          JRUC    OP_P_CHANGE
     905 00003370           OP_P_CHANGE_CHECK
     906 00003370     1421          DEC     A1
     907 00003380     2fc1          SRL     2,A1
TMS340 COFF Macro Assembler Version 6.10     Wed Apr 21 11:31:43 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   21

     908 00003390     4961          CMP     A11,A1
     909 000033a0     cae3          JREQ    OP_P_CHANGE                     ;BR=POSSESSION DIDN'T CHANGE
     910 000033b0     c000          JRUC    OP_POSS
         000033c0     ff5c  
     911                    
     912 000033d0           LINE_SCRIPT
     913 000033d0     003c          .word   60,S_ORGAN_LINE_AFLAT
     914 000033f0     003c          .word   60,S_ORGAN_LINE_A
     915 00003410     003d          .word   61,S_ORGAN_CHARGE_C
     916 00003430     0000          .word   0
     917                    
     918 00003440           DAH_SCRIPT
     919 00003440     0048          .word   72,S_ORGAN_DAH_FSHARP
     920 00003460     0043          .word   67,S_ORGAN_DAH_G
     921 00003480     0045          .word   69,S_ORGAN_CHARGE_C
     922 000034a0     0000          .word   0
     923                    
     924 000034b0           CHARGE_SCRIPT
     925 000034b0     0082          .word   130,S_ORGAN_CHARGE_BFLAT
     926 000034d0     0082          .word   130,S_ORGAN_CHARGE_B
     927                    ;       .word   130,S_ORGAN_CHARGE_C
     928 000034f0     0000          .word   0
     929                    
     930                    **************************************************************************
     931                    *                                                                        *
     932                    * ORGAN_SCRIPT                                                           *
     933                    *                                                                        *
     934                    * PASS:                                                                  *
     935                    * A2  = SCRIPT                                                           *
     936                    * A11 = TEAM IN POSSESSION                                               *
     937                    *                                                                        *
     938                    **************************************************************************
     939                    
     940 00003500           ORGAN_SCRIPT
     941 00003500     09c0          MOVI    1024/2,A0                       ;% CHANCE NOT TO ABORT SCRIPT
         00003510     0200  
     942 00003520     0d5f          CALLA   RANDPER
         00003530 00000000! 
     943 00003550     0183          GETST   A3
     944 00003560           OS_LUPE
     945 00003560     9440          MOVE    *A2+,A0,W
     946 00003570     cac6          JRZ     OP_P_CHANGE                     ;BR=DONE, NOW WATCH FOR CHANGE
     947 00003580     098c          MMTM    A12,A2,A3
         00003590     3000  
     948 000035a0                   SLEEPR  A0
     949 000035e0     09ac          MMFM    A12,A2,A3
         000035f0     000c  
     950                    
     951 00003600     05ae          MOVE    @PUCK_MODE,A14,W
         00003610 00000000! 
     952 00003630     0b4e          CMPI    PUM_ENDPER,A14
         00003640     ff9a  
     953 00003650     ca80          JAEQ    SUCIDE
         00003660 00000000! 
     954                    
TMS340 COFF Macro Assembler Version 6.10     Wed Apr 21 11:31:43 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   22

     955 00003680     05a1          MOVE    @PUCK_CONTROL,A1,W
         00003690 00000000! 
     956 000036b0     cb14          JRNZ    OS_CHECK                        ;BR=SOMEBODY HAS CONTROL
     957                    
     958 000036c0     0b4e          CMPI    PUM_SCORE,A14
         000036d0     ff9c  
     959 000036e0     ca00          JREQ    OP_FACEOFF                      ;BR=SOMEBODY JUST SCORED
         000036f0     feeb  
     960 00003700     0b4e          CMPI    PUM_FACEOFF,A14
         00003710     ff9b  
     961 00003720     ca00          JREQ    OP_F_NOPOSS                     ;BR=WE'RE AT A FACEOFF
         00003730     ff01  
     962                    
     963 00003740     01a3          PUTST   A3
     964 00003750     c811          JRC     OS_GO                           ;BR=DON'T ABORT SCRIPT
     965                    
     966                    ;       CMPI    PUM_SHOT,A14
     967                    ;       JREQ    OS_GO                           ;BR=CONTINUE SCRIPT ON SHOT
     968                    ;       CMPI    PUM_SSHOT,A14
     969                    ;       JREQ    OS_GO                           ;BR=CONTINUE SCRIPT ON SHOT
     970                    ;       CMPI    PUM_ONETIME,A14
     971                    ;       JREQ    OS_GO                           ;BR=CONTINUE SCRIPT ON SHOT
     972                    
     973 00003760     05a1          MOVE    @PUCK_INTENDED,A1,W
         00003770 00000000! 
     974 00003790     0b4e          CMPI    PUM_PASS,A14
         000037a0     fff5  
     975 000037b0     ca04          JREQ    OS_CHECK                        ;BR=CHECK PASS RECEIVER
     976 000037c0     0b4e          CMPI    PUM_TPASS,A14
         000037d0     fff4  
     977 000037e0     cb00          JRNE    OP_POSS                         ;BR=DON'T CONTINUE SCRIPT
         000037f0     ff19  
     978 00003800           OS_CHECK
     979 00003800     01a3          PUTST   A3
     980 00003810     c805          JRC     OS_GO                           ;BR=DON'T ABORT SCRIPT
     981                    
     982 00003820     1421          DEC     A1
     983 00003830     2fc1          SRL     2,A1
     984 00003840     4961          CMP     A11,A1
     985 00003850     cb00          JRNE    OP_POSS                         ;BR=CHANGE IN POSSESSION
         00003860     ff12  
     986 00003870           OS_GO
     987 00003870     05a0          MOVE    @organ_track,A0,W
         00003880 00000000! 
     988 000038a0     ca07          JRZ     OS_SOUND                        ;BR=NO ORGAN PLAYING
     989 000038b0     57ce          CLR     A14                             ;OPEN ORGAN TRACK
     990 000038c0     058e          MOVE    A14,@organ_track,W
         000038d0 00000000! 
     991 000038f0     0d5f          CALLA   cancel_track_sound
         00003900 00000000! 
     992 00003920           OS_SOUND
     993 00003920     9444          MOVE    *A2+,A4,W
     994 00003930     0d5f          CALLA   do_sound
         00003940 00000000! 
     995 00003960     c987          JRNC    OP_P_CHANGE                     ;BR=COULDN'T PLAY SOUND
TMS340 COFF Macro Assembler Version 6.10     Wed Apr 21 11:31:43 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   23

     996                    
     997 00003970     0584          MOVE    A4,@organ_track,W               ;SAVE ORGAN TRACK
         00003980 00000000! 
     998                    
     999 000039a0     c0bb          JRUC    OS_LUPE
    1000                    
    1001                    **************************************************************************
    1002                    *                                                                        *
    1003                    * PLAY_ORGAN                                                             *
    1004                    *                                                                        *
    1005                    * PASS:                                                                  *
    1006                    * A0  = % CHANCE TO PLAY                                                 *
    1007                    * A2  = SIDE TO PLAY FOR (0=BOTH, 1=LEFT, 2=RIGHT)                       *
    1008                    * A3  = MAXIMUM DELAY UNTIL NEXT ORGAN                                   *
    1009                    * A4  = ORGAN SOUND                                                      *
    1010                    * A10 = DON'T PLAY BEFORE THIS TIME                                      *
    1011                    *                                                                        *
    1012                    * RETURN:                                                                *
    1013                    * Z SET IF COULDN'T PLAY                                                 *
    1014                    *                                                                        *
    1015                    **************************************************************************
    1016                    
    1017 000039b0           PLAY_ORGAN
    1018 000039b0     4c42          MOVE    A2,A2
    1019 000039c0     ca0b          JRZ     PO_GO
    1020 000039d0     05ae          MOVE    @PLAYER_BITS,A14,W              ;GET CURRENT PLAYERS
         000039e0 00000000! 
    1021 00003a00     ca03          JRZ     PO_TEST                         ;BR=ATTRACT MODE
    1022 00003a10     1422          DEC     A2
    1023 00003a20     ca01          JRZ     PO_TEST                         ;BR=TEST FOR PLAYERS 1 AND 2
    1024 00003a30     2fce          SRL     2,A14                           ;TEST FOR PLAYERS 5 AND 6
    1025 00003a40           PO_TEST
    1026 00003a40     0b8e          ANDI    3,A14
         00003a50 fffffffc  
    1027 00003a70     ca24          JRZ     PO_FAIL                         ;BR=BOTH COMPUTER PLAYERS
    1028 00003a80           PO_GO
    1029 00003a80     07a1          MOVE    @WAVEIRQS,A1,L
         00003a90 00000000! 
    1030 00003ab0     4941          CMP     A10,A1
    1031 00003ac0     c41f          JRLT    PO_FAIL                         ;BR=TOO EARLY, DON'T PLAY YET
    1032 00003ad0     0d5f          CALLA   RANDPER
         00003ae0 00000000! 
    1033 00003b00     c91b          JRNC    PO_FAIL                         ;BR=DON'T PLAY
    1034                    
    1035 00003b10     05a0          MOVE    @organ_track,A0,W
         00003b20 00000000! 
    1036 00003b40     ca07          JRZ     PO_SOUND                        ;BR=NO ORGAN PLAYING
    1037 00003b50     57ce          CLR     A14                             ;OPEN ORGAN TRACK
    1038 00003b60     058e          MOVE    A14,@organ_track,W
         00003b70 00000000! 
    1039 00003b90     0d5f          CALLA   cancel_track_sound
         00003ba0 00000000! 
    1040 00003bc0           PO_SOUND
    1041 00003bc0     0d5f          CALLA   do_sound
         00003bd0 00000000! 
TMS340 COFF Macro Assembler Version 6.10     Wed Apr 21 11:31:43 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   24

    1042 00003bf0     c90c          JRNC    PO_FAIL                         ;BR=COULDN'T PLAY SOUND
    1043                    
    1044 00003c00     0584          MOVE    A4,@organ_track,W               ;SAVE ORGAN TRACK
         00003c10 00000000! 
    1045                    
    1046 00003c30     4c2a          MOVE    A1,A10                          ;COMPUTE NEXT TIME TO PLAY
    1047 00003c40     4c60          MOVE    A3,A0
    1048 00003c50     09c1          MOVI    60*10,A1
         00003c60     0258  
    1049 00003c70     0d5f          CALLA   RANGERND
         00003c80 00000000! 
    1050 00003ca0     400a          ADD     A0,A10
    1051 00003cb0     0960          RETS
    1052 00003cc0           PO_FAIL
    1053 00003cc0     57ce          CLR     A14
    1054 00003cd0     0960          RETS
    1055                    
    1056                    ;**************************************************************************
    1057                    ;*                                                                       *
    1058                    ;* GET_ZONE                                                              *
    1059                    ;*                                                                       *
    1060                    ;**************************************************************************
    1061                    ;
    1062                    ;GET_ZONE
    1063                    ;       CLR     A14
    1064                    ;       DEC     A14
    1065                    ;       CMPI    LEFT_BLUELINE_X,A0
    1066                    ;       JRLE    GZ_DONE
    1067                    ;       INC     A14
    1068                    ;       CMPI    RGHT_BLUELINE_X,A0
    1069                    ;       JRLT    GZ_DONE
    1070                    ;       INC     A14
    1071                    ;GZ_DONE
    1072                    ;       MOVE    A14,A14
    1073                    ;       RETS
    1074                    
    1075                    **************************************************************************
    1076                    *                                                                        *
    1077                    * start_game - START DA GAME                                             *
    1078                    *                                                                        *
    1079                    * PASS:                                                                  *
    1080                    * NUTIN'                                                                 *
    1081                    *                                                                        *
    1082                    * RETURN:                                                                *
    1083                    * NUTIN'                                                                 *
    1084                    *                                                                        *
    1085                    **************************************************************************
    1086 00003ce0           start_game_awin         ;start game for a free winner
    1087 00003ce0           start_game_force_new_initials
    1088 00003ce0           start_game
    1089 00003ce0                   SOUNDON
    1090 00003d20     0d5f          CALLA   GRAMINIT
         00003d30 00000000! 
    1091 00003d50     57ce          CLR     A14
    1092 00003d60     05ee          MOVB    A14,@TEAM_SELECT_BITS
TMS340 COFF Macro Assembler Version 6.10     Wed Apr 21 11:31:43 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   25

         00003d70 00000000! 
    1093 00003d90     05ae          move    @in_at_game,a14,W
         00003da0 00000000! 
    1094 00003dc0     ca03          jrz     sggg1
    1095 00003dd0     0d5f          calla   stop_attract_game_quick
         00003de0 00000000! 
    1096 00003e00     0d5f  sggg1   calla   init_speech_buffer
         00003e10 00000000! 
    1097 00003e30     0d3f          CALLR   MY_WIPEOUT_NOVIDEO
         00003e40     10f5  
    1098 00003e50     09ce          movi    ININTRO,a14
         00003e60     0018  
    1099 00003e70     058e          move    a14,@GAME_STATE,W
         00003e80 00000000! 
    1100 00003ea0     5600          clr     a0
    1101 00003eb0     0580          move    a0,@team1_score,W
         00003ec0 00000090- 
    1102 00003ee0     0580          move    a0,@team2_score,W
         00003ef0 000000d0- 
    1103 00003f10     0580          move    a0,@period,W
         00003f20 000000e0- 
    1104 00003f40     0580          move    a0,@hot_player,W
         00003f50 00000000! 
    1105 00003f70     0580          move    a0,@hold_net_anim,W
         00003f80 00000340- 
    1106 00003fa0     0d3f          callr   clear_all_player_blocks
         00003fb0     0009  
    1107 00003fc0                   C_A_K   PID_SEQUENCE,game_start_sequence
    1108 00004040     0960          rets
    1109                    
    1110 00004050           clear_all_player_blocks
    1111 00004050     09c2          movi    (8*PLAYER_BLOCK_SIZE)>08H,a2    ;8 players * block size >03H to byte >02H to longword >0
         00004060     0001  
    1112 00004070     09e1          movi    PLAYER_1_BLOCK,a1
         00004080 00000000! 
    1113 000040a0     9201  plup    move    a0,*a1+,L
    1114 000040b0     9201          move    a0,*a1+,L
    1115 000040c0     9201          move    a0,*a1+,L
    1116 000040d0     9201          move    a0,*a1+,L
    1117 000040e0     9201          move    a0,*a1+,L
    1118 000040f0     9201          move    a0,*a1+,L
    1119 00004100     9201          move    a0,*a1+,L
    1120 00004110     9201          move    a0,*a1+,L
    1121 00004120     3d22          dsjs    a2,plup
    1122 00004130     0960          rets
    1123                    
    1124 00004140           game_start_sequence
    1125 00004140     0d5f          calla   cx_game_start
         00004150 00000000! 
    1126                    ;       calla   attract_tune_end
    1127                    
    1128                            .if     self_play
    1129                    
    1130                            movk    26,a0
    1131                            calla   RANDU
TMS340 COFF Macro Assembler Version 6.10     Wed Apr 21 11:31:43 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   26

    1132                            move    a0,@team1,W
    1133                            movk    26,a0
    1134                            calla   RANDU
    1135                            move    a0,@team2,W
    1136                            clr     a0
    1137                            move    a0,@team2_home,W
    1138                            inc     a0
    1139                            move    a0,@team1_home,W
    1140                            .else
    1141                    
    1142 00004170                   SLEEP   1
    1143                    
    1144 000041b0     09ce          MOVI    99,A14
         000041c0     0063  
    1145 000041d0     058e          MOVE    A14,@MAX_PALXFERS,W
         000041e0 00000000! 
    1146                    
    1147                    ;       CLR     A0
    1148                    ;       CALLA   FADEOUT                         ;FADE DOWN ALL PALETTES
    1149                    ;       MOVK    16,A9
    1150                    ;       CREATE  PID_SKY,SKYDOWN                 ;FADE DOWN "SKY" COLOR
    1151                    
    1152 00004200     5600          CLR     A0
    1153 00004210     0d5f          CALLA   FADEOUTF                        ;FADE DOWN ALL PALETTES
         00004220 00000000! 
    1154 00004240     1929          MOVK    9,A9
    1155 00004250                   CREATE  PID_SKY,SKYDOWN                 ;FADE DOWN "SKY" COLOR
    1156                    
    1157 000042d0                   JSRP    FADE_WAIT
    1158 00004340     0d5f          CALLA   RESET_MAX_PALXFERS
         00004350 00000000! 
    1159                    
    1160 00004370     0d5f          CALLA   MYOINIT                 ;RE-INIT THE OBJECT LIST
         00004380 00000000! 
    1161 000043a0     0d5f          CALLA   CLR_SCRN                ;WIPE OUT THE BIT MAP
         000043b0 00000000! 
    1162                    
    1163                    ;       CLR     A14
    1164                    ;       MOVE    A14,@SUPRESS_PAGE_FLIP,W
    1165                    
    1166 000043d0     1820          MOVK    1,A0
    1167 000043e0     0580          MOVE    A0,@GAMERASE,W          ;AUTO-ERASE FULL
         000043f0 00000000! 
    1168                    ;       MOVE    A0,@DISPLAYON,W
    1169                    
    1170                            .if     XUNIT=1
    1171                            MOVI    DPYSTRT0,A0
    1172                            MOVE    A0,@DPYST,L             ;XUNIT RESET DISPLAY START POINT
    1173                            .else
    1174                    ;       movi    0fffch,a0
    1175 00004410     09c0          movi    0ch,a0
         00004420     000c  
    1176 00004430     0580          move    a0,@DPYSTRT,W
         00004440 c0000090  
    1177                            .endif
TMS340 COFF Macro Assembler Version 6.10     Wed Apr 21 11:31:43 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   27

    1178                    
    1179 00004460     5600          clr     a0
    1180 00004470     0780          move    a0,@WORLDX,L
         00004480 00000000! 
    1181 000044a0     0780          move    a0,@WORLDY,L
         000044b0 00000000! 
    1182 000044d0     0580          move    a0,@glass_hit,W         ;count for broken glass
         000044e0 00000000! 
    1183 00004500     0580          move    a0,@glass_break,W       ;glass has not broken yet
         00004510 00000000! 
    1184                    
    1185                            .if     1
    1186                    
    1187 00004530                   JSRP    INITIAL_ENTRY
    1188                    
    1189                            .else
    1190                    
    1191                            movk    26,a0
    1192                            calla   RANDU
    1193                            move    a0,@team1,W
    1194                            movk    26,a0
    1195                            calla   RANDU
    1196                            move    a0,@team2,W
    1197                            clr     a0
    1198                            move    a0,@team2_home,W
    1199                            inc     a0
    1200                            move    a0,@team1_home,W
    1201                    
    1202                    ;       JSRP    SUBSTITUTION_PAGE
    1203                    
    1204                            BLACKON
    1205                            MOVI    FONTGRYP,A0
    1206                            CALLA   GETFPAL
    1207                    
    1208                            .endif
    1209                    
    1210 000045a0                   JSRP    TONIGHTS_GAME
    1211                    
    1212                    ;       CALLA   LAMPS_OFF
    1213                    
    1214                            .endif
    1215                    
    1216 00004610     1820          movk    1,a0
    1217 00004620     0580          move    a0,@period,W
         00004630 000000e0- 
    1218 00004650     0d3f          callr   period_start
         00004660     060f  
    1219 00004670     c080          jauc    SUCIDE
         00004680 00000000! 
    1220                    
    1221                    
    1222                    **************************************************************************
    1223                    *                                                                        *
    1224                    * restart_game_mode                                                      *
    1225                    *                                                                        *
TMS340 COFF Macro Assembler Version 6.10     Wed Apr 21 11:31:43 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   28

    1226                    **************************************************************************
    1227                    
    1228 000046a0           restart_game_mode
    1229 000046a0     09c0          movi    INPLAY,a0
         000046b0     0020  
    1230 000046c0     0580          move    a0,@GAME_STATE,W
         000046d0 00000000! 
    1231 000046f0     09c0          movi    -124,a0
         00004700     ff84  
    1232 00004710     0580          move    a0,@WORLDY+010h,W
         00004720 00000010! 
    1233 00004740     5600          clr     a0
    1234 00004750     0780          move    a0,@WORLDX,L
         00004760 00000000! 
    1235 00004780     0d5f          calla   create_puck
         00004790 00000000! 
    1236 000047b0                   C_A_KP  PID_WATCH,all_watch             ;must create watch before players, so it runs after play
    1237 00004830     0d5f          calla   create_players                  ;players are now cleaned up in watch process
         00004840 00000000! 
    1238 00004860     0d5f          calla   create_rink
         00004870 00010290' 
    1239 00004890                   C_A_KP  PID_GAME_TIMER,game_timer
    1240                    
    1241 00004910     09e9          MOVI    [13,201],A9                     ;SCREEN [Y,X] POSITION
         00004920 000d00c9  
    1242 00004940     09ea          MOVI    [1000,0],A10                    ;Z POSITION
         00004950 03e80000  
    1243 00004970                   C_A_KP  PID_DISPLAY_CREDIT,DISPLAY_CREDIT_PROC
    1244                    
    1245 00004a00     c000          jruc    fix_curplyrs
         00004a10     0b12  
    1246                    
    1247 00004a20           all_watch
    1248 00004a20     0d3f  aw0     callr   player_watch
         00004a30     0886  
    1249 00004a40     0d5f          calla   puck_watch
         00004a50 00000000! 
    1250 00004a70     0d3f          callr   set_world_point
         00004a80     0d9d  
    1251 00004a90     0d3f          callr   update_shifted_images
         00004aa0     0f00  
    1252 00004ab0     0d3f          callr   slow_down_watch
         00004ac0     000b  
    1253 00004ad0     0d5f          calla   update_walls
         00004ae0 00000000! 
    1254 00004b00     0d5f          calla   clean_up_players        ;(place puck, fix arrows, etc)
         00004b10 00000000! 
    1255 00004b30                   SLEEP   1
    1256 00004b70     c0ea          jruc    aw0
    1257                    
    1258 00004b80           slow_down_watch
    1259 00004b80     07a0          move    @PUCK_CONTROL_START,a0,L
         00004b90 00000000! 
    1260 00004bb0     07ae          move    @WAVEIRQS,a14,L
         00004bc0 00000000! 
TMS340 COFF Macro Assembler Version 6.10     Wed Apr 21 11:31:43 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   29

    1261 00004be0     440e          sub     a0,a14
    1262 00004bf0     0b4e          cmpi    520,a14         ;time
         00004c00     fdf7  
    1263 00004c10     c413          jrlt    sdw1
    1264                    
    1265                            .if     NO_HELP_WINDOWS
    1266                            .else
    1267 00004c20     05a0          move    @PUCK_CONTROL,a0,W
         00004c30 00000000! 
    1268 00004c50     ca03          jrz     sdw1e
    1269 00004c60     0d5f          calla   annoy_player_shootpass
         00004c70 00000000! 
    1270                            .endif
    1271                    
    1272 00004c90     07a0  sdw1e   move    @global_control_slow,a0,L
         00004ca0 00000000! 
    1273 00004cc0     0b00          addi    325,a0
         00004cd0     0145  
    1274 00004ce0     0b60          cmpi    [1,0f000h],a0
         00004cf0 fffe0fff  
    1275 00004d10     c303          jrhi    sdw1
    1276 00004d20     0780          move    a0,@global_control_slow,L
         00004d30 00000000! 
    1277 00004d50     0960  sdw1    rets
    1278                    
    1279 00004d60           premature_game_over
    1280                    ;       calla   kill_all_sound
    1281 00004d60     09c0          movi    INEPILOG,a0
         00004d70     0060  
    1282 00004d80     0580          move    a0,@GAME_STATE,W
         00004d90 00000000! 
    1283 00004db0     0d3f          callr   MY_WIPEOUT_NOVIDEO
         00004dc0     0ffd  
    1284 00004dd0     5600          clr     a0
    1285 00004de0     0580          move    a0,@timer_on,W
         00004df0 00000000! 
    1286 00004e10     0580          move    a0,@cdronemod,W         ;we ended early, no coin drone mod
         00004e20 00000000! 
    1287 00004e40     05c0          move    @PLAYER_BITS,@LAST_PLAYER_BITS,W
         00004e50 00000000! 
         00004e70 00000000! 
    1288 00004e90     0580          move    a0,@PLAYER_BITS,W
         00004ea0 00000000! 
    1289 00004ec0     0d3f          callr   fix_curplyrs
         00004ed0     0ac6  
    1290                    
    1291 00004ee0     09e0          MOVI    FONTGRYP2,A0
         00004ef0 00000000! 
    1292 00004f10     0d5f          CALLA   GETFPAL
         00004f20 00000000! 
    1293 00004f40     4c05          MOVE    A0,A5
    1294                    
    1295 00004f50     5600          CLR     A0                              ;NO SLEEP TIL
    1296 00004f60     09e1          MOVI    STRCNCONV,A1                    ;ROUTINE
         00004f70 00000000! 
TMS340 COFF Macro Assembler Version 6.10     Wed Apr 21 11:31:43 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   30

    1297 00004f90     09e8          MOVI    GAME_OVER_STRING,A8             ;POINTER TO STRING
         00004fa0 000078d0' 
    1298 00004fc0     09e9          MOVI    [75,199],A9             ;[Y,X] SCREEN ADDRESS
         00004fd0 004b00c7  
    1299 00004ff0     09ea          MOVI    [55,-2],A10                     ;[Y,X] SPACING
         00005000 0037fffe  
    1300 00005020     09eb          MOVI    H50FONT,A11                     ;FONT
         00005030 00000000! 
    1301 00005050     09d1          MOVI    OID_JUNK,B1                     ;[SOUND,OID]
         00005060     07ff  
    1302 00005070                   JSRP    PRINTF
    1303                    
    1304 000050e0     09ce          MOVI    99,A14
         000050f0     0063  
    1305 00005100     058e          MOVE    A14,@MAX_PALXFERS,W
         00005110 00000000! 
    1306                    
    1307 00005130     09e0          MOVI    GO2_PAL_LIST,A0
         00005140 000053b0' 
    1308 00005160     0d5f          CALLA   FADEOUT                         ;FADE DOWN ALL PALETTES
         00005170 00000000! 
    1309                    ;       MOVK    16,A9
    1310                    ;       CREATE  PID_SKY,SKYDOWN                 ;FADE DOWN "SKY" COLOR
    1311                    
    1312 00005190     09c0          movi    INGAMEOV,a0
         000051a0     0050  
    1313 000051b0     0580          move    a0,@GAME_STATE,W
         000051c0 00000000! 
    1314                    
    1315 000051e0                   JSRP    FADE_WAIT
    1316 00005250     0d5f          CALLA   RESET_MAX_PALXFERS
         00005260 00000000! 
    1317                    
    1318                    ;       SLEEP   120
    1319                    
    1320 00005280     0d5f          CALLA   END_INTERMISSION_TUNE
         00005290 00000000! 
    1321 000052b0                   SLEEP   161
    1322                    
    1323 00005300     0d5f          calla   kill_all_sound
         00005310 00000000! 
    1324 00005330     0d3f          callr   MY_WIPEOUT
         00005340     0f63  
    1325 00005350     0d5f          calla   ATSTRT_TOPTEN
         00005360 00000000! 
    1326 00005380     c080          jauc    SUCIDE
         00005390 00000000! 
    1327                    
    1328 000053b0           GO2_PAL_LIST
    1329 000053b0 00000000!         .LONG   FONTGRYP2,0
    1330                    
    1331 000053f0           game_over
    1332 000053f0     0d5f          calla   cx_game_over
         00005400 00000000! 
    1333                    ;       calla   kill_all_sound
TMS340 COFF Macro Assembler Version 6.10     Wed Apr 21 11:31:43 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   31

    1334 00005420     09c0          movi    INEPILOG,a0
         00005430     0060  
    1335 00005440     0580          move    a0,@GAME_STATE,W
         00005450 00000000! 
    1336 00005470     05a0          move    @timer_on,a0,W
         00005480 00000000! 
    1337 000054a0     ca04          jrz     go1p
    1338 000054b0     1840          movk    2,a0
    1339 000054c0     0580          move    a0,@timer_on,W
         000054d0 00000000! 
    1340 000054f0     5600  go1p    clr     a0
    1341 00005500     0580          move    a0,@small_timer_on,W
         00005510 00000000! 
    1342 00005530                   SLEEP   1
    1343 00005570     0d5f          calla   set_game_over_tune
         00005580 00000000! 
    1344 000055a0     05ae          move    @period,a14,W
         000055b0 000000e0- 
    1345 000055d0     0b4e          cmpi    4,a14
         000055e0     fffb  
    1346 000055f0     cb05          jrnz    gojtp
    1347 00005600     1ac0          movk    ADJPAYOT,a0
    1348 00005610     0d5f          calla   GET_ADJ                         ;CHECK FOR FULL OVERTIME
         00005620 00000000! 
    1349 00005640     ca03          jrz     gojtn
    1350 00005650     0d5f  gojtp   calla   spx_game_over
         00005660 00000000! 
    1351 00005680     09e0  gojtn   MOVI    FONTGRYP2,A0
         00005690 00000000! 
    1352 000056b0     0d5f          CALLA   GETFPAL
         000056c0 00000000! 
    1353 000056e0     4c05          MOVE    A0,A5                           ;[COLOR,PALETTE]
    1354 000056f0     0d3f          callr   audit_wins_losses
         00005700     0164  
    1355 00005710     09e8          MOVI    TIE_SCORE_STRING,A8
         00005720 00007a50' 
    1356 00005740     09e9          MOVI    [75,199],A9                     ;[Y,X] SCREEN ADDRESS
         00005750 004b00c7  
    1357 00005770     09e4          MOVI    [175,199],A4
         00005780 00af00c7  
    1358 000057a0     574a          CLR     A10
    1359 000057b0     05a0          MOVE    @team1,A0,W
         000057c0 00000000- 
    1360 000057e0     05a1          MOVE    @team1_score,A1,W
         000057f0 00000090- 
    1361 00005810     05a2          MOVE    @team2_score,A2,W
         00005820 000000d0- 
    1362 00005840     4822          CMP     A1,A2
    1363 00005850     ca2e          JREQ    GO_SAVE_SCORE                   ;BR=TIE GAME
    1364 00005860     c406          JRLT    GO_CHECK_SHUTOUT                ;BR=LEFT TEAM WON
    1365 00005870                   SWAP    A1,A2                           
    1366 000058a0     05a0          MOVE    @team2,A0,W                     ;RIGHT TEAM WON
         000058b0 00000010- 
    1367 000058d0           GO_CHECK_SHUTOUT
    1368 000058d0     4c42          MOVE    A2,A2
TMS340 COFF Macro Assembler Version 6.10     Wed Apr 21 11:31:43 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   32

    1369 000058e0     cb04          JRNZ    GO_NO_SHUTOUT                   ;BR=NOPE
    1370                    ;       MOVI    [75,199-6],A9                   ;[Y,X] SCREEN ADDRESS
    1371                    ;       MOVI    [75-50,199],A9                  ;[Y,X] SCREEN ADDRESS
    1372 000058f0     09e8          MOVI    SHUTOUT_STRING,A8
         00005900 00007b10' 
    1373 00005920     c021          JRUC    GO_SAVE_SCORE
    1374                    
    1375 00005930           GO_NO_SHUTOUT
    1376 00005930     09e8          MOVI    WIN_STRING,A8
         00005940 00007930' 
    1377 00005960     09e9          MOVI    [50,199],A9                     ;[Y,X] SCREEN ADDRESS
         00005970 003200c7  
    1378 00005990     0b40          CMPI    team_maple_leafs,A0
         000059a0     ffec  
    1379 000059b0     cb06          JRNE    GO_CHECK_DUCKS                  ;BR=NO DUCK FUDGE
    1380 000059c0     09e9          MOVI    [50-20,199],A9                  ;[Y,X] SCREEN ADDRESS
         000059d0 001e00c7  
    1381 000059f0     09e4          MOVI    [200,199],A4
         00005a00 00c800c7  
    1382 00005a20           GO_CHECK_DUCKS
    1383 00005a20     0b40          CMPI    team_mighty_ducks,A0
         00005a30     ffea  
    1384 00005a40     cb06          JRNE    GO_GET_TEAM_OFFSET              ;BR=NO LEAF FUDGE
    1385 00005a50     09e9          MOVI    [50-20,199],A9                  ;[Y,X] SCREEN ADDRESS
         00005a60 001e00c7  
    1386 00005a80     09e4          MOVI    [200,199],A4
         00005a90 00c800c7  
    1387 00005ab0           GO_GET_TEAM_OFFSET
    1388 00005ab0     2540          SLL     10,A0
    1389 00005ac0     0b20          ADDI    team_data,A0
         00005ad0 00000000! 
    1390 00005af0     b60a          MOVE    *A0(TD_NICKNAME_STR),A10,L
         00005b00     0320  
    1391 00005b10     09e8          MOVI    WIN_STRING,A8
         00005b20 00007930' 
    1392 00005b40           GO_SAVE_SCORE
    1393 00005b40     0581          MOVE    A1,@RAMTEMP2,W                  ;WINNER
         00005b50 00000000! 
    1394 00005b70     0582          MOVE    A2,@RAMTEMP3,W                  ;LOSER
         00005b80 00000000! 
    1395 00005ba0     4cab          MOVE    A5,A11                          ;[COLOR,PALETTE]
    1396 00005bb0                   CREATE  PID_IND,FLASH_FINAL_MESS_PROC
    1397 00005c30     5600          CLR     A0                              ;NO SLEEP TIL
    1398 00005c40     09e1          MOVI    STRCNCONV,A1                    ;ROUTINE
         00005c50 00000000! 
    1399 00005c70     09e8          MOVI    SCORE_STRING,A8
         00005c80 000079d0' 
    1400 00005ca0     4c89          MOVE    A4,A9
    1401 00005cb0     09ea          MOVI    [0,-2],A10                      ;[Y,X] SPACING
         00005cc0 0000fffe  
    1402 00005ce0     09eb          MOVI    H50FONT,A11                     ;FONT
         00005cf0 00000000! 
    1403 00005d10     09d1          MOVI    OID_JUNK,B1                     ;[SOUND,OID]
         00005d20     07ff  
    1404 00005d30                   JSRP    PRINTF
TMS340 COFF Macro Assembler Version 6.10     Wed Apr 21 11:31:43 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   33

    1405 00005da0     09ce          MOVI    99,A14
         00005db0     0063  
    1406 00005dc0     058e          MOVE    A14,@MAX_PALXFERS,W
         00005dd0 00000000! 
    1407 00005df0     09e0          MOVI    GO_PAL_LIST,A0
         00005e00 0000c100' 
    1408 00005e20     0d5f          calla   FADE_FULL2HALF
         00005e30 00000000! 
    1409 00005e50                   JSRP    FADE_WAIT
    1410 00005ec0     0d5f          CALLA   RESET_MAX_PALXFERS
         00005ed0 00000000! 
    1411 00005ef0                   SLEEP   180
    1412 00005f40     0d5f          calla   kill_all_but_speech_tune
         00005f50 00000000! 
    1413 00005f70     05c0          move    @PLAYER_BITS,@LAST_PLAYER_BITS,W
         00005f80 00000000! 
         00005fa0 00000000! 
    1414 00005fc0     5600          clr     a0
    1415 00005fd0     0580          move    a0,@PLAYER_BITS,W
         00005fe0 00000000! 
    1416 00006000     0d3f          callr   fix_curplyrs
         00006010     09b2  
    1417 00006020     0d3f          callr   MY_WIPEOUT
         00006030     0e94  
    1418 00006040     05a0          move    @all_beaten_bits,a0,W
         00006050 00000580- 
    1419 00006070     ca07          jrz     notabt
    1420 00006080                   JSRP    congratulations_page
    1421 000060f0           notabt  JSRP    gameover_intermission_page
    1422 00006160                   SLEEP   60*1
    1423 000061b0     09c8          MOVI    60*10,A8
         000061c0     0258  
    1424 000061d0                   JSRP    button_s_wait
    1425 00006240     0d3f          callr   MY_WIPEOUT
         00006250     0e72  
    1426 00006260     1880          MOVK    4,A0
    1427 00006270     09e6          MOVI    PLAYER_1_BLOCK,A6
         00006280 00000000! 
    1428 000062a0           GO_RECORD_CHECK
    1429                    ;mdp yescmosrecord
    1430                    ;       MOVE    *A6(POF_LOCKED_CHAR),A14,W
    1431                    ;       JRNZ    GO_RC_NEXT                      ;BR=SPECIAL CHARACTER
    1432                    ;mdp yescmosrecord
    1433 000062a0     b4ce          MOVE    *A6(POF_CMOS),A14,W
         000062b0     0060  
    1434 000062c0     cf09          JRNN    GO_RECORDS                      ;BR=WE HAVE A CMOS RECORD
    1435 000062d0           GO_RC_NEXT
    1436 000062d0     0b40          CMPI    3,A0
         000062e0     fffc  
    1437 000062f0     cb02          JRNE    GO_RC_N                         ;BR=NOT PLAYER 2
    1438 00006300     0b06          ADDI    PLAYER_BLOCK_SIZE*2,A6          ;SKIP DRONE PLAYER BLOCKS
         00006310     2000  
    1439 00006320           GO_RC_N
    1440 00006320     0b06          ADDI    PLAYER_BLOCK_SIZE,A6            ;NEXT PLAYER BLOCK
         00006330     1000  
TMS340 COFF Macro Assembler Version 6.10     Wed Apr 21 11:31:43 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   34

    1441 00006340     3d60          DSJS    A0,GO_RECORD_CHECK
    1442 00006350     c017          JRUC    GO_GAME_SUMMARY                 ;BR=NO RECORDS
    1443                    
    1444 00006360           GO_RECORDS
    1445 00006360                   JSRP    DISPLAY_UPDATED_RECORDS
    1446 000063d0                   SLEEP   60*1
    1447 00006420     09c8          MOVI    60*10,A8
         00006430     0258  
    1448 00006440                   JSRP    button_s_wait
    1449 000064b0     0d3f          callr   MY_WIPEOUT
         000064c0     0e4b  
    1450 000064d0           GO_GAME_SUMMARY
    1451 000064d0                   JSRP    GAME_SUMMARY
    1452 00006540                   SLEEP   60*1
    1453 00006590     09c8          MOVI    60*7,A8
         000065a0     01a4  
    1454 000065b0                   JSRP    button_s_wait
    1455                    
    1456 00006620     09c0          movi    PID_BOXCOLOR,a0
         00006630     2cc1  
    1457 00006640     0d5f          calla   KILLPROC_ALL
         00006650 00000000! 
    1458                    
    1459 00006670     c080          jauc    check_restart_gameover
         00006680 00000000! 
    1460                    
    1461                    **************************************************************************
    1462                    *                                                                        *
    1463                    * GO_MESS                                                                *
    1464                    *       this is the return from check restart in hhfix                   *
    1465                    *                                                                        *
    1466                    **************************************************************************
    1467 000066a0           GO_MESS
    1468 000066a0     09e0          MOVI    FONTGRYP2,A0
         000066b0 00000000! 
    1469 000066d0     0d5f          CALLA   GETFPAL
         000066e0 00000000! 
    1470 00006700     4c05          MOVE    A0,A5
    1471 00006710     5600          CLR     A0                              ;NO SLEEP TIL
    1472 00006720     09e1          MOVI    STRCNCONV,A1                    ;ROUTINE
         00006730 00000000! 
    1473 00006750     09e8          MOVI    GAME_OVER_STRING,A8             ;POINTER TO STRING
         00006760 000078d0' 
    1474 00006780     09e9          MOVI    [75,199],A9                     ;[Y,X] SCREEN ADDRESS
         00006790 004b00c7  
    1475 000067b0     09ea          MOVI    [55,-2],A10                     ;[Y,X] SPACING
         000067c0 0037fffe  
    1476 000067e0     09eb          MOVI    H50FONT,A11                     ;FONT
         000067f0 00000000! 
    1477 00006810     09d1          MOVI    OID_PROMPT,B1                   ;[SOUND,OID]
         00006820     0489  
    1478 00006830                   JSRP    PRINTF
    1479                    
    1480 000068a0     4c48          MOVE    A2,A8
    1481 000068b0     0d5f          CALLA   PULL_OBJ                        ;REMOVE FROM LIST
TMS340 COFF Macro Assembler Version 6.10     Wed Apr 21 11:31:43 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   35

         000068c0 00000000! 
    1482 000068e0           GO_ZMOD_LUPE
    1483 000068e0     b64e          MOVE    *A2(OZVAL),A14,L                ;MOVE Z IN FRONT OF OTHER TEXT
         000068f0     0180  
    1484 00006900     142e          DEC     A14
    1485 00006910     b3c2          MOVE    A14,*A2(OZVAL),L
         00006920     0180  
    1486 00006930     b642          MOVE    *A2(OPARTS),A2,L
         00006940     00c0  
    1487 00006950     cbf8          JRNZ    GO_ZMOD_LUPE                    ;BR=ANOTHER PART
    1488 00006960     0d5f          CALLA   INSERT_OBJ                      ;RE-INSERT WITH CORRECTED Z
         00006970 00000000! 
    1489                    
    1490 00006990     09ce          MOVI    99,A14
         000069a0     0063  
    1491 000069b0     058e          MOVE    A14,@MAX_PALXFERS,W
         000069c0 00000000! 
    1492 000069e0     09e0          MOVI    GO2_PAL_LIST,A0
         000069f0 000053b0' 
    1493 00006a10     0d5f          CALLA   FADEOUT                         ;FADE DOWN ALL PALETTES
         00006a20 00000000! 
    1494 00006a40     09c0          movi    INGAMEOV,a0
         00006a50     0050  
    1495 00006a60     0580          move    a0,@GAME_STATE,W
         00006a70 00000000! 
    1496 00006a90                   JSRP    FADE_WAIT
    1497 00006b00     0d5f          CALLA   RESET_MAX_PALXFERS
         00006b10 00000000! 
    1498 00006b30     0d5f          CALLA   END_INTERMISSION_TUNE
         00006b40 00000000! 
    1499 00006b60                   SLEEP   161
    1500 00006bb0     0d5f          calla   kill_all_sound
         00006bc0 00000000! 
    1501 00006be0     0d3f          callr   MY_WIPEOUT
         00006bf0     0dd8  
    1502 00006c00     0d5f          calla   ATSTRT_TOPTEN
         00006c10 00000000! 
    1503 00006c30     c080          jauc    SUCIDE
         00006c40 00000000! 
    1504                    
    1505                    **************************************************************************
    1506                    *                                                                        *
    1507                    * fill_up_ot                                                             *
    1508                    *                                                                        *
    1509                    **************************************************************************
    1510 00006c60           fill_up_ot
    1511 00006c60                   GBLOCK  a8,a6
    1512 00006cb0     aece          movb    *a6(POF_PERIODS_PAID),a14
         00006cc0     0900  
    1513 00006cd0     0bae          ori     00001111b,a14
         00006ce0 0000000f  
    1514 00006d00     adc6          movb    a14,*a6(POF_PERIODS_PAID)
         00006d10     0900  
    1515 00006d20     c080          jauc    SUCIDE
         00006d30 00000000! 
TMS340 COFF Macro Assembler Version 6.10     Wed Apr 21 11:31:43 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   36

    1516                    
    1517                    **************************************************************************
    1518                    *                                                                        *
    1519                    * audit_wins_losses                                                      *
    1520                    *                                                                        *
    1521                    **************************************************************************
    1522                    
    1523 00006d50           audit_wins_losses
    1524 00006d50     098f          mmtm    sp,a0,a1,a2,a3,a4
         00006d60     f800  
    1525 00006d70     5663          clr     a3
    1526 00006d80     05a1          move    @team1_score,a1,W
         00006d90 00000090- 
    1527 00006db0     05a2          move    @team2_score,a2,W
         00006dc0 000000d0- 
    1528 00006de0     4841          cmp     a2,a1
    1529 00006df0     ca04          jrz     awl_d
    1530 00006e00     1823          movk    1,a3
    1531 00006e10     4841          cmp     a2,a1
    1532 00006e20     c301          jrhi    awl_d
    1533 00006e30     1843          movk    2,a3
    1534 00006e40     09c0  awl_d   movi    AUD_TIES,a0
         00006e50     0019  
    1535 00006e60     4060          add     a3,a0
    1536 00006e70     0d5f          calla   AUD1
         00006e80 00000000! 
    1537 00006ea0     4c63          move    a3,a3
    1538 00006eb0     cb07          jrnz    awld_wl
    1539 00006ec0     0d3f          callr   find_cpu_team
         00006ed0     0014  
    1540 00006ee0     4c84          move    a4,a4
    1541 00006ef0     ca0f          jrz     awl9
    1542 00006f00     09c0          movi    AUD_CPU_TIE,a0
         00006f10     001e  
    1543 00006f20     c009          jruc    awla9
    1544 00006f30     09c0  awld_wl movi    AUD_CPU_WIN,a0
         00006f40     001c  
    1545 00006f50     0d5f          calla   find_cpu_team
         00006f60 00007020' 
    1546 00006f80     4883          cmp     a4,a3
    1547 00006f90     ca02          jrz     awla9
    1548 00006fa0     09c0          movi    AUD_CPU_LOSS,a0
         00006fb0     001d  
    1549 00006fc0     0d5f  awla9   calla   AUD1
         00006fd0 00000000! 
    1550 00006ff0     09af  awl9    mmfm    sp,a0,a1,a2,a3,a4
         00007000     001f  
    1551 00007010     0960          rets
    1552                    
    1553                    **************************************************************************
    1554                    *                                                                        *
    1555                    * find_cpu_team                                                          *
    1556                    *       output  a4 = 0 - no total cpu team                               *
    1557                    *                    1 - team 1 is all cpu                               *
    1558                    *                    2 - team 2 is all cpu                               *
TMS340 COFF Macro Assembler Version 6.10     Wed Apr 21 11:31:43 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   37

    1559                    *                                                                        *
    1560                    **************************************************************************
    1561 00007020           find_cpu_team
    1562 00007020     098f          mmtm    sp,a0,a5
         00007030     8400  
    1563 00007040     1820          movk    1,a0
    1564 00007050     0d3f          callr   fcpo
         00007060     0019  
    1565 00007070     4c85          move    a4,a5
    1566 00007080     0d3f          callr   fcpo
         00007090     0016  
    1567 000070a0     4085          add     a4,a5
    1568 000070b0     ca0c          jrz     fcpt1
    1569 000070c0     18a0          movk    5,a0
    1570 000070d0     0d3f          callr   fcpo
         000070e0     0011  
    1571 000070f0     4c85          move    a4,a5
    1572 00007100     0d3f          callr   fcpo
         00007110     000e  
    1573 00007120     4085          add     a4,a5
    1574 00007130     cb08          jrnz    fcpt0
    1575 00007140     1844  fcpt2   movk    2,a4
    1576 00007150     09af          mmfm    sp,a0,a5
         00007160     0021  
    1577 00007170     0960          rets
    1578 00007180     1824  fcpt1   movk    1,a4
    1579 00007190     09af          mmfm    sp,a0,a5
         000071a0     0021  
    1580 000071b0     0960          rets
    1581 000071c0     5684  fcpt0   clr     a4
    1582 000071d0     09af          mmfm    sp,a0,a5
         000071e0     0021  
    1583 000071f0     0960          rets
    1584 00007200     5684  fcpo    clr     a4
    1585 00007210                   GBLOCK  a0,a14
    1586 00007260     b5ce          move    *a14(POF_FLAGS),a14,W
         00007270     0200  
    1587 00007280     1fee          btst    B_PF_HUMAN,a14
    1588 00007290     ca01          jrz     fcpo8
    1589 000072a0     1824          movk    1,a4
    1590 000072b0     1020  fcpo8   inc     a0
    1591 000072c0     0960          rets
    1592                    
    1593                    **************************************************************************
    1594                    *                                                                        *
    1595                    * FLASH_FINAL_MESS_PROC - FLASH FINAL RESULT MESSAGE                     *
    1596                    *                                                                        *
    1597                    * PASS:                                                                  *
    1598                    * A8  = MESSAGE                                                          *
    1599                    * A9  = POSITION                                                         *
    1600                    * A10 = WINNING TEAM, IF ANY                                             *
    1601                    * A11 = PALETTE NUMBER                                                   *
    1602                    *                                                                        *
    1603                    **************************************************************************
    1604                    
TMS340 COFF Macro Assembler Version 6.10     Wed Apr 21 11:31:43 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   38

    1605 000072d0           FLASH_FINAL_MESS_PROC
    1606 000072d0     078a          MOVE    A10,@RAMTEMP1,L
         000072e0 00000000! 
    1607 00007300     098c          MMTM    A12,A8,A9,A10,A11
         00007310     00f0  
    1608 00007320     5600          CLR     A0                              ;NO SLEEP TIL
    1609 00007330     09e1          MOVI    STRCNCONV,A1                    ;ROUTINE
         00007340 00000000! 
    1610 00007360     4d65          MOVE    A11,A5                          ;[COLOR,PALETTE]
    1611                    
    1612 00007370     4d4e          MOVE    A10,A14
    1613 00007380     09ea          MOVI    [55,-2],A10                     ;[Y,X] SPACING
         00007390 0037fffe  
    1614 000073b0     4dce          MOVE    A14,A14
    1615 000073c0     ca0e          JRZ     FFFMP_PRINT                     ;BR=DON'T FUCK WITH THIS STRING!
    1616                    
    1617 000073d0     0b6e          CMPI    COLO_NICK_STR,A14
         000073e0 ffffffff! 
    1618 00007400     cb03          JRNE    FFFMP_CHECK_HAWKS               ;BR=NOT AVALANCHE KLUDGE
    1619 00007410     09ea          MOVI    [55,-3],A10                     ;[Y,X] SPACING
         00007420 0037fffd  
    1620                            
    1621 00007440           FFFMP_CHECK_HAWKS
    1622 00007440     0b6e          CMPI    CHIC_NICK_STR,A14
         00007450 ffffffff! 
    1623 00007470     cb03          JRNE    FFFMP_PRINT                     ;BR=NOT BLACKHAWKS KLUDGE
    1624 00007480     09ea          MOVI    [55,-8],A10                     ;[Y,X] SPACING
         00007490 0037fff8  
    1625                    
    1626 000074b0           FFFMP_PRINT
    1627 000074b0     09eb          MOVI    H50FONT,A11                     ;FONT
         000074c0 00000000! 
    1628 000074e0     09d1          MOVI    OID_TEXT,B1                     ;[SOUND,OID]
         000074f0     0480  
    1629 00007500                   JSRP    PRINTF
    1630                    
    1631 00007570     07aa          MOVE    @RAMTEMP1,A10,L
         00007580 00000000! 
    1632 000075a0     ca24          JRZ     FFFMP_OKAY                      ;BR=DON'T FUCK WITH THIS STRING!
    1633                    
    1634 000075b0     0b6a          CMPI    COLO_NICK_STR,A10
         000075c0 ffffffff! 
    1635 000075e0     ca04          JREQ    FFFMP_FIX_Z                     ;BR=FIX FUCKIN' AVALANCHE
    1636 000075f0     0b6a          CMPI    CHIC_NICK_STR,A10
         00007600 ffffffff! 
    1637 00007620     cb1c          JRNE    FFFMP_OKAY                      ;BR=NOT THE FUCKIN' BLACKHAWKS
    1638                    
    1639 00007630           FFFMP_FIX_Z
    1640 00007630     4c48          MOVE    A2,A8
    1641 00007640     b646          MOVE    *A2(OZVAL),A6,L 
         00007650     0180  
    1642                    
    1643 00007660           FFFMP_FIX_Z_LUPE
    1644 00007660     b642          MOVE    *A2(OPARTS),A2,L                ;W
         00007670     00c0  
TMS340 COFF Macro Assembler Version 6.10     Wed Apr 21 11:31:43 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   39

    1645 00007680     ca10          JRZ     FFFMP_REINSERT                  ;BR=THIS SHOULDN'T HAPPEN!
    1646 00007690     b643          MOVE    *A2(OPARTS),A3,L                ;I
         000076a0     00c0  
    1647 000076b0     b664          MOVE    *A3(OPARTS),A4,L                ;N
         000076c0     00c0  
    1648 000076d0     b685          MOVE    *A4(OPARTS),A5,L                ;!
         000076e0     00c0  
    1649 000076f0     b6ae          MOVE    *A5(OIMG),A14,L
         00007700     02c0  
    1650 00007710     0b6e          CMPI    FONT51EXC,A14
         00007720 ffffffff! 
    1651 00007740     ca04          JREQ    FFFMP_REINSERT                  ;BR=DON'T SCREW WITH "WIN !"
    1652 00007750     1026          INC     A6
    1653 00007760     b2c2          MOVE    A6,*A2(OZVAL),L
         00007770     0180  
    1654 00007780     c0ed          JRUC    FFFMP_FIX_Z_LUPE
    1655                            
    1656 00007790           FFFMP_REINSERT
    1657 00007790     0d5f          CALLA   PULL_OBJ
         000077a0 00000000! 
    1658 000077c0     0d5f          CALLA   INSERT_OBJ
         000077d0 00000000! 
    1659 000077f0           FFFMP_OKAY
    1660 000077f0     09ac          MMFM    A12,A8,A9,A10,A11
         00007800     0f00  
    1661                    
    1662 00007810                   SLEEP   20
    1663                    
    1664 00007850     0d5f          CALLA   CLRTEXT
         00007860 00000000! 
    1665                    
    1666 00007880                   SLEEP   10
    1667                    
    1668 000078c0     c0a0          JRUC    FLASH_FINAL_MESS_PROC
    1669                    
    1670 000078d0           GAME_OVER_STRING
    1671 000078d0       47          .STRING "GAME\nOVER",0
    1672 00007930                   .EVEN
    1673                    
    1674 00007930           WIN_STRING
    1675 00007930       25          .STRING "%p\n\iWIN !",0
    1676 00007990 00000000!         .LONG   RAMTEMP1
    1677 000079b0 0000fffe          .LONG   [0,-2]
    1678 000079d0                   .EVEN
    1679                    
    1680 000079d0           SCORE_STRING
    1681 000079d0       25          .STRING "%u - %u",0
    1682 00007a10 00000000!         .LONG   RAMTEMP2
    1683 00007a30 00000000!         .LONG   RAMTEMP3
    1684 00007a50                   .EVEN
    1685                    
    1686 00007a50           TIE_SCORE_STRING
    1687 00007a50       54          .STRING "TIE GAME !",0
    1688 00007ab0                   .EVEN
    1689                    
TMS340 COFF Macro Assembler Version 6.10     Wed Apr 21 11:31:43 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   40

    1690 00007ab0           OVERTIME_STRING
    1691 00007ab0       4f          .STRING "OVERTIME !",0
    1692 00007b10                   .EVEN
    1693                    
    1694 00007b10           SHUTOUT_STRING
    1695 00007b10       53          .STRING "SHUTOUT !",0
    1696                    ;       .STRING "A\nSHUTOUT !",0
    1697                    ;       .STRING "A\fSHUTOUT!",0
    1698                    ;       .LONG   [0,14]
    1699 00007b60                   .EVEN
    1700                    
    1701                    
    1702                    **************************************************************************
    1703                    *                                                                        *
    1704                    * GAME_SUMMARY                                                           *
    1705                    *                                                                        *
    1706                    **************************************************************************
    1707                    
    1708 00007b60           GAME_SUMMARY
    1709 00007b60     09e0          MOVI    FONTGRYP,A0
         00007b70 00000000! 
    1710 00007b90     0d5f          CALLA   GETFPAL
         00007ba0 00000000! 
    1711 00007bc0     09e0          MOVI    ORGTXT1P,A0
         00007bd0 00000000! 
    1712 00007bf0     0d5f          CALLA   GETFPAL
         00007c00 00000000! 
    1713 00007c20     09e0          MOVI    REDTXT3P,A0
         00007c30 00000000! 
    1714 00007c50     0d5f          CALLA   GETFPAL
         00007c60 00000000! 
    1715 00007c80     09e0          MOVI    BLUTXT3P,A0
         00007c90 00000000! 
    1716 00007cb0     0d5f          CALLA   GETFPAL
         00007cc0 00000000! 
    1717                    
    1718 00007ce0     09f0          MOVI    METAL_ICE_INIT,B0
         00007cf0 00000000! 
    1719 00007d10     0d5f          CALLA   MULTIMAKE
         00007d20 00000000! 
    1720                    
    1721 00007d40     09e8          MOVI    GAME_SUM_MESS,A8
         00007d50 00009cb0' 
    1722 00007d70                   JSRP    LM_PRINTF
    1723                    
    1724 00007de0     05a3          MOVE    @team1,A3,W
         00007df0 00000000- 
    1725 00007e10     2543          SLL     10,A3
    1726 00007e20     0b23          ADDI    team_data,A3
         00007e30 00000000! 
    1727 00007e50     b66e          MOVE    *A3(TD_CITY_STR),A14,L
         00007e60     02e0  
    1728 00007e70     078e          MOVE    A14,@RAMTEMP1,L
         00007e80 00000000! 
    1729                    
TMS340 COFF Macro Assembler Version 6.10     Wed Apr 21 11:31:43 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   41

    1730 00007ea0     09f0          MOVI    DUMMY_INIT,B0
         00007eb0 00009bb0' 
    1731 00007ed0     0d5f          CALLA   EASYMAKE
         00007ee0 00000000! 
    1732 00007f00     09e1          MOVI    [90+10,99+45],A1
         00007f10 00640090  
    1733 00007f30     09e2          movi    TEXTZVAL,a2
         00007f40 84000000  
    1734 00007f60     0d5f          CALLA   SET_SCRNOBJ
         00007f70 00000000! 
    1735 00007f90     0d5f          CALLA   INSERT_OBJ
         00007fa0 00000000! 
    1736                    
    1737 00007fc0     b661          move    *a3(TD_ALTTEAMLOGO),a1,L
         00007fd0     0020  
    1738 00007fe0     cb02          jrnz    nalit2
    1739 00007ff0     b661          MOVE    *A3(TD_TEAMLOGO_IMG),A1,L
         00008000     0260  
    1740 00008010     09e4  nalit2  MOVI    DMAWNZ,A4
         00008020 00008002  
    1741 00008040     0d5f          CALLA   ANI
         00008050 00000000! 
    1742 00008070     b620          MOVE    *A1(ICMAP),A0,L
         00008080     0070  
    1743 00008090     0d5f          CALLA   CHANGE_PAL
         000080a0 00000000! 
    1744                    
    1745 000080c0     05a3          MOVE    @team2,A3,W
         000080d0 00000010- 
    1746 000080f0     2543          SLL     10,A3
    1747 00008100     0b23          ADDI    team_data,A3
         00008110 00000000! 
    1748 00008130     b66e          MOVE    *A3(TD_CITY_STR),A14,L
         00008140     02e0  
    1749 00008150     078e          MOVE    A14,@RAMTEMP2,L
         00008160 00000000! 
    1750                    
    1751 00008180     09f0          MOVI    DUMMY_INIT,B0
         00008190 00009bb0' 
    1752 000081b0     0d5f          CALLA   EASYMAKE
         000081c0 00000000! 
    1753 000081e0     09e1          MOVI    [90+10,299-45],A1
         000081f0 006400fe  
    1754 00008210     09e2          movi    TEXTZVAL,a2
         00008220 84000000  
    1755 00008240     0d5f          CALLA   SET_SCRNOBJ
         00008250 00000000! 
    1756 00008270     0d5f          CALLA   INSERT_OBJ
         00008280 00000000! 
    1757                    
    1758 000082a0     b661          move    *a3(TD_ALTTEAMLOGO),a1,L
         000082b0     0020  
    1759 000082c0     cb02          jrnz    nalit1
    1760 000082d0     b661          MOVE    *A3(TD_TEAMLOGO_IMG),A1,L
         000082e0     0260  
TMS340 COFF Macro Assembler Version 6.10     Wed Apr 21 11:31:43 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   42

    1761 000082f0     09e4  nalit1  MOVI    DMAWNZ,A4
         00008300 00008002  
    1762 00008320     0d5f          CALLA   ANI
         00008330 00000000! 
    1763 00008350     b620          MOVE    *A1(ICMAP),A0,L
         00008360     0070  
    1764 00008370     0d5f          CALLA   CHANGE_PAL
         00008380 00000000! 
    1765                    
    1766 000083a0     09e8          MOVI    TEAMS_MESS,A8
         000083b0 00009de0' 
    1767 000083d0                   JSRP    LM_PRINTF
    1768                    
    1769 00008440     07c0          MOVE    @team1_score,@RAMTEMP1,L
         00008450 00000090- 
         00008470 00000000! 
    1770 00008490     07c0          MOVE    @team2_score,@RAMTEMP2,L
         000084a0 000000d0- 
         000084c0 00000000! 
    1771                    
    1772 000084e0     09e9          MOVI    [168-28+30,230],A9              ;[Y,X] SCREEN ADDRESS
         000084f0 00aa00e6  
    1773 00008510     18aa          MOVK    5,A10
    1774 00008520     09eb          MOVI    team1_score_P1,A11
         00008530 00000060- 
    1775                    
    1776 00008550           GS_PERIOD_GOALS_LUPE
    1777 00008550     8560          MOVE    *A11,A0,W
    1778 00008560     b561          MOVE    *A11(040H),A1,W
         00008570     0040  
    1779 00008580     0b4a          CMPI    5,A10
         00008590     fffa  
    1780 000085a0     ca0e          JREQ    GS_SET_PERIOD_GOALS             ;BR=1ST PERIOD
    1781 000085b0     0b4a          CMPI    1,A10
         000085c0     fffe  
    1782 000085d0     cb05          JRNE    GS_GET_PREVIOUS_GOALS           ;BR=NOT TOTAL SCORE
    1783 000085e0     b560          MOVE    *A11(-010H),A0,W                ;TOTAL SCORES
         000085f0     fff0  
    1784 00008600     b561          MOVE    *A11(040H-010H),A1,W
         00008610     0030  
    1785 00008620     c006          JRUC    GS_SET_PERIOD_GOALS
    1786                    
    1787 00008630           GS_GET_PREVIOUS_GOALS
    1788 00008630     b56e          MOVE    *A11(-010H),A14,W
         00008640     fff0  
    1789 00008650     45c0          SUB     A14,A0
    1790 00008660     b56e          MOVE    *A11(040H-010H),A14,W
         00008670     0030  
    1791 00008680     45c1          SUB     A14,A1
    1792 00008690           GS_SET_PERIOD_GOALS
    1793 00008690     0780          MOVE    A0,@RAMTEMP1,L
         000086a0 00000000! 
    1794 000086c0     0781          MOVE    A1,@RAMTEMP2,L
         000086d0 00000000! 
    1795                    
TMS340 COFF Macro Assembler Version 6.10     Wed Apr 21 11:31:43 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   43

    1796 000086f0     0b4a          CMPI    2,A10
         00008700     fffd  
    1797 00008710     cb0a          JRNE    GS_GET_STRING                   ;BR=NOT OVERTIME
    1798 00008720     05ae          MOVE    @period,A14,W
         00008730 000000e0- 
    1799 00008750     0b4e          CMPI    4,A14
         00008760     fffb  
    1800 00008770     ca04          JREQ    GS_GET_STRING                   ;BR=OVERTIME VALID
    1801 00008780     09e8          MOVI    OT_EMPTY_STRING,A8              ;NO OVERTIME THIS GAME
         00008790 0000a5c0' 
    1802 000087b0     c007          JRUC    GS_DISPLAY_STRING
    1803                    
    1804 000087c0           GS_GET_STRING
    1805 000087c0     4d48          MOVE    A10,A8
    1806 000087d0     1428          DEC     A8
    1807 000087e0     24a8          SLL     5,A8
    1808 000087f0     0b28          ADDI    GOALS_HEADER_TABLE,A8
         00008800 00009c10' 
    1809 00008820     8708          MOVE    *A8,A8,L
    1810 00008830           GS_DISPLAY_STRING
    1811 00008830     098f          MMTM    SP,A9,A10,A11
         00008840     0070  
    1812 00008850     5600          CLR     A0                              ;NO SLEEP TIL
    1813 00008860     09e1          MOVI    STRCNCONV,A1                    ;ROUTINE
         00008870 00000000! 
    1814                    ;       MOVI    PERIOD_SCORES_STRING,A8         ;POINTER TO STRING
    1815 00008890     09ea          MOVI    [0,-1],A10                      ;[Y,X] SPACING
         000088a0 0000ffff  
    1816 000088c0     09eb          MOVI    H18FONT,A11                     ;FONT
         000088d0 00000000! 
    1817 000088f0     09d1          MOVI    OID_TEXT,B1                     ;[SOUND,OID]
         00008900     0480  
    1818 00008910                   JSRP    PRINTF
    1819 00008980     09af          MMFM    SP,A9,A10,A11
         00008990     0e00  
    1820                    
    1821 000089a0     0b09          ADDI    [0,35],A9
         000089b0     0023  
    1822 000089c0     120b          ADDK    010H,A11
    1823                    
    1824 000089d0     0d8a          DSJ     A10,GS_PERIOD_GOALS_LUPE
         000089e0     ffb6  
    1825                    
    1826 000089f0                   SLEEP   1
    1827                    
    1828 00008a30                   JSRP    SHOW_GCARDS_GOALSUM
    1829                    
    1830 00008aa0                   SLEEP   25
    1831                    
    1832 00008ae0     09e9          MOVI    [50+70+25,6+6+57],A9
         00008af0 00910045  
    1833 00008b10     09e6          MOVI    PLAYER_4_BLOCK,A6
         00008b20 00000000! 
    1834 00008b40     05a1          MOVE    @team2_score,A1,W
         00008b50 000000d0- 
TMS340 COFF Macro Assembler Version 6.10     Wed Apr 21 11:31:43 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   44

    1835 00008b70     09d1          MOVI    OID_PLAYER_4,B1
         00008b80     0940  
    1836 00008b90     0d3f          CALLR   GS_GOALIE_DATA
         00008ba0     0056  
    1837 00008bb0     4d4b          MOVE    A10,A11
    1838                    
    1839 00008bc0                   PUSH    A11
    1840 00008bd0     09e9          MOVI    [50+70+25,306+6+57-8],A9
         00008be0 00910169  
    1841 00008c00     09e6          MOVI    PLAYER_8_BLOCK,A6
         00008c10 00000000! 
    1842 00008c30     05a1          MOVE    @team1_score,A1,W
         00008c40 00000090- 
    1843 00008c60     09d1          MOVI    OID_PLAYER_8,B1
         00008c70     0980  
    1844 00008c80     0d3f          CALLR   GS_GOALIE_DATA
         00008c90     0047  
    1845 00008ca0                   PULLQ   A11
    1846                    
    1847 00008cb0                   SLEEP   1
    1848                    
    1849 00008cf0     494b          CMP     A10,A11
    1850 00008d00     cb0b          JRNE    GS_ONE_BEST                     ;BR=ONLY ONE BEST       
    1851                    
    1852 00008d10     4d4a          MOVE    A10,A10
    1853 00008d20     ca11          JRZ     GS_DONE                         ;BR=BOTH 0%
    1854                    
    1855 00008d30     09c2          MOVI    OID_PLAYER_4,A2                 ;BOTH EQUAL
         00008d40     0940  
    1856 00008d50     0d3f          CALLR   GS_SET_GOLD_PAL
         00008d60     0010  
    1857 00008d70     09c2          MOVI    OID_PLAYER_8,A2
         00008d80     0980  
    1858 00008d90     0d3f          CALLR   GS_SET_GOLD_PAL
         00008da0     000c  
    1859 00008db0     c008          JRUC    GS_DONE
    1860                    
    1861 00008dc0           GS_ONE_BEST
    1862 00008dc0     09c2          MOVI    OID_PLAYER_4,A2
         00008dd0     0940  
    1863 00008de0     494b          CMP     A10,A11
    1864 00008df0     c702          JRGT    GS_OB_GO                        ;BR=LEFT GOALIE IS BEST
    1865 00008e00     09c2          MOVI    OID_PLAYER_8,A2                 ;RIGHT GOALIE IS BEST
         00008e10     0980  
    1866 00008e20           GS_OB_GO
    1867 00008e20     0d3f          CALLR   GS_SET_GOLD_PAL
         00008e30     0003  
    1868                    
    1869 00008e40           GS_DONE
    1870 00008e40                   RETP
    1871                    
    1872                    **************************************************************************
    1873                    *                                                                        *
    1874                    * GS_SET_GOLD_PAL                                                        *
    1875                    *                                                                        *
TMS340 COFF Macro Assembler Version 6.10     Wed Apr 21 11:31:43 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   45

    1876                    **************************************************************************
    1877                    
    1878 00008e70           GS_SET_GOLD_PAL
    1879 00008e70     09e8          MOVI    SUPPLSTS-OSLINK+1*020H,A8
         00008e80 ffffffe0! 
    1880                    
    1881 00008ea0           GS_SGP_LUPE
    1882 00008ea0     b50e          MOVE    *A8(OID),A14,W
         00008eb0     0430  
    1883 00008ec0     484e          CMP     A2,A14
    1884 00008ed0     cb06          JRNE    GS_SGP_NEXT                     ;BR=NOT BEST OBJECT
    1885                    
    1886 00008ee0     09e0          MOVI    GLDTXT5P,A0
         00008ef0 00000000! 
    1887 00008f10     0d5f          CALLA   CHANGE_PAL
         00008f20 00000000! 
    1888                    
    1889 00008f40           GS_SGP_NEXT
    1890 00008f40     b708          MOVE    *A8(OSLINK),A8,L
         00008f50     0040  
    1891 00008f60     cbf3          JRNZ    GS_SGP_LUPE                     ;BR=NOT DONE
    1892                    
    1893 00008f70     09f0          MOVI    STARS_INIT,B0
         00008f80 00000000! 
    1894 00008fa0     0d5f          CALLA   EASYMAKE
         00008fb0 00000000! 
    1895 00008fd0     ca12          JRZ     GS_SGP_DONE
    1896                    
    1897 00008fe0     09e1          MOVI    [50+46,6+43],A1
         00008ff0 00600031  
    1898 00009010     0b42          CMPI    OID_PLAYER_4,A2
         00009020     f6bf  
    1899 00009030     ca03          JREQ    GS_SGP_SET_STARS
    1900 00009040     09e1          MOVI    [50+46,306+43],A1
         00009050 0060015d  
    1901                    
    1902 00009070           GS_SGP_SET_STARS
    1903 00009070     09e2          MOVI    TEXTZVAL+110,A2
         00009080 8400006e  
    1904 000090a0     0d5f          CALLA   SET_SCRNOBJ
         000090b0 00000000! 
    1905 000090d0     0d5f          CALLA   INSERT_OBJ
         000090e0 00000000! 
    1906                    
    1907 00009100           GS_SGP_DONE
    1908 00009100     0960          RETS
    1909                    
    1910                    **************************************************************************
    1911                    *                                                                        *
    1912                    * GS_GOALIE_DATA                                                         *
    1913                    *                                                                        *
    1914                    * PASS:                                                                  *
    1915                    * A1 = OPPOSING TEAM SCORE                                               *
    1916                    * A6 = GOALIE DATA BLOCK                                                 *
    1917                    * A9 = [Y,X] POSITION                                                    *
TMS340 COFF Macro Assembler Version 6.10     Wed Apr 21 11:31:43 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   46

    1918                    * B1 = OID                                                               *
    1919                    *                                                                        *
    1920                    * RETURN:                                                                *
    1921                    * A10 = SAVE PCTG                                                        *
    1922                    *                                                                        *
    1923                    **************************************************************************
    1924                    
    1925 00009110           GS_GOALIE_DATA
    1926 00009110     098f          MMTM    SP,A1,A6,A9
         00009120     4240  
    1927 00009130     5600          CLR     A0                              ;NO SLEEP TIL
    1928 00009140     09e1          MOVI    STRRNCONV,A1                    ;ROUTINE
         00009150 00000000! 
    1929 00009170     09c5          MOVI    HFPAL,A5
         00009180     0202  
    1930 00009190     09e8          MOVI    SHOTS_ON_STR,A8
         000091a0 00009ac0' 
    1931 000091c0     09ea          MOVI    [11,-1],A10                     ;[Y,X] SPACING
         000091d0 000bffff  
    1932 000091f0     09eb          MOVI    H10FONT,A11                     ;FONT
         00009200 00000000! 
    1933 00009220                   JSRP    PRINTF
    1934 00009290     09af          MMFM    SP,A1,A6,A9
         000092a0     0242  
    1935                    
    1936 000092b0     b4c0          MOVE    *A6(POF_SAVES),A0,W
         000092c0     0840  
    1937                    
    1938 000092d0     4c07          MOVE    A0,A7
    1939                    
    1940 000092e0     4020          ADD     A1,A0
    1941                    
    1942 000092f0     4c02          MOVE    A0,A2
    1943                    
    1944 00009300     0b40          CMPI    100,A0
         00009310     ff9b  
    1945 00009320     c402          JRLT    GS_SHOTS                        ;BR=UNDER MAXIMUM
    1946 00009330     09c0          MOVI    99,A0
         00009340     0063  
    1947 00009350           GS_SHOTS
    1948 00009350     0780          MOVE    A0,@RAMTEMP1,L
         00009360 00000000! 
    1949                    
    1950 00009380     098f          MMTM    SP,A2,A6,A7,A9
         00009390     2340  
    1951 000093a0     0b66          CMPI    PLAYER_8_BLOCK,A6
         000093b0 ffffffff! 
    1952 000093d0     cb01          JRNE    GS_PRINT_SHOTS
    1953 000093e0     1109          ADDK    8,A9
    1954 000093f0           GS_PRINT_SHOTS
    1955 000093f0     5600          CLR     A0                              ;NO SLEEP TIL
    1956 00009400     09e1          MOVI    STRCNCONV,A1                    ;ROUTINE
         00009410 00000000! 
    1957 00009430     09c5          MOVI    HFPAL,A5
         00009440     0202  
TMS340 COFF Macro Assembler Version 6.10     Wed Apr 21 11:31:43 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   47

    1958 00009450     09e8          MOVI    SHOTS_VALUE_STR,A8
         00009460 00009b70' 
    1959 00009480     0b09          ADDI    [0,11],A9
         00009490     000b  
    1960 000094a0     09ea          MOVI    [0,-1],A10                      ;[Y,X] SPACING
         000094b0 0000ffff  
    1961 000094d0     09eb          MOVI    H10FONT,A11                     ;FONT
         000094e0 00000000! 
    1962 00009500                   JSRP    PRINTF
    1963 00009570     09af          MMFM    SP,A2,A6,A7,A9
         00009580     02c4  
    1964                    
    1965 00009590     09ca          MOVI    10000,A10
         000095a0     2710  
    1966                    
    1967 000095b0     09e8          MOVI    PCTG_1000_STRING,A8
         000095c0 000099f0' 
    1968 000095e0     4847          CMP     A2,A7
    1969 000095f0     cb03          JRNE    GS_CALC_PCTG                    ;BR=CALCULATE PCTG
    1970 00009600     4c42          MOVE    A2,A2
    1971 00009610     cb23          JRNZ    GS_PCTG                         ;BR=100%
    1972 00009620     1822          MOVK    1,A2                            ;0% FUDGE
    1973                    
    1974 00009630           GS_CALC_PCTG
    1975 00009630     0b66          CMPI    PLAYER_8_BLOCK,A6
         00009640 ffffffff! 
    1976 00009660     cb01          JRNE    GS_CP_GO
    1977 00009670     1069          ADDK    3,A9
    1978                    
    1979 00009680           GS_CP_GO
    1980 00009680     09ce          MOVI    10000,A14
         00009690     2710  
    1981 000096a0     5fc7          MPYU    A14,A7
    1982 000096b0     5a47          DIVU    A2,A7
    1983 000096c0     10a7          ADDK    5,A7                            ;ROUND UP
    1984 000096d0     09ce          MOVI    10,A14
         000096e0     000a  
    1985 000096f0     5bc7          DIVU    A14,A7
    1986                    
    1987 00009700     4cea          MOVE    A7,A10
    1988                    
    1989 00009710     56c6          CLR     A6
    1990 00009720     5bc6          DIVU    A14,A6
    1991 00009730     0587          MOVE    A7,@RAMTEMP3,W                  ;THOUSANTHS
         00009740 00000000! 
    1992 00009760     4cc7          MOVE    A6,A7
    1993 00009770     56c6          CLR     A6
    1994 00009780     5bc6          DIVU    A14,A6
    1995 00009790     0587          MOVE    A7,@RAMTEMP2,W                  ;HUNDRETHS
         000097a0 00000000! 
    1996 000097c0     4cc7          MOVE    A6,A7
    1997 000097d0     56c6          CLR     A6
    1998 000097e0     5bc6          DIVU    A14,A6
    1999 000097f0     0587          MOVE    A7,@RAMTEMP1,W                  ;TENTHS
         00009800 00000000! 
TMS340 COFF Macro Assembler Version 6.10     Wed Apr 21 11:31:43 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   48

    2000                    
    2001 00009820     09e8          MOVI    PCTG_FORMAT_STRING,A8
         00009830 00009a20' 
    2002 00009850           GS_PCTG
    2003 00009850                   PUSH    A10
    2004 00009860     5600          CLR     A0                              ;NO SLEEP TIL
    2005 00009870     09e1          MOVI    STRLNCONV,A1                    ;ROUTINE
         00009880 00000000! 
    2006 000098a0     09c5          MOVI    HFPAL,A5
         000098b0     0202  
    2007 000098c0     09ee          MOVI    [11,3],A14
         000098d0 000b0003  
    2008 000098f0     e1c9          ADDXY   A14,A9
    2009 00009900     09ea          MOVI    [0,-1],A10                      ;[Y,X] SPACING
         00009910 0000ffff  
    2010 00009930     09eb          MOVI    H10FONT,A11                     ;FONT
         00009940 00000000! 
    2011 00009960                   JSRP    PRINTF
    2012 000099d0                   PULLQ   A10
    2013                    
    2014 000099e0     0960          RETS
    2015                    
    2016                    
    2017 000099f0           PCTG_1000_STRING
    2018 000099f0       31          .STRING "1.000",0
    2019                    
    2020 00009a20           PCTG_FORMAT_STRING
    2021 00009a20       2e          .STRING ".%u%u%u",0
    2022 00009a60 00000000!         .LONG   RAMTEMP1
    2023 00009a80 00000000!         .LONG   RAMTEMP2
    2024 00009aa0 00000000!         .LONG   RAMTEMP3
    2025 00009ac0                   .EVEN
    2026                    
    2027 00009ac0           SHOTS_ON_STR
    2028                    ;       .STRING "SHOTS ON:",0
    2029 00009ac0       53          .STRING "SHOTS ON:\nSAVE PCTG:",0
    2030 00009b70                   .EVEN
    2031                    
    2032                    ;SAVE_PCTG_STR
    2033                    ;       .STRING "SAVE PCTG:",0
    2034                    ;       .EVEN
    2035                    
    2036 00009b70           SHOTS_VALUE_STR
    2037 00009b70       25          .STRING "%u",0
    2038 00009b90 00000000!         .LONG   RAMTEMP1
    2039 00009bb0                   .EVEN
    2040                    
    2041                    
    2042 00009bb0           DUMMY_INIT
    2043 00009bb0 00000000!         .long   CSECS01
    2044 00009bd0     8002          .word   DMAWNZ,M_SCRNOBJ|M_NOSCALE|M_NOVEL
    2045 00009bf0     0100          .word   OM_OID
    2046 00009c00     07ff          .word   OID_JUNK
    2047                    
    2048 00009c10           GOALS_HEADER_TABLE
TMS340 COFF Macro Assembler Version 6.10     Wed Apr 21 11:31:43 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   49

    2049 00009c10 0000a640'         .LONG   F_STRING,OT_STRING,THIRD_STRING,SECOND_STRING,FIRST_STRING
    2050                    
    2051 00009cb0           GAME_SUM_MESS
    2052 00009cb0                   MESS_MAC2 H18FONT,-1,0,199,20,HFPAL+0101H,STRCNCONV,OID_TEXT
    2053                    ;       .STRING "GAME SUMMARY",0
    2054 00009d70       47          .STRING "GOAL SUMMARY",0
    2055 00009de0                   .EVEN
    2056                    
    2057 00009de0           TEAMS_MESS
    2058 00009de0                   MESS_MAC2 H18FONT,-1,0,20,168+30,HFPAL,STRLNCONV,OID_TEXT
    2059 00009ea0       5c          .STRING "\p%p\n\p%p",0
    2060 00009f00 00000000!         .LONG   BLUTXT3P
    2061 00009f20 00000000!         .long   RAMTEMP1
    2062 00009f40 00000000!         .LONG   REDTXT3P
    2063 00009f60 00000000!         .long   RAMTEMP2
    2064 00009f80                   .EVEN
    2065                    
    2066                    ;PERIOD_SCORES_STRING
    2067                    ;       .STRING "\p%p\n\p%u\n\p%u",0
    2068                    ;       .LONG   FONTGRYP
    2069                    ;       .long   RAMTEMP3
    2070                    ;       .LONG   BLUTXT3P
    2071                    ;       .long   RAMTEMP1
    2072                    ;       .LONG   REDTXT3P
    2073                    ;       .long   RAMTEMP2
    2074                    ;       .EVEN
    2075                    
    2076 00009f80           FIRST_STRING
    2077 00009f80       5c          .STRING "\p1\dST\d\n\p%u\n\p%u",0
    2078 0000a030 00000000!         .LONG   FONTGRYP
    2079                    ;       .long   H11WFONT
    2080 0000a050 00000000!         .long   H10FONT
    2081 0000a070 00000000!         .long   H18FONT
    2082 0000a090 00000000!         .LONG   BLUTXT3P
    2083 0000a0b0 00000000!         .long   RAMTEMP1
    2084 0000a0d0 00000000!         .LONG   REDTXT3P
    2085 0000a0f0 00000000!         .long   RAMTEMP2
    2086 0000a110                   .EVEN
    2087                    
    2088 0000a110           SECOND_STRING
    2089 0000a110       5c          .STRING "\p2\dND\d\n\p%u\n\p%u",0
    2090 0000a1c0 00000000!         .LONG   FONTGRYP
    2091                    ;       .long   H11WFONT
    2092 0000a1e0 00000000!         .long   H10FONT
    2093 0000a200 00000000!         .long   H18FONT
    2094 0000a220 00000000!         .LONG   BLUTXT3P
    2095 0000a240 00000000!         .long   RAMTEMP1
    2096 0000a260 00000000!         .LONG   REDTXT3P
    2097 0000a280 00000000!         .long   RAMTEMP2
    2098 0000a2a0                   .EVEN
    2099                    
    2100 0000a2a0           THIRD_STRING
    2101 0000a2a0       5c          .STRING "\p3\dRD\d\n\p%u\n\p%u",0
    2102 0000a350 00000000!         .LONG   FONTGRYP
    2103                    ;       .long   H11WFONT
TMS340 COFF Macro Assembler Version 6.10     Wed Apr 21 11:31:43 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   50

    2104 0000a370 00000000!         .long   H10FONT
    2105 0000a390 00000000!         .long   H18FONT
    2106 0000a3b0 00000000!         .LONG   BLUTXT3P
    2107 0000a3d0 00000000!         .long   RAMTEMP1
    2108 0000a3f0 00000000!         .LONG   REDTXT3P
    2109 0000a410 00000000!         .long   RAMTEMP2
    2110 0000a430                   .EVEN
    2111                    
    2112 0000a430           OT_STRING
    2113 0000a430       5c          .STRING "\p\dOT\d\n\p%u\n\p%u",0
    2114 0000a4e0 00000000!         .LONG   FONTGRYP
    2115 0000a500 00000000!         .long   H18TFONT
    2116 0000a520 00000000!         .long   H18FONT
    2117 0000a540 00000000!         .LONG   BLUTXT3P
    2118 0000a560 00000000!         .long   RAMTEMP1
    2119 0000a580 00000000!         .LONG   REDTXT3P
    2120 0000a5a0 00000000!         .long   RAMTEMP2
    2121 0000a5c0                   .EVEN
    2122                    
    2123 0000a5c0           OT_EMPTY_STRING
    2124 0000a5c0       5c          .STRING "\p\dOT",0
    2125 0000a600 00000000!         .LONG   FONTGRYP
    2126 0000a620 00000000!         .long   H18TFONT
    2127 0000a640                   .EVEN
    2128                    
    2129 0000a640           F_STRING
    2130 0000a640       5c          .STRING "\pF\n\p%u\n\p%u",0
    2131 0000a6c0 00000000!         .LONG   FONTGRYP
    2132 0000a6e0 00000000!         .LONG   BLUTXT3P
    2133 0000a700 00000000!         .long   RAMTEMP1
    2134 0000a720 00000000!         .LONG   REDTXT3P
    2135 0000a740 00000000!         .long   RAMTEMP2
    2136 0000a760                   .EVEN
    2137                    
    2138                    **************************************************************************
    2139                    *                                                                        *
    2140                    * period_start                                                           *
    2141                    *                                                                        *
    2142                    **************************************************************************
    2143 0000a760           period_start
    2144 0000a760     0d5f          calla   set_background_tune
         0000a770 00000000! 
    2145 0000a790     0d3f          callr   MY_WIPEOUT
         0000a7a0     0a1d  
    2146 0000a7b0     57ce          clr     a14
    2147 0000a7c0     058e          move    a14,@scored_by,W        ;no halt on timer
         0000a7d0 00000000! 
    2148 0000a7f0     058e          move    a14,@glass_break,W
         0000a800 00000000! 
    2149                    
    2150 0000a820     09e0          movi    FLOATRCP,a0             ;palette for small score box
         0000a830 00000000! 
    2151 0000a850     0d5f          calla   GETFPAL
         0000a860 00000000! 
    2152 0000a880     09e0          movi    CITYP,a0                ;palette for small score box stuff
TMS340 COFF Macro Assembler Version 6.10     Wed Apr 21 11:31:43 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   51

         0000a890 00000000! 
    2153 0000a8b0     0d5f          calla   GETFPAL
         0000a8c0 00000000! 
    2154                    
    2155 0000a8e0                   CREATE  PID_ORGAN,ORGAN_PROC
    2156 0000a960                   CREATE  PID_CROWD_NOISE,CROWD_NOISE_PROC
    2157                    
    2158 0000a9e0                   CREATE  PID_PUCK_PTR,PUCK_PTR_PROC
    2159                    
    2160 0000aa60     57ce          CLR     A14
    2161 0000aa70     058e          MOVE    A14,@SHOW_START_SHIT,W          ;DEFAULT NOT 1ST PERIOD
         0000aa80 000004d0- 
    2162                    
    2163 0000aaa0     05a1          move    @period,a1,W
         0000aab0 000000e0- 
    2164 0000aad0     0b41          CMPI    1,A1
         0000aae0     fffe  
    2165 0000aaf0     cb0e          JRNE    PS_GO                           ;BR=NOT 1ST PERIOD
    2166                    
    2167 0000ab00     182e          MOVK    1,A14
    2168 0000ab10     058e          MOVE    A14,@SHOW_START_SHIT,W          ;DO IT
         0000ab20 000004d0- 
    2169                    
    2170 0000ab40     57ce          CLR     A14
    2171 0000ab50     058e          MOVE    A14,@HELP_WINDOW_COUNT,W        ;RESET COUNT
         0000ab60 000004c0- 
    2172                    
    2173 0000ab80     0d5f          CALLA   START_FACEOFF_POWERUP_PROC
         0000ab90 00000000! 
    2174 0000abb0     0d5f          CALLA   DISPLAY_TEAM_GRAPHICS
         0000abc0 00000000! 
    2175 0000abe0           PS_GO
    2176 0000abe0     0d3f          callr   update_period_players
         0000abf0     0b2a  
    2177 0000ac00     0d3f          callr   clear_all_please_waits
         0000ac10     0033  
    2178 0000ac20     0d3f          callr   restart_game_mode
         0000ac30     f9a6  
    2179 0000ac40     0d5f          calla   hotbar_periodstart
         0000ac50 00000000! 
    2180 0000ac70     0d5f          calla   set_drone_levels
         0000ac80 00000000! 
    2181 0000aca0     5600          clr     a0
    2182 0000acb0     0580          move    a0,@timer_on,W
         0000acc0 00000000! 
    2183 0000ace0     0580          move    a0,@timer_ok,W
         0000acf0 00000000! 
    2184 0000ad10     0d5f          calla   init_timer_value
         0000ad20 00000000! 
    2185 0000ad40     09c0          movi    400,a0                  ;take us through to face off
         0000ad50     0190  
    2186                    
    2187 0000ad60     05a1          move    @period,a1,W
         0000ad70 000000e0- 
    2188 0000ad90     0b41          cmpi    1,a1
TMS340 COFF Macro Assembler Version 6.10     Wed Apr 21 11:31:43 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   52

         0000ada0     fffe  
    2189 0000adb0     ca03          jrz     ps_1p
    2190                    
    2191 0000adc0     0d5f          calla   show_timer              ;show timer for a while
         0000add0 00000000! 
    2192 0000adf0     5600  ps_1p   clr     a0              ;faceoff at 0,339
    2193 0000ae00     09c1          movi    339,a1
         0000ae10     0153  
    2194 0000ae20     0d5f          calla   spx_period_faceoff
         0000ae30 00000000! 
    2195 0000ae50     0d5f          calla   period_faceoff
         0000ae60 00000000! 
    2196 0000ae80     07c0          move    @WAVEIRQS,@time_score_left,L    ;easier
         0000ae90 00000000! 
         0000aeb0 00000000! 
    2197 0000aed0     07c0          move    @WAVEIRQS,@time_score_right,L   ;easier
         0000aee0 00000000! 
         0000af00 00000000! 
    2198 0000af20     c080          jauc    store_players_tired
         0000af30 00000000! 
    2199                    
    2200 0000af50           clear_all_please_waits
    2201 0000af50     1821          movk    1,a1
    2202 0000af60     0d3f          callr   capw1
         0000af70     0005  
    2203 0000af80     0d3f          callr   capw1
         0000af90     0003  
    2204 0000afa0     18a1          movk    5,a1
    2205 0000afb0     0d3f          callr   capw1
         0000afc0     0000  
    2206 0000afd0           capw1   GBLOCK  a1,a6
    2207 0000b020     aec0          movb    *a6(POF_TOP_MODE),a0
         0000b030     05a8  
    2208 0000b040     0b40          cmpi    7,a0
         0000b050     fff8  
    2209 0000b060     ca03          jrz     capw2
    2210 0000b070     0b40          cmpi    5,a0
         0000b080     fffa  
    2211 0000b090     cb03          jrnz    uppus
    2212 0000b0a0     1880  capw2   movk    4,a0
    2213 0000b0b0     ac06          movb    a0,*a6(POF_TOP_MODE)
         0000b0c0     05a8  
    2214 0000b0d0     1021  uppus   inc     a1
    2215 0000b0e0     0960          rets
    2216                    
    2217 0000b0f0           period_over
    2218 0000b0f0     0d5f          calla   spx_period_over1
         0000b100 00000000! 
    2219 0000b120     57ce          clr     a14
    2220 0000b130     058e          move    a14,@scored_by,W        ;no halt on timer
         0000b140 00000000! 
    2221 0000b160     0d3f          callr   fix_palette_lights
         0000b170     0548  
    2222 0000b180     05a0          move    @period,a0,W
         0000b190 000000e0- 
TMS340 COFF Macro Assembler Version 6.10     Wed Apr 21 11:31:43 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   53

    2223 0000b1b0     0b00          addi    AUD_PERIOD1-1,a0
         0000b1c0     000a  
    2224 0000b1d0     0d5f          calla   AUD1
         0000b1e0 00000000! 
    2225 0000b200     0be0          subi    AUD_PERIOD1-1,a0
         0000b210     fff5  
    2226                    
    2227 0000b220     1420          DEC     A0
    2228 0000b230     2480          SLL     4,A0
    2229 0000b240     0b20          ADDI    team1_score_P1,A0
         0000b250 00000060- 
    2230 0000b270     05ae          MOVE    @team1_score,A14,W
         0000b280 00000090- 
    2231 0000b2a0     81c0          MOVE    A14,*A0,W
    2232 0000b2b0     05ae          MOVE    @team2_score,A14,W
         0000b2c0 000000d0- 
    2233 0000b2e0     b1c0          MOVE    A14,*A0(040H),W
         0000b2f0     0040  
    2234                    
    2235 0000b300     0d5f          calla   replace_all_turbo_palettes
         0000b310 00000000! 
    2236                    
    2237                    ;       MOVI    255,A1
    2238 0000b330     09c1          MOVI    LOUDEST_CROWD,A1
         0000b340     00df  
    2239 0000b350     05a0          MOVE    @crowd_track,A0,W
         0000b360 00000000! 
    2240 0000b380     ca05          JRZ     PO_KILL_SOUND                   ;BR=NO CROWD
    2241 0000b390     24c0          SLL     6,A0
    2242 0000b3a0     0b20          ADDI    track_0_volume,A0
         0000b3b0 00000000! 
    2243 0000b3d0     8401          MOVE    *A0,A1,W
    2244 0000b3e0           PO_KILL_SOUND
    2245 0000b3e0     0d5f          calla   kill_all_sound_but_speech
         0000b3f0 00000000! 
    2246 0000b410     09c4          MOVI    air_horn_blast,A4
         0000b420     00ee  
    2247 0000b430     0d5f          CALLA   do_sound
         0000b440 00000000! 
    2248                    
    2249 0000b460     09c4          MOVI    S_CROWD_3,A4
         0000b470     0114  
    2250 0000b480     0d5f          CALLA   do_sound_at_volume
         0000b490 00000000! 
    2251                    
    2252                    ;       MOVI    CROWD_CHEER_PROC,A7
    2253                    ;
    2254                    ;       MOVE    @PLAYER_BITS,A14,W              ;GET CURRENT PLAYERS
    2255                    ;       MOVE    @PUCK_OBJECT,A1,L
    2256                    ;       MOVE    *A1(OXVAL),A1,L
    2257                    ;       JRNN    CN_HUMAN_TEST                   ;BR=TEST FOR PLAYERS 1 AND 2
    2258                    ;       SRL     2,A14                           ;TEST FOR PLAYERS 5 AND 6
    2259                    ;PO_HUMAN_TEST
    2260                    ;       ANDI    3,A14
    2261                    ;       JRNZ    CN_REACT                        ;BR=AT LEAST ONE HUMAN PLAYER
TMS340 COFF Macro Assembler Version 6.10     Wed Apr 21 11:31:43 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   54

    2262                    ;       MOVI    CROWD_BOO_PROC,A7
    2263                    ;PO_REACT
    2264                    ;       MOVI    PID_CROWD_REACT_NOISE,A1
    2265                    ;       CALLA   GETPRC
    2266                    
    2267 0000b4b0     09ce          movi    PID_SEQUENCE,a14
         0000b4c0     0a03  
    2268 0000b4d0     b1cd          move    a14,*a13(PROCID),W      ;set our id
         0000b4e0     0020  
    2269 0000b4f0     09c0          movi    INGAME,a0,W
         0000b500     0010  
    2270 0000b510     0580          move    a0,@GAME_STATE,W
         0000b520 00000000! 
    2271 0000b540     0d5f          calla   stop_timer
         0000b550 00000000! 
    2272 0000b570     5600          clr     a0
    2273 0000b580     0580          move    a0,@timer_on,W          ;so when we turn it on next, is not <0
         0000b590 00000000! 
    2274                    ;       movi    200,a0
    2275                    ;       calla   show_timer              ;show timer for 3 seconds
    2276 0000b5b0     09c0          movi    101,a0
         0000b5c0     0065  
    2277 0000b5d0     0580          move    a0,@PUCK_MODE,W         ;puck is in period over mode
         0000b5e0 00000000! 
    2278 0000b600     07a8          move    @PUCK_OBJECT,a8,L
         0000b610 00000000! 
    2279 0000b630     b701          move    *a8(ODT_VEL),a1,L
         0000b640     04d0  
    2280 0000b650     2ba1          sra     3,a1
    2281 0000b660     b700          move    *a8(ODT_DIR),a0,L
         0000b670     04b0  
    2282 0000b680     0d5f          calla   set_obj_to_polar
         0000b690 00000000! 
    2283 0000b6b0     5600          clr     a0
    2284 0000b6c0     0780          move    a0,@SCROLLX,L
         0000b6d0 00000000! 
    2285 0000b6f0                   SLEEP   2
    2286 0000b730     09c0          movi    PID_COLOR,a0
         0000b740     2cc0  
    2287 0000b750     0d5f          calla   KILLPROC_ALL
         0000b760 00000000! 
    2288                    
    2289 0000b780     05a0          move    @period,a0,W
         0000b790 000000e0- 
    2290 0000b7b0     0b40          cmpi    4,a0
         0000b7c0     fffb  
    2291 0000b7d0     ca00          jrz     game_over
         0000b7e0     f9c0  
    2292 0000b7f0     0b40          cmpi    3,a0
         0000b800     fffc  
    2293 0000b810     cb60          JRNE    PO_FADE                         ;BR=NOT END OF 3RD PERIOD
    2294                    
    2295 0000b820     05a0          move    @team1_score,a0,W
         0000b830 00000090- 
    2296 0000b850     05a1          move    @team2_score,a1,W
TMS340 COFF Macro Assembler Version 6.10     Wed Apr 21 11:31:43 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   55

         0000b860 000000d0- 
    2297 0000b880     4801          cmp     a0,a1
    2298 0000b890     cb00          JRNE    game_over                       ;BR=NO OVER TIME
         0000b8a0     f9b4  
    2299                    
    2300 0000b8b0     09e8          MOVI    OVERTIME_STRING,A8
         0000b8c0 00007ab0' 
    2301 0000b8e0     09e9          MOVI    [50,199],A9                     ;[Y,X] SCREEN ADDRESS
         0000b8f0 003200c7  
    2302                    ;       MOVI    FONTGRYP2,A0
    2303 0000b910     09e0          MOVI    REDTXT3P,A0
         0000b920 00000000! 
    2304 0000b940     0d5f          CALLA   GETFPAL
         0000b950 00000000! 
    2305 0000b970     4c0b          MOVE    A0,A11                          ;[COLOR,PALETTE]
    2306 0000b980     574a          CLR     A10
    2307 0000b990                   CREATE  PID_IND,FLASH_FINAL_MESS_PROC
    2308                    
    2309 0000ba10     09c0          movi    200,a0
         0000ba20     00c8  
    2310 0000ba30     0d5f          calla   show_timer              ;show timer for 3 seconds
         0000ba40 00000000! 
    2311                    
    2312 0000ba60     09ce          MOVI    99,A14
         0000ba70     0063  
    2313 0000ba80     058e          MOVE    A14,@MAX_PALXFERS,W
         0000ba90 00000000! 
    2314 0000bab0     09e0          MOVI    GO_PAL_LIST,A0
         0000bac0 0000c100' 
    2315 0000bae0     0d5f          calla   FADE_FULL2HALF
         0000baf0 00000000! 
    2316 0000bb10                   JSRP    FADE_WAIT
    2317 0000bb80     0d5f          CALLA   RESET_MAX_PALXFERS
         0000bb90 00000000! 
    2318                    
    2319 0000bbb0                   SLEEP   120
    2320                    
    2321 0000bc00     1ac0          MOVK    ADJPAYOT,A0
    2322 0000bc10     0d5f          CALLA   GET_ADJ                         ;CHECK FOR FULL OVERTIME
         0000bc20 00000000! 
    2323 0000bc40     cb1c          JRNZ    PO_INT                          ;BR=YEP, DO INTERMISSION
    2324                    
    2325 0000bc50     18c0          MOVK    6,A0
    2326 0000bc60     09e6          MOVI    PLAYER_1_BLOCK,A6
         0000bc70 00000000! 
    2327 0000bc90           PO_FREE_OT_LUPE
    2328 0000bc90     aece          MOVB    *A6(POF_PERIODS_PAID),A14
         0000bca0     0900  
    2329 0000bcb0     1fae          BTST    2,A14
    2330 0000bcc0     ca05          JRZ     PO_FOTL_NEXT                    ;BR=DIDN'T PAY FOR 3RD PERIOD
    2331 0000bcd0     0bae          ORI     01000B,A14
         0000bce0 00000008  
    2332 0000bd00     adc6          MOVB    A14,*A6(POF_PERIODS_PAID)       ;ADD FREE OVERTIME
         0000bd10     0900  
    2333 0000bd20           PO_FOTL_NEXT
TMS340 COFF Macro Assembler Version 6.10     Wed Apr 21 11:31:43 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   56

    2334 0000bd20     0b06          ADDI    PLAYER_BLOCK_SIZE,A6            ;NEXT PLAYER BLOCK
         0000bd30     1000  
    2335 0000bd40     3d80          DSJS    A0,PO_FREE_OT_LUPE
    2336                    
    2337 0000bd50     05a0          move    @period,a0,W
         0000bd60 000000e0- 
    2338 0000bd80     1020          inc     a0
    2339 0000bd90     0580          move    a0,@period,W
         0000bda0 000000e0- 
    2340 0000bdc0     0d3f          callr   period_start
         0000bdd0     fe98  
    2341 0000bde0     c080          jauc    SUCIDE
         0000bdf0 00000000! 
    2342 0000be10           PO_INT
    2343 0000be10     c05a          jruc    intermission
    2344                    
    2345 0000be20           PO_FADE
    2346                    ;       move    @period,a0,W
    2347                    ;       cmpi    4,a0
    2348                    ;       jrz     artott
    2349 0000be20     09c0          movi    200,a0
         0000be30     00c8  
    2350 0000be40     0d5f          calla   show_timer              ;show timer for 3 seconds
         0000be50 00000000! 
    2351                    ;artott
    2352 0000be70     09ce          MOVI    99,A14
         0000be80     0063  
    2353 0000be90     058e          MOVE    A14,@MAX_PALXFERS,W
         0000bea0 00000000! 
    2354 0000bec0     09e0          MOVI    EOP_PAL_LIST,A0
         0000bed0 0000c140' 
    2355 0000bef0     0d5f          calla   FADE_FULL2HALF
         0000bf00 00000000! 
    2356 0000bf20                   JSRP    FADE_WAIT
    2357 0000bf90     0d5f          CALLA   RESET_MAX_PALXFERS
         0000bfa0 00000000! 
    2358                    
    2359 0000bfc0                   SLEEP   10
    2360                    
    2361 0000c000                   JSRP    SHOW_GCARDS_ENDPER
    2362                    
    2363 0000c070                   SLEEP   120
    2364 0000c0c0     0d5f          calla   spx_period_over2
         0000c0d0 00000000! 
    2365 0000c0f0     c02c          jruc    intermission
    2366                    
    2367                    
    2368 0000c100           GO_PAL_LIST
    2369 0000c100 00000000!         .LONG   FONTGRYP2,REDTXT3P
    2370 0000c140           EOP_PAL_LIST
    2371 0000c140 00000000!         .long   FREEBOXP
    2372 0000c160 00000000!         .long   PRPTRBOP,BLUTRBOP,YLWTRBOP,GRNTRBOP
    2373 0000c1e0 00000000!         .long   LSTNME1P,NAMEBARP
    2374 0000c220 00000000!         .long   SCOREBAR,JITTERP,CITYP,SCORESP,PERIODP,LEDSP    ;,SCCITYP
    2375                    
TMS340 COFF Macro Assembler Version 6.10     Wed Apr 21 11:31:43 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   57

    2376 0000c2e0 00000000! nolist  .long   T2FIXED,TEXTPAL
    2377 0000c320 00000000!         .long   player_1_turbopal,player_2_turbopal
    2378 0000c360 00000000!         .long   player_3_turbopal,player_4_turbopal
    2379 0000c3a0 00000000          .long   0
    2380                    
    2381 0000c3c0           intermission
    2382 0000c3c0     0d3f          callr   MY_WIPEOUT
         0000c3d0     085a  
    2383                    
    2384                    ;       move    @period,a0,W
    2385                    ;       cmpi    4,a0
    2386                    ;       jrz     game_over
    2387                    ;       cmpi    3,a0
    2388                    ;       jrz     normal_game_over
    2389 0000c3e0                   JSRP    intermission_page
    2390 0000c450     05a0          move    @period,a0,W
         0000c460 000000e0- 
    2391 0000c480     0b40          cmpi    1,a0
         0000c490     fffe  
    2392 0000c4a0     cb09          jrnz    nohint
    2393 0000c4b0     0d3f          callr   MY_WIPEOUT
         0000c4c0     084b  
    2394 0000c4d0                   JSRP    hint_page
    2395 0000c540           nohint  JSRP    SUBSTITUTION_PAGE
    2396                    
    2397 0000c5b0     c064          jruc    buy_in
    2398                    
    2399 0000c5c0           gameover_intermission_page
    2400                    ;       calla   set_game_over_tune              ;now done at game over
    2401 0000c5c0                   JSRP    DISPLAY_INTERMISSION_PAGE
    2402 0000c630                   RETP
    2403                    
    2404 0000c660           intermission_page
    2405 0000c660     0d5f          calla   set_intermission_tune
         0000c670 00000000! 
    2406 0000c690     09ce          MOVI    INSTAT,A14
         0000c6a0     0070  
    2407 0000c6b0     058e          MOVE    A14,@GAME_STATE,W
         0000c6c0 00000000! 
    2408 0000c6e0                   JSRP    DISPLAY_INTERMISSION_PAGE
    2409 0000c750                   SLEEP   60*2
    2410 0000c7a0     09c8          MOVI    60*7,A8
         0000c7b0     01a4  
    2411 0000c7c0                   JSRP    GAME_BUTTON_WAIT
    2412 0000c830                   RETP
    2413                    
    2414 0000c860           hint_page
    2415 0000c860                   BLACKON
    2416 0000c8a0                   JSRP    build_random_hint
    2417 0000c910                   BLACKOFF
    2418 0000c950     09ce          movi    99,a14
         0000c960     0063  
    2419 0000c970     058e          move    a14,@MAX_PALXFERS,W
         0000c980 00000000! 
    2420 0000c9a0     5600          clr     a0
TMS340 COFF Macro Assembler Version 6.10     Wed Apr 21 11:31:43 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   58

    2421 0000c9b0     0d5f          calla   FADEINF                 ;fade down all palettes
         0000c9c0 00000000! 
    2422 0000c9e0                   JSRP    FADE_WAIT
    2423 0000ca50     0d5f          calla   RESET_MAX_PALXFERS
         0000ca60 00000000! 
    2424 0000ca80                   SLEEP   25
    2425 0000cac0     09c8          movi    300,a8
         0000cad0     012c  
    2426 0000cae0                   JSRP    GAME_BUTTON_WAIT
    2427 0000cb50                   RETP
    2428                    
    2429                    **************************************************************************
    2430                    *                                                                        *
    2431                    * il_string_m           ;string,MESS_MAC                                 *
    2432                    *                                                                        *
    2433                    **************************************************************************
    2434                    
    2435 0000cb80           il_string_m             ;string,MESS_MAC
    2436 0000cb80     87e8          move    *sp,a8,L
    2437 0000cb90     09a8          mmfm    a8,a0,a1,a5,a9,a10,a11,a14
         0000cba0     4e23  
    2438 0000cbb0     830f          move    a8,*sp,L                        ;past our inline args
    2439 0000cbc0     4e01          move    a0,b1
    2440 0000cbd0     5600          clr     a0
    2441 0000cbe0     4dc8          move    a14,a8
    2442 0000cbf0     0960          rets
    2443                    
    2444                    **************************************************************************
    2445                    *                                                                        *
    2446                    * buy_in                                                                 *
    2447                    *                                                                        *
    2448                    **************************************************************************
    2449                    
    2450 0000cc00           buy_in
    2451 0000cc00     09ce          MOVI    INBUYIN,A14
         0000cc10     0090  
    2452 0000cc20     058e          MOVE    A14,@GAME_STATE,W
         0000cc30 00000000! 
    2453                    
    2454 0000cc50     0d3f          callr   MY_WIPEOUT
         0000cc60     07d1  
    2455                    
    2456                            .if     self_play
    2457                            .else
    2458                    
    2459 0000cc70     05a1          MOVE    @period,A1,W
         0000cc80 000000e0- 
    2460                    
    2461 0000cca0     0b41          CMPI    3,A1
         0000ccb0     fffc  
    2462 0000ccc0     c416          JRLT    BI_GO                           ;BR=NOT OVERTIME
    2463                    
    2464 0000ccd0     1ac0          MOVK    ADJPAYOT,A0
    2465 0000cce0     0d5f          CALLA   GET_ADJ                         ;CHECK FOR PAY OVERTIME
         0000ccf0 00000000! 
TMS340 COFF Macro Assembler Version 6.10     Wed Apr 21 11:31:43 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   59

    2466 0000cd10     cb38          JRNZ    BI_DOIT                         ;BR=PAY UP SLOBS
    2467                    
    2468 0000cd20     18c0          MOVK    6,A0
    2469 0000cd30     09e6          MOVI    PLAYER_1_BLOCK,A6
         0000cd40 00000000! 
    2470 0000cd60           BI_FREE_OT_LUPE
    2471 0000cd60     aece          MOVB    *A6(POF_PERIODS_PAID),A14
         0000cd70     0900  
    2472 0000cd80     1fae          BTST    2,A14
    2473 0000cd90     ca05          JRZ     BI_FOTL_NEXT                    ;BR=DIDN'T PAY FOR 3RD PERIOD
    2474 0000cda0     0bae          ORI     01000B,A14
         0000cdb0 00000008  
    2475 0000cdd0     adc6          MOVB    A14,*A6(POF_PERIODS_PAID)       ;ADD FREE OVERTIME
         0000cde0     0900  
    2476 0000cdf0           BI_FOTL_NEXT
    2477 0000cdf0     0b06          ADDI    PLAYER_BLOCK_SIZE,A6            ;NEXT PLAYER BLOCK
         0000ce00     1000  
    2478 0000ce10     3d80          DSJS    A0,BI_FREE_OT_LUPE
    2479                    
    2480 0000ce20     c03b          JRUC    bi_9                            ;START OVERTIME
    2481                    
    2482 0000ce30           BI_GO
    2483 0000ce30     05ae          MOVE    @force_buyin,A14,W
         0000ce40 000004b0- 
    2484 0000ce60     cb23          JRNZ    BI_DOIT                         ;BR=SOMEBODY WANTS IN
    2485                    
    2486 0000ce70     05a2          MOVE    @PLAYER_BITS,A2,W               ;GET CURRENT PLAYERS
         0000ce80 00000000! 
    2487 0000cea0     ca1f          JRZ     BI_DOIT                         ;BR=NOBODY
    2488                    
    2489 0000ceb0     09c3          MOVI    01111B,A3
         0000cec0     000f  
    2490 0000ced0     05ae          MOVE    @NPLAYERS,A14,W
         0000cee0 00000000! 
    2491 0000cf00     144e          SUBK    2,A14
    2492 0000cf10     cb02          JRNZ    BI_CHECK_ALL                    ;BR=4 PLAYER KIT
    2493 0000cf20     09c3          MOVI    01001B,A3
         0000cf30     0009  
    2494 0000cf40           BI_CHECK_ALL
    2495 0000cf40     1021          INC     A1
    2496 0000cf50     0d3f          CALLR   get_period_players              ;GET NEXT PERIOD PAID PLAYERS
         0000cf60     08c7  
    2497 0000cf70     4862          CMP     A3,A2
    2498 0000cf80     cb03          JRNE    BI_CHECK_REST                   ;BR=ALL NOT PLAYING
    2499 0000cf90     5602          XOR     A0,A2
    2500 0000cfa0     ca23          JRZ     bi_9                            ;BR=ALL PAID NEXT PERIOD
    2501 0000cfb0     c00e          JRUC    BI_DOIT
    2502                    
    2503 0000cfc0           BI_CHECK_REST
    2504 0000cfc0     0b41          CMPI    2,A1
         0000cfd0     fffd  
    2505 0000cfe0     c70b          JRGT    BI_DOIT                         ;BR=3RD PERIOD BUY-IN
    2506                    
    2507 0000cff0     0d3f          CALLR   COUNT_PLAYER_BITS
         0000d000     0032  
TMS340 COFF Macro Assembler Version 6.10     Wed Apr 21 11:31:43 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   60

    2508 0000d010     142e          DEC     A14
    2509 0000d020     ca07          JRZ     BI_DOIT                         ;BR=ONLY ONE PLAYER ACTIVE
    2510                    
    2511 0000d030     4c04          MOVE    A0,A4
    2512 0000d040     1021          INC     A1
    2513                    ;       CMPI    3,A1
    2514                    ;       JRGT    BI_CR_CHECK                     ;BR=3RD PERIOD BUY-IN
    2515 0000d050     0d3f          CALLR   get_period_players              ;GET 3RD PERIOD PAID PLAYERS
         0000d060     08b7  
    2516 0000d070     5004          AND     A0,A4                           ;GET PLAYERS PAID REST OF GAME
    2517 0000d080           BI_CR_CHECK
    2518 0000d080     5682          XOR     A4,A2
    2519 0000d090     ca14          JRZ     bi_9                            ;BR=ALL PLAYING, PAID REST
    2520                    
    2521 0000d0a0           BI_DOIT
    2522 0000d0a0                   JSRP    DO_BUY_IN
    2523                    
    2524 0000d110     57ce          CLR     A14
    2525 0000d120     058e          MOVE    A14,@force_buyin,W
         0000d130 000004b0- 
    2526                    
    2527 0000d150     05a1          MOVE    @period,A1,W
         0000d160 000000e0- 
    2528 0000d180     1021          INC     A1
    2529 0000d190     0d3f          CALLR   get_period_players
         0000d1a0     08a3  
    2530 0000d1b0     4c00          MOVE    A0,A0
    2531 0000d1c0     ca00          JRZ     premature_game_over             ;BR=END DA GAME
         0000d1d0     f7b8  
    2532                    
    2533                            .endif
    2534                    
    2535 0000d1e0           bi_9
    2536                    ;       CALLA   END_INTERMISSION_TUNE
    2537                    ;       SLEEP   161
    2538                    
    2539 0000d1e0     05a0          move    @period,a0,W
         0000d1f0 000000e0- 
    2540 0000d210     1020          inc     a0
    2541 0000d220     0580          move    a0,@period,W
         0000d230 000000e0- 
    2542 0000d250     0d3f          callr   period_start
         0000d260     fd4f  
    2543 0000d270     c080          jauc    SUCIDE
         0000d280 00000000! 
    2544                    
    2545 0000d2a0           player_watch
    2546 0000d2a0     09ea  pwc_0   movi    pwmst,a10
         0000d2b0 0000e130' 
    2547 0000d2d0     0d3f          callr   pw_msh
         0000d2e0     0002  
    2548                    
    2549 0000d2f0     c000          jruc    pw_mph
         0000d300     015a  
    2550                    ;       callr   pw_mph
TMS340 COFF Macro Assembler Version 6.10     Wed Apr 21 11:31:43 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   61

    2551                    ;       SLEEP   1
    2552                    ;       jruc    pwc_0
    2553                    
    2554 0000d310     19e5  pw_msh  movk    15,a5
    2555                    ;       movk    9,a5
    2556                    
    2557 0000d320     c019          JRUC    pwms4
    2558                    
    2559                    **************************************************************************
    2560                    *                                                                        *
    2561                    * COUNT_PLAYER_BITS                                                      *
    2562                    *                                                                        *
    2563                    * PASS:                                                                  *
    2564                    * A0 = BITS                                                              *
    2565                    * RETURN:                                                                *
    2566                    * A14 = NUMBER OF BITS 0 THROUGH 3 HIGH                                  *
    2567                    *                                                                        *
    2568                    **************************************************************************
    2569                    
    2570 0000d330           COUNT_PLAYER_BITS
    2571 0000d330                   PUSH    A1
    2572 0000d340     1861          MOVK    3,A1
    2573 0000d350     57ce          CLR     A14
    2574 0000d360           CPB_TOTAL_LUPE
    2575 0000d360     4a20          BTST    A1,A0
    2576 0000d370     ca01          JRZ     CPB_TL_NEXT                     ;BR=PLAYER NOT ACTIVE
    2577 0000d380     102e          INC     A14                             ;COUNT ACTIVE PLAYER
    2578 0000d390           CPB_TL_NEXT
    2579 0000d390     1421          DEC     A1
    2580 0000d3a0     cffb          JRNN    CPB_TOTAL_LUPE                  ;BR=NEXT PLAYER
    2581 0000d3b0                   PULLQ   A1
    2582 0000d3c0     0960          RETS
    2583                    
    2584                    **************************************************************************
    2585                    *                                                                        *
    2586                    * find_dist_quick2                                                       *
    2587                    *                                                                        *
    2588                    **************************************************************************
    2589                    
    2590                            .align
    2591 0000d400           find_dist_quick2
    2592 0000d400     4440          sub     a2,a0
    2593 0000d410     0380          abs     a0
    2594 0000d420     4461          sub     a3,a1
    2595 0000d430     0381          abs     a1
    2596 0000d440     4820          cmp     a1,a0
    2597 0000d450     c203          jrls    fdq12
    2598 0000d460     2fe1  fdq02   srl     1,a1
    2599 0000d470     4001          add     a0,a1
    2600 0000d480     0960          rets
    2601 0000d490     2fe0  fdq12   srl     1,a0
    2602 0000d4a0     4001          add     a0,a1
    2603 0000d4b0     0960          rets
    2604                    
    2605                    **************************************************************************
TMS340 COFF Macro Assembler Version 6.10     Wed Apr 21 11:31:43 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   62

    2606                    *                                                                        *
    2607                    * pwms4                                                                  *
    2608                    *                                                                        *
    2609                    **************************************************************************
    2610                    
    2611 0000d4c0     09aa  pwms4   mmfm    a10,a9,a8,a7,a6
         0000d4d0     03c0  
    2612 0000d4e0     8729          move    *a9,a9,L        ;object
    2613 0000d4f0     8708          move    *a8,a8,L        ;object
    2614                    
    2615 0000d500     b724          MOVE    *A9(ODT_FOCIOFF1),A4,L
         0000d510     05f0  
    2616 0000d520     0199          GETST   B9
    2617 0000d530     b700          MOVE    *A8(ODT_FOCIOFF1),A0,L
         0000d540     05f0  
    2618 0000d550     0198          GETST   B8
    2619 0000d560     ca06          JRZ     PWM_GO                          ;BR=CIRCLE VS. CIRCLE OR
    2620                                                                    ;   CIRCLE VS. ELLIPSE
    2621 0000d570                   SWAP    A8,A9                           ;FIX ELLIPSE VS. CIRCLE
    2622 0000d5a0     4c0e          MOVE    A0,A14
    2623 0000d5b0     4c80          MOVE    A4,A0
    2624                    ;       GETST   B8
    2625 0000d5c0     4dc4          MOVE    A14,A4
    2626                    ;       GETST   B9
    2627 0000d5d0           PWM_GO
    2628 0000d5d0     b702          move    *a8(OXVAL),a2,L
         0000d5e0     0140  
    2629                    ;       addi    [0,08000h],a2
    2630                    ;       sra     16,a2
    2631 0000d5f0     2a82          SRA     12,A2                   ;ROUND UP FRACTION
    2632 0000d600     1102          ADDK    8,A2
    2633 0000d610     2b82          SRA     4,A2
    2634 0000d620     4e42          MOVE    A2,B2                   ;A8 X ANIMP
    2635 0000d630     b503          move    *a8(OZPOS),a3,W
         0000d640     0190  
    2636 0000d650     4e63          MOVE    A3,B3                   ;A8 Z ANIMP
    2637                    
    2638                    ;       MOVE    *A8(ODT_FOCIOFF1),A0,L
    2639                    ;       GETST   B8
    2640                    
    2641 0000d660     4c0e          MOVE    A0,A14
    2642 0000d670     260e          SLL     16,A14
    2643 0000d680     2a0e          SRA     16,A14
    2644 0000d690     41c2          ADD     A14,A2                  ;ADD X OFFSET
    2645 0000d6a0     4e44          MOVE    A2,B4                   ;A8 X FOCI 1
    2646                    
    2647 0000d6b0     2a00          SRA     16,A0
    2648 0000d6c0     4003          ADD     A0,A3                   ;ADD Z OFFSET
    2649 0000d6d0     4e65          MOVE    A3,B5                   ;A8 Z FOCI 1
    2650                    
    2651 0000d6e0     b720          move    *a9(OXVAL),a0,L
         0000d6f0     0140  
    2652                    ;       addi    [0,08000h],a0
    2653                    ;       sra     16,a0
    2654 0000d700     2a80          SRA     12,A0                   ;ROUND UP FRACTION
TMS340 COFF Macro Assembler Version 6.10     Wed Apr 21 11:31:43 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   63

    2655 0000d710     1100          ADDK    8,A0
    2656 0000d720     2b80          SRA     4,A0
    2657 0000d730     4e00          MOVE    A0,B0                   ;A9 X ANIMP
    2658 0000d740     b521          move    *a9(OZPOS),a1,W
         0000d750     0190  
    2659 0000d760     4e21          MOVE    A1,B1                   ;A9 Z ANIMP
    2660                    
    2661                    ;       MOVE    *A9(ODT_FOCIOFF1),A4,L
    2662                    ;       GETST   B9
    2663                    ;       MOVE    A4,B14
    2664                    
    2665 0000d770     4c8e          MOVE    A4,A14
    2666 0000d780     260e          SLL     16,A14
    2667 0000d790     2a0e          SRA     16,A14
    2668 0000d7a0     41c0          ADD     A14,A0                  ;ADD X OFFSET
    2669 0000d7b0     4e06          MOVE    A0,B6                   ;A9 X FOCI 1
    2670                    
    2671 0000d7c0     2a04          SRA     16,A4
    2672 0000d7d0     4081          ADD     A4,A1                   ;ADD Z OFFSET
    2673 0000d7e0     4e27          MOVE    A1,B7                   ;A9 Z FOCI 1
    2674                    
    2675 0000d7f0     0d3f          callr   find_dist_quick2        ;find quick, slightly incorrect distance
         0000d800     ffbf  
    2676 0000d810     5119          AND     B8,B9
    2677 0000d820     1c59          BTST    29,B9
    2678 0000d830     cb2c          JRNZ    PWM_STORE               ;BR=CIRCLE AGAINST CIRCLE
    2679                    
    2680 0000d840     4c2b          MOVE    A1,A11
    2681                    
    2682                    ;**************************************************************************
    2683                    ;**************************************************************************
    2684                    ;       ;IF BIT 29, Z FLAG SET, THEN JUMP TO LAST find_dist_quick2
    2685                    ;
    2686                    ;       BTST    29,B8
    2687                    ;       JRZ     PWM_EGO                 ;BR=A8 IS AN ELLIPSE
    2688                    ;
    2689                    ;       MOVE    *A9(ODT_FOCIOFF0),A4,L
    2690                    ;
    2691                    ;       MOVE    B0,A0                   ;A9 ANIMP
    2692                    ;       MOVE    B1,A1
    2693                    ;
    2694                    ;       MOVE    A4,A14
    2695                    ;       SLL     16,A14
    2696                    ;       SRA     16,A14
    2697                    ;       ADD     A14,A0                  ;ADD X OFFSET TO GET A9 X FOCI 0
    2698                    ;
    2699                    ;       SRA     16,A4
    2700                    ;       ADD     A4,A1                   ;ADD Z OFFSET TO GET A9 Z FOCI 0
    2701                    ;
    2702                    ;       ;A8 FOCI 1 IN A2,A3
    2703                    ;
    2704                    ;       SLL     1,A11
    2705                    ;       CLR     A4
    2706                    ;       JRUC    PWM_LAST_QUICKY
    2707                    ;PWM_EGO
TMS340 COFF Macro Assembler Version 6.10     Wed Apr 21 11:31:43 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   64

    2708                    ;**************************************************************************
    2709                    ;**************************************************************************
    2710                    
    2711 0000d850     b700          MOVE    *A8(ODT_FOCIOFF0),A0,L
         0000d860     05d0  
    2712 0000d870     4e52          MOVE    B2,A2                   ;A8 ANIMP
    2713 0000d880     4e73          MOVE    B3,A3
    2714                    
    2715 0000d890     4c0e          MOVE    A0,A14
    2716 0000d8a0     260e          SLL     16,A14
    2717 0000d8b0     2a0e          SRA     16,A14
    2718 0000d8c0     41c2          ADD     A14,A2                  ;ADD X OFFSET
    2719 0000d8d0     4e42          MOVE    A2,B2                   ;A8 X FOCI 0
    2720                    
    2721 0000d8e0     2a00          SRA     16,A0
    2722 0000d8f0     4003          ADD     A0,A3                   ;ADD Z OFFSET
    2723                    ;       MOVE    A3,B3                   ;A8 Z FOCI 0
    2724                    
    2725 0000d900     4ed0          MOVE    B6,A0                   ;A9 FOCI 1
    2726 0000d910     4ef1          MOVE    B7,A1
    2727                    
    2728 0000d920     0d3f          callr   find_dist_quick2        ;find quick, slightly incorrect distance
         0000d930     ffac  
    2729 0000d940     402b          ADD     A1,A11
    2730                    
    2731                    ;       MOVE    B14,B14
    2732                    ;       JRZ     PWM_HALF                ;BR=ELLIPSE AGAINST A CIRCLE
    2733                    
    2734 0000d950     b722          MOVE    *A9(ODT_FOCIOFF0),A2,L
         0000d960     05d0  
    2735                    
    2736 0000d970     4e10          MOVE    B0,A0                   ;A9 ANIMP
    2737 0000d980     4e31          MOVE    B1,A1
    2738                    
    2739 0000d990     4c4e          MOVE    A2,A14
    2740 0000d9a0     260e          SLL     16,A14
    2741 0000d9b0     2a0e          SRA     16,A14
    2742 0000d9c0     41c0          ADD     A14,A0                  ;ADD X OFFSET
    2743 0000d9d0     4e00          MOVE    A0,B0                   ;A9 X FOCI 0
    2744                    
    2745 0000d9e0     2a02          SRA     16,A2
    2746 0000d9f0     4041          ADD     A2,A1                   ;ADD Z OFFSET
    2747 0000da00     4e21          MOVE    A1,B1                   ;A9 Z FOCI 0
    2748                    
    2749 0000da10     4e52          MOVE    B2,A2                   ;A8 X FOCI 0
    2750                            ;A8 Z FOCI 0 IN A3
    2751                    
    2752 0000da20     0d3f          callr   find_dist_quick2        ;find quick, slightly incorrect distance
         0000da30     ff9c  
    2753 0000da40     4c24          MOVE    A1,A4
    2754                    
    2755 0000da50     4e92          MOVE    B4,A2                   ;A8 FOCI 1
    2756 0000da60     4eb3          MOVE    B5,A3
    2757                    
    2758 0000da70     4e10          MOVE    B0,A0                   ;A9 FOCI 0
TMS340 COFF Macro Assembler Version 6.10     Wed Apr 21 11:31:43 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   65

    2759 0000da80     4e31          MOVE    B1,A1
    2760                    ;PWM_LAST_QUICKY
    2761 0000da90     0d3f          callr   find_dist_quick2        ;find quick, slightly incorrect distance
         0000daa0     ff95  
    2762 0000dab0     4081          ADD     A4,A1
    2763                    ;       MOVE    A4,A4
    2764                    ;       JRNZ    PWM_PICK_SHORTER
    2765                    ;       SLL     1,A1
    2766                    ;PWM_PICK_SHORTER
    2767 0000dac0     482b          CMP     A1,A11
    2768 0000dad0     c501          JRGE    PWM_HALF                ;BR=DISTANCE TO FOCI 0 SHORTER
    2769 0000dae0     4d61          MOVE    A11,A1                  ;DISTANCE TO FOCI 1 SHORTER
    2770 0000daf0           PWM_HALF
    2771 0000daf0     2be1          SRA     1,A1
    2772 0000db00           PWM_STORE
    2773 0000db00     8027          move    A1,*A7,W        ;store in distance block
    2774 0000db10     8026          move    A1,*A6,W        ;store in distance block
    2775                    ;       dsjs    a5,pwms4
    2776 0000db20     0d85          dsj     a5,pwms4
         0000db30     ff98  
    2777 0000db40     09e6  pwsxx   movi    PLAYER_1_BLOCK,a6
         0000db50 00000000! 
    2778 0000db70     190a          movk    8,a10                   ;it is quicker here to just run through everyone regardless
    2779 0000db80     09c5          movi    PLAYER_BLOCK_SIZE,a5
         0000db90     1000  
    2780 0000dba0     05a0          move    @PUCK_CONTROL,a0,W      ;now do puck distances
         0000dbb0 00000000! 
    2781 0000dbd0     ca0b          jrz     nb_np                   ;do puck distance
    2782 0000dbe0     2480          sll     4,a0
    2783 0000dbf0     0b00          addi    POF_D_1P-16,a0
         0000dc00     05f0  
    2784 0000dc10     4cc7  nb_hp   move    a6,a7
    2785 0000dc20     4007          add     a0,a7
    2786 0000dc30     84ee          move    *a7,a14,W
    2787 0000dc40     b1c6          move    a14,*a6(POF_D_PUCK),W
         0000dc50     0680  
    2788 0000dc60     40a6          add     a5,a6
    2789 0000dc70     3cea          dsjs    a10,nb_hp
    2790 0000dc80     0960          rets
    2791 0000dc90     07a9  nb_np   move    @PUCK_OBJECT,a9,L
         0000dca0 00000000! 
    2792                    
    2793 0000dcc0     b722          move    *a9(OXVAL),a2,L
         0000dcd0     0140  
    2794 0000dce0     0b22          addi    [0,08000h],a2
         0000dcf0 00008000  
    2795 0000dd10     2a02          sra     16,a2
    2796                    ;       move    *a9(OXPOS),a2,W         ;half
    2797                    
    2798 0000dd20     b523          move    *a9(OZPOS),a3,W
         0000dd30     0190  
    2799 0000dd40     b6c8  nbnp1   move    *a6(POF_OBJECT),a8,L
         0000dd50     0280  
    2800 0000dd60     ca2a          jrz     nbnpk
    2801                    
TMS340 COFF Macro Assembler Version 6.10     Wed Apr 21 11:31:43 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   66

    2802 0000dd70     b700          move    *a8(OXVAL),a0,L
         0000dd80     0140  
    2803 0000dd90     0b20          addi    [0,08000h],a0
         0000dda0 00008000  
    2804 0000ddc0     2a00          sra     16,a0
    2805                    ;       move    *a8(OXPOS),a0,W         ;half
    2806                    
    2807 0000ddd0     b501          move    *a8(OZPOS),a1,W
         0000dde0     0190  
    2808                    
    2809 0000ddf0     b704          MOVE    *A8(ODT_FOCIOFF1),A4,L
         0000de00     05f0  
    2810 0000de10     ca1b          JRZ     NB_GET_DIST             ;BR=CIRCLE COLLISION
    2811                    
    2812 0000de20     4c07          MOVE    A0,A7
    2813 0000de30     4c2b          MOVE    A1,A11
    2814                    
    2815 0000de40     4c8e          MOVE    A4,A14
    2816 0000de50     260e          SLL     16,A14
    2817 0000de60     2a0e          SRA     16,A14
    2818 0000de70     41c0          ADD     A14,A0                  ;ADD X OFFSET
    2819 0000de80     2a04          SRA     16,A4
    2820 0000de90     4081          ADD     A4,A1                   ;ADD Z OFFSET
    2821                    
    2822 0000dea0     0d3f          callr   find_dist_quick         ;FROM PUCK TO FOCI 1
         0000deb0     0019  
    2823                    
    2824 0000dec0     4ce0          MOVE    A7,A0
    2825 0000ded0     4d61          MOVE    A11,A1
    2826                    
    2827 0000dee0     4c87          MOVE    A4,A7                   ;SAVE DISTANCE TO FOCI 1
    2828                    
    2829 0000def0     b704          MOVE    *A8(ODT_FOCIOFF0),A4,L
         0000df00     05d0  
    2830                    
    2831 0000df10     4c8e          MOVE    A4,A14
    2832 0000df20     260e          SLL     16,A14
    2833 0000df30     2a0e          SRA     16,A14
    2834 0000df40     41c0          ADD     A14,A0                  ;ADD X OFFSET
    2835 0000df50     2a04          SRA     16,A4
    2836 0000df60     4081          ADD     A4,A1                   ;ADD Z OFFSET
    2837                    
    2838 0000df70     0d3f          callr   find_dist_quick         ;FROM PUCK TO FOCI 0
         0000df80     000c  
    2839                    
    2840 0000df90     48e4          CMP     A7,A4
    2841 0000dfa0     c604          JRLE    NG_SET_DIST             ;BR=DISTANCE TO FOCI 0 SHORTER
    2842 0000dfb0     4ce4          MOVE    A7,A4                   ;DISTANCE TO FOCI 1 SHORTER 
    2843 0000dfc0     c002          JRUC    NG_SET_DIST
    2844 0000dfd0           NB_GET_DIST
    2845 0000dfd0     0d3f          callr   find_dist_quick
         0000dfe0     0006  
    2846 0000dff0           NG_SET_DIST
    2847 0000dff0     b086          move    a4,*a6(POF_D_PUCK),W
         0000e000     0680  
TMS340 COFF Macro Assembler Version 6.10     Wed Apr 21 11:31:43 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   67

    2848 0000e010     40a6  nbnpk   add     a5,a6
    2849 0000e020     0d8a          dsj     a10,nbnp1
         0000e030     ffd0  
    2850 0000e040     0960          rets
    2851                    
    2852 0000e050           find_dist_quick
    2853 0000e050     4440          sub     a2,a0
    2854 0000e060     0380          abs     a0
    2855 0000e070     4461          sub     a3,a1
    2856 0000e080     0381          abs     a1
    2857 0000e090     4820          cmp     a1,a0
    2858 0000e0a0     c204          jrls    fdq1
    2859 0000e0b0     2fe1  fdq0    srl     1,a1
    2860 0000e0c0     4c24          move    a1,a4
    2861 0000e0d0     4004          add     a0,a4
    2862 0000e0e0     0960          rets
    2863 0000e0f0     2fe0  fdq1    srl     1,a0
    2864 0000e100     4c04          move    a0,a4
    2865 0000e110     4024          add     a1,a4
    2866 0000e120     0960          rets
    2867                    
    2868 0000e130           pwmst
    2869 0000e130 00000280!         .long   PLAYER_1_BLOCK+POF_OBJECT,PLAYER_2_BLOCK+POF_OBJECT,PLAYER_2_BLOCK+POF_D_1P,PLAYER_1_BLO
    2870 0000e1b0 00000280!         .long   PLAYER_1_BLOCK+POF_OBJECT,PLAYER_4_BLOCK+POF_OBJECT,PLAYER_4_BLOCK+POF_D_1P,PLAYER_1_BLO
    2871 0000e230 00000280!         .long   PLAYER_1_BLOCK+POF_OBJECT,PLAYER_5_BLOCK+POF_OBJECT,PLAYER_5_BLOCK+POF_D_1P,PLAYER_1_BLO
    2872 0000e2b0 00000280!         .long   PLAYER_1_BLOCK+POF_OBJECT,PLAYER_6_BLOCK+POF_OBJECT,PLAYER_6_BLOCK+POF_D_1P,PLAYER_1_BLO
    2873 0000e330 00000280!         .long   PLAYER_1_BLOCK+POF_OBJECT,PLAYER_8_BLOCK+POF_OBJECT,PLAYER_8_BLOCK+POF_D_1P,PLAYER_1_BLO
    2874 0000e3b0 00000280!         .long   PLAYER_2_BLOCK+POF_OBJECT,PLAYER_4_BLOCK+POF_OBJECT,PLAYER_4_BLOCK+POF_D_2P,PLAYER_2_BLO
    2875 0000e430 00000280!         .long   PLAYER_2_BLOCK+POF_OBJECT,PLAYER_5_BLOCK+POF_OBJECT,PLAYER_5_BLOCK+POF_D_2P,PLAYER_2_BLO
    2876 0000e4b0 00000280!         .long   PLAYER_2_BLOCK+POF_OBJECT,PLAYER_6_BLOCK+POF_OBJECT,PLAYER_6_BLOCK+POF_D_2P,PLAYER_2_BLO
    2877 0000e530 00000280!         .long   PLAYER_2_BLOCK+POF_OBJECT,PLAYER_8_BLOCK+POF_OBJECT,PLAYER_8_BLOCK+POF_D_2P,PLAYER_2_BLO
    2878 0000e5b0 00000280!         .long   PLAYER_4_BLOCK+POF_OBJECT,PLAYER_5_BLOCK+POF_OBJECT,PLAYER_5_BLOCK+POF_D_4P,PLAYER_4_BLO
    2879 0000e630 00000280!         .long   PLAYER_4_BLOCK+POF_OBJECT,PLAYER_6_BLOCK+POF_OBJECT,PLAYER_6_BLOCK+POF_D_4P,PLAYER_4_BLO
    2880 0000e6b0 00000280!         .long   PLAYER_4_BLOCK+POF_OBJECT,PLAYER_8_BLOCK+POF_OBJECT,PLAYER_8_BLOCK+POF_D_4P,PLAYER_4_BLO
    2881 0000e730 00000280!         .long   PLAYER_5_BLOCK+POF_OBJECT,PLAYER_6_BLOCK+POF_OBJECT,PLAYER_6_BLOCK+POF_D_5P,PLAYER_5_BLO
    2882 0000e7b0 00000280!         .long   PLAYER_5_BLOCK+POF_OBJECT,PLAYER_8_BLOCK+POF_OBJECT,PLAYER_8_BLOCK+POF_D_5P,PLAYER_5_BLO
    2883 0000e830 00000280!         .long   PLAYER_6_BLOCK+POF_OBJECT,PLAYER_8_BLOCK+POF_OBJECT,PLAYER_8_BLOCK+POF_D_6P,PLAYER_6_BLO
    2884                    
    2885 0000e8b0     1880  pw_mph  movk    4,a0
    2886                    ;       movi    30,a9
    2887 0000e8c0     09e7          movi    PLAYER_4_BLOCK,a7
         0000e8d0 00000000! 
    2888 0000e8f0     09ca          movi    PLAYER_BLOCK_SIZE,a10
         0000e900     1000  
    2889 0000e910     09cb          movi    POF_D_8P,a11
         0000e920     0670  
    2890 0000e930     0b40  pwol    cmpi    3,a0
         0000e940     fffc  
    2891 0000e950     ca0d          jrz     pw_btol
    2892 0000e960     4ce6          move    a7,a6
    2893 0000e970     1881          movk    4,a1
    2894 0000e980     4166          add     a11,a6
    2895 0000e990     b4e9          MOVE    *A7(POF_D_COLL),A9,W            ;COLLISION DISTANCE
         0000e9a0     0690  
    2896 0000e9b0     0b41  pwil    cmpi    3,a1
TMS340 COFF Macro Assembler Version 6.10     Wed Apr 21 11:31:43 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   68

         0000e9c0     fffc  
    2897 0000e9d0     ca03          jrz     pw_btl
    2898 0000e9e0     84ce          move    *a6,a14,W
    2899 0000e9f0     492e          cmp     a9,a14
    2900 0000ea00     c205          jrls    pw_sp
    2901 0000ea10     1606  pw_btl  subk    16,a6
    2902 0000ea20     3d01          dsjs    a1,pwil
    2903 0000ea30     4547  pw_btol sub     a10,a7
    2904 0000ea40     3e40          dsjs    a0,pwol
    2905 0000ea50     0960          rets
    2906                    
    2907 0000ea60     098f  pw_sp   mmtm    sp,a0,a1,a6,a7,a9,a10,a11
         0000ea70     c370  
    2908 0000ea80     b6e9          move    *a7(POF_OBJECT),a9,L
         0000ea90     0280  
    2909 0000eaa0     4c20          move    a1,a0
    2910 0000eab0     1080          addk    4,a0
    2911 0000eac0                   GBLOCK  a0,a6
    2912 0000eb10     b6c8          move    *a6(POF_OBJECT),a8,L
         0000eb20     0280  
    2913 0000eb30     b525          move    *a9(OFLAGS),a5,W                ;if player is off screen, no check
         0000eb40     0420  
    2914 0000eb50     b50e          move    *a8(OFLAGS),a14,W               ;if player is off screen, no check
         0000eb60     0420  
    2915 0000eb70     55c5          or      a14,a5
    2916 0000eb80     1f05          btst    B_OFSCRN,a5
    2917 0000eb90     cb00          jrnz    pw8
         0000eba0     00ad  
    2918 0000ebb0     b6ce          move    *a6(POF_CONTROLLED),a14,L
         0000ebc0     0d80  
    2919 0000ebd0     ca03          jrz     pwspr
    2920 0000ebe0     49c9          cmp     a14,a9
    2921 0000ebf0     ca00          jrz     pw8                     ;attached player, no spread
         0000ec00     00a7  
    2922 0000ec10     b6ee  pwspr   move    *a7(POF_CONTROLLED),a14,L
         0000ec20     0d80  
    2923 0000ec30     ca03          jrz     pwspr2
    2924 0000ec40     49c8          cmp     a14,a8
    2925 0000ec50     ca00          jrz     pw8
         0000ec60     00a1  
    2926 0000ec70     b4e5  pwspr2  move    *a7(POF_FLAGS),a5,W
         0000ec80     0200  
    2927 0000ec90     b4ce          move    *a6(POF_FLAGS),a14,W
         0000eca0     0200  
    2928 0000ecb0     55c5          or      a14,a5
    2929 0000ecc0     1f65          btst    B_PF_HIGHER,a5
    2930 0000ecd0     cb00          jrnz    pw8
         0000ece0     0099  
    2931 0000ecf0     1e65          btst    B_PF_CELEBRATE,a5
    2932 0000ed00     cb00          jrnz    pw8
         0000ed10     0096  
    2933 0000ed20     b702          move    *a8(OXVAL),a2,L
         0000ed30     0140  
    2934 0000ed40     b703          move    *a8(OZVAL),a3,L
         0000ed50     0180  
TMS340 COFF Macro Assembler Version 6.10     Wed Apr 21 11:31:43 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   69

    2935 0000ed60     4e42          MOVE    A2,B2                           ;STORE A8 ANIMP POSITION
    2936 0000ed70     4e63          MOVE    A3,B3
    2937 0000ed80     b70e          MOVE    *A8(ODT_FOCIOFF0),A14,L         ;ADD AVERAGE OF OFFSETS TO VALS
         0000ed90     05d0  
    2938 0000eda0     b701          MOVE    *A8(ODT_FOCIOFF1),A1,L
         0000edb0     05f0  
    2939 0000edc0     e1c1          ADDXY   A14,A1
    2940 0000edd0     4c2e          MOVE    A1,A14
    2941 0000ede0     260e          SLL     16,A14
    2942 0000edf0     2bee          SRA     1,A14
    2943 0000ee00     41c2          ADD     A14,A2                          ;X CENTER
    2944 0000ee10     2a01          SRA     16,A1
    2945 0000ee20     25e1          SLL     15,A1
    2946 0000ee30     4023          ADD     A1,A3                           ;Z CENTER
    2947 0000ee40     b720          move    *a9(OXVAL),a0,L
         0000ee50     0140  
    2948 0000ee60     b721          move    *a9(OZVAL),a1,L
         0000ee70     0180  
    2949 0000ee80     4e00          MOVE    A0,B0                           ;STORE A9 ANIMP POSITION
    2950 0000ee90     4e21          MOVE    A1,B1
    2951 0000eea0     b72e          MOVE    *A9(ODT_FOCIOFF0),A14,L         ;ADD AVERAGE OF OFFSETS TO VALS
         0000eeb0     05d0  
    2952 0000eec0     b726          MOVE    *A9(ODT_FOCIOFF1),A6,L
         0000eed0     05f0  
    2953 0000eee0     e1c6          ADDXY   A14,A6
    2954 0000eef0     4cce          MOVE    A6,A14
    2955 0000ef00     260e          SLL     16,A14
    2956 0000ef10     2bee          SRA     1,A14
    2957 0000ef20     41c0          ADD     A14,A0                          ;X CENTER
    2958 0000ef30     2a06          SRA     16,A6
    2959 0000ef40     25e6          SLL     15,A6
    2960 0000ef50     40c1          ADD     A6,A1                           ;Z CENTER
    2961 0000ef60     b706          move    *a8(ODT_VEL),a6,L
         0000ef70     04d0  
    2962 0000ef80     b72e          move    *a9(ODT_VEL),a14,L
         0000ef90     04d0  
    2963 0000efa0     b70a          move    *a8(ODT_PBK),a10,L
         0000efb0     0530  
    2964 0000efc0     0b6a          cmpi    PLAYER_8_BLOCK,a10
         0000efd0 ffffffff! 
    2965 0000eff0     ca0c          jrz     pwa8e
    2966 0000f000     0b67          cmpi    PLAYER_4_BLOCK,a7
         0000f010 ffffffff! 
    2967 0000f030     ca17          jrz     pwa8f
    2968 0000f040     48ce          cmp     a6,a14
    2969 0000f050     c815          jrlo    pwa8f           ;pick our swap
    2970 0000f060     c305          jrhi    pwa8e           ; on our lowest speed guy
    2971 0000f070     05ae          move    @WAVEIRQS,a14,W ;just get low bits (we are equal, do we swap)
         0000f080 00000000! 
    2972 0000f0a0     2bee          sra     1,a14
    2973 0000f0b0     c80f          jrc     pwa8f
    2974 0000f0c0           pwa8e   SWAP    a8,a9
    2975 0000f0f0                   SWAP    a0,a2
    2976 0000f120                   SWAP    a1,a3
    2977 0000f150                   SWAP    B0,B2                           ;SWAP ANIMP POSITIONS
TMS340 COFF Macro Assembler Version 6.10     Wed Apr 21 11:31:43 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   70

    2978 0000f180                   SWAP    B1,B3
    2979 0000f1b0     4e04  pwa8f   MOVE    A0,B4                           ;STORE A9(A8) CENTER POSITION
    2980 0000f1c0     4e25          MOVE    A1,B5
    2981 0000f1d0     0d5f          calla   find_dir_to_point
         0000f1e0 00000000! 
    2982 0000f200     b701          move    *a8(ODT_DIR),a1,L
         0000f210     04b0  
    2983 0000f220     4401          sub     a0,a1
    2984 0000f230                   THETA_H a1
    2985 0000f340     0381          abs     a1
    2986 0000f350     0b61          cmpi    XD0900,a1
         0000f360 ffa5ffff  
    2987 0000f380     c92f          jrhs    pw8
    2988 0000f390     0d5f          calla   dir_to_182
         0000f3a0 00000000! 
    2989 0000f3c0     2be0          sra     1,a0
    2990 0000f3d0     24a0          sll     5,a0
    2991 0000f3e0     0b20          addi    fddtab,a0
         0000f3f0 0000f6c0' 
    2992 0000f410     8600          move    *a0,a0,L
    2993 0000f420     0920          call    a0
    2994 0000f430     b700          move    *a8(ODT_DIR),a0,L
         0000f440     04b0  
    2995 0000f450     b72e          move    *a9(ODT_DIR),a14,L
         0000f460     04b0  
    2996 0000f470     440e          sub     a0,a14
    2997 0000f480                   THETA_H a14
    2998 0000f590     038e          abs     a14
    2999 0000f5a0     b720          move    *a9(ODT_VEL),a0,L       ;get slower guys vel
         0000f5b0     04d0  
    3000 0000f5c0     0b6e          cmpi    XD0900,a14              ;are we going in same general
         0000f5d0 ffa5ffff  
    3001 0000f5f0     c201          jrls    pwss5
    3002 0000f600     5600          clr     a0
    3003 0000f610     b208  pwss5   move    a0,*a8(ODT_VEL),L
         0000f620     04d0  
    3004 0000f630     b706          move    *a8(ODT_PBK),a6,L
         0000f640     0530  
    3005 0000f650     1820          movk    1,a0
    3006 0000f660     b006          move    a0,*a6(POF_DRONEC),W
         0000f670     0720  
    3007 0000f680     09af  pw8     mmfm    sp,a0,a1,a6,a7,a9,a10,a11
         0000f690     0ec3  
    3008 0000f6a0     c000          jruc    pw_btl
         0000f6b0     ff35  
    3009                    
    3010 0000f6c0 0000f790' fddtab  .long   split_vertical_down
    3011 0000f6e0 0000f940'         .long   split_horizontal_right
    3012 0000f700 0000f740'         .long   split_vertical_up
    3013 0000f720 0000f990'         .long   split_horizontal_left
    3014                    
    3015 0000f740           split_vertical_up
    3016 0000f740     4e73          MOVE    B3,A3                           ;GET ANIMP Z POSITION
    3017 0000f750     0d03          subi    [5,0],a3
         0000f760 fffaffff  
TMS340 COFF Macro Assembler Version 6.10     Wed Apr 21 11:31:43 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   71

    3018 0000f780     c004          jruc    svu1
    3019 0000f790           split_vertical_down
    3020 0000f790     4e73          MOVE    B3,A3                           ;GET ANIMP Z POSITION
    3021 0000f7a0     0b23          addi    [5,0],a3
         0000f7b0 00050000  
    3022 0000f7d0     b268  svu1    move    a3,*a8(OZVAL),L
         0000f7e0     0180  
    3023                    ;       move    *a9(OXVAL),a14,L
    3024 0000f7f0     4e9e          MOVE    B4,A14                          ;GET CENTER X POSITION
    3025 0000f800     49c2          cmp     a14,a2
    3026 0000f810     c40b          jrlt    svl
    3027 0000f820     c705          jrgt    svr
    3028 0000f830     05ae          move    @WAVEIRQS,a14,W
         0000f840 00000000! 
    3029 0000f860     2bee          sra     1,a14
    3030 0000f870     c805          jrc     svl
    3031 0000f880     4e52  svr     MOVE    B2,A2                           ;GET ANIMP X POSITION
    3032 0000f890     0b22          addi    [2,08000h],a2
         0000f8a0 00028000  
    3033 0000f8c0     c004          jruc    svv1
    3034 0000f8d0     4e52  svl     MOVE    B2,A2                           ;GET ANIMP X POSITION
    3035 0000f8e0     0d02          subi    [2,08000h],a2
         0000f8f0 fffd7fff  
    3036 0000f910     b248  svv1    move    a2,*a8(OXVAL),L
         0000f920     0140  
    3037 0000f930     0960          rets
    3038                    
    3039 0000f940           split_horizontal_right
    3040 0000f940     4e52          MOVE    B2,A2                           ;GET ANIMP X POSITION
    3041 0000f950     0d02          subi    [5,0],a2
         0000f960 fffaffff  
    3042 0000f980     c004          jruc    shr1
    3043 0000f990           split_horizontal_left
    3044 0000f990     4e52          MOVE    B2,A2                           ;GET ANIMP X POSITION
    3045 0000f9a0     0b22          addi    [5,0],a2
         0000f9b0 00050000  
    3046 0000f9d0     b248  shr1    move    a2,*a8(OXVAL),L
         0000f9e0     0140  
    3047                    ;       move    *a9(OZVAL),a14,L
    3048 0000f9f0     4ebe          MOVE    B5,A14                          ;GET CENTER Z POSITION
    3049 0000fa00     49c3          cmp     a14,a3
    3050 0000fa10     c40b          jrlt    shd
    3051 0000fa20     c705          jrgt    shu
    3052 0000fa30     05ae          move    @WAVEIRQS,a14,W
         0000fa40 00000000! 
    3053 0000fa60     2bee          sra     1,a14
    3054 0000fa70     c805          jrc     shd
    3055 0000fa80     4e73  shu     MOVE    B3,A3                           ;GET ANIMP Z POSITION
    3056 0000fa90     0b23          addi    [2,08000h],a3
         0000faa0 00028000  
    3057 0000fac0     c004          jruc    shh1
    3058 0000fad0     4e73  shd     MOVE    B3,A3                           ;GET ANIMP Z POSITION
    3059 0000fae0     0d03          subi    [2,08000h],a3
         0000faf0 fffd7fff  
    3060 0000fb10     b268  shh1    move    a3,*a8(OZVAL),L
TMS340 COFF Macro Assembler Version 6.10     Wed Apr 21 11:31:43 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   72

         0000fb20     0180  
    3061 0000fb30     0960          rets
    3062                    
    3063 0000fb40           fix_curplyrs
    3064 0000fb40     5663          clr     a3
    3065 0000fb50     05a1          move    @PLAYER_BITS,a1,W
         0000fb60 00000000! 
    3066 0000fb80     1882          movk    4,a2
    3067 0000fb90     2fe1  fc1     srl     1,a1
    3068 0000fba0     c901          jrnc    fc2
    3069 0000fbb0     1023          inc     a3
    3070 0000fbc0     3c82  fc2     dsjs    a2,fc1
    3071 0000fbd0     0583          move    a3,@CURPLYRS
         0000fbe0 00000000! 
    3072 0000fc00     05a7          move    @PLAYER_BITS,a7
         0000fc10 00000000! 
    3073 0000fc30     09e9          movi    dpl_lst,a9
         0000fc40 0000fda0' 
    3074 0000fc60     1885          movk    4,a5
    3075 0000fc70     1864          movk    3,a4
    3076 0000fc80     9726  fh6     move    *a9+,a6,L
    3077 0000fc90     b4ce          move    *a6(POF_FLAGS),a14,W
         0000fca0     0200  
    3078 0000fcb0     0b8e          andni   M_PF_HUMAN,a14
         0000fcc0 00000001  
    3079 0000fce0     4a87          btst    a4,a7
    3080 0000fcf0     ca03          jrz     fh5
    3081 0000fd00     0bae          ori     M_PF_HUMAN,a14
         0000fd10 00000001  
    3082 0000fd30     b1c6  fh5     move    a14,*a6(POF_FLAGS),W
         0000fd40     0200  
    3083 0000fd50     1424          dec     a4
    3084 0000fd60     3de5          dsjs    a5,fh6
    3085 0000fd70     c080          jauc    maybe_set_drone_levels
         0000fd80 00000000! 
    3086                    
    3087 0000fda0 00000000! dpl_lst .long   PLAYER_6_BLOCK
    3088 0000fdc0 00000000!         .long   PLAYER_5_BLOCK
    3089 0000fde0 00000000!         .long   PLAYER_2_BLOCK
    3090 0000fe00 00000000!         .long   PLAYER_1_BLOCK
    3091                    
    3092 0000fe20           check_for_player
    3093 0000fe20     098f          mmtm    sp,a0,a1
         0000fe30     c000  
    3094 0000fe40     05a1          move    @PLAYER_BITS,a1,W
         0000fe50 00000000! 
    3095 0000fe70     2480          sll     4,a0
    3096 0000fe80     0b20          addi    sp2_tof-16,a0
         0000fe90 0000ff50' 
    3097 0000feb0     8400          move    *a0,a0,W
    3098 0000fec0     4a01          btst    a0,a1
    3099 0000fed0     ca04          jrz     cfp_0
    3100 0000fee0     09af          mmfm    sp,a0,a1
         0000fef0     0003  
    3101 0000ff00     0de0          setc
TMS340 COFF Macro Assembler Version 6.10     Wed Apr 21 11:31:43 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   73

    3102 0000ff10     0960          rets
    3103 0000ff20     09af  cfp_0   mmfm    sp,a0,a1
         0000ff30     0003  
    3104 0000ff40     0320          clrc
    3105 0000ff50     0960          rets
    3106                    
    3107 0000ff60     0000  sp2_tof .word   0,1,1,1,2,3,3,3
    3108                    
    3109 0000ffe0           big_fire_inc
    3110 0000ffe0     0d3f          callr   small_fire_inc
         0000fff0     0000  
    3111 00010000           small_fire_inc
    3112 00010000     05ae          move    @side_brightness,a14,W
         00010010 000005b0- 
    3113 00010030     102e          inc     a14
    3114 00010040     0b4e          cmpi    3,a14
         00010050     fffc  
    3115 00010060     c303          jrhi    bfi_gt
    3116 00010070     058e          move    a14,@side_brightness,W
         00010080 000005b0- 
    3117 000100a0           bfi_gt  C_A_K   PID_SIDE_BRIGHT,sb_1
    3118 00010120     0960          rets
    3119                    
    3120 00010130     0d5f  sb_1    calla   fix_palette_lights
         00010140 00010600' 
    3121 00010160                   SLEEP   2
    3122 000101a0     05ae          move    @side_brightness,a14,W
         000101b0 000005b0- 
    3123 000101d0     142e          dec     a14
    3124 000101e0     ce04          jrn     sb_9
    3125 000101f0     058e          move    a14,@side_brightness,W
         00010200 000005b0- 
    3126 00010220     c0f0          jruc    sb_1
    3127 00010230     0d5f  sb_9    calla   fix_palette_lights
         00010240 00010600' 
    3128 00010260     c080          jauc    SUCIDE
         00010270 00000000! 
    3129                    
    3130 00010290           create_rink
    3131 00010290     5600          clr     a0
    3132 000102a0     0580          move    a0,@world_mt_point,W
         000102b0 000001f0- 
    3133 000102d0     0780          move    a0,@WORLDX,L
         000102e0 00000000! 
    3134 00010300     09e0          movi    T2BP,a0
         00010310 00000000! 
    3135 00010330     05ae          move    @DARK_RINK,a14,W
         00010340 00000000! 
    3136 00010360     cb0c          jrnz    crrr1
    3137 00010370     09e0          movi    npal_0,a0       ;34
         00010380 00000000! 
    3138 000103a0     05ae          move    @period,a14,W
         000103b0 000000e0- 
    3139 000103d0     0b4e          cmpi    4,a14
         000103e0     fffb  
TMS340 COFF Macro Assembler Version 6.10     Wed Apr 21 11:31:43 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   74

    3140 000103f0     cb03          jrnz    crrr1
    3141 00010400     09e0          movi    npal_109,a0
         00010410 00000000! 
    3142 00010430     0d5f  crrr1   calla   GETFPAL
         00010440 00000000! 
    3143 00010460     0580          move    a0,@rinkpal,W
         00010470 00000000! 
    3144 00010490     1820          movk    1,a0
    3145 000104a0     0580          move    a0,@rink_on,W
         000104b0 00000000! 
    3146 000104d0     09e0          movi    rpallist,a0
         000104e0 00000000! 
    3147 00010500     0780          move    a0,@rinkpallist,L
         00010510 00000000! 
    3148 00010530     0d5f          calla   init_timer_dma
         00010540 00000000! 
    3149 00010560     0d5f          calla   create_goals
         00010570 00010c50' 
    3150 00010590     0d3f          callr   create_edge
         000105a0     00c5  
    3151 000105b0     c004          jruc    fix_palette_lights
    3152 000105c0           fix_palette_lights_off
    3153 000105c0     098f          mmtm    sp,a0,a1,a8
         000105d0     c080  
    3154 000105e0     5600          clr     a0
    3155 000105f0     c021          jruc    fpl8
    3156 00010600           fix_palette_lights
    3157 00010600     098f          mmtm    sp,a0,a1,a8
         00010610     c080  
    3158 00010620     05ae          move    @period,a14,W
         00010630 000000e0- 
    3159 00010650     0b4e          cmpi    4,a14
         00010660     fffb  
    3160 00010670     cb0a          jrnz    fpl_rg
    3161 00010680     1ac0          movk    ADJPAYOT,a0
    3162 00010690     0d5f          calla   GET_ADJ
         000106a0 00000000! 
    3163 000106c0     cb05          jrnz    fpl_rg                  ;not sudden death
    3164 000106d0     1860          movk    3,a0
    3165 000106e0     05ae          move    @scored_by,a14,W
         000106f0 00000000! 
    3166 00010710     cb0f          jrnz    fpl8                    ;on sudden death goal, both lights
    3167 00010720     5600  fpl_rg  clr     a0
    3168 00010730     05ae          move    @scored_by,a14,W
         00010740 00000000! 
    3169 00010760     ca01          jrz     fpl1
    3170 00010770     1820          movk    1,a0
    3171 00010780     07ae  fpl1    move    @minutes,a14,L          ;minutes and tenseconds
         00010790 00000000! 
    3172 000107b0     cb05          jrnz    fpl8
    3173 000107c0     07ae          move    @seconds,a14,L          ;seconds and tenths
         000107d0 00000000! 
    3174 000107f0     cb01          jrnz    fpl8
    3175 00010800     1040          addk    2,a0
    3176 00010810     24a0  fpl8    sll     5,a0
TMS340 COFF Macro Assembler Version 6.10     Wed Apr 21 11:31:43 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   75

    3177                    
    3178 00010820     05ae          move    @side_brightness,a14,W
         00010830 000005b0- 
    3179 00010850     24ae          sll     5,a14
    3180 00010860     0b2e          addi    allcrplst,a14
         00010870 000109d0' 
    3181 00010890     87ce          move    *a14,a14,L
    3182 000108a0     41c0          add     a14,a0
    3183                    ;       addi    crplst,a0
    3184                    
    3185 000108b0     8600          move    *a0,a0,L
    3186 000108c0     4c01          move    a0,a1
    3187 000108d0     07a8          move    @ledge_object,a8,L
         000108e0 00000170- 
    3188 00010900     0d5f          calla   CHANGE_PAL
         00010910 00000000! 
    3189 00010930     4c20          move    a1,a0
    3190 00010940     07a8          move    @redge_object,a8,L
         00010950 00000190- 
    3191 00010970     0d5f          calla   CHANGE_PAL
         00010980 00000000! 
    3192 000109a0     09af          mmfm    sp,a0,a1,a8
         000109b0     0103  
    3193 000109c0     0960          rets
    3194                    
    3195 000109d0           allcrplst
    3196 000109d0 00010a50'         .long   crplst
    3197 000109f0 00010ad0'         .long   cpalst
    3198 00010a10 00010b50'         .long   cpblst
    3199 00010a30 00010bd0'         .long   cpclst
    3200                    
    3201 00010a50 00000000! crplst  .long   ALLBORD5
    3202 00010a70 00026650'         .long   ALLBORD2
    3203 00010a90 00028630'         .long   ALLBORD4
    3204 00010ab0 00027640'         .long   ALLBORD3
    3205                    
    3206 00010ad0           cpalst
    3207 00010ad0 0001d6e0'         .long   BFLASHa5
    3208 00010af0 0001a710'         .long   BFLASHa2
    3209 00010b10 0001c6f0'         .long   BFLASHa4
    3210 00010b30 0001b700'         .long   BFLASHa3
    3211 00010b50           cpblst
    3212 00010b50 000216a0'         .long   BFLASHb5
    3213 00010b70 0001e6d0'         .long   BFLASHb2
    3214 00010b90 000206b0'         .long   BFLASHb4
    3215 00010bb0 0001f6c0'         .long   BFLASHb3
    3216 00010bd0           cpclst
    3217 00010bd0 00025660'         .long   BFLASHc5
    3218 00010bf0 00022690'         .long   BFLASHc2
    3219 00010c10 00024670'         .long   BFLASHc4
    3220 00010c30 00023680'         .long   BFLASHc3
    3221                    
    3222 00010c50           create_goals
    3223 00010c50     09f0          movi    lgoalF_init,b0                  ;MAKE FRONT PART OF LEFT GOAL
         00010c60 00010f00' 
TMS340 COFF Macro Assembler Version 6.10     Wed Apr 21 11:31:43 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   76

    3224 00010c80     0d5f          calla   EASYMAKE
         00010c90 00000000! 
    3225 00010cb0     0788          move    a8,@lgoalF_object,L
         00010cc0 000000f0- 
    3226 00010ce0     4d02          MOVE    A8,A2
    3227 00010cf0     09f0          movi    lgoalR_init,b0                  ;MAKE REAR PART OF LEFT GOAL
         00010d00 00010fc0' 
    3228 00010d20     0d5f          calla   EASYMAKE
         00010d30 00000000! 
    3229 00010d50     0788          move    a8,@lgoalR_object,L
         00010d60 00000110- 
    3230 00010d80     b248          MOVE    A2,*A8(OFRONT_OBJ),L
         00010d90     04b0  
    3231                    ;       MOVI    [4,10],A14
    3232                    ;       MOVE    A14,*A8(OFRONT_OFFSET),L
    3233 00010da0     09f0          movi    rgoalF_init,b0                  ;MAKE FRONT PART OF RIGHT GOAL
         00010db0 00011080' 
    3234 00010dd0     0d5f          calla   EASYMAKE
         00010de0 00000000! 
    3235 00010e00     0788          move    a8,@rgoalF_object,L
         00010e10 00000130- 
    3236 00010e30     4d02          MOVE    A8,A2
    3237 00010e40     09f0          movi    rgoalR_init,b0                  ;MAKE REAR PART OF RIGHT GOAL
         00010e50 00011140' 
    3238 00010e70     0d5f          calla   EASYMAKE
         00010e80 00000000! 
    3239 00010ea0     0788          move    a8,@rgoalR_object,L
         00010eb0 00000150- 
    3240 00010ed0     b248          MOVE    A2,*A8(OFRONT_OBJ),L
         00010ee0     04b0  
    3241                    ;       MOVI    [4,-10],A14
    3242                    ;       MOVE    A14,*A8(OFRONT_OFFSET),L
    3243 00010ef0     0960          rets
    3244                    
    3245 00010f00           lgoalF_init
    3246 00010f00 00000480"         .long   goal5a
    3247                    ;       .word   DMAWNZ,M_NOSCALE|M_NOVEL
    3248 00010f20     8002          .word   DMAWNZ,M_NOSCALE
    3249 00010f40     0910          .word   OM_OID|OM_POS|OM_INSERT
    3250 00010f50     0203          .word   OID_GOAL
    3251 00010f60 fd530000          .long   -02AD0000H,0,01220000H
    3252                    
    3253 00010fc0           lgoalR_init
    3254 00010fc0 00000510"         .long   goal5b
    3255 00010fe0     8002          .word   DMAWNZ,M_SCRNOBJ|M_NOSCALE|M_NOVEL
    3256 00011000     0910          .word   OM_OID|OM_POS|OM_INSERT
    3257 00011010     3209          .word   OID_RGOAL
    3258 00011020 00000000          .long   [0,0],[0,0],01800000H
    3259                    
    3260 00011080           rgoalF_init
    3261 00011080 00000480"         .long   goal5a
    3262                    ;       .word   DMAWNZ|DMAHFL,M_NOSCALE|M_NOVEL
    3263 000110a0     8012          .word   DMAWNZ|DMAHFL,M_NOSCALE
    3264 000110c0     0910          .word   OM_OID|OM_POS|OM_INSERT
    3265 000110d0     0203          .word   OID_GOAL
TMS340 COFF Macro Assembler Version 6.10     Wed Apr 21 11:31:43 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   77

    3266 000110e0 02ad0000          .long   02AD0000H,0,01220000H
    3267                    
    3268 00011140           rgoalR_init
    3269 00011140 00000510"         .long   goal5b
    3270 00011160     8012          .word   DMAWNZ|DMAHFL,M_SCRNOBJ|M_NOSCALE|M_NOVEL
    3271 00011180     0910          .word   OM_OID|OM_POS|OM_INSERT
    3272 00011190     3209          .word   OID_RGOAL
    3273 000111a0 00000000          .long   [0,0],[0,0],01800000H
    3274                    
    3275 00011200           create_edge
    3276 00011200     09f0          movi    ledge_init,b0
         00011210 00012160' 
    3277 00011230     0d5f          calla   EASYMAKE
         00011240 00000000! 
    3278 00011260     0788          move    a8,@ledge_object,L
         00011270 00000170- 
    3279 00011290     09f0          movi    ledge2_init,b0
         000112a0 000122e0' 
    3280 000112c0     0d5f          calla   EASYMAKE
         000112d0 00000000! 
    3281 000112f0     0788          move    a8,@ledge2_object,L
         00011300 000001b0- 
    3282 00011320     0d5f          calla   init_board_script
         00011330 00000000! 
    3283 00011350     09f0          movi    redge_init,b0
         00011360 00012220' 
    3284 00011380     0d5f          calla   EASYMAKE
         00011390 00000000! 
    3285 000113b0     0788          move    a8,@redge_object,L
         000113c0 00000190- 
    3286 000113e0     09f0          movi    redge2_init,b0
         000113f0 000123a0' 
    3287 00011410     0d5f          calla   EASYMAKE
         00011420 00000000! 
    3288 00011440     0788          move    a8,@redge2_object,L
         00011450 000001d0- 
    3289 00011470     0d5f          calla   init_board_script
         00011480 00000000! 
    3290 000114a0     09ee          movi    DSIDEB28,a14
         000114b0 00000000! 
    3291 000114d0     078e          move    a14,@edge_28_piece,L
         000114e0 000004e0- 
    3292 00011500     5642          clr     a2
    3293 00011510     0782          move    a2,@back_wall_script,L
         00011520 00000500- 
    3294 00011540     0782          move    a2,@edge_28_script,L
         00011550 00000520- 
    3295 00011570     1a23          movk    17,a3
    3296 00011580     09e9  cbk1    movi    board_init_list,a9
         00011590 000117b0' 
    3297 000115b0     9720  cbw     move    *a9+,a0,L
    3298 000115c0     cafb          jrz     cbk1
    3299 000115d0     4e00          move    a0,b0
    3300 000115e0     0d5f          calla   EASYMAKE
         000115f0 00000000! 
TMS340 COFF Macro Assembler Version 6.10     Wed Apr 21 11:31:43 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   78

    3301 00011610     9720          move    *a9+,a0,L
    3302 00011620     ca05          jrz     cbwnp
    3303 00011630     8600          move    *a0,a0,L
    3304 00011640     ca03          jrz     cbwnp
    3305 00011650     0d5f          calla   CHANGE_PAL
         00011660 00000000! 
    3306 00011680     09c0  cbwnp   movi    OID_BACKWALL,a0
         00011690     1a04  
    3307 000116a0     b008          move    a0,*a8(OID),W
         000116b0     0430  
    3308 000116c0     09c0          movi    -5,a0
         000116d0     fffb  
    3309 000116e0     b008          move    a0,*a8(OYPOS),W
         000116f0     0170  
    3310 00011700     09c0          movi    680+2350,a0,W
         00011710     0bd6  
    3311 00011720     b008          move    a0,*a8(OZPOS),W
         00011730     0190  
    3312 00011740     b048          move    a2,*a8(OXPOS),W
         00011750     0150  
    3313 00011760     0d5f          calla   INSERT_SCREEN_OBJ_noani
         00011770 00000000! 
    3314 00011790     3fe3          dsjs    a3,cbw
    3315 000117a0     0960          rets
    3316                    
    3317 000117b0           board_init_list
    3318 000117b0 00012110'         .long   b17init,0
    3319 000117f0 000120c0'         .long   b16init,0
    3320 00011830 00012070'         .long   b15init,0
    3321 00011870 00012020'         .long   b14init,0
    3322 000118b0 00011fd0'         .long   b13init,0
    3323 000118f0 00011f80'         .long   b12init,0
    3324 00011930 00011f30'         .long   b11init,teampal2
    3325 00011970 00011ee0'         .long   b10init,teampal2
    3326 000119b0 00011e90'         .long   b9init,teampal2
    3327 000119f0 00011e40'         .long   b8init,teampal1
    3328 00011a30 00011df0'         .long   b7init,teampal1
    3329 00011a70 00011da0'         .long   b6init,teampal1
    3330 00011ab0 00011d50'         .long   b5init,0
    3331 00011af0 00011d00'         .long   b4init,0
    3332 00011b30 00011cb0'         .long   b3init,0
    3333 00011b70 00011c60'         .long   b2init,0
    3334 00011bb0 00011c10'         .long   b1init,0
    3335 00011bf0 00000000          .long   0
    3336                    
    3337 00011c10 00000000! b1init  .long   CSECS01
    3338 00011c30     8002          .word   DMAWNZ,M_NOSCALE|M_NOVEL|M_SCRNOBJ,0
    3339 00011c60 00000000! b2init  .long   CSECS02
    3340 00011c80     8002          .word   DMAWNZ,M_NOSCALE|M_NOVEL|M_SCRNOBJ,0
    3341 00011cb0 00000000! b3init  .long   CSECS03
    3342 00011cd0     8002          .word   DMAWNZ,M_NOSCALE|M_NOVEL|M_SCRNOBJ,0
    3343 00011d00 00000000! b4init  .long   CSECS04
    3344 00011d20     8002          .word   DMAWNZ,M_NOSCALE|M_NOVEL|M_SCRNOBJ,0
    3345 00011d50 00000000! b5init  .long   CSECS05
    3346 00011d70     8002          .word   DMAWNZ,M_NOSCALE|M_NOVEL|M_SCRNOBJ,0
TMS340 COFF Macro Assembler Version 6.10     Wed Apr 21 11:31:43 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   79

    3347 00011da0 00000000! b6init  .long   CSECS06c
    3348 00011dc0     8002          .word   DMAWNZ,M_NOSCALE|M_NOVEL|M_SCRNOBJ,0
    3349 00011df0 00000000! b7init  .long   CSECS07c
    3350 00011e10     8002          .word   DMAWNZ,M_NOSCALE|M_NOVEL|M_SCRNOBJ,0
    3351 00011e40 00000000! b8init  .long   CSECS08c
    3352 00011e60     8002          .word   DMAWNZ,M_NOSCALE|M_NOVEL|M_SCRNOBJ,0
    3353 00011e90 00000000! b9init  .long   CSECS09c
    3354 00011eb0     8002          .word   DMAWNZ,M_NOSCALE|M_NOVEL|M_SCRNOBJ,0
    3355 00011ee0 00000000! b10init .long   CSECS010c
    3356 00011f00     8002          .word   DMAWNZ,M_NOSCALE|M_NOVEL|M_SCRNOBJ,0
    3357 00011f30 00000000! b11init .long   CSECS011c
    3358 00011f50     8002          .word   DMAWNZ,M_NOSCALE|M_NOVEL|M_SCRNOBJ,0
    3359 00011f80 00000000! b12init .long   CSECS12
    3360 00011fa0     8002          .word   DMAWNZ,M_NOSCALE|M_NOVEL|M_SCRNOBJ,0
    3361 00011fd0 00000000! b13init .long   CSECS13
    3362 00011ff0     8002          .word   DMAWNZ,M_NOSCALE|M_NOVEL|M_SCRNOBJ,0
    3363 00012020 00000000! b14init .long   CSECS14
    3364 00012040     8002          .word   DMAWNZ,M_NOSCALE|M_NOVEL|M_SCRNOBJ,0
    3365 00012070 00000000! b15init .long   CSECS15
    3366 00012090     8002          .word   DMAWNZ,M_NOSCALE|M_NOVEL|M_SCRNOBJ,0
    3367 000120c0 00000000! b16init .long   CSECS16
    3368 000120e0     8002          .word   DMAWNZ,M_NOSCALE|M_NOVEL|M_SCRNOBJ,0
    3369 00012110 00000000! b17init .long   CSECS17
    3370 00012130     8002          .word   DMAWNZ,M_NOSCALE|M_NOVEL|M_SCRNOBJ,0
    3371                    
    3372                    ;-was here
    3373                    
    3374 00012160           ledge_init
    3375 00012160 00000000!         .long   DSIDEB28
    3376 00012180     8002          .word   DMAWNZ,M_NOSCALE
    3377 000121a0     0910          .word   OM_OID|OM_POS|OM_INSERT|M_NOVEL
    3378 000121b0     0205          .word   OID_EDGE
    3379 000121c0 fd540000          .long   [-798+radius-6,0],[0,0],[2350+679,0]
    3380                    
    3381 00012220           redge_init
    3382 00012220 00000000!         .long   DSIDEB28
    3383 00012240     8012          .word   DMAWNZ|DMAHFL,M_NOSCALE|M_NOVEL
    3384 00012260     0910          .word   OM_OID|OM_POS|OM_INSERT
    3385 00012270     0205          .word   OID_EDGE
    3386 00012280 02ac0000          .long   [798-radius+6,0],[0,0],[2350+679,0]
    3387                    
    3388 000122e0           ledge2_init
    3389 000122e0 00000000!         .long   PLEXIB01
    3390 00012300     8002          .word   DMAWNZ,M_NOSCALE|M_NOVEL
    3391 00012320     0910          .word   OM_OID|OM_POS|OM_INSERT
    3392 00012330     0205          .word   OID_EDGE
    3393 00012340 fd5a0000          .long   [-798+radius,0],[0,0],[0,0]
    3394                    
    3395 000123a0           redge2_init
    3396 000123a0 00000000!         .long   PLEXIB01
    3397 000123c0     8012          .word   DMAWNZ|DMAHFL,M_NOSCALE|M_NOVEL
    3398 000123e0     0910          .word   OM_OID|OM_POS|OM_INSERT
    3399 000123f0     0205          .word   OID_EDGE
    3400 00012400 02a60000          .long   [798-radius,0],[0,0],[0,0]
    3401                    
TMS340 COFF Macro Assembler Version 6.10     Wed Apr 21 11:31:43 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   80

    3402 00012460           set_world_point
    3403 00012460     05a0          move    @PUCK_MODE,a0,W
         00012470 00000000! 
    3404 00012490     0b40          cmpi    PUM_FACE,a0                     ;face off?
         000124a0     fffe  
    3405 000124b0     cb03          jrnz    rwps_u
    3406 000124c0     5621          clr     a1
    3407 000124d0     c000          jruc    rwfx                    ;freeze world during face off
         000124e0     00bd  
    3408 000124f0     05a0  rwps_u  move    @PUCK_CONTROL,a0,W
         00012500 00000000! 
    3409 00012520     cb38          jrnz    rwpsp
    3410 00012530     05ae          move    @PUCK_MODE,a14,W
         00012540 00000000! 
    3411 00012560     0b4e          cmpi    PUM_PASS,a14
         00012570     fff5  
    3412 00012580     ca03          jrz     rpuh1
    3413 00012590     0b4e          cmpi    PUM_TPASS,a14
         000125a0     fff4  
    3414 000125b0     cb25          jrnz    rwpsk
    3415 000125c0     05a0  rpuh1   move    @PUCK_INTENDED,a0,W
         000125d0 00000000! 
    3416 000125f0     ca21          jrz     rwpsk
    3417                    ;
    3418 00012600                   GBLOCK  a0,a6
    3419 00012650     b6c8          move    *a6(POF_OBJECT),a8,L
         00012660     0280  
    3420 00012670     b501          move    *a8(OXPOS),a1,W
         00012680     0150  
    3421 00012690     07a3          move    @PUCK_OBJECT,a3,L
         000126a0 00000000! 
    3422 000126c0     b462          move    *a3(OXPOS),a2,W
         000126d0     0150  
    3423 000126e0     4c4e          move    a2,a14
    3424 000126f0     442e          sub     a1,a14
    3425 00012700     038e          abs     a14
    3426 00012710     0b4e          cmpi    50,a14
         00012720     ffcd  
    3427 00012730     c30d          jrhi    rwpsk
    3428 00012740     b662          move    *a3(ODT_XDEST),a2,L
         00012750     0550  
    3429 00012760     0b22          addi    08000h,a2
         00012770 00008000  
    3430 00012790     2a02          sra     16,a2
    3431 000127a0     4422          sub     a1,a2           ;puck x - player x
    3432 000127b0     b66e          move    *a3(OXVEL),a14,L
         000127c0     0100  
    3433 000127d0     ce01          jrn     sgrt1
    3434 000127e0     03a2          neg     a2
    3435 000127f0     4c42  sgrt1   move    a2,a2
    3436 00012800     ce0a          jrn     rwpsp
    3437                    ;
    3438 00012810     07a8  rwpsk   move    @PUCK_OBJECT,a8,L
         00012820 00000000! 
    3439 00012840     05a0          move    @puck_op,a0,W
TMS340 COFF Macro Assembler Version 6.10     Wed Apr 21 11:31:43 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   81

         00012850 00000330- 
    3440 00012870     ca32          jrz     rwps6
    3441 00012880     c013  awm5    jruc    rwm5
    3442 00012890     5600  rwpsk1  clr     a0              ;a0 = 0; no team
    3443 000128a0     c02f          jruc    rwps6
    3444 000128b0     0b40  rwpsp   cmpi    4,a0
         000128c0     fffb  
    3445 000128d0     caf3          jrz     rwpsk
    3446 000128e0     0b40          cmpi    8,a0
         000128f0     fff7  
    3447 00012900     caf8          jrz     rwpsk1
    3448 00012910                   GBLOCK  a0,a6
    3449 00012960     b6c8          move    *a6(POF_OBJECT),a8,L
         00012970     0280  
    3450 00012980     1420          dec     a0
    3451 00012990     2fc0          srl     2,a0
    3452 000129a0     2420          sll     1,a0
    3453 000129b0     1420          dec     a0              ;a0 = -1,1 - team
    3454 000129c0     0580  rwm5    move    a0,@puck_op,W
         000129d0 00000330- 
    3455 000129f0     b50e          move    *a8(OZPOS),a14,W
         00012a00     0190  
    3456 00012a10     2fce          srl     2,a14           ;new osctab
    3457 00012a20     24ae          sll     5,a14
    3458                    
    3459                    
    3460                    ;here we check to see where other humans are
    3461                    ; no humans behind us - use zscale_100_100_table
    3462                    ; humans behind us
    3463                    ;  we are drone - use zscale_200_200_table
    3464                    ;  we are human - use zscale_160_130_table
    3465 00012a30     09e1          movi    zscale_100_100_table,a1         ;a1 is our scale table to add to
         00012a40 00000000! 
    3466 00012a60     0d3f          callr   is_human_behind_puck            ;returns a6 as puck player (if one, cc if none)
         00012a70     00c3  
    3467 00012a80     c90a          jrnc    aaa_a1
    3468 00012a90     09e1          movi    zscale_200_200_table,a1         ;200_200
         00012aa0 00000000! 
    3469 00012ac0     b4c2          move    *a6(POF_FLAGS),a2,W
         00012ad0     0200  
    3470 00012ae0     1fe2          btst    B_PF_HUMAN,a2
    3471 00012af0     ca03          jrz     aaa_a1
    3472 00012b00     09e1          movi    zscale_160_130_table,a1
         00012b10 00000000! 
    3473                    
    3474 00012b30     402e  aaa_a1  add     a1,a14
    3475                    ;       addi    zscale_160_130_table,a14
    3476                    
    3477 00012b40     85ce          move    *a14,a14,W
    3478 00012b50     25ee          sll     15,a14
    3479                    
    3480                    ;USE THIS TO REVERSE SCROLL!
    3481                    ;       .if     DEBUG
    3482                    ;       neg     a14
    3483                    ;       .endif
TMS340 COFF Macro Assembler Version 6.10     Wed Apr 21 11:31:43 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   82

    3484                    
    3485 00012b60     4c00          move    a0,a0
    3486 00012b70     ce01          jrn     rwps7
    3487 00012b80     03ae          neg     a14
    3488 00012b90     4dc0  rwps7   move    a14,a0          ;a0 = desired world point offset
    3489 00012ba0     05ae  rwps6   move    @PUCK_MODE,a14,W
         00012bb0 00000000! 
    3490 00012bd0     0b4e          cmpi    PUM_FACEOFF,a14
         00012be0     ff9b  
    3491 00012bf0     ca00          jrz     go_quick
         00012c00     0090  
    3492 00012c10     b50e          move    *a8(OFLAGS),a14,W
         00012c20     0420  
    3493 00012c30     1f0e          btst    B_OFSCRN,a14
    3494 00012c40     cb75          jrnz    go_quick_onscreen
    3495 00012c50     b703  gqabort move    *a8(OXVEL),a3,L ;a3 = desired end velocity
         00012c60     0100  
    3496 00012c70     07a1          move    @WORLDX,a1,L
         00012c80 00000000! 
    3497 00012ca0     4c25          move    a1,a5           ;save our worldx for later
    3498 00012cb0     b702          move    *a8(OXVAL),a2,L
         00012cc0     0140  
    3499 00012cd0     07ae          move    @last_wp_oxval,a14,L
         00012ce0 00000200- 
    3500 00012d00     0782          move    a2,@last_wp_oxval,L
         00012d10 00000200- 
    3501 00012d30     444e          sub     a2,a14
    3502 00012d40     03ae          neg     a14
    3503 00012d50     4fc0          move    a14,b0          ;check our vel with delta
    3504 00012d60     4e61          move    a3,b1
    3505 00012d70     0390          abs     b0
    3506 00012d80     0391          abs     b1
    3507 00012d90     4811          cmp     b0,b1
    3508 00012da0     c201          jrls    grgo1
    3509 00012db0     4dc3          move    a14,a3          ;use our delta instead of our vel (we bumped into somebody)
    3510 00012dc0     4441  grgo1   sub     a2,a1           ;a1 = current world offset point
    3511 00012dd0     4820          cmp     a1,a0
    3512 00012de0     c415          jrlt    glft            ;br = going to left
    3513 00012df0     4c64  grght   move    a3,a4
    3514 00012e00     c102          jrp     grh1
    3515 00012e10     5684          clr     a4
    3516 00012e20     c001          jruc    grh11
    3517 00012e30     0300  grh1    nop
    3518 00012e40     2444  grh11   sll     2,a4
    3519 00012e50     0b65          cmpi    [575,0],a5
         00012e60 fdc0ffff  
    3520 00012e80     c403          jrlt    grh12
    3521 00012e90     0b24          addi    [100,0],a4      ;if we are all the way to right, then let our world point offset freely 
         00012ea0 00640000  
    3522 00012ec0     0b24  grh12   addi    [12,0],a4
         00012ed0 000c0000  
    3523 00012ef0     4081          add     a4,a1
    3524 00012f00     4801          cmp     a0,a1
    3525 00012f10     c601          jrle    grh2            ;br = we haven't passed our world point offset destination yet
    3526 00012f20     4c01          move    a0,a1
TMS340 COFF Macro Assembler Version 6.10     Wed Apr 21 11:31:43 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   83

    3527 00012f30     c014  grh2    jruc    glp             ;a1 = resulting world point offset
    3528 00012f40     4c64  glft    move    a3,a4
    3529 00012f50     ce02          jrn     glf1
    3530 00012f60     5684          clr     a4
    3531 00012f70     c001          jruc    glf11
    3532 00012f80     0300  glf1    nop
    3533 00012f90     2444  glf11   sll     2,a4
    3534 00012fa0     0b65          cmpi    [-575,0],a5
         00012fb0 023effff  
    3535 00012fd0     c703          jrgt    glf12
    3536 00012fe0     0d04          subi    [100,0],a4      ;if we all the way to left, then let our world point offset freely move 
         00012ff0 ff9bffff  
    3537 00013010     0d04  glf12   subi    [12,0],a4
         00013020 fff3ffff  
    3538 00013040     4081          add     a4,a1
    3539 00013050     4801          cmp     a0,a1
    3540 00013060     c501          jrge    glp             ;br = we haven't passed our world point offset destination yet
    3541 00013070     4c01          move    a0,a1
    3542 00013080     4041  glp     add     a2,a1           ;add x value to world point offset = scroll to here
    3543 00013090     44a1          sub     a5,a1           ;a1 = distance we are from world point
    3544 000130a0     2ba1          sra     3,a1
    3545 000130b0     4061          add     a3,a1           ;a1 = our new scroll x unless we are too far
    3546 000130c0     07a0  rwfx    move    @WORLDX,a0,L
         000130d0 00000000! 
    3547 000130f0     4020          add     a1,a0
    3548 00013100     0b60          cmpi    [585,0],a0
         00013110 fdb6ffff  
    3549 00013130     c604          jrle    rwx2
    3550 00013140     09e0          movi    [585,0],a0
         00013150 02490000  
    3551 00013170     c007          jruc    rwx4
    3552 00013180     0b60  rwx2    cmpi    [-585,0],a0
         00013190 0248ffff  
    3553 000131b0     c507          jrge    rwx1
    3554 000131c0     09e0          movi    [-585,0],a0
         000131d0 fdb70000  
    3555 000131f0     0780  rwx4    move    a0,@WORLDX,L
         00013200 00000000! 
    3556 00013220     5621          clr     a1
    3557 00013230     07a0  rwx1    move    @WORLDX,a0,L
         00013240 00000000! 
    3558 00013260     0d00          subi    [585,0],a0
         00013270 fdb6ffff  
    3559 00013290     03a0          neg     a0
    3560 000132a0     2ba0          sra     3,a0
    3561 000132b0     4c21          move    a1,a1
    3562 000132c0     ca09          jrz     ppxx2
    3563 000132d0     c104          jrp     ppxx1
    3564 000132e0     4801          cmp     a0,a1
    3565 000132f0     c606          jrle    ppxx2
    3566 00013300     4c01          move    a0,a1
    3567 00013310     c004          jruc    ppxx2
    3568 00013320     03a0  ppxx1   neg     a0
    3569 00013330     4801          cmp     a0,a1
    3570 00013340     c501          jrge    ppxx2
TMS340 COFF Macro Assembler Version 6.10     Wed Apr 21 11:31:43 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   84

    3571 00013350     4c01          move    a0,a1
    3572 00013360     0781  ppxx2   move    a1,@SCROLLX,L
         00013370 00000000! 
    3573 00013390     0960          rets
    3574 000133a0           go_quick_onscreen
    3575 000133a0     b501          move    *a8(ODAGX),a1,W
         000133b0     0220  
    3576 000133c0     0b41          cmpi    -40,a1
         000133d0     0027  
    3577 000133e0     c403          jrlt    gwoos
    3578 000133f0     0b41          cmpi    440,a1
         00013400     fe47  
    3579 00013410     c483          jrlt    gqabort
    3580 00013420     07a0  gwoos   move    @WORLDX,a0,L
         00013430 00000000! 
    3581 00013450     b701          move    *a8(OXVAL),a1,L
         00013460     0140  
    3582 00013470     4401          sub     a0,a1
    3583                    
    3584 00013480     ce04          jrn     gqo1
    3585 00013490     0b21          addi    [200,0],a1
         000134a0 00c80000  
    3586 000134c0     c003          jruc    gqo2
    3587 000134d0     0d01  gqo1    subi    [200,0],a1
         000134e0 ff37ffff  
    3588 00013500     c006  gqo2    jruc    gqr4
    3589 00013510           go_quick
    3590 00013510     07a0          move    @WORLDX,a0,L
         00013520 00000000! 
    3591 00013540     b701          move    *a8(OXVAL),a1,L
         00013550     0140  
    3592 00013560     4401          sub     a0,a1
    3593                    
    3594 00013570     2ba1  gqr4    sra     3,a1
    3595 00013580     0b61          cmpi    [25,0],a1
         00013590 ffe6ffff  
    3596 000135b0     c604          jrle    gqrs
    3597 000135c0     09e1          movi    [25,0],a1
         000135d0 00190000  
    3598 000135f0     c007          jruc    gqr3
    3599 00013600     0b61  gqrs    cmpi    [-25,0],a1
         00013610 0018ffff  
    3600 00013630     c503          jrge    gqr3
    3601 00013640     09e1          movi    [-25,0],a1
         00013650 ffe70000  
    3602 00013670     0781  gqr3    move    a1,@SCROLLX,L
         00013680 00000000! 
    3603 000136a0     0960          rets
    3604                    
    3605 000136b0           is_human_behind_puck            ;don't use a1, a14
    3606 000136b0     05a2          move    @PUCK_CONTROL,a2,W
         000136c0 00000000! 
    3607 000136e0     cb08          jrnz    ckha
    3608 000136f0     05a2          move    @PUCK_LAST_CONTROL,a2,W
         00013700 00000000! 
TMS340 COFF Macro Assembler Version 6.10     Wed Apr 21 11:31:43 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   85

    3609 00013720     cb04          jrnz    ckha
    3610 00013730     05a2          move    @last_control_scroll,a2,W
         00013740 000005a0- 
    3611 00013760     ca30          jrz     ckhynn          ;we skip all if none
    3612 00013770     0582  ckha    move    a2,@last_control_scroll,W
         00013780 000005a0- 
    3613 000137a0                   GBLOCK  a2,a6
    3614 000137f0     b6c7          move    *a6(POF_OBJECT),a7,L
         00013800     0280  
    3615 00013810     b6e7          move    *a7(OXVAL),a7,L
         00013820     0140  
    3616 00013830     0b42          cmpi    4,a2
         00013840     fffb  
    3617 00013850     c201          jrls    ckhz
    3618 00013860     03a7          neg     a7
    3619 00013870     1823  ckhz    movk    1,a3
    3620 00013880     0320          clrc
    3621 00013890     0d3f          callr   ckhp
         000138a0     0005  
    3622 000138b0     0d3f          callr   ckhp
         000138c0     0003  
    3623 000138d0     18a3          movk    5,a3
    3624 000138e0     0d3f          callr   ckhp
         000138f0     0000  
    3625 00013900     c819  ckhp    jrc     ckhy9
    3626 00013910     4862          cmp     a3,a2
    3627 00013920     ca13          jrz     ckhyn
    3628 00013930                   GBLOCK  a3,a4
    3629 00013980     b485          move    *a4(POF_FLAGS),a5,W
         00013990     0200  
    3630 000139a0     1fe5          btst    B_PF_HUMAN,a5
    3631 000139b0     ca0a          jrz     ckhyn
    3632 000139c0     b685          move    *a4(POF_OBJECT),a5,L
         000139d0     0280  
    3633 000139e0     b6a5          move    *a5(OXVAL),a5,L
         000139f0     0140  
    3634 00013a00     0b42          cmpi    4,a2
         00013a10     fffb  
    3635 00013a20     c201          jrls    ckhx
    3636 00013a30     03a5          neg     a5
    3637 00013a40     48e5  ckhx    cmp     a7,a5
    3638 00013a50     c403          jrlt    ckhy
    3639 00013a60     1023  ckhyn   inc     a3
    3640 00013a70     0320  ckhynn  clrc
    3641 00013a80     0960          rets
    3642 00013a90     0de0  ckhy    setc
    3643 00013aa0     0960  ckhy9   rets
    3644                    
    3645 00013ab0           update_shifted_images
    3646 00013ab0     05a0          MOVE    @WORLDX+010H,A0,W
         00013ac0 00000010! 
    3647 00013ae0     4c0e          MOVE    A0,A14
    3648 00013af0     0380          ABS     A0
    3649 00013b00     0b40          CMPI    0178H,A0
         00013b10     fe87  
TMS340 COFF Macro Assembler Version 6.10     Wed Apr 21 11:31:43 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   86

    3650 00013b20     c452          JRLT    ggol2                           ;BR=DON'T UPDATE
    3651 00013b30     4dce          MOVE    A14,A14
    3652 00013b40     cf22          JRNN    USI_RIGHT                       ;UPDATE RIGHT SIDE
    3653                    
    3654 00013b50     09ea          movi    goal_x_table,a10
         00013b60 000141f0' 
    3655 00013b80     0d3f          CALLR   IMGS_FROM_X
         00013b90     004c  
    3656 00013ba0     05ae          move    @hold_net_anim,a14,W
         00013bb0 00000340- 
    3657 00013bd0     cb05          jrnz    usi1p
    3658 00013be0     07a8          move    @lgoalF_object,a8,L             ;CHANGE LEFT GOAL FRONT
         00013bf0 000000f0- 
    3659 00013c10     0d3f          callr   ggol
         00013c20     0036  
    3660 00013c30     4ca1  usi1p   MOVE    A5,A1                           ;CHANGE TO REAR
    3661 00013c40     07a8          move    @lgoalR_object,a8,L             ;CHANGE LEFT GOAL REAR
         00013c50 00000110- 
    3662                    ;       MOVE    A2,*A8(OFRONT_OFFSET),L
    3663 00013c70     0d3f          callr   ggol
         00013c80     0030  
    3664                    
    3665 00013c90     09ea          movi    edge_x_table,a10
         00013ca0 000143a0' 
    3666 00013cc0     0d3f          callr   img_from_xx
         00013cd0     0044  
    3667 00013ce0     07a8          move    @ledge_object,a8,L
         00013cf0 00000170- 
    3668 00013d10     0d3f          callr   ggol
         00013d20     0026  
    3669 00013d30     07a8          move    @ledge2_object,a8,L
         00013d40 000001b0- 
    3670 00013d60     c021          jruc    bbordgo
    3671                    
    3672 00013d70           USI_RIGHT
    3673 00013d70     09ea          movi    goal_x_table,a10
         00013d80 000141f0' 
    3674 00013da0     0d3f          CALLR   IMGS_FROM_X
         00013db0     002a  
    3675 00013dc0     05ae          move    @hold_net_anim,a14,W
         00013dd0 00000340- 
    3676 00013df0     cb05          jrnz    usi2p
    3677 00013e00     07a8          move    @rgoalF_object,a8,L             ;CHANGE RIGHT GOAL FRONT
         00013e10 00000130- 
    3678 00013e30     0d3f          callr   ggol
         00013e40     0014  
    3679 00013e50     4ca1  usi2p   MOVE    A5,A1                           ;CHANGE TO REAR
    3680 00013e60     07a8          move    @rgoalR_object,a8,L             ;CHANGE RIGHT GOAL REAR
         00013e70 00000150- 
    3681                    ;       NEGX    A2
    3682                    ;       MOVE    A2,*A8(OFRONT_OFFSET),L
    3683 00013e90     0d3f          callr   ggol
         00013ea0     000e  
    3684                    
    3685 00013eb0     09ea          movi    edge_x_table,a10
TMS340 COFF Macro Assembler Version 6.10     Wed Apr 21 11:31:43 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   87

         00013ec0 000143a0' 
    3686 00013ee0     0d3f          callr   img_from_xx
         00013ef0     0022  
    3687 00013f00     07a8          move    @redge_object,a8,L
         00013f10 00000190- 
    3688 00013f30     0d3f          callr   ggol
         00013f40     0004  
    3689 00013f50     07a8          move    @redge2_object,a8,L
         00013f60 000001d0- 
    3690 00013f80     0960  bbordgo rets
    3691                    
    3692 00013f90     b703  ggol    move    *a8(OIMG),a3,L
         00013fa0     02c0  
    3693 00013fb0     4823          cmp     a1,a3
    3694 00013fc0     ca08          jrz     ggol2
    3695 00013fd0     b504          move    *a8(OCTRL),a4,W
         00013fe0     01f0  
    3696 00013ff0     c080          jauc    maybe_ani
         00014000 00000000! 
    3697 00014020     c080          jauc    ANI
         00014030 00000000! 
    3698 00014050     0960  ggol2   rets
    3699                    
    3700 00014060           IMGS_FROM_X
    3701 00014060     9741  ISFX_1  move    *a10+,a1,L                      ;FRONT IMAGE
    3702 00014070     ca06          jrz     ISFX_9
    3703 00014080     9745          MOVE    *A10+,A5,L                      ;REAR IMAGE
    3704 00014090     9543          move    *a10+,a3,W                      ;WORLD X (UPPER WORD)
    3705                    ;       MOVE    *A10+,A2,L                      ;OFFSET
    3706 000140a0     4860          cmp     a3,a0
    3707 000140b0     c201          jrls    ISFX_2                          ;BR=NOT THERE YET
    3708 000140c0     c0f9          jruc    ISFX_1
    3709 000140d0     0960  ISFX_2  rets
    3710 000140e0           ISFX_9  LOCKUP
    3711 00014110     0960          rets
    3712                    
    3713 00014120           img_from_xx
    3714 00014120     4c0e          move    a0,a14
    3715 00014130     0bee          subi    376,a14
         00014140     fe87  
    3716 00014150     ce08          jrn     ifxx9
    3717 00014160     2fae          srl     3,a14
    3718 00014170     24ae          sll     5,a14
    3719 00014180     414e          add     a10,a14
    3720 00014190     97c1          move    *a14+,a1,L
    3721 000141a0     ca03          jrz     ifxx9
    3722 000141b0     07a1          move    @edge_28_piece,a1,L
         000141c0 000004e0- 
    3723 000141e0     0960  ifxx9   rets
    3724                    
    3725 000141f0           goal_x_table
    3726 000141f0                   LLW     goal5a,goal5b,518
    3727 00014240                   LLW     goal4a,goal4b,534
    3728 00014290                   LLW     goal3a,goal3b,550
    3729 000142e0                   LLW     goal2a,goal2b,566
TMS340 COFF Macro Assembler Version 6.10     Wed Apr 21 11:31:43 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   88

    3730 00014330                   LLW     goal1a,goal1b,999
    3731 00014380 00000000          .long   0
    3732                    
    3733 000143a0           edge_x_table
    3734 000143a0 00000000!         .long   DS01            ;up to 386
    3735 000143c0 00000000!         .long   DS02            ;up to 394
    3736 000143e0 00000000!         .long   DS03            ;up to 387
    3737 00014400 00000000!         .long   DS04            ;up to 395
    3738 00014420 00000000!         .long   DS05            ;up to 402
    3739 00014440 00000000!         .long   DS07            ;up to 410
    3740 00014460 00000000!         .long   DS07            ;up to 418
    3741 00014480 00000000!         .long   DS08            ;up to 426
    3742 000144a0 00000000!         .long   DS10            ;up to 434
    3743 000144c0 00000000!         .long   DS10            ;up to 442
    3744 000144e0 00000000!         .long   DSIDEB14        ;up to 450
    3745 00014500 00000000!         .long   DSIDEB14        ;up to 458
    3746 00014520 00000000!         .long   DSIDEB14        ;up to 466
    3747 00014540 00000000!         .long   DSIDEB14        ;up to 474
    3748 00014560 00000000!         .long   DSIDEB16        ;up to 482
    3749 00014580 00000000!         .long   DSIDEB16        ;up to 490
    3750 000145a0 00000000!         .long   DSIDEB18        ;up to 498
    3751 000145c0 00000000!         .long   DSIDEB18        ;up to 506
    3752 000145e0 00000000!         .long   DSIDEB18        ;up to 514              ;was just 19
    3753 00014600 00000000!         .long   DSIDEB20        ;up to 522
    3754 00014620 00000000!         .long   DSIDEB22        ;up to 530
    3755 00014640 00000000!         .long   DSIDEB22        ;up to 538
    3756 00014660 00000000!         .long   DSIDEB24        ;up to 546
    3757 00014680 00000000!         .long   DSIDEB24        ;up to 554
    3758 000146a0 00000000!         .long   DSIDEB25        ;up to 562
    3759 000146c0 00000000!         .long   DSIDEB27        ;up to 570
    3760 000146e0 00000000!         .long   DSIDEB27        ;up to 578
    3761 00014700 00000000          .long   0               ;up to 586
    3762 00014720 00000000          .long   0               ;up to 594
    3763 00014740 00000000          .long   0               ;up to 602
    3764 00014760 00000000          .long   0               ;up to 610
    3765 00014780 00000000          .long   0               ;up to 618
    3766 000147a0 00000000          .long   0               ;up to 626
    3767 000147c0 00000000          .long   0               ;up to 634
    3768 000147e0 00000000          .long   0               ;up to 642
    3769 00014800 00000000          .long   0               ;up to 650
    3770 00014820 00000000          .long   0               ;up to 658
    3771 00014840 00000000          .long   0               ;up to 666
    3772 00014860 00000000          .long   0               ;up to 674
    3773 00014880 00000000          .long   0               ;up to 682
    3774 000148a0 00000000          .long   0               ;up to 690
    3775 000148c0 00000000          .long   0               ;up to 698
    3776 000148e0 00000000          .long   0               ;up to 706
    3777 00014900 00000000          .long   0               ;up to 714
    3778 00014920 00000000          .long   0               ;up to 722
    3779 00014940 00000000          .long   0               ;up to 730
    3780 00014960 00000000          .long   0               ;up to 738
    3781                    
    3782 00014980           MY_WIPEOUT
    3783 00014980     5600          clr     a0
    3784 00014990     0780          move    a0,@SCROLLX,L
TMS340 COFF Macro Assembler Version 6.10     Wed Apr 21 11:31:43 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   89

         000149a0 00000000! 
    3785 000149c0     0780          move    a0,@SCROLLY,L
         000149d0 00000000! 
    3786 000149f0     0580          move    a0,@rink_on,W
         00014a00 00000000! 
    3787 00014a20     0d5f          calla   WIPEOUT
         00014a30 00000000! 
    3788 00014a50                   movim   SCRNST_FULL,@SCRNTL,L
    3789 00014aa0     1820          movk    1,a0
    3790 00014ab0     0580          move    a0,@GAMERASE,W          ;AUTO-ERASE FULL
         00014ac0 00000000! 
    3791 00014ae0     0580          move    a0,@DISPLAYON,W
         00014af0 00000000! 
    3792 00014b10     1440          subk    2,a0
    3793 00014b20     0580          move    a0,@track_0_volume,W    ;send volume codes
         00014b30 00000000! 
    3794 00014b50     0580          move    a0,@track_1_volume,W    ;next time through
         00014b60 00000000! 
    3795 00014b80     0580          move    a0,@track_2_volume,W
         00014b90 00000000! 
    3796 00014bb0     0580          move    a0,@track_3_volume,W
         00014bc0 00000000! 
    3797 00014be0     0960          rets
    3798                    
    3799 00014bf0           my_wipeout_novideo_noprocess
    3800 00014bf0     5600          clr     a0
    3801 00014c00     0780          move    a0,@SCROLLX,L
         00014c10 00000000! 
    3802 00014c30     0780          move    a0,@SCROLLY,L
         00014c40 00000000! 
    3803 00014c60     0d5f          calla   WIPEOUT_NOVIDEO_NOPROCESS
         00014c70 00000000! 
    3804 00014c90     1440          subk    2,a0
    3805 00014ca0     0580          move    a0,@track_0_volume,W    ;send volume codes
         00014cb0 00000000! 
    3806 00014cd0     0580          move    a0,@track_1_volume,W    ;next time through
         00014ce0 00000000! 
    3807 00014d00     0580          move    a0,@track_2_volume,W
         00014d10 00000000! 
    3808 00014d30     0580          move    a0,@track_3_volume,W
         00014d40 00000000! 
    3809 00014d60     0d5f          calla   kill_all_animations
         00014d70 00000000! 
    3810 00014d90     0960          rets
    3811                    
    3812 00014da0           MY_WIPEOUT_NOVIDEO
    3813 00014da0     5600          clr     a0
    3814 00014db0     0780          move    a0,@SCROLLX,L
         00014dc0 00000000! 
    3815 00014de0     0780          move    a0,@SCROLLY,L
         00014df0 00000000! 
    3816 00014e10     0d5f          calla   WIPEOUT_NOVIDEO
         00014e20 00000000! 
    3817 00014e40                   movim   SCRNST_FULL,@SCRNTL,L
    3818 00014e90     1820          movk    1,a0
TMS340 COFF Macro Assembler Version 6.10     Wed Apr 21 11:31:43 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   90

    3819 00014ea0     0580          move    a0,@GAMERASE,W          ;AUTO-ERASE FULL
         00014eb0 00000000! 
    3820 00014ed0     0580          move    a0,@DISPLAYON,W
         00014ee0 00000000! 
    3821 00014f00     1440          subk    2,a0
    3822 00014f10     0580          move    a0,@track_0_volume,W    ;send volume codes
         00014f20 00000000! 
    3823 00014f40     0580          move    a0,@track_1_volume,W    ;next time through
         00014f50 00000000! 
    3824 00014f70     0580          move    a0,@track_2_volume,W
         00014f80 00000000! 
    3825 00014fa0     0580          move    a0,@track_3_volume,W
         00014fb0 00000000! 
    3826 00014fd0     0d5f          calla   kill_all_animations
         00014fe0 00000000! 
    3827 00015000     0960          rets
    3828                    
    3829 00015010           GAME_BUTTON_WAIT
    3830 00015010     05a1          MOVE    @period,A1,W
         00015020 000000e0- 
    3831 00015040     0d5f          CALLA   get_period_players              ;GET LAST PERIOD PLAYERS
         00015050 00015be0' 
    3832 00015070     4c01          MOVE    A0,A1
    3833 00015080     c001          JRUC    BW_GO
    3834 00015090           button_wait
    3835                    
    3836                            .if     self_play
    3837                    
    3838                            RETP
    3839                    
    3840                            .endif
    3841                    
    3842 00015090     5621          CLR     A1                              ;IGNORE LAST PERIOD PLAYERS
    3843 000150a0           BW_GO
    3844 000150a0     0d3f          callr   brd
         000150b0     0010  
    3845 000150c0     03e9  bw1     not     a9
    3846 000150d0     4d2b          move    a9,a11          ;a11 is not of old switch
    3847 000150e0     0d3f          callr   brd
         000150f0     000c  
    3848 00015100     512b          and     a9,a11
    3849 00015110     cb07          jrnz    bwx
    3850 00015120                   PUSHP   A1
    3851 00015130                   SLEEP   1
    3852 00015170                   PULLPQ  A1
    3853 00015180     3da8          dsjs    a8,bw1
    3854 00015190           bwx     RETP
    3855                    
    3856 000151c0     05a0  brd     move    @GAME_STATE,a0,W
         000151d0 00000000! 
    3857 000151f0     0b40          cmpi    INEPILOG,a0
         00015200     ff9f  
    3858 00015210     cb04          jrnz    brd2
    3859 00015220     05a0          move    @LAST_PLAYER_BITS,a0,W  ;read last player bits if in epilog (game over stats)
         00015230 00000000! 
TMS340 COFF Macro Assembler Version 6.10     Wed Apr 21 11:31:43 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   91

    3860 00015250     c004          jruc    brd3
    3861 00015260     05a0  brd2    move    @PLAYER_BITS,a0,W       ;grab a new player bits each sleep
         00015270 00000000! 
    3862 00015290     5420          OR      A1,A0
    3863 000152a0     24a0  brd3    sll     5,a0
    3864                    
    3865 000152b0     09e2          MOVI    bw_tab,A2
         000152c0 000153e0' 
    3866 000152e0                   KITN    4
    3867 00015320     ca03          JREQ    BW_ADD_TABLE                    ;BR=4 PLAYER KIT
    3868 00015330     09e2          MOVI    bw_tab_2P,A2                    ;2 PLAYER KIT
         00015340 000155e0' 
    3869 00015360           BW_ADD_TABLE
    3870 00015360     4040          ADD     A2,A0
    3871                    
    3872 00015370     860a          move    *a0,a10,L
    3873 00015380     07a9          move    @SWITCH,a9,L
         00015390 01860000  
    3874 000153b0     03e9          not     a9
    3875 000153c0     5149          and     a10,a9          ;just get the players we are looking for
    3876 000153d0     0960          rets
    3877                    
    3878 000153e0 00000000  bw_tab  .long   000000000h      ;0
    3879 00015400 00000070          .long   000000070h      ;1
    3880 00015420 00007000          .long   000007000h      ;2
    3881 00015440 00007070          .long   000007070h      ;1+2
    3882 00015460 00700000          .long   000700000h      ;3
    3883 00015480 00700070          .long   000700070h      ;1+3
    3884 000154a0 00707000          .long   000707000h      ;2+3
    3885 000154c0 00707070          .long   000707070h      ;1+2+3
    3886 000154e0 70000000          .long   070000000h      ;4
    3887 00015500 70000070          .long   070000070h      ;1+4
    3888 00015520 70007000          .long   070007000h      ;2+4
    3889 00015540 70007070          .long   070007070h      ;1+2+4
    3890 00015560 70700000          .long   070700000h      ;3+4
    3891 00015580 70700070          .long   070700070h      ;1+3+4
    3892 000155a0 70707000          .long   070707000h      ;2+3+4
    3893 000155c0 70707070          .long   070707070h      ;1+2+3+4
    3894                    
    3895 000155e0           bw_tab_2P
    3896 000155e0 00000000          .long   000000000h      ;0
    3897 00015600 00000070          .long   000000070h      ;1
    3898 00015620 00000000          .long   000000000h      ;2
    3899 00015640 00000070          .long   000000070h      ;1+2
    3900 00015660 00000000          .long   000000000h      ;3
    3901 00015680 00000070          .long   000000070h      ;1+3
    3902 000156a0 00000000          .long   000000000h      ;2+3
    3903 000156c0 00000070          .long   000000070h      ;1+2+3
    3904 000156e0 00007000          .long   000007000h      ;4
    3905 00015700 00007070          .long   000007070h      ;1+4
    3906 00015720 00007000          .long   000007000h      ;2+4
    3907 00015740 00007070          .long   000007070h      ;1+2+4
    3908 00015760 00007000          .long   000007000h      ;3+4
    3909 00015780 00007070          .long   000007070h      ;1+3+4
    3910 000157a0 00007000          .long   000007000h      ;2+3+4
TMS340 COFF Macro Assembler Version 6.10     Wed Apr 21 11:31:43 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   92

    3911 000157c0 00007070          .long   000007070h      ;1+2+3+4
    3912                    
    3913 000157e0           button_s_wait
    3914                            .if     self_play
    3915                            RETP
    3916                            .endif
    3917 000157e0     0d3f          callr   rdps
         000157f0     000e  
    3918 00015800     03e9  sbw1    not     a9
    3919 00015810     4d2b          move    a9,a11
    3920 00015820     0d3f          callr   rdps
         00015830     000a  
    3921 00015840     512b          and     a9,a11
    3922 00015850     cb05          jrnz    spx
    3923 00015860                   SLEEP   1
    3924 000158a0     3d68          dsjs    a8,sbw1
    3925 000158b0           spx     RETP
    3926                    
    3927                    **************************************************************************
    3928                    *                                                                        *
    3929                    * get_button_s_mask                                                      *
    3930                    *                                                                        *
    3931                    **************************************************************************
    3932 000158e0           get_button_s_mask
    3933 000158e0     05a0  rdps    move    @GAME_STATE,a0,W
         000158f0 00000000! 
    3934 00015910     0b40          cmpi    INEPILOG,a0
         00015920     ff9f  
    3935 00015930     cb04          jrnz    srd2
    3936 00015940     05a0          move    @LAST_PLAYER_BITS,a0,W  ;read last player bits if in epilog (game over stats)
         00015950 00000000! 
    3937 00015970     c003          jruc    srd3
    3938 00015980     05a0  srd2    move    @PLAYER_BITS,a0,W       ;grab a new player bits each sleep
         00015990 00000000! 
    3939 000159b0     24a0  srd3    sll     5,a0
    3940 000159c0     0b20          addi    bw_tab,a0
         000159d0 000153e0' 
    3941 000159f0                   KITN    4
    3942 00015a30     ca02          jrz     srd4
    3943 00015a40     0b00          addi    bw_tab_2P-bw_tab,a0
         00015a50     0200  
    3944 00015a60     860a  srd4    move    *a0,a10,L
    3945 00015a70     07a9          move    @SWITCH,a9,L
         00015a80 01860000  
    3946 00015aa0     03e9          not     a9
    3947 00015ab0     5149          and     a10,a9
    3948 00015ac0     07ae          move    @COINS,a14,L
         00015ad0 01860030  
    3949 00015af0     03ee          not     a14
    3950 00015b00     0b8e          andi    0624h,a14
         00015b10 fffff9db  
    3951 00015b30     4dc0          move    a14,a0
    3952 00015b40     0b8e          andi    000000f0fh,a14
         00015b50 fffff0f0  
    3953 00015b70     55c9          or      a14,a9          ;throw some start button info into unused bits
TMS340 COFF Macro Assembler Version 6.10     Wed Apr 21 11:31:43 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   93

    3954 00015b80     0b80          andi    0000000f0h,a0
         00015b90 ffffff0f  
    3955 00015bb0     2580          sll     12,a0
    3956 00015bc0     5409          or      a0,a9           ;throw the other start button info into unused bits
    3957 00015bd0     0960          rets
    3958                    
    3959                    
    3960                    **************************************************************************
    3961                    *                                                                        *
    3962                    * get_period_players                                                     *
    3963                    *       input   a1 = period                                              *
    3964                    *       output  a0 = bits for who plays (does not set player_bits)       *
    3965                    *                                                                        *
    3966                    **************************************************************************
    3967 00015be0           get_period_players
    3968 00015be0     098f          mmtm    sp,a1,a2,a3,a4,a5,a6,a7,a9
         00015bf0     7f40  
    3969 00015c00     1421          dec     a1
    3970 00015c10     cf01          jrnn    upp_3
    3971 00015c20     5621          clr     a1
    3972 00015c30     5642  upp_3   clr     a2
    3973 00015c40     09e4          movi    upp_dt1,a4
         00015c50 00015dd0' 
    3974 00015c70     9483  upp_2   move    *a4+,a3,W
    3975 00015c80     ca10          jrz     upp_4
    3976 00015c90                   GBLOCK  a3,a6
    3977 00015ce0     aece          movb    *a6(POF_PERIODS_PAID),a14
         00015cf0     0900  
    3978 00015d00     4a2e          btst    a1,a14
    3979 00015d10     caf5          jrz     upp_2
    3980 00015d20     2483          sll     4,a3
    3981 00015d30     0b23          addi    upp_dat-16,a3
         00015d40 00015e10' 
    3982 00015d60     8463          move    *a3,a3,W
    3983 00015d70     5462          or      a3,a2
    3984 00015d80     c0ee          jruc    upp_2
    3985 00015d90     4c40  upp_4   move    a2,a0
    3986 00015da0     09af          mmfm    sp,a1,a2,a3,a4,a5,a6,a7,a9
         00015db0     02fe  
    3987 00015dc0     0960          rets
    3988                    
    3989 00015dd0     0001  upp_dt1 .word   1,2,5,6,0
    3990 00015e20     0001  upp_dat .word   1,2,2,2,4,8,8,8
    3991                    
    3992                    
    3993                    **************************************************************************
    3994                    *                                                                        *
    3995                    * update_period_players                                                  *
    3996                    *       input   a1 = period                                              *
    3997                    *       output  PLAYER_BITS = set for period                             *
    3998                    *                                                                        *
    3999                    **************************************************************************
    4000 00015ea0           update_period_players
    4001 00015ea0     098f          mmtm    sp,a0
         00015eb0     8000  
TMS340 COFF Macro Assembler Version 6.10     Wed Apr 21 11:31:43 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   94

    4002 00015ec0     0d3f          callr   get_period_players
         00015ed0     ffd0  
    4003 00015ee0     0580          move    a0,@PLAYER_BITS,W
         00015ef0 00000000! 
    4004 00015f10     0d3f          callr   fix_curplyrs
         00015f20     f9c1  
    4005 00015f30     09af          mmfm    sp,a0
         00015f40     0001  
    4006 00015f50     0960          rets
    4007                    
    4008                    **************************************************************************
    4009                    *                                                                        *
    4010                    * can_we_add_period_player                                               *
    4011                    *       input   a0 = player                                              *
    4012                    *               a1 = period                                              *
    4013                    *       output  c  = yes we can add period for player                    *
    4014                    *               nc = no, we can't add period                             *
    4015                    *                                                                        *
    4016                    **************************************************************************
    4017 00015f60           can_we_add_period_player
    4018 00015f60     098f          mmtm    sp,a1,a6
         00015f70     4200  
    4019 00015f80     1421          dec     a1
    4020 00015f90     cf01          jrnn    cwa2
    4021 00015fa0     5621          clr     a1
    4022 00015fb0     0b41  cwa2    cmpi    7,a1
         00015fc0     fff8  
    4023 00015fd0     c201          jrls    cwa3
    4024 00015fe0     18e1          movk    7,a1
    4025 00015ff0           cwa3    GBLOCK  a0,a6
    4026 00016040     aece          movb    *a6(POF_PERIODS_PAID),a14
         00016050     0900  
    4027 00016060     4a2e  cwa1    btst    a1,a14
    4028 00016070     ca08          jrz     cway
    4029 00016080     1021          inc     a1
    4030 00016090     0b41          cmpi    3,a1
         000160a0     fffc  
    4031 000160b0     c8fa          jrlo    cwa1
    4032 000160c0     0320          clrc
    4033 000160d0     09af          mmfm    sp,a1,a6
         000160e0     0042  
    4034 000160f0     0960          rets
    4035 00016100     0de0  cway    setc
    4036 00016110     09af          mmfm    sp,a1,a6
         00016120     0042  
    4037 00016130     0960          rets
    4038                    
    4039                    **************************************************************************
    4040                    *                                                                        *
    4041                    * add_period_player                                                      *
    4042                    *       input   a0 = player                                              *
    4043                    *               a1 = period                                              *
    4044                    *                                                                        *
    4045                    **************************************************************************
    4046 00016140           add_period_player
TMS340 COFF Macro Assembler Version 6.10     Wed Apr 21 11:31:43 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   95

    4047 00016140     098f          mmtm    sp,a1,a2,a6
         00016150     6200  
    4048 00016160     1421          dec     a1
    4049 00016170     cf01          jrnn    apf2
    4050 00016180     5621          clr     a1
    4051 00016190           apf2    GBLOCK  a0,a6
    4052 000161e0     aece          movb    *a6(POF_PERIODS_PAID),a14
         000161f0     0900  
    4053 00016200     4a2e  apf1    btst    a1,a14
    4054 00016210     ca07          jrz     apfy
    4055 00016220     1021          inc     a1
    4056 00016230     0b41          cmpi    3,a1
         00016240     fffc  
    4057 00016250     c8fa          jrlo    apf1
    4058 00016260     09af          mmfm    sp,a1,a2,a6
         00016270     0046  
    4059 00016280     0960          rets
    4060 00016290     098f  apfy    mmtm    sp,a0
         000162a0     8000  
    4061 000162b0     09c0          movi    AUD_PL_PERIODS,a0
         000162c0     0010  
    4062 000162d0     0d5f          calla   AUD1
         000162e0 00000000! 
    4063 00016300     09af          mmfm    sp,a0
         00016310     0001  
    4064 00016320     1822          movk    1,a2
    4065 00016330     6222          sll     a1,a2
    4066 00016340     544e          or      a2,a14
    4067 00016350     adc6          movb    a14,*a6(POF_PERIODS_PAID)
         00016360     0900  
    4068 00016370     09af          mmfm    sp,a1,a2,a6
         00016380     0046  
    4069 00016390     0960          rets
    4070                    
    4071                    **************************************************************************
    4072                    *                                                                        *
    4073                    * does_player_play                                                       *
    4074                    *       input   a0 = player                                              *
    4075                    *               a1 = period                                              *
    4076                    *       output  c  = yes, he does play                                   *
    4077                    *                                                                        *
    4078                    **************************************************************************
    4079 000163a0           does_player_play
    4080 000163a0     098f          mmtm    sp,a1,a2,a6
         000163b0     6200  
    4081 000163c0     1421          dec     a1
    4082 000163d0                   GBLOCK  a0,a6
    4083 00016420     aece          movb    *a6(POF_PERIODS_PAID),a14
         00016430     0900  
    4084 00016440     4a2e          btst    a1,a14
    4085 00016450     cb04          jrnz    dp1y
    4086 00016460     0320          clrc
    4087 00016470     09af          mmfm    sp,a1,a2,a6
         00016480     0046  
    4088 00016490     0960          rets
TMS340 COFF Macro Assembler Version 6.10     Wed Apr 21 11:31:43 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   96

    4089 000164a0     0de0  dp1y    setc
    4090 000164b0     09af          mmfm    sp,a1,a2,a6
         000164c0     0046  
    4091 000164d0     0960          rets
    4092                    
    4093                    **************************************************************************
    4094                    *                                                                        *
    4095                    * do_we_continue_start                                                   *
    4096                    *       input   a0 = player                                              *
    4097                    *               a1 = period                                              *
    4098                    *       output  c  = continue                                            *
    4099                    *               nc = start                                               *
    4100                    *                                                                        *
    4101                    **************************************************************************
    4102 000164e0           do_we_continue_start
    4103 000164e0     098f          mmtm    sp,a0,a1
         000164f0     c000  
    4104 00016500     0d3f          callr   does_player_play
         00016510     ffe8  
    4105 00016520     c807          jrc     dwe9
    4106 00016530     1421          dec     a1
    4107 00016540     ce04          jrn     dwe9n
    4108 00016550     ca03          jrz     dwe9n
    4109 00016560     0d3f          callr   does_player_play
         00016570     ffe2  
    4110 00016580     c001          jruc    dwe9
    4111 00016590     0320  dwe9n   clrc
    4112 000165a0     09af  dwe9    mmfm    sp,a0,a1
         000165b0     0003  
    4113 000165c0     0960          rets
    4114                    
    4115                    **************************************************************************
    4116                    *                                                                        *
    4117                    * can_we_start_player                                                    *
    4118                    *       input   a0 = player                                              *
    4119                    *               a1 = period                                              *
    4120                    *       output  c  = yes we can start                                    *
    4121                    *                is playing, or free play, ingame, inintro, inattract    *
    4122                    *               nc = no, we can't for one of these reasons               *
    4123                    *                                                                        *
    4124                    **************************************************************************
    4125 000165d0           can_we_start_player
    4126 000165d0     05ae          move    @GAME_STATE,a14
         000165e0 00000000! 
    4127 00016600     2fae          SRL     3,A14                           ;SHIFT OUT SUB STATE
    4128 00016610     246e          SLL     3,A14
    4129 00016620     0b4e          cmpi    INGAME,a14
         00016630     ffef  
    4130 00016640     ca28          jrz     cws_y
    4131 00016650     0b4e          cmpi    ININTRO,a14
         00016660     ffe7  
    4132 00016670     ca25          jrz     cws_y
    4133                    ;       cmpi    ININTRO_INITQ,a14
    4134                    ;       jrz     cws_y
    4135                    ;       cmpi    ININTRO_INITENT,a14
TMS340 COFF Macro Assembler Version 6.10     Wed Apr 21 11:31:43 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   97

    4136                    ;       jrz     cws_y
    4137                    ;       cmpi    ININTRO_TEAMSEL,a14
    4138                    ;       jrz     cws_y
    4139 00016680     0b4e          cmpi    INAMODE,a14
         00016690     ffcf  
    4140 000166a0     ca22          jrz     cws_y
    4141 000166b0     0b4e          cmpi    INBUYIN,a14
         000166c0     ff6f  
    4142 000166d0     ca1f          jrz     cws_y
    4143 000166e0     098f          mmtm    sp,a0,a1
         000166f0     c000  
    4144 00016700     0d5f          calla   CHECKFREE
         00016710 00000000! 
    4145 00016730     09af          mmfm    sp,a0,a1
         00016740     0003  
    4146 00016750     cb17          jrnz    cws_y
    4147 00016760     0d3f          callr   does_player_play
         00016770     ffc2  
    4148 00016780     c814          jrc     cws_y
    4149 00016790     05ae          move    @minutes,a14,W
         000167a0 00000000! 
    4150 000167c0     0b41          cmpi    4,a1
         000167d0     fffb  
    4151 000167e0     c904          jrhs    cwsp1           ;overtime
    4152 000167f0     0b4e          cmpi    2,a14
         00016800     fffd  
    4153 00016810     c80d          jrlo    cws_n
    4154 00016820     c00a          jruc    cws_y
    4155 00016830     05ae  cwsp1   move    @minutes,a14,W
         00016840 00000000! 
    4156 00016860     cb06          jrnz    cws_y
    4157 00016870     05ae          move    @tenseconds,a14,W
         00016880 00000000! 
    4158 000168a0     0b4e          cmpi    3,a14           ;last 30 seconds of overtime
         000168b0     fffc  
    4159 000168c0     c802          jrlo    cws_n
    4160 000168d0     0de0  cws_y   setc
    4161 000168e0     0960          rets
    4162 000168f0     0320  cws_n   clrc
    4163 00016900     0960          rets
    4164                    
    4165 00016910           CHECK_FULL_ON_START
    4166 00016910     098f          MMTM    SP,A0,A1
         00016920     c000  
    4167 00016930     05ae          MOVE    @GAME_STATE,A14,W
         00016940 00000000! 
    4168 00016960     2fae          SRL     3,A14
    4169 00016970     146e          SUBK    ININTRO >> 3,A14
    4170 00016980     cb11          JRNZ    CFOS_NO                         ;BR=NOT INTRO
    4171                    
    4172 00016990     09c0          MOVI    ADJCSTRT,A0
         000169a0     000b  
    4173 000169b0     0d5f          CALLA   GET_ADJ
         000169c0 00000000! 
    4174 000169e0     4c01          MOVE    A0,A1
TMS340 COFF Macro Assembler Version 6.10     Wed Apr 21 11:31:43 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   98

    4175                    
    4176 000169f0     09c0          MOVI    ADJFULLGAME,A0
         00016a00     0010  
    4177 00016a10     0d5f          CALLA   GET_ADJ
         00016a20 00000000! 
    4178                    
    4179 00016a40     4820          CMP     A1,A0
    4180 00016a50     cb04          JRNE    CFOS_NO                         ;BR=NO FULL GAME PURCHASE
    4181                    
    4182 00016a60     09af          MMFM    SP,A0,A1
         00016a70     0003  
    4183 00016a80     0de0          SETC
    4184 00016a90     0960          RETS
    4185 00016aa0           CFOS_NO
    4186 00016aa0     09af          MMFM    SP,A0,A1
         00016ab0     0003  
    4187 00016ac0     0320          CLRC
    4188 00016ad0     0960          RETS
    4189                    
    4190 00016ae0           CHECK_FULL_ON_CONT
    4191 00016ae0     098f          MMTM    SP,A0,A1,A2,A3,A4,A6
         00016af0     fa00  
    4192 00016b00     05ae          MOVE    @GAME_STATE,A14,W
         00016b10 00000000! 
    4193 00016b30     2fae          SRL     3,A14
    4194 00016b40     146e          SUBK    ININTRO >> 3,A14
    4195 00016b50     cb3a          JRNZ    CFOC_NO                         ;BR=NOT INTRO
    4196                    
    4197 00016b60                   GBLOCK  A0,A6
    4198                    
    4199 00016bb0     09c0          MOVI    ADJFULLGAME,A0
         00016bc0     0010  
    4200 00016bd0     0d5f          CALLA   GET_ADJ
         00016be0 00000000! 
    4201 00016c00     4c01          MOVE    A0,A1
    4202                    
    4203 00016c10     09c0          MOVI    ADJCSTRT,A0
         00016c20     000b  
    4204 00016c30     0d5f          CALLA   GET_ADJ
         00016c40 00000000! 
    4205 00016c60     4c02          MOVE    A0,A2
    4206                    
    4207 00016c70     4841          CMP     A2,A1
    4208 00016c80     c427          JRLT    CFOC_NO                         ;BR=FULL GAME TOO LOW
    4209                    
    4210 00016c90     09c0          MOVI    ADJCCONT,A0
         00016ca0     000c  
    4211 00016cb0     0d5f          CALLA   GET_ADJ
         00016cc0 00000000! 
    4212 00016ce0     4c03          MOVE    A0,A3
    4213                    
    4214 00016cf0     2420          SLL     1,A0                            ;2 CONTINUES
    4215 00016d00     4040          ADD     A2,A0                           ;PLUS 1 START
    4216                    
    4217 00016d10     4801          CMP     A0,A1
TMS340 COFF Macro Assembler Version 6.10     Wed Apr 21 11:31:43 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   99

    4218 00016d20     c71d          JRGT    CFOC_NO                         ;BR=FULL GAME TOO HIGH
    4219                    
    4220 00016d30     4441          SUB     A2,A1                           ;TAKE AWAY START CREDITS
    4221                    
    4222 00016d40     aec4          MOVB    *A6(POF_PERIODS_PAID),A4
         00016d50     0900  
    4223 00016d60     1fc4          BTST    1,A4
    4224 00016d70     ca01          JRZ     CFOC_CHECK                      ;BR=THIS IS THE FIRST CONTINUE
    4225                    
    4226 00016d80     4461          SUB     A3,A1                           ;TAKE AWAY A CONTINUE CREDITS
    4227 00016d90           CFOC_CHECK
    4228 00016d90     4823          CMP     A1,A3
    4229 00016da0     c415          JRLT    CFOC_NO                         ;BR=FULL GAME OKAY ON NEXT CONT
    4230                    
    4231 00016db0     0d5f          CALLA   CRED_P
         00016dc0 00000000! 
    4232 00016de0     4801          CMP     A0,A1
    4233 00016df0     c710          JRGT    CFOC_NO                         ;BR=NOT ENOUGH CREDITS
    4234                    
    4235 00016e00     0d5f          CALLA   P_FULL_GAME_BALANCE
         00016e10 00000000! 
    4236                    
    4237 00016e30     4c8e          MOVE    A4,A14
    4238 00016e40     09af          MMFM    SP,A0,A1,A2,A3,A4,A6
         00016e50     005f  
    4239                    
    4240 00016e60                   PUSH    A14
    4241 00016e70     0d3f          callr   add_period_player               ;1ST CONTINUE (2ND PERIOD)
         00016e80     ff2b  
    4242 00016e90                   PULLQ   A14
    4243                    
    4244 00016ea0     1fce          BTST    1,A14
    4245 00016eb0     cb02          JRNZ    CFOC_YES                        ;BR=FULL GAME ON 2ND CONTINUE
    4246                    
    4247 00016ec0     0d3f          callr   add_period_player               ;2ND CONTINUE (3RD PERIOD)
         00016ed0     ff26  
    4248 00016ee0           CFOC_YES
    4249 00016ee0     0de0          SETC
    4250 00016ef0     0960          RETS
    4251 00016f00           CFOC_NO
    4252 00016f00     09af          MMFM    SP,A0,A1,A2,A3,A4,A6
         00016f10     005f  
    4253 00016f20     0320          CLRC
    4254 00016f30     0960          RETS
    4255                    
    4256                    **************************************************************************
    4257                    *                                                                        *
    4258                    * do_we_have_continue_credits                                            *
    4259                    *       input   a0 = player                                              *
    4260                    *       output  c  = yes, we have continue credits                       *
    4261                    *               nc = no, we don't                                        *
    4262                    *                                                                        *
    4263                    **************************************************************************
    4264 00016f40           do_we_have_continue_credits
    4265 00016f40     0d5f          calla   CR_CONTP
TMS340 COFF Macro Assembler Version 6.10     Wed Apr 21 11:31:43 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE  100

         00016f50 00000000! 
    4266 00016f70     c902          jrhs    dwccy
    4267 00016f80     0320          clrc
    4268 00016f90     0960          rets
    4269 00016fa0     0de0  dwccy   setc
    4270 00016fb0     0960          rets
    4271                    
    4272                    **************************************************************************
    4273                    *                                                                        *
    4274                    * take_away_continue_credits                                             *
    4275                    *       input   a0 = player                                              *
    4276                    *                                                                        *
    4277                    **************************************************************************
    4278 00016fc0           take_away_continue_credits
    4279 00016fc0     c080          jauc    P_CONT
         00016fd0 00000000! 
    4280                    
    4281                    **************************************************************************
    4282                    *                                                                        *
    4283                    * do_we_have_start_credits                                               *
    4284                    *       input   a0 = player                                              *
    4285                    *       output  c  = yes, we have start credits                          *
    4286                    *               nc = no, we don't                                        *
    4287                    *                                                                        *
    4288                    **************************************************************************
    4289 00016ff0           do_we_have_start_credits
    4290 00016ff0     0d5f          calla   CR_STRTP
         00017000 00000000! 
    4291 00017020     c902          jrhs    dwscy
    4292 00017030     0320          clrc
    4293 00017040     0960          rets
    4294 00017050     0de0  dwscy   setc
    4295 00017060     0960          rets
    4296                    
    4297                    **************************************************************************
    4298                    *                                                                        *
    4299                    * take_away_start_credits                                                *
    4300                    *       input   a0 = player                                              *
    4301                    *                                                                        *
    4302                    **************************************************************************
    4303 00017070           take_away_start_credits
    4304 00017070     c080          jauc    P_START
         00017080 00000000! 
    4305                    
    4306                    **************************************************************************
    4307                    *                                                                        *
    4308                    * do_start_button                                                        *
    4309                    *       input   a0 = player                                              *
    4310                    *               a1 = period                                              *
    4311                    *       output  c  = successfully started                                *
    4312                    *               nc = failed for various resaons                          *
    4313                    *                                                                        *
    4314                    **************************************************************************
    4315 000170a0           auto_restart
    4316 000170a0     0d3f          callr   can_we_add_period_player
TMS340 COFF Macro Assembler Version 6.10     Wed Apr 21 11:31:43 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE  101

         000170b0     feea  
    4317 000170c0     c906          jrnc    fsb9n
    4318 000170d0     0d3f          callr   add_period_player
         000170e0     ff05  
    4319 000170f0     0d3f          callr   update_period_players
         00017100     fed9  
    4320 00017110     0de0          setc
    4321 00017120     0960          rets
    4322 00017130     0d3f  fsb9n   callr   update_period_players
         00017140     fed5  
    4323 00017150     0320          clrc
    4324 00017160     0960          rets
    4325                    
    4326                    ;       callr   can_we_add_period_player
    4327                    ;       jrc     fsb1                            ;yes, we can
    4328                    ;       jruc    fsb9n
    4329                    ;fsb1   callr   do_we_continue_start
    4330                    ;       jrnc    fsb2                            ;we need a start(not continue)
    4331                    ;       callr   add_period_player
    4332                    ;fsb5   jruc    fsb9y
    4333                    ;fsb2   callr   add_period_player
    4334                    ;fsb8   jruc    fsb9y
    4335                    ;fsb9n  callr   update_period_players
    4336                    ;       clrc
    4337                    ;       rets
    4338                    ;fsb9y  callr   update_period_players
    4339                    ;       setc
    4340                    ;       rets
    4341                    
    4342 00017170           do_start_button
    4343 00017170     b5ae          MOVE    *A13(PROCID),A14,W
         00017180     0020  
    4344 00017190     260e          sll     16,a14
    4345 000171a0     2e0e          srl     16,a14
    4346 000171b0     0b6e          CMPI    PID_RESTART_WINNER,A14
         000171c0 ffff75f2  
    4347 000171e0     caeb          JREQ    auto_restart                    ;BR=WINNER RESTART
    4348 000171f0     0d3f          callr   can_we_add_period_player
         00017200     fed5  
    4349 00017210     c801          jrc     dsb1                            ;yes, we can
    4350                    ;       filled up sound
    4351 00017220     c047          jruc    dsb9n
    4352 00017230     0d3f  dsb1    callr   do_we_continue_start
         00017240     ff29  
    4353 00017250     c91c          jrnc    dsb2                            ;we need a start(not continue)
    4354                    
    4355 00017260     0d3f          CALLR   CHECK_FULL_ON_CONT
         00017270     ff86  
    4356 00017280     c845          JRC     dsb9y                           ;BR=FULL GAME PURCHASED ON CONT
    4357                    
    4358 00017290     0d3f          callr   do_we_have_continue_credits
         000172a0     ffc9  
    4359 000172b0     c915          jrnc    dsb3                            ;we don't have enough to continue
    4360 000172c0     0d3f          callr   can_we_start_player
         000172d0     ff2f  
TMS340 COFF Macro Assembler Version 6.10     Wed Apr 21 11:31:43 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE  102

    4361 000172e0     c905          jrnc    dsb4                            ;we can't start player now
    4362 000172f0     0d3f          callr   take_away_continue_credits
         00017300     ffcb  
    4363 00017310     0d3f          callr   add_period_player
         00017320     fee1  
    4364 00017330     c03a  dsb5    jruc    dsb9y
    4365 00017340           dsb4    ;do please wait effect
    4366 00017340                   GBLOCK  a0,a14
    4367 00017390     18e2          movk    7,a2
    4368 000173a0     ac4e          movb    a2,*a14(POF_TOP_MODE)
         000173b0     05a8  
    4369 000173c0     1822          movk    1,a2
    4370 000173d0     0582          move    a2,@force_buyin,W
         000173e0 000004b0- 
    4371 00017400     c029          jruc    dsb9n
    4372 00017410           dsb3    ;not enough credits effect
    4373 00017410     c028          jruc    dsb9n
    4374 00017420           dsb2
    4375 00017420     0d3f          callr   do_we_have_start_credits
         00017430     ffbb  
    4376 00017440     c925          jrnc    dsb6                            ;we don't have start credits
    4377 00017450     0d3f          callr   can_we_start_player
         00017460     ff16  
    4378 00017470     c915          jrnc    dsb7                            ;we can't start player now
    4379 00017480     0d3f          callr   take_away_start_credits
         00017490     ffbd  
    4380 000174a0     0d3f          callr   add_period_player
         000174b0     fec8  
    4381 000174c0     098f          mmtm    sp,a0
         000174d0     8000  
    4382 000174e0     09c0          movi    AUD_PL_STARTS,a0
         000174f0     000f  
    4383 00017500     0d5f          calla   AUD1
         00017510 00000000! 
    4384 00017530     09af          mmfm    sp,a0
         00017540     0001  
    4385 00017550     0d3f          CALLR   CHECK_FULL_ON_START
         00017560     ff3a  
    4386 00017570     c904          jrnc    dsb8                            ;no, he hasn't bought a full game yet
    4387 00017580     0d3f          callr   add_period_player
         00017590     feba  
    4388 000175a0     0d3f          callr   add_period_player
         000175b0     feb8  
    4389 000175c0     c011  dsb8    jruc    dsb9y
    4390 000175d0           dsb7    ;do please wait effect
    4391 000175d0                   GBLOCK  a0,a14
    4392 00017620     18e2          movk    7,a2
    4393 00017630     ac4e          movb    a2,*a14(POF_TOP_MODE)
         00017640     05a8  
    4394 00017650     1822          movk    1,a2
    4395 00017660     0582          move    a2,@force_buyin,W
         00017670 000004b0- 
    4396 00017690     0300          jruc    dsb9n
    4397 000176a0           dsb6    ;not enough credits effect
    4398 000176a0     0d3f  dsb9n   callr   update_period_players
TMS340 COFF Macro Assembler Version 6.10     Wed Apr 21 11:31:43 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE  103

         000176b0     fe7e  
    4399 000176c0     0320          clrc
    4400 000176d0     0960          rets
    4401 000176e0     0d3f  dsb9y   callr   update_period_players
         000176f0     fe7a  
    4402                    
    4403 00017700     182e          MOVK    1,A14
    4404 00017710     058e          MOVE    A14,@NEWCRED,W                  ;FLAG "NEW" CREDIT MESSAGE
         00017720 00000000! 
    4405                    
    4406 00017740     05ae          MOVE    @GAME_STATE,A14,W
         00017750 00000000! 
    4407 00017770     0b4e          CMPI    ININTRO_TG,A14
         00017780     ffe3  
    4408 00017790     cb03          JRNE    DSB9Y_DONE
    4409 000177a0     0d5f          CALLA   PERIOD_PAID_SOUND
         000177b0 00000000! 
    4410 000177d0           DSB9Y_DONE
    4411 000177d0     0de0          setc
    4412 000177e0     0960          rets
    4413                    
    4414                    ; button pushed
    4415                    ;  can we add period player
    4416                    ;   n - filled up sound - end
    4417                    ;   y - do_we_continue/start
    4418                    ;     c - do we have credits to continue
    4419                    ;       y - can we start player(already playing or free play, or game, intro, amode)
    4420                    ;         y - take away continue credits
    4421                    ;           - add period player
    4422                    ;           - do add period sound
    4423                    ;           - does this add a whole game (adjustment)
    4424                    ;             y - add enough periods to full game
    4425                    ;               - do full game effect
    4426                    ;             n - don't add any extra
    4427                    ;         n - do please wait effect/sound
    4428                    ;       n - not enough credits sound
    4429                    ;     s - do we have credits to start
    4430                    ;       y - can we start player(already playing or free play)
    4431                    ;         y - take away start credits
    4432                    ;           - add period player
    4433                    ;           - do start player sound
    4434                    ;           - does this add a whole game (adjustment)
    4435                    ;             y - add enough periods to full game
    4436                    ;               - do full game effect
    4437                    ;             n - don't add any extra
    4438                    ;         n - do please wait effect/sound
    4439                    ;       n - not enough credits sound
    4440                    
    4441                    **************************************************************************
    4442                    *                                                                        *
    4443                    * START_HELP_WINDOWS - CREATE HELP WINDOW PROCS FOR ALL HUMAN PLAYERS    *
    4444                    *                                                                        *
    4445                    * PASS:                                                                  *
    4446                    * NUTIN'                                                                 *
    4447                    * RETURN:                                                                *
TMS340 COFF Macro Assembler Version 6.10     Wed Apr 21 11:31:43 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE  104

    4448                    * NUTIN'                                                                 *
    4449                    *                                                                        *
    4450                    **************************************************************************
    4451                    
    4452 000177f0           START_HELP_WINDOWS
    4453 000177f0     098f          MMTM    SP,A0,A1,A2,A9
         00017800     e040  
    4454                    
    4455 00017810     05a2          MOVE    @PLAYER_BITS,A2,W
         00017820 00000000! 
    4456 00017840     5729          CLR     A9      
    4457 00017850           SHW_LUPE
    4458 00017850     4b22          BTST    A9,A2
    4459 00017860     ca18          JRZ     SHW_NEXT                                ;BR=PLAYER NOT ACTIVE   
    4460                    
    4461 00017870     0d5f          CALLA   a9_to_a0
         00017880 00000000! 
    4462 000178a0     b40e          MOVE    *A0(POF_LOCKED_CHAR),A14,W
         000178b0     0c40  
    4463 000178c0     cb12          JRNZ    SHW_NEXT                                ;BR=SPECIAL CHARACTER
    4464 000178d0     b40e          MOVE    *A0(POF_CMOS),A14,W
         000178e0     0060  
    4465 000178f0     cf0f          JRNN    SHW_NEXT                                ;BR=EXISTING CMOS RECORD
    4466                    
    4467 00017900                   CREATE  PID_HELP_WINDOW,HELP_WINDOW_PROC
    4468                    
    4469 00017980                   INCM    @HELP_WINDOW_COUNT,W                    ;ANOTHER WINDOW ADDED
    4470 000179f0           SHW_NEXT
    4471 000179f0     1029          INC     A9
    4472 00017a00     0b49          CMPI    4,A9
         00017a10     fffb  
    4473 00017a20     cbe2          JRNE    SHW_LUPE                                ;BR=MORE PLAYERS
    4474                    
    4475 00017a30     09af          MMFM    SP,A0,A1,A2,A9
         00017a40     0207  
    4476 00017a50     0960          RETS
    4477                    
    4478                    **************************************************************************
    4479                    *                                                                        *
    4480                    * HELP_WINDOW_PROC - DO THE HELP THING                                   *
    4481                    *                                                                        *
    4482                    * PASS:                                                                  *
    4483                    * A9 = PLAYER NUMBER - 1                                                 *
    4484                    *                                                                        *
    4485                    **************************************************************************
    4486                    
    4487              04b0  OPSWMASK        EQU     ODATA                   ;UHL PLAYER SWITCH MASK
    4488              04d0  OPLASTSW        EQU     ODATA+020H              ;UHL LAST SWITCH
    4489              04f0  OPTIME          EQU     ODATA+040H              ;UHW TIME OUT TIME
    4490                    
    4491 00017a60           HELP_WINDOW_PROC
    4492 00017a60                   JSRP    FADE_WAIT
    4493                    
    4494 00017ad0     0d5f          CALLA   a9_to_a0
         00017ae0 00000000! 
TMS340 COFF Macro Assembler Version 6.10     Wed Apr 21 11:31:43 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE  105

    4495 00017b00     0780          MOVE    A0,@RAMTEMP1,L
         00017b10 00000000! 
    4496 00017b30     0789          MOVE    A9,@RAMTEMP2,L
         00017b40 00000000! 
    4497                    
    4498 00017b60     4f20          MOVE    A9,B0
    4499 00017b70     24b0          SLL     5,B0
    4500 00017b80     0b30          ADDI    P_HELP_WINDOW_TABLE,B0
         00017b90 00017d70' 
    4501 00017bb0     8610          MOVE    *B0,B0,L
    4502 00017bc0     0d5f          CALLA   MULTIMAKE
         00017bd0 00000000! 
    4503                    
    4504 00017bf0                   KITN    4
    4505 00017c30     ca03          JREQ    HWP_MAKE_MASK                   ;BR=4 PLAYER KIT
    4506 00017c40     4d29          MOVE    A9,A9
    4507 00017c50     ca01          JRZ     HWP_MAKE_MASK                   ;BR=PLAYER 1
    4508 00017c60     1829          MOVK    1,A9                            ;PLAYER 2
    4509 00017c70           HWP_MAKE_MASK
    4510 00017c70     09ce          MOVI    M_SW_S|M_SW_P|M_SW_T,A14
         00017c80     0070  
    4511 00017c90     2469          SLL     3,A9
    4512 00017ca0     632e          SLL     A9,A14
    4513 00017cb0     b3c8          MOVE    A14,*A8(OPSWMASK),L
         00017cc0     04b0  
    4514                    
    4515 00017cd0     07a0          MOVE    @SWITCH,A0,L
         00017ce0 01860000  
    4516 00017d00     03e0          NOT     A0
    4517 00017d10     51c0          AND     A14,A0
    4518 00017d20     b208          MOVE    A0,*A8(OPLASTSW),L
         00017d30     04d0  
    4519                    
    4520 00017d40                   DIE
    4521                    
    4522 00017d70           P_HELP_WINDOW_TABLE
    4523 00017d70 00017df0'         .LONG   P1_HELP_WINDOW_INIT,P2_HELP_WINDOW_INIT
    4524 00017db0 00018b50'         .LONG   P3_HELP_WINDOW_INIT,P4_HELP_WINDOW_INIT
    4525                    
    4526                    
    4527          00290000  NAME_YXOFF      EQU     [41,0]
    4528          0055ffe2  ARRW_YXOFF      EQU     [85,-30]
    4529          00640017  HEAD_YXOFF      EQU     [100,23]
    4530                    
    4531 00017df0           P1_HELP_WINDOW_INIT
    4532 00017df0       09          .byte   9, 0, 0, 6      ;OBJCNT, PRCCNT, IMGPALCNT, PALCNT
    4533 00017e10 00000000!         .long   GRYBLOCKP       ;IMGPAL
    4534                    ;       .long   INSTRBKP        ;IMGPAL
    4535 00017e30 00000000!         .long   HELPBK2P        ;IMGPAL
    4536 00017e50 00000000!         .long   GFONT10CP       ;IMGPAL
    4537 00017e70 00000000!         .long   LSTNME1P        ;IMGPAL
    4538 00017e90 00000000!         .long   arrp_pal        ;IMGPAL
    4539 00017eb0 00000000!         .long   hp_chelio       ;IMGPAL
    4540 00017ed0     07ff          .word   OID_JUNK, OM_POS|OM_INSERT      ;OID, GLOBAL_OPTIONS
    4541 00017ef0 00320000          .long   [50,0],[100,0],-100
TMS340 COFF Macro Assembler Version 6.10     Wed Apr 21 11:31:43 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE  106

    4542                    *        .long IMG
    4543                    *        .word OCTRL, OFLAGS, OZOFF
    4544                    *        .word OPTIONS
    4545                    
    4546 00017f50                   LWWWW   INSTRUC1, DMAWNZ, M_SCRNOBJ|M_NOVEL|M_NOSCALE, -1, OM_ANIM
    4547 00017fb0 00019f90'         .LONG   INSTRCT_ANIM
    4548 00017fd0                   LWWWW   PLAYERN, DMAWNZ, M_SCRNOBJ|M_NOVEL|M_NOSCALE, 0, OM_OPARTS|OM_CFUNC
    4549 00018030 00070019          .long   [7,24+1]
    4550 00018050 00019df0'         .LONG   C_SET_NUM_AND_PAL
    4551 00018070 00000000!         .LONG   FONT101
    4552 00018090 00000000!         .LONG   PRPTXT3P
    4553 000180b0                   LWWWW   INSTRBX, DMAWNZ, M_SCRNOBJ|M_NOVEL|M_NOSCALE, 0, OM_CFUNC
    4554 00018110 00000000!         .LONG   C_CHANGE_PAL
    4555 00018130 00000000!         .LONG   PRPFRMP
    4556 00018150                   LWWWW   INSTRBK, DMAWNZ, M_SCRNOBJ|M_NOVEL|M_NOSCALE, 1, 0
    4557 000181b0                   LWWWW   PLAYERN, DMAWNZ, M_SCRNOBJ|M_NOVEL|M_NOSCALE, 0, OM_OPARTS|OM_CFUNC
    4558 00018210 00000001          .long   [0,1]
    4559 00018230 00000000!         .LONG   C_CHANGE_PAL
    4560 00018250 00000000!         .LONG   PRPTXT3P
    4561                    
    4562 00018270                   LWWWW   CHELIOS1, DMAWNZ, M_SCRNOBJ|M_NOVEL|M_NOSCALE, 0, OM_OPARTS|OM_ANIM|OM_CFUNC
    4563 000182d0 00290000          .long   NAME_YXOFF
    4564 000182f0 0001a280'         .LONG   TIMEOUT_ANIM    
    4565 00018310 000199d0'         .LONG   C_FIX_NAME
    4566 00018330                   LWWWW   PURPLEN, DMAWNZ, M_SCRNOBJ|M_NOVEL|M_NOSCALE, -1, OM_PRVANIM
    4567 00018390                   LWWWW   arrow1r, DMAWNZ, M_SCRNOBJ|M_NOVEL|M_NOSCALE, 0, OM_OPARTS|OM_PRVANIM
    4568 000183f0 0055ffe2          .long   ARRW_YXOFF
    4569 00018410                   LWWWW   F_CHELIO, DMAWNZ, M_SCRNOBJ|M_NOVEL|M_NOSCALE, 0, OM_OPARTS|OM_CFUNC|OM_PRVANIM
    4570 00018470 00640017          .long   HEAD_YXOFF
    4571 00018490 00019b30'         .LONG   C_FIX_HEAD
    4572                    
    4573 000184b0           P2_HELP_WINDOW_INIT
    4574 000184b0       09          .byte   9, 0, 0, 6      ;OBJCNT, PRCCNT, IMGPALCNT, PALCNT
    4575 000184d0 00000000!         .long   GRYBLOCKP       ;IMGPAL
    4576                    ;       .long   INSTRBKP        ;IMGPAL
    4577 000184f0 00000000!         .long   HELPBK2P        ;IMGPAL
    4578 00018510 00000000!         .long   GFONT10CP       ;IMGPAL
    4579 00018530 00000000!         .long   LSTNME1P        ;IMGPAL
    4580 00018550 00000000!         .long   arrp_pal        ;IMGPAL
    4581 00018570 00000000!         .long   hp_chelio       ;IMGPAL
    4582 00018590     07ff          .word   OID_JUNK, OM_POS|OM_INSERT      ;OID, GLOBAL_OPTIONS
    4583 000185b0 00960000          .long   [150,0],[126,0],-100
    4584                    *        .long IMG
    4585                    *        .word OCTRL, OFLAGS, OZOFF
    4586                    *        .word OPTIONS
    4587                    
    4588 00018610                   LWWWW   INSTRUC1, DMAWNZ, M_SCRNOBJ|M_NOVEL|M_NOSCALE, -1, OM_ANIM
    4589 00018670 00019f90'         .LONG   INSTRCT_ANIM
    4590 00018690                   LWWWW   PLAYERN, DMAWNZ, M_SCRNOBJ|M_NOVEL|M_NOSCALE, 0, OM_OPARTS|OM_CFUNC
    4591 000186f0 00070018          .long   [7,24]
    4592 00018710 00019df0'         .LONG   C_SET_NUM_AND_PAL
    4593 00018730 00000000!         .LONG   FONT102
    4594 00018750 00000000!         .LONG   BLUTXT3P
    4595 00018770                   LWWWW   INSTRBX, DMAWNZ, M_SCRNOBJ|M_NOVEL|M_NOSCALE, 0, OM_CFUNC
    4596 000187d0 00000000!         .LONG   C_CHANGE_PAL
TMS340 COFF Macro Assembler Version 6.10     Wed Apr 21 11:31:43 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE  107

    4597 000187f0 00000000!         .LONG   BLUFRMP
    4598 00018810                   LWWWW   INSTRBK, DMAWNZ, M_SCRNOBJ|M_NOVEL|M_NOSCALE, 1, 0
    4599 00018870                   LWWWW   PLAYERN, DMAWNZ, M_SCRNOBJ|M_NOVEL|M_NOSCALE, 0, OM_CFUNC
    4600 000188d0 00000000!         .LONG   C_CHANGE_PAL
    4601 000188f0 00000000!         .LONG   BLUTXT3P
    4602                    
    4603 00018910                   LWWWW   CHELIOS1, DMAWNZ, M_SCRNOBJ|M_NOVEL|M_NOSCALE, 0, OM_OPARTS|OM_ANIM|OM_CFUNC
    4604 00018970 00290000          .long   NAME_YXOFF
    4605 00018990 0001a280'         .LONG   TIMEOUT_ANIM    
    4606 000189b0 000199d0'         .LONG   C_FIX_NAME
    4607 000189d0                   LWWWW   BLUEN, DMAWNZ, M_SCRNOBJ|M_NOVEL|M_NOSCALE, -1, OM_PRVANIM
    4608 00018a30                   LWWWW   arrow2r, DMAWNZ, M_SCRNOBJ|M_NOVEL|M_NOSCALE, 0, OM_OPARTS|OM_PRVANIM
    4609 00018a90 0055ffe2          .long   ARRW_YXOFF
    4610 00018ab0                   LWWWW   F_CHELIO, DMAWNZ, M_SCRNOBJ|M_NOVEL|M_NOSCALE, 0, OM_OPARTS|OM_CFUNC|OM_PRVANIM
    4611 00018b10 00640017          .long   HEAD_YXOFF
    4612 00018b30 00019b30'         .LONG   C_FIX_HEAD
    4613                    
    4614 00018b50           P3_HELP_WINDOW_INIT
    4615 00018b50       09          .byte   9, 0, 0, 6      ;OBJCNT, PRCCNT, IMGPALCNT, PALCNT
    4616 00018b70 00000000!         .long   GRYBLOCKP       ;IMGPAL
    4617                    ;       .long   INSTRBKP        ;IMGPAL
    4618 00018b90 00000000!         .long   HELPBK2P        ;IMGPAL
    4619 00018bb0 00000000!         .long   GFONT10CP       ;IMGPAL
    4620 00018bd0 00000000!         .long   LSTNME1P        ;IMGPAL
    4621 00018bf0 00000000!         .long   arrp_pal        ;IMGPAL
    4622 00018c10 00000000!         .long   hp_chelio       ;IMGPAL
    4623 00018c30     07ff          .word   OID_JUNK, OM_POS|OM_INSERT      ;OID, GLOBAL_OPTIONS
    4624 00018c50 00fa0000          .long   [250,0],[126,0],-100
    4625                    *        .long IMG
    4626                    *        .word OCTRL, OFLAGS, OZOFF
    4627                    *        .word OPTIONS
    4628                    
    4629 00018cb0                   LWWWW   INSTRUC1, DMAWNZ, M_SCRNOBJ|M_NOVEL|M_NOSCALE, -1, OM_ANIM
    4630 00018d10 00019f90'         .LONG   INSTRCT_ANIM
    4631 00018d30                   LWWWW   PLAYERN, DMAWNZ, M_SCRNOBJ|M_NOVEL|M_NOSCALE, 0, OM_OPARTS|OM_CFUNC
    4632 00018d90 00070018          .long   [7,24]
    4633 00018db0 00019df0'         .LONG   C_SET_NUM_AND_PAL
    4634 00018dd0 00000000!         .LONG   FONT103
    4635 00018df0 00000000!         .LONG   GLDTXT1P
    4636 00018e10                   LWWWW   INSTRBX, DMAWNZ, M_SCRNOBJ|M_NOVEL|M_NOSCALE, 0, OM_CFUNC
    4637 00018e70 00000000!         .LONG   C_CHANGE_PAL
    4638 00018e90 00000000!         .LONG   GLDFRMP
    4639 00018eb0                   LWWWW   INSTRBK, DMAWNZ, M_SCRNOBJ|M_NOVEL|M_NOSCALE, 1, 0
    4640 00018f10                   LWWWW   PLAYERN, DMAWNZ, M_SCRNOBJ|M_NOVEL|M_NOSCALE, 0, OM_CFUNC
    4641 00018f70 00000000!         .LONG   C_CHANGE_PAL
    4642 00018f90 00000000!         .LONG   GLDTXT1P
    4643                    
    4644 00018fb0                   LWWWW   CHELIOS1, DMAWNZ, M_SCRNOBJ|M_NOVEL|M_NOSCALE, 0, OM_OPARTS|OM_ANIM|OM_CFUNC
    4645 00019010 00290000          .long   NAME_YXOFF
    4646 00019030 0001a280'         .LONG   TIMEOUT_ANIM    
    4647 00019050 000199d0'         .LONG   C_FIX_NAME
    4648 00019070                   LWWWW   YELLOWN, DMAWNZ, M_SCRNOBJ|M_NOVEL|M_NOSCALE, -1, OM_PRVANIM
    4649 000190d0                   LWWWW   arrow3r, DMAWNZ, M_SCRNOBJ|M_NOVEL|M_NOSCALE, 0, OM_OPARTS|OM_PRVANIM
    4650 00019130 0055ffe2          .long   ARRW_YXOFF
    4651 00019150                   LWWWW   F_CHELIO, DMAWNZ, M_SCRNOBJ|M_NOVEL|M_NOSCALE, 0, OM_OPARTS|OM_CFUNC|OM_PRVANIM
TMS340 COFF Macro Assembler Version 6.10     Wed Apr 21 11:31:43 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE  108

    4652 000191b0 00640017          .long   HEAD_YXOFF
    4653 000191d0 00019b30'         .LONG   C_FIX_HEAD
    4654                    
    4655 000191f0           P4_HELP_WINDOW_INIT
    4656 000191f0       09          .byte   9, 0, 0, 6      ;OBJCNT, PRCCNT, IMGPALCNT, PALCNT
    4657 00019210 00000000!         .long   GRYBLOCKP       ;IMGPAL
    4658                    ;       .long   INSTRBKP        ;IMGPAL
    4659 00019230 00000000!         .long   HELPBK2P        ;IMGPAL
    4660 00019250 00000000!         .long   GFONT10CP       ;IMGPAL
    4661 00019270 00000000!         .long   LSTNME1P        ;IMGPAL
    4662 00019290 00000000!         .long   arrp_pal        ;IMGPAL
    4663 000192b0 00000000!         .long   hp_chelio       ;IMGPAL
    4664 000192d0     07ff          .word   OID_JUNK, OM_POS|OM_INSERT      ;OID, GLOBAL_OPTIONS
    4665 000192f0 015e0000          .long   [350,0],[100,0],-100
    4666                    *        .long IMG
    4667                    *        .word OCTRL, OFLAGS, OZOFF
    4668                    *        .word OPTIONS
    4669                    
    4670 00019350                   LWWWW   INSTRUC1, DMAWNZ, M_SCRNOBJ|M_NOVEL|M_NOSCALE, -1, OM_ANIM
    4671 000193b0 00019f90'         .LONG   INSTRCT_ANIM
    4672 000193d0                   LWWWW   PLAYERN, DMAWNZ, M_SCRNOBJ|M_NOVEL|M_NOSCALE, 0, OM_OPARTS|OM_CFUNC
    4673 00019430 00070018          .long   [7,24]
    4674 00019450 00019df0'         .LONG   C_SET_NUM_AND_PAL
    4675 00019470 00000000!         .LONG   FONT104
    4676 00019490 00000000!         .LONG   GRNTXT3P
    4677 000194b0                   LWWWW   INSTRBX, DMAWNZ, M_SCRNOBJ|M_NOVEL|M_NOSCALE, 0, OM_CFUNC
    4678 00019510 00000000!         .LONG   C_CHANGE_PAL
    4679 00019530 00000000!         .LONG   GRNFRMP
    4680 00019550                   LWWWW   INSTRBK, DMAWNZ, M_SCRNOBJ|M_NOVEL|M_NOSCALE, 1, 0
    4681 000195b0                   LWWWW   PLAYERN, DMAWNZ, M_SCRNOBJ|M_NOVEL|M_NOSCALE, 0, OM_CFUNC
    4682 00019610 00000000!         .LONG   C_CHANGE_PAL
    4683 00019630 00000000!         .LONG   GRNTXT3P
    4684                    
    4685 00019650                   LWWWW   CHELIOS1, DMAWNZ, M_SCRNOBJ|M_NOVEL|M_NOSCALE, 0, OM_OPARTS|OM_ANIM|OM_CFUNC
    4686 000196b0 00290000          .long   NAME_YXOFF
    4687 000196d0 0001a280'         .LONG   TIMEOUT_ANIM    
    4688 000196f0 000199d0'         .LONG   C_FIX_NAME
    4689 00019710                   LWWWW   GREENN, DMAWNZ, M_SCRNOBJ|M_NOVEL|M_NOSCALE, -1, OM_PRVANIM
    4690 00019770                   LWWWW   arrow4r, DMAWNZ, M_SCRNOBJ|M_NOVEL|M_NOSCALE, 0, OM_OPARTS|OM_CFUNC|OM_PRVANIM
    4691 000197d0 0055ffe2          .long   ARRW_YXOFF
    4692 000197f0 000198b0'         .LONG   C_2P_KIT
    4693 00019810                   LWWWW   F_CHELIO, DMAWNZ, M_SCRNOBJ|M_NOVEL|M_NOSCALE, 0, OM_OPARTS|OM_CFUNC|OM_PRVANIM
    4694 00019870 00640017          .long   HEAD_YXOFF
    4695 00019890 00019b30'         .LONG   C_FIX_HEAD
    4696                    
    4697 000198b0           C_2P_KIT
    4698 000198b0                   KITN    4
    4699 000198f0     ca0c          JREQ    C2PK_DONE                       ;BR=4 PLAYER KIT
    4700 00019900                   PUSH    A8
    4701 00019910     4c08          MOVE    A0,A8
    4702 00019920     09e1          MOVI    arrow2r,A1
         00019930 00000000! 
    4703 00019950     09e4          MOVI    DMAWNZ,A4
         00019960 00008002  
    4704 00019980     0d5f          CALLA   ANI
TMS340 COFF Macro Assembler Version 6.10     Wed Apr 21 11:31:43 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE  109

         00019990 00000000! 
    4705 000199b0                   PULLQ   A8
    4706 000199c0           C2PK_DONE
    4707 000199c0     0960          RETS
    4708                    
    4709 000199d0           C_FIX_NAME
    4710 000199d0                   PUSH    A8
    4711 000199e0     4c08          MOVE    A0,A8
    4712                    
    4713 000199f0     07ae          MOVE    @RAMTEMP1,A14,L
         00019a00 00000000! 
    4714 00019a20     b5ce          MOVE    *A14(POF_CHARACTER),A14,W
         00019a30     0070  
    4715 00019a40     24ae          SLL     5,A14
    4716 00019a50     0b2e          ADDI    player_data,A14
         00019a60 00000000! 
    4717 00019a80     87ce          MOVE    *A14,A14,L
    4718 00019a90     b7c1          MOVE    *A14(TP_PLYRNAME_IMG),A1,L
         00019aa0     0120  
    4719 00019ab0     09e4          MOVI    DMAWNZ,A4
         00019ac0 00008002  
    4720 00019ae0     0d5f          CALLA   ANI
         00019af0 00000000! 
    4721                    
    4722 00019b10                   PULLQ   A8
    4723 00019b20     0960          RETS
    4724                    
    4725 00019b30           C_FIX_HEAD
    4726 00019b30                   PUSH    A8
    4727 00019b40     4c08          MOVE    A0,A8
    4728                    
    4729 00019b50     07ae          move    @RAMTEMP1,a14,L
         00019b60 00000000! 
    4730 00019b80     b5ce          move    *a14(POF_CHARACTER),a14,W
         00019b90     0070  
    4731 00019ba0     24ae          sll     5,a14
    4732 00019bb0     0b2e          addi    player_data,a14
         00019bc0 00000000! 
    4733 00019be0     87ce          move    *a14,a14,L
    4734 00019bf0     b7ce          move    *a14(TP_HELMET_OFF),a14,L
         00019c00     0060  
    4735 00019c10     ca05          jrz     fzbp
    4736 00019c20     09ee          movi    [138h,100h],a14
         00019c30 01380100  
    4737 00019c50     b3c8          move    a14,*a8(OSCALE),L
         00019c60     02a0  
    4738 00019c70           fzbp
    4739 00019c70     07ae          MOVE    @RAMTEMP1,A14,L
         00019c80 00000000! 
    4740 00019ca0     b7ce          MOVE    *A14(POF_HEAD_TABLE),A14,L
         00019cb0     0040  
    4741 00019cc0     87c1          MOVE    *A14,A1,L
    4742 00019cd0     09e4          MOVI    DMAWNZ,A4
         00019ce0 00008002  
    4743 00019d00     0d5f          CALLA   ANI
TMS340 COFF Macro Assembler Version 6.10     Wed Apr 21 11:31:43 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE  110

         00019d10 00000000! 
    4744                    
    4745 00019d30     07a0          MOVE    @RAMTEMP2,A0,L
         00019d40 00000000! 
    4746 00019d60     2580          SLL     12,A0
    4747 00019d70     0b20          ADDI    player_1_headpal_alt,A0 
         00019d80 00000000! 
    4748 00019da0     0d5f          CALLA   CHANGE_PAL
         00019db0 00000000! 
    4749                    
    4750 00019dd0                   PULLQ   A8
    4751 00019de0     0960          RETS
    4752                    
    4753 00019df0           C_SET_NUM_AND_PAL
    4754 00019df0                   PUSH    A8
    4755 00019e00     4c08          MOVE    A0,A8
    4756                    
    4757 00019e10     961e          MOVE    *B0+,B14,L                      ;GET IMAGE
    4758 00019e20                   KITN    4
    4759 00019e60     ca07          JREQ    CSNAP_GO                        ;BR=4 PLAYER KIT
    4760 00019e70     0b7e          CMPI    FONT104,B14
         00019e80 ffffffff! 
    4761 00019ea0     cb03          JRNE    CSNAP_GO                        ;BR=PLAYER 1
    4762 00019eb0     09fe          MOVI    FONT102,B14                     ;PLAYER 2
         00019ec0 00000000! 
    4763 00019ee0           CSNAP_GO
    4764 00019ee0     4fd1          MOVE    B14,A1
    4765 00019ef0     09e4          MOVI    DMAWNZ,A4
         00019f00 00008002  
    4766 00019f20     0d5f          CALLA   ANI
         00019f30 00000000! 
    4767 00019f50                   PULLQ   A8
    4768 00019f60     c080          JAUC    C_CHANGE_PAL
         00019f70 00000000! 
    4769                    
    4770 00019f90           INSTRCT_ANIM
    4771 00019f90                   LW      1,5 ;30
    4772 00019fc0                   LWLW    1,AFUNC|1,A_SET_OPTIME+1,180-5 ;180-30
    4773 0001a020                   LWL     1,AFUNC|1,A_CHECK_SWITCH
    4774                    
    4775 0001a070                   LW      1,5 ;15
    4776 0001a0a0                   LWLW    INSTRUC2,AFUNC|1,A_SET_OPTIME+1,180-5 ;180-15
    4777 0001a100                   LWL     1,AFUNC|1,A_CHECK_SWITCH
    4778                    
    4779 0001a150                   LW      1,5 ;15
    4780 0001a180                   LWLW    INSTRUC3,AFUNC|1,A_SET_OPTIME+1,180-5 ;180-15
    4781 0001a1e0                   LWL     1,AFUNC|1,A_CHECK_SWITCH
    4782                    
    4783 0001a230                   LWL     1,AFUNC|1,A_KILL_WINDOW
    4784                            
    4785                    
    4786 0001a280           TIMEOUT_ANIM
    4787 0001a280                   LWL     1,AFUNC|1,A_CHECK_HEAD_WINDOW
    4788                    
    4789                    
TMS340 COFF Macro Assembler Version 6.10     Wed Apr 21 11:31:43 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE  111

    4790                    **************************************************************************
    4791                    *                                                                        *
    4792                    * A_CHECK_HEAD_WINDOW                                                    *
    4793                    *                                                                        *
    4794                    **************************************************************************
    4795                    
    4796 0001a2d0           A_CHECK_HEAD_WINDOW
    4797 0001a2d0     b700          MOVE    *A8(OPART1),A0,L
         0001a2e0     00a0  
    4798 0001a2f0     b60e          MOVE    *A0(OIMG),A14,L
         0001a300     02c0  
    4799 0001a310     0b6e          CMPI    INSTRUC1,A14
         0001a320 fffff8af" 
    4800 0001a340     cb80          JANE    DELETE_OBJ                      ;BR=PAGE CHANGED
         0001a350 00000000! 
    4801                            
    4802 0001a370     b70e          MOVE    *A8(ANIMFRM),A14,L              ;STAY ON FRAME
         0001a380     0320  
    4803 0001a390     0bee          SUBI    020H+010H+020H,A14
         0001a3a0     ffaf  
    4804 0001a3b0     b3c8          MOVE    A14,*A8(ANIMFRM),L
         0001a3c0     0320  
    4805                    
    4806 0001a3d0     0960          RETS
    4807                    
    4808                    **************************************************************************
    4809                    *                                                                        *
    4810                    * A_KILL_WINDOW                                                          *
    4811                    *                                                                        *
    4812                    **************************************************************************
    4813                    
    4814 0001a3e0           A_KILL_WINDOW   
    4815 0001a3e0                   DECM    @HELP_WINDOW_COUNT,W                    ;ANOTHER WINDOW REMOVED
    4816 0001a450     0d5f          CALLA   DELETE_OBJ
         0001a460 00000000! 
    4817 0001a480     0960          RETS
    4818                    
    4819                    **************************************************************************
    4820                    *                                                                        *
    4821                    * A_SET_OPTIME                                                           *
    4822                    *                                                                        *
    4823                    **************************************************************************
    4824                    
    4825 0001a490           A_SET_OPTIME
    4826 0001a490     0d5f          CALLA   GETAFARG_WORD
         0001a4a0 00000000! 
    4827 0001a4c0     b008          MOVE    A0,*A8(OPTIME),W
         0001a4d0     04f0  
    4828 0001a4e0     0960          RETS
    4829                    
    4830                    **************************************************************************
    4831                    *                                                                        *
    4832                    * A_CHECK_SWITCH                                                         *
    4833                    *                                                                        *
    4834                    **************************************************************************
TMS340 COFF Macro Assembler Version 6.10     Wed Apr 21 11:31:43 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE  112

    4835                    
    4836 0001a4f0           A_CHECK_SWITCH
    4837 0001a4f0     b700          MOVE    *A8(OPSWMASK),A0,L
         0001a500     04b0  
    4838 0001a510     07a1          MOVE    @SWITCH,A1,L
         0001a520 01860000  
    4839 0001a540     03e1          NOT     A1
    4840 0001a550     5001          AND     A0,A1
    4841 0001a560     ca80          JAZ     ACS_DEC                         ;BR=NO SWITCH
         0001a570 0001a620' 
    4842                    
    4843 0001a590     b702          MOVE    *A8(OPLASTSW),A2,L              
         0001a5a0     04d0  
    4844 0001a5b0     5622          XOR     A1,A2
    4845 0001a5c0     ca80          JAZ     ACS_DEC                         ;BR=SWITCH(ES) STUCK
         0001a5d0 0001a620' 
    4846                    
    4847 0001a5f0     b228          MOVE    A1,*A8(OPLASTSW),L              ;SAVE LAST
         0001a600     04d0  
    4848                    
    4849 0001a610     0960          RETS
    4850 0001a620           ACS_DEC
    4851 0001a620     b50e          MOVE    *A8(OPTIME),A14,W
         0001a630     04f0  
    4852 0001a640     142e          DEC     A14
    4853 0001a650     b1c8          MOVE    A14,*A8(OPTIME),W
         0001a660     04f0  
    4854 0001a670     ca08          JRZ     ACS_DONE                        ;BR=TIME OUT!
    4855                    
    4856 0001a680     b228          MOVE    A1,*A8(OPLASTSW),L              ;SAVE LAST
         0001a690     04d0  
    4857                    
    4858 0001a6a0     b70e          MOVE    *A8(ANIMFRM),A14,L              ;STAY ON FRAME
         0001a6b0     0320  
    4859 0001a6c0     0bee          SUBI    020H+010H+020H,A14
         0001a6d0     ffaf  
    4860 0001a6e0     b3c8          MOVE    A14,*A8(ANIMFRM),L
         0001a6f0     0320  
    4861 0001a700           ACS_DONE
    4862 0001a700     0960          RETS
    4863                    
    4864 0001a710           BFLASHa2:
    4865 0001a710     00fe     .word   254
    4866 0001a720     0000     .word   00000h,07fffh,07fdeh,07fbdh,07f9ch,07b7bh,0775ah,06f18h
    4867 0001a7a0     6af7     .word   06af7h,066d6h,05e94h,06a91h,0396bh,0354ah,03129h,01c84h
    4868 0001a820     1021     .word   01021h,07e39h,07e7eh,07d08h,07c00h,07e74h,07dd6h,07f99h
    4869 0001a8a0     7f9a     .word   07f9ah,07f78h,07d86h,07ed5h,07cc6h,07dadh,07d46h,07e51h
    4870 0001a920     7d49     .word   07d49h,07e5ah,07f77h,07f58h,07ef3h,07f38h,07d27h,07defh
    4871 0001a9a0     79d7     .word   079d7h,07b45h,07b46h,07af1h,07b59h,07b16h,07ab2h,079ach
    4872 0001aa20     78a5     .word   078a5h,078c6h,078e7h,07b5ah,07674h,07595h,075f8h,07738h
    4873 0001aaa0     7691     .word   07691h,076d5h,07672h,07548h,07529h,07215h,0726dh,07270h
    4874 0001ab20     71cd     .word   071cdh,07000h,070a5h,070e7h,0716bh,06c44h,06e8fh,06ef6h
    4875 0001aba0     6e92     .word   06e92h,06dabh,06e10h,06a75h,06ab3h,06a4fh,06a71h,06a73h
    4876 0001ac20     662d     .word   0662dh,0660eh,06212h,05e0ch,05e0dh,05e2fh,05c20h,05c41h
    4877 0001aca0     5c62     .word   05c62h,05d29h,06ed3h,058c7h,05a11h,05a51h,05988h,05a0fh
TMS340 COFF Macro Assembler Version 6.10     Wed Apr 21 11:31:43 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE  113

    4878 0001ad20     58a2     .word   058a2h,05906h,0596bh,059ceh,059efh,055aeh,05569h,055cdh
    4879 0001ada0     5506     .word   05506h,05420h,054a5h,05508h,05109h,06a4ch,05026h,0662fh
    4880 0001ae20     516e     .word   0516eh,062afh,051abh,06acfh,059aeh,04800h,04509h,04449h
    4881 0001aea0     44e5     .word   044e5h,04529h,0668dh,04085h,040a6h,04105h,04148h,04042h
    4882 0001af20     40e7     .word   040e7h,0414ah,0418ch,03ce9h,03c00h,03885h,03929h,0394ah
    4883 0001afa0     3443     .word   03443h,03509h,03528h,034a5h,030c4h,03000h,03084h,030e7h
    4884 0001b020     28c6     .word   028c6h,01c63h,01842h,07c00h,07d29h,01362h,042b3h,03e4fh
    4885 0001b0a0     5650     .word   05650h,04e30h,07e40h,00c60h,00c1fh,0145fh,024beh,077beh
    4886 0001b120     355d     .word   0355dh,06f7dh,0773ch,0419ch,0565ch,06b5ch,049bbh,05f1bh
    4887 0001b1a0     66ba     .word   066bah,04ddah,0417ah,0733ah,06279h,062f9h,05af9h,05677h
    4888 0001b220     5ed7     .word   05ed7h,05ad7h,056d7h,04216h,06ad5h,05a96h,055d5h,05e75h
    4889 0001b2a0     5655     .word   05655h,06af5h,05a95h,05a74h,045d3h,03573h,03df3h,05a13h
    4890 0001b320     6273     .word   06273h,04a53h,051d2h,05212h,05612h,06e31h,04a52h,02a32h
    4891 0001b3a0     4d71     .word   04d71h,045d1h,03991h,06271h,02171h,04a11h,02591h,05e31h
    4892 0001b420     5650     .word   05650h,0314fh,0250fh,05a4eh,03d6eh,059ceh,041aeh,049eeh
    4893 0001b4a0     14ce     .word   014ceh,0210eh,0256eh,024adh,0210dh,0316dh,059edh,01c6ch
    4894 0001b520     142b     .word   0142bh,0106bh,049abh,02d4bh,0312ah,020cah,0250ah,0292ah
    4895 0001b5a0     1488     .word   01488h,020c7h,01846h,01ca6h,01864h,07b6eh,07759h,05230h
    4896 0001b620     7edf     .word   07edfh,07b3bh,06676h,038ebh,03029h,0635ah,06f5ah,05a94h
    4897 0001b6a0     5eb3     .word   05eb3h,04a52h,03e31h,05691h,02508h,020c6h
    4898                    
    4899 0001b700           BFLASHa3:
    4900 0001b700     00fe     .word   254
    4901 0001b710     0000     .word   00000h,07fffh,07fdeh,07fbdh,07f9ch,07b7bh,0775ah,06f18h
    4902 0001b790     6af7     .word   06af7h,066d6h,05e94h,06a91h,0396bh,0354ah,03129h,01c84h
    4903 0001b810     1021     .word   01021h,07e39h,07e7eh,07108h,07c00h,07e74h,07dd6h,07f99h
    4904 0001b890     7f9a     .word   07f9ah,07f78h,07d86h,07ed5h,07cc6h,07dadh,07d46h,07e51h
    4905 0001b910     7d49     .word   07d49h,07e5ah,07f77h,07f58h,07ef3h,07f38h,07d27h,07defh
    4906 0001b990     79d7     .word   079d7h,07b45h,07b46h,07af1h,07b59h,07b16h,07ab2h,079ach
    4907 0001ba10     78a5     .word   078a5h,078c6h,078e7h,07b5ah,07674h,07595h,075f8h,07738h
    4908 0001ba90     7691     .word   07691h,076d5h,07672h,07548h,07529h,07215h,0726dh,07270h
    4909 0001bb10     71cd     .word   071cdh,07000h,070a5h,070e7h,0716bh,06c44h,06e8fh,06ef6h
    4910 0001bb90     6e92     .word   06e92h,06dabh,06e10h,06a75h,06ab3h,06a4fh,06a71h,06a73h
    4911 0001bc10     662d     .word   0662dh,0660eh,06212h,05e0ch,05e0dh,05e2fh,05c20h,05c41h
    4912 0001bc90     5c62     .word   05c62h,05d29h,06ed3h,058c7h,05a11h,05a51h,05988h,05a0fh
    4913 0001bd10     58a2     .word   058a2h,05906h,0596bh,059ceh,059efh,055aeh,05569h,055cdh
    4914 0001bd90     5506     .word   05506h,05420h,054a5h,05508h,05109h,06a4ch,05026h,0662fh
    4915 0001be10     516e     .word   0516eh,062afh,051abh,06acfh,059aeh,04800h,04509h,04449h
    4916 0001be90     44e5     .word   044e5h,04529h,0668dh,04085h,040a6h,04105h,04148h,04042h
    4917 0001bf10     40e7     .word   040e7h,0414ah,0418ch,03ce9h,03c00h,03885h,03929h,0394ah
    4918 0001bf90     3443     .word   03443h,03509h,03528h,034a5h,030c4h,03000h,03084h,030e7h
    4919 0001c010     28c6     .word   028c6h,01c63h,01842h,07cc0h,07d49h,01362h,042b3h,03e4fh
    4920 0001c090     5650     .word   05650h,04e30h,07e20h,02be0h,00c1fh,0145fh,024beh,077beh
    4921 0001c110     355d     .word   0355dh,06f7dh,0773ch,0419ch,0565ch,06b5ch,049bbh,05f1bh
    4922 0001c190     66ba     .word   066bah,04ddah,0417ah,0733ah,06279h,062f9h,05af9h,05677h
    4923 0001c210     5ed7     .word   05ed7h,05ad7h,056d7h,04216h,06ad5h,05a96h,055d5h,05e75h
    4924 0001c290     5655     .word   05655h,06af5h,05a95h,05a74h,045d3h,03573h,03df3h,05a13h
    4925 0001c310     6273     .word   06273h,04a53h,051d2h,05212h,05612h,06e31h,04a52h,02a32h
    4926 0001c390     4d71     .word   04d71h,045d1h,03991h,06271h,02171h,04a11h,02591h,05e31h
    4927 0001c410     5650     .word   05650h,0314fh,0250fh,05a4eh,03d6eh,059ceh,041aeh,049eeh
    4928 0001c490     14ce     .word   014ceh,0210eh,0256eh,024adh,0210dh,0316dh,059edh,01c6ch
    4929 0001c510     142b     .word   0142bh,0106bh,049abh,02d4bh,0312ah,020cah,0250ah,0292ah
    4930 0001c590     1488     .word   01488h,020c7h,01846h,01ca6h,01864h,07b6eh,07759h,05230h
    4931 0001c610     7edf     .word   07edfh,07b3bh,06676h,038ebh,03029h,0635ah,06f5ah,05a94h
    4932 0001c690     5eb3     .word   05eb3h,04a52h,03e31h,05691h,02508h,020c6h
TMS340 COFF Macro Assembler Version 6.10     Wed Apr 21 11:31:43 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE  114

    4933                    
    4934 0001c6f0           BFLASHa4:
    4935 0001c6f0     00fe     .word   254
    4936 0001c700     0000     .word   00000h,07fffh,07fdeh,07fbdh,07f9ch,07b7bh,0775ah,06f18h
    4937 0001c780     6af7     .word   06af7h,066d6h,05e94h,06a91h,0396bh,0354ah,03129h,01c84h
    4938 0001c800     1021     .word   01021h,07e39h,07e7eh,05108h,07c00h,07e74h,07dd6h,07f99h
    4939 0001c880     7f9a     .word   07f9ah,07f78h,07d86h,07ed5h,07cc6h,07dadh,07d46h,07e51h
    4940 0001c900     7d49     .word   07d49h,07e5ah,07f77h,07f58h,07ef3h,07f38h,07d27h,07defh
    4941 0001c980     79d7     .word   079d7h,07b45h,07b46h,07af1h,07b59h,07b16h,07ab2h,079ach
    4942 0001ca00     78a5     .word   078a5h,078c6h,078e7h,07b5ah,07674h,07595h,075f8h,07738h
    4943 0001ca80     7691     .word   07691h,076d5h,07672h,07548h,07529h,07215h,0726dh,07270h
    4944 0001cb00     71cd     .word   071cdh,07000h,070a5h,070e7h,0716bh,06c44h,06e8fh,06ef6h
    4945 0001cb80     6e92     .word   06e92h,06dabh,06e10h,06a75h,06ab3h,06a4fh,06a71h,06a73h
    4946 0001cc00     662d     .word   0662dh,0660eh,06212h,05e0ch,05e0dh,05e2fh,05c20h,05c41h
    4947 0001cc80     5c62     .word   05c62h,05d29h,06ed3h,058c7h,05a11h,05a51h,05988h,05a0fh
    4948 0001cd00     58a2     .word   058a2h,05906h,0596bh,059ceh,059efh,055aeh,05569h,055cdh
    4949 0001cd80     5506     .word   05506h,05420h,054a5h,05508h,05109h,06a4ch,05026h,0662fh
    4950 0001ce00     516e     .word   0516eh,062afh,051abh,06acfh,059aeh,04800h,04509h,04449h
    4951 0001ce80     44e5     .word   044e5h,04529h,0668dh,04085h,040a6h,04105h,04148h,04042h
    4952 0001cf00     40e7     .word   040e7h,0414ah,0418ch,03ce9h,03c00h,03885h,03929h,0394ah
    4953 0001cf80     3443     .word   03443h,03509h,03528h,034a5h,030c4h,03000h,03084h,030e7h
    4954 0001d000     28c6     .word   028c6h,01c63h,01842h,02800h,03929h,01362h,042b3h,03e4fh
    4955 0001d080     5650     .word   05650h,04e30h,03800h,02be0h,00c1fh,0145fh,024beh,077beh
    4956 0001d100     355d     .word   0355dh,06f7dh,0773ch,0419ch,0565ch,06b5ch,049bbh,05f1bh
    4957 0001d180     66ba     .word   066bah,04ddah,0417ah,0733ah,06279h,062f9h,05af9h,05677h
    4958 0001d200     5ed7     .word   05ed7h,05ad7h,056d7h,04216h,06ad5h,05a96h,055d5h,05e75h
    4959 0001d280     5655     .word   05655h,06af5h,05a95h,05a74h,045d3h,03573h,03df3h,05a13h
    4960 0001d300     6273     .word   06273h,04a53h,051d2h,05212h,05612h,06e31h,04a52h,02a32h
    4961 0001d380     4d71     .word   04d71h,045d1h,03991h,06271h,02171h,04a11h,02591h,05e31h
    4962 0001d400     5650     .word   05650h,0314fh,0250fh,05a4eh,03d6eh,059ceh,041aeh,049eeh
    4963 0001d480     14ce     .word   014ceh,0210eh,0256eh,024adh,0210dh,0316dh,059edh,01c6ch
    4964 0001d500     142b     .word   0142bh,0106bh,049abh,02d4bh,0312ah,020cah,0250ah,0292ah
    4965 0001d580     1488     .word   01488h,020c7h,01846h,01ca6h,01864h,07b6eh,07759h,05230h
    4966 0001d600     7edf     .word   07edfh,07b3bh,06676h,038ebh,03029h,0635ah,06f5ah,05a94h
    4967 0001d680     5eb3     .word   05eb3h,04a52h,03e31h,05691h,02508h,020c6h
    4968                    
    4969 0001d6e0           BFLASHa5:
    4970 0001d6e0     00fe     .word   254
    4971 0001d6f0     0000     .word   00000h,07fffh,07fdeh,07fbdh,07f9ch,07b7bh,0775ah,06f18h
    4972 0001d770     6af7     .word   06af7h,066d6h,05e94h,06a91h,0396bh,0354ah,03129h,01c84h
    4973 0001d7f0     1021     .word   01021h,07e39h,07e7eh,05108h,07c00h,07e74h,07dd6h,07f99h
    4974 0001d870     7f9a     .word   07f9ah,07f78h,07d86h,07ed5h,07cc6h,07dadh,07d46h,07e51h
    4975 0001d8f0     7d49     .word   07d49h,07e5ah,07f77h,07f58h,07ef3h,07f38h,07d27h,07defh
    4976 0001d970     79d7     .word   079d7h,07b45h,07b46h,07af1h,07b59h,07b16h,07ab2h,079ach
    4977 0001d9f0     78a5     .word   078a5h,078c6h,078e7h,07b5ah,07674h,07595h,075f8h,07738h
    4978 0001da70     7691     .word   07691h,076d5h,07672h,07548h,07529h,07215h,0726dh,07270h
    4979 0001daf0     71cd     .word   071cdh,07000h,070a5h,070e7h,0716bh,06c44h,06e8fh,06ef6h
    4980 0001db70     6e92     .word   06e92h,06dabh,06e10h,06a75h,06ab3h,06a4fh,06a71h,06a73h
    4981 0001dbf0     662d     .word   0662dh,0660eh,06212h,05e0ch,05e0dh,05e2fh,05c20h,05c41h
    4982 0001dc70     5c62     .word   05c62h,05d29h,06ed3h,058c7h,05a11h,05a51h,05988h,05a0fh
    4983 0001dcf0     58a2     .word   058a2h,05906h,0596bh,059ceh,059efh,055aeh,05569h,055cdh
    4984 0001dd70     5506     .word   05506h,05420h,054a5h,05508h,05109h,06a4ch,05026h,0662fh
    4985 0001ddf0     516e     .word   0516eh,062afh,051abh,06acfh,059aeh,04800h,04509h,04449h
    4986 0001de70     44e5     .word   044e5h,04529h,0668dh,04085h,040a6h,04105h,04148h,04042h
    4987 0001def0     40e7     .word   040e7h,0414ah,0418ch,03ce9h,03c00h,03885h,03929h,0394ah
TMS340 COFF Macro Assembler Version 6.10     Wed Apr 21 11:31:43 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE  115

    4988 0001df70     3443     .word   03443h,03509h,03528h,034a5h,030c4h,03000h,03084h,030e7h
    4989 0001dff0     28c6     .word   028c6h,01c63h,01842h,02800h,03929h,01362h,042b3h,03e4fh
    4990 0001e070     5650     .word   05650h,04e30h,03800h,00c60h,00c1fh,0145fh,024beh,077beh
    4991 0001e0f0     355d     .word   0355dh,06f7dh,0773ch,0419ch,0565ch,06b5ch,049bbh,05f1bh
    4992 0001e170     66ba     .word   066bah,04ddah,0417ah,0733ah,06279h,062f9h,05af9h,05677h
    4993 0001e1f0     5ed7     .word   05ed7h,05ad7h,056d7h,04216h,06ad5h,05a96h,055d5h,05e75h
    4994 0001e270     5655     .word   05655h,06af5h,05a95h,05a74h,045d3h,03573h,03df3h,05a13h
    4995 0001e2f0     6273     .word   06273h,04a53h,051d2h,05212h,05612h,06e31h,04a52h,02a32h
    4996 0001e370     4d71     .word   04d71h,045d1h,03991h,06271h,02171h,04a11h,02591h,05e31h
    4997 0001e3f0     5650     .word   05650h,0314fh,0250fh,05a4eh,03d6eh,059ceh,041aeh,049eeh
    4998 0001e470     14ce     .word   014ceh,0210eh,0256eh,024adh,0210dh,0316dh,059edh,01c6ch
    4999 0001e4f0     142b     .word   0142bh,0106bh,049abh,02d4bh,0312ah,020cah,0250ah,0292ah
    5000 0001e570     1488     .word   01488h,020c7h,01846h,01ca6h,01864h,07b6eh,07759h,05230h
    5001 0001e5f0     7edf     .word   07edfh,07b3bh,06676h,038ebh,03029h,0635ah,06f5ah,05a94h
    5002 0001e670     5eb3     .word   05eb3h,04a52h,03e31h,05691h,02508h,020c6h
    5003                    
    5004 0001e6d0           BFLASHb2:
    5005 0001e6d0     00fe     .word   254
    5006 0001e6e0     0000     .word   00000h,07fffh,07fdeh,07fbdh,07f9ch,07b7bh,0775ah,07f98h
    5007 0001e760     6af7     .word   06af7h,07b36h,07f14h,07f11h,0498bh,0354ah,03129h,01c84h
    5008 0001e7e0     1021     .word   01021h,07e39h,07e7eh,07d08h,07c00h,07e74h,07dd6h,07f99h
    5009 0001e860     7f9a     .word   07f9ah,07f78h,07d86h,07ed5h,07cc6h,07dadh,07d46h,07e51h
    5010 0001e8e0     7d49     .word   07d49h,07e5ah,07f77h,07f58h,07ef3h,07f38h,07d27h,07defh
    5011 0001e960     79d7     .word   079d7h,07b45h,07b46h,07af1h,07b59h,07b16h,07ab2h,079ach
    5012 0001e9e0     78a5     .word   078a5h,078c6h,078e7h,07b5ah,07674h,07595h,075f8h,07738h
    5013 0001ea60     7691     .word   07691h,076d5h,07672h,07548h,07529h,07215h,0726dh,07270h
    5014 0001eae0     71cd     .word   071cdh,07000h,070a5h,070e7h,0716bh,06c44h,06e8fh,06ef6h
    5015 0001eb60     6e92     .word   06e92h,06dabh,06e10h,06a75h,06ab3h,06a4fh,06a71h,06a73h
    5016 0001ebe0     662d     .word   0662dh,0660eh,06212h,05e0ch,05e0dh,05e2fh,05c20h,05c41h
    5017 0001ec60     5c62     .word   05c62h,05d29h,06ed3h,058c7h,05a11h,05a51h,05988h,05a0fh
    5018 0001ece0     58a2     .word   058a2h,05906h,0596bh,059ceh,059efh,055aeh,05569h,055cdh
    5019 0001ed60     5506     .word   05506h,05420h,054a5h,05508h,05109h,06e4ch,05026h,07eafh
    5020 0001ede0     516e     .word   0516eh,076cfh,051abh,0776fh,076aeh,04800h,04509h,04449h
    5021 0001ee60     44e5     .word   044e5h,04529h,0668dh,04085h,040a6h,04105h,04148h,04042h
    5022 0001eee0     40e7     .word   040e7h,0554ah,04dcch,03ce9h,03c00h,03885h,03929h,0394ah
    5023 0001ef60     3443     .word   03443h,03509h,03528h,034a5h,030c4h,03000h,03084h,030e7h
    5024 0001efe0     28c6     .word   028c6h,01c63h,01842h,07c00h,07d29h,01362h,042b3h,03e4fh
    5025 0001f060     7250     .word   07250h,06a50h,07d00h,00c60h,00c1fh,0145fh,024beh,077beh
    5026 0001f0e0     355d     .word   0355dh,06f7dh,0773ch,0419ch,0565ch,06b5ch,049bbh,05f1bh
    5027 0001f160     66ba     .word   066bah,04ddah,0417ah,0733ah,06279h,07719h,06f39h,05677h
    5028 0001f1e0     7b77     .word   07b77h,07777h,06af7h,04216h,07315h,07ef6h,055d5h,05e75h
    5029 0001f260     5655     .word   05655h,07b35h,07f15h,05a74h,045d3h,03573h,06a93h,06e53h
    5030 0001f2e0     7ef3     .word   07ef3h,04a53h,051d2h,05212h,05a12h,07ad1h,07ab2h,02a32h
    5031 0001f360     4d71     .word   04d71h,045d1h,03991h,072d1h,02171h,04a11h,02591h,07ab1h
    5032 0001f3e0     5650     .word   05650h,0314fh,0250fh,076ceh,03d6eh,06eceh,041aeh,0664eh
    5033 0001f460     14ce     .word   014ceh,0210eh,0256eh,024adh,0210dh,039cdh,07e6dh,01c6ch
    5034 0001f4e0     142b     .word   0142bh,0106bh,05e0bh,02d4bh,0312ah,020cah,0250ah,0292ah
    5035 0001f560     1488     .word   01488h,020c7h,01846h,01ca6h,01864h,07b6eh,07759h,05230h
    5036 0001f5e0     7edf     .word   07edfh,07b3bh,06676h,038ebh,03029h,0635ah,06f5ah,076f4h
    5037 0001f660     7b33     .word   07b33h,07712h,03e31h,07ed1h,02508h,020c6h
    5038                    
    5039 0001f6c0           BFLASHb3:
    5040 0001f6c0     00fe     .word   254
    5041 0001f6d0     0000     .word   00000h,07fffh,07fdeh,07fbdh,07f9ch,07b7bh,0775ah,07f98h
    5042 0001f750     6af7     .word   06af7h,07b36h,07f14h,07f11h,0498bh,0354ah,03129h,01c84h
TMS340 COFF Macro Assembler Version 6.10     Wed Apr 21 11:31:43 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE  116

    5043 0001f7d0     1021     .word   01021h,07e39h,07e7eh,07d08h,07c00h,07e74h,07dd6h,07f99h
    5044 0001f850     7f9a     .word   07f9ah,07f78h,07d86h,07ed5h,07cc6h,07dadh,07d46h,07e51h
    5045 0001f8d0     7d49     .word   07d49h,07e5ah,07f77h,07f58h,07ef3h,07f38h,07d27h,07defh
    5046 0001f950     79d7     .word   079d7h,07b45h,07b46h,07af1h,07b59h,07b16h,07ab2h,079ach
    5047 0001f9d0     78a5     .word   078a5h,078c6h,078e7h,07b5ah,07674h,07595h,075f8h,07738h
    5048 0001fa50     7691     .word   07691h,076d5h,07672h,07548h,07529h,07215h,0726dh,07270h
    5049 0001fad0     71cd     .word   071cdh,07000h,070a5h,070e7h,0716bh,06c44h,06e8fh,06ef6h
    5050 0001fb50     6e92     .word   06e92h,06dabh,06e10h,06a75h,06ab3h,06a4fh,06a71h,06a73h
    5051 0001fbd0     662d     .word   0662dh,0660eh,06212h,05e0ch,05e0dh,05e2fh,05c20h,05c41h
    5052 0001fc50     5c62     .word   05c62h,05d29h,06ed3h,058c7h,05a11h,05a51h,05988h,05a0fh
    5053 0001fcd0     58a2     .word   058a2h,05906h,0596bh,059ceh,059efh,055aeh,05569h,055cdh
    5054 0001fd50     5506     .word   05506h,05420h,054a5h,05508h,05109h,06e4ch,05026h,07eafh
    5055 0001fdd0     516e     .word   0516eh,076cfh,051abh,0776fh,076aeh,04800h,04509h,04449h
    5056 0001fe50     44e5     .word   044e5h,04529h,0668dh,04085h,040a6h,04105h,04148h,04042h
    5057 0001fed0     40e7     .word   040e7h,0554ah,04dcch,03ce9h,03c00h,03885h,03929h,0394ah
    5058 0001ff50     3443     .word   03443h,03509h,03528h,034a5h,030c4h,03000h,03084h,030e7h
    5059 0001ffd0     28c6     .word   028c6h,01c63h,01842h,07c00h,07d29h,01362h,042b3h,03e4fh
    5060 00020050     7250     .word   07250h,06a50h,07d00h,00fe0h,00c1fh,0145fh,024beh,077beh
    5061 000200d0     355d     .word   0355dh,06f7dh,0773ch,0419ch,0565ch,06b5ch,049bbh,05f1bh
    5062 00020150     66ba     .word   066bah,04ddah,0417ah,0733ah,06279h,07719h,06f39h,05677h
    5063 000201d0     7b77     .word   07b77h,07777h,06af7h,04216h,07315h,07ef6h,055d5h,05e75h
    5064 00020250     5655     .word   05655h,07b35h,07f15h,05a74h,045d3h,03573h,06a93h,06e53h
    5065 000202d0     7ef3     .word   07ef3h,04a53h,051d2h,05212h,05a12h,07ad1h,07ab2h,02a32h
    5066 00020350     4d71     .word   04d71h,045d1h,03991h,072d1h,02171h,04a11h,02591h,07ab1h
    5067 000203d0     5650     .word   05650h,0314fh,0250fh,076ceh,03d6eh,06eceh,041aeh,0664eh
    5068 00020450     14ce     .word   014ceh,0210eh,0256eh,024adh,0210dh,039cdh,07e6dh,01c6ch
    5069 000204d0     142b     .word   0142bh,0106bh,05e0bh,02d4bh,0312ah,020cah,0250ah,0292ah
    5070 00020550     1488     .word   01488h,020c7h,01846h,01ca6h,01864h,07b6eh,07759h,05230h
    5071 000205d0     7edf     .word   07edfh,07b3bh,06676h,038ebh,03029h,0635ah,06f5ah,076f4h
    5072 00020650     7b33     .word   07b33h,07712h,03e31h,07ed1h,02508h,020c6h
    5073                    
    5074 000206b0           BFLASHb4:
    5075 000206b0     00fe     .word   254
    5076 000206c0     0000     .word   00000h,07fffh,07fdeh,07fbdh,07f9ch,07b7bh,0775ah,07f98h
    5077 00020740     6af7     .word   06af7h,07b36h,07f14h,07f11h,0498bh,0354ah,03129h,01c84h
    5078 000207c0     1021     .word   01021h,07e39h,07e7eh,05108h,07c00h,07e74h,07dd6h,07f99h
    5079 00020840     7f9a     .word   07f9ah,07f78h,07d86h,07ed5h,07cc6h,07dadh,07d46h,07e51h
    5080 000208c0     7d49     .word   07d49h,07e5ah,07f77h,07f58h,07ef3h,07f38h,07d27h,07defh
    5081 00020940     79d7     .word   079d7h,07b45h,07b46h,07af1h,07b59h,07b16h,07ab2h,079ach
    5082 000209c0     78a5     .word   078a5h,078c6h,078e7h,07b5ah,07674h,07595h,075f8h,07738h
    5083 00020a40     7691     .word   07691h,076d5h,07672h,07548h,07529h,07215h,0726dh,07270h
    5084 00020ac0     71cd     .word   071cdh,07000h,070a5h,070e7h,0716bh,06c44h,06e8fh,06ef6h
    5085 00020b40     6e92     .word   06e92h,06dabh,06e10h,06a75h,06ab3h,06a4fh,06a71h,06a73h
    5086 00020bc0     662d     .word   0662dh,0660eh,06212h,05e0ch,05e0dh,05e2fh,05c20h,05c41h
    5087 00020c40     5c62     .word   05c62h,05d29h,06ed3h,058c7h,05a11h,05a51h,05988h,05a0fh
    5088 00020cc0     58a2     .word   058a2h,05906h,0596bh,059ceh,059efh,055aeh,05569h,055cdh
    5089 00020d40     5506     .word   05506h,05420h,054a5h,05508h,05109h,06e4ch,05026h,07eafh
    5090 00020dc0     516e     .word   0516eh,076cfh,051abh,0776fh,076aeh,04800h,04509h,04449h
    5091 00020e40     44e5     .word   044e5h,04529h,0668dh,04085h,040a6h,04105h,04148h,04042h
    5092 00020ec0     40e7     .word   040e7h,0554ah,04dcch,03ce9h,03c00h,03885h,03929h,0394ah
    5093 00020f40     3443     .word   03443h,03509h,03528h,034a5h,030c4h,03000h,03084h,030e7h
    5094 00020fc0     28c6     .word   028c6h,01c63h,01842h,02800h,03929h,01362h,042b3h,03e4fh
    5095 00021040     7250     .word   07250h,06a50h,03800h,00fe0h,00c1fh,0145fh,024beh,077beh
    5096 000210c0     355d     .word   0355dh,06f7dh,0773ch,0419ch,0565ch,06b5ch,049bbh,05f1bh
    5097 00021140     66ba     .word   066bah,04ddah,0417ah,0733ah,06279h,07719h,06f39h,05677h
TMS340 COFF Macro Assembler Version 6.10     Wed Apr 21 11:31:43 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE  117

    5098 000211c0     7b77     .word   07b77h,07777h,06af7h,04216h,07315h,07ef6h,055d5h,05e75h
    5099 00021240     5655     .word   05655h,07b35h,07f15h,05a74h,045d3h,03573h,06a93h,06e53h
    5100 000212c0     7ef3     .word   07ef3h,04a53h,051d2h,05212h,05a12h,07ad1h,07ab2h,02a32h
    5101 00021340     4d71     .word   04d71h,045d1h,03991h,072d1h,02171h,04a11h,02591h,07ab1h
    5102 000213c0     5650     .word   05650h,0314fh,0250fh,076ceh,03d6eh,06eceh,041aeh,0664eh
    5103 00021440     14ce     .word   014ceh,0210eh,0256eh,024adh,0210dh,039cdh,07e6dh,01c6ch
    5104 000214c0     142b     .word   0142bh,0106bh,05e0bh,02d4bh,0312ah,020cah,0250ah,0292ah
    5105 00021540     1488     .word   01488h,020c7h,01846h,01ca6h,01864h,07b6eh,07759h,05230h
    5106 000215c0     7edf     .word   07edfh,07b3bh,06676h,038ebh,03029h,0635ah,06f5ah,076f4h
    5107 00021640     7b33     .word   07b33h,07712h,03e31h,07ed1h,02508h,020c6h
    5108                    
    5109 000216a0           BFLASHb5:
    5110 000216a0     00fe     .word   254
    5111 000216b0     0000     .word   00000h,07fffh,07fdeh,07fbdh,07f9ch,07b7bh,0775ah,07f98h
    5112 00021730     6af7     .word   06af7h,07b36h,07f14h,07f11h,0498bh,0354ah,03129h,01c84h
    5113 000217b0     1021     .word   01021h,07e39h,07e7eh,05108h,07c00h,07e74h,07dd6h,07f99h
    5114 00021830     7f9a     .word   07f9ah,07f78h,07d86h,07ed5h,07cc6h,07dadh,07d46h,07e51h
    5115 000218b0     7d49     .word   07d49h,07e5ah,07f77h,07f58h,07ef3h,07f38h,07d27h,07defh
    5116 00021930     79d7     .word   079d7h,07b45h,07b46h,07af1h,07b59h,07b16h,07ab2h,079ach
    5117 000219b0     78a5     .word   078a5h,078c6h,078e7h,07b5ah,07674h,07595h,075f8h,07738h
    5118 00021a30     7691     .word   07691h,076d5h,07672h,07548h,07529h,07215h,0726dh,07270h
    5119 00021ab0     71cd     .word   071cdh,07000h,070a5h,070e7h,0716bh,06c44h,06e8fh,06ef6h
    5120 00021b30     6e92     .word   06e92h,06dabh,06e10h,06a75h,06ab3h,06a4fh,06a71h,06a73h
    5121 00021bb0     662d     .word   0662dh,0660eh,06212h,05e0ch,05e0dh,05e2fh,05c20h,05c41h
    5122 00021c30     5c62     .word   05c62h,05d29h,06ed3h,058c7h,05a11h,05a51h,05988h,05a0fh
    5123 00021cb0     58a2     .word   058a2h,05906h,0596bh,059ceh,059efh,055aeh,05569h,055cdh
    5124 00021d30     5506     .word   05506h,05420h,054a5h,05508h,05109h,06e4ch,05026h,07eafh
    5125 00021db0     516e     .word   0516eh,076cfh,051abh,0776fh,076aeh,04800h,04509h,04449h
    5126 00021e30     44e5     .word   044e5h,04529h,0668dh,04085h,040a6h,04105h,04148h,04042h
    5127 00021eb0     40e7     .word   040e7h,0554ah,04dcch,03ce9h,03c00h,03885h,03929h,0394ah
    5128 00021f30     3443     .word   03443h,03509h,03528h,034a5h,030c4h,03000h,03084h,030e7h
    5129 00021fb0     28c6     .word   028c6h,01c63h,01842h,02800h,03929h,01362h,042b3h,03e4fh
    5130 00022030     7250     .word   07250h,06a50h,03800h,00c60h,00c1fh,0145fh,024beh,077beh
    5131 000220b0     355d     .word   0355dh,06f7dh,0773ch,0419ch,0565ch,06b5ch,049bbh,05f1bh
    5132 00022130     66ba     .word   066bah,04ddah,0417ah,0733ah,06279h,07719h,06f39h,05677h
    5133 000221b0     7b77     .word   07b77h,07777h,06af7h,04216h,07315h,07ef6h,055d5h,05e75h
    5134 00022230     5655     .word   05655h,07b35h,07f15h,05a74h,045d3h,03573h,06a93h,06e53h
    5135 000222b0     7ef3     .word   07ef3h,04a53h,051d2h,05212h,05a12h,07ad1h,07ab2h,02a32h
    5136 00022330     4d71     .word   04d71h,045d1h,03991h,072d1h,02171h,04a11h,02591h,07ab1h
    5137 000223b0     5650     .word   05650h,0314fh,0250fh,076ceh,03d6eh,06eceh,041aeh,0664eh
    5138 00022430     14ce     .word   014ceh,0210eh,0256eh,024adh,0210dh,039cdh,07e6dh,01c6ch
    5139 000224b0     142b     .word   0142bh,0106bh,05e0bh,02d4bh,0312ah,020cah,0250ah,0292ah
    5140 00022530     1488     .word   01488h,020c7h,01846h,01ca6h,01864h,07b6eh,07759h,05230h
    5141 000225b0     7edf     .word   07edfh,07b3bh,06676h,038ebh,03029h,0635ah,06f5ah,076f4h
    5142 00022630     7b33     .word   07b33h,07712h,03e31h,07ed1h,02508h,020c6h
    5143                    
    5144 00022690           BFLASHc2:
    5145 00022690     00fe     .word   254
    5146 000226a0     0000     .word   00000h,07fffh,07fffh,07fdeh,07fbdh,07f9ch,07b7bh,07fb9h
    5147 00022720     6f18     .word   06f18h,07f57h,07f77h,07fb6h,04dach,0396bh,0354ah,020a5h
    5148 000227a0     1442     .word   01442h,07e5ah,07e9fh,07d29h,07c21h,07e95h,07df7h,07fbah
    5149 00022820     7fbb     .word   07fbbh,07f99h,07da7h,07ef6h,07ce7h,07dceh,07d67h,07e72h
    5150 000228a0     7d8a     .word   07d8ah,07e7bh,07f98h,07f79h,07f14h,07f59h,07d48h,07e10h
    5151 00022920     7df8     .word   07df8h,07f66h,07f67h,07f12h,07f7ah,07f37h,07ed3h,07dcdh
    5152 000229a0     7cc6     .word   07cc6h,07ce7h,07d08h,07f7bh,07a95h,079b6h,07a19h,07b59h
TMS340 COFF Macro Assembler Version 6.10     Wed Apr 21 11:31:43 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE  118

    5153 00022a20     7ab2     .word   07ab2h,07af6h,07a93h,07969h,0794ah,07636h,0768eh,07691h
    5154 00022aa0     75ee     .word   075eeh,07421h,074c6h,07508h,0758ch,07065h,072b0h,07317h
    5155 00022b20     72b3     .word   072b3h,071cch,07231h,06e96h,06ed4h,06e70h,07732h,06e94h
    5156 00022ba0     6a4e     .word   06a4eh,06a2fh,06633h,0622dh,0622eh,076d0h,06041h,06062h
    5157 00022c20     6083     .word   06083h,0614ah,07b78h,05ce8h,06e73h,05e72h,05da9h,05e30h
    5158 00022ca0     5cc3     .word   05cc3h,05d27h,06aafh,06a91h,05e10h,059cfh,0598ah,059eeh
    5159 00022d20     5927     .word   05927h,05841h,058c6h,05929h,0552ah,07af0h,05447h,07ed0h
    5160 00022da0     558f     .word   0558fh,07af0h,055cch,07b90h,07acfh,04c21h,0492ah,0486ah
    5161 00022e20     4906     .word   04906h,0494ah,06aaeh,044a6h,044c7h,04526h,04569h,04463h
    5162 00022ea0     4508     .word   04508h,05e0ch,0660dh,0410ah,04021h,03ca6h,03d4ah,03d6bh
    5163 00022f20     3864     .word   03864h,0392ah,03949h,038c6h,034e5h,03421h,034a5h,03508h
    5164 00022fa0     2ce7     .word   02ce7h,02084h,01c63h,07d40h,07d4ah,01783h,046d4h,04270h
    5165 00023020     7f54     .word   07f54h,07f37h,07e60h,01081h,0103fh,0187fh,028dfh,07bdfh
    5166 000230a0     397e     .word   0397eh,0739eh,07b5dh,045bdh,05a7dh,0739eh,04ddch,0633ch
    5167 00023120     6adb     .word   06adbh,051fbh,0459bh,0775bh,0669ah,07b7ch,0777bh,05a98h
    5168 000231a0     7f98     .word   07f98h,07b98h,07b9bh,04637h,07fbah,07fbah,059f6h,06296h
    5169 00023220     5a76     .word   05a76h,07f79h,07f99h,05e95h,049f4h,03994h,06eb4h,07b75h
    5170 000232a0     7f97     .word   07f97h,04e74h,055f3h,05633h,05e33h,07fb8h,07f34h,02e53h
    5171 00023320     5192     .word   05192h,049f2h,03db2h,07f54h,02592h,04e32h,029b2h,07f33h
    5172 000233a0     6b16     .word   06b16h,03570h,02930h,07fb3h,0418fh,07b30h,045cfh,076cfh
    5173 00023420     18ef     .word   018efh,0252fh,0298fh,028ceh,0252eh,03deeh,07ef2h,0208dh
    5174 000234a0     184c     .word   0184ch,0148ch,0728eh,0316ch,0354bh,024ebh,0292bh,02d4bh
    5175 00023520     18a9     .word   018a9h,024e8h,01c67h,020c7h,01c85h,07f8fh,07b7ah,05651h
    5176 000235a0     7eff     .word   07effh,07f5ch,06a97h,03d0ch,0344ah,0677bh,0737bh,07b7ah
    5177 00023620     7f78     .word   07f78h,07b33h,04252h,07f16h,02929h,024e7h
    5178                    
    5179 00023680           BFLASHc3:
    5180 00023680     00fe     .word   254
    5181 00023690     0000     .word   00000h,07fffh,07fffh,07fdeh,07fbdh,07f9ch,07b7bh,07fb9h
    5182 00023710     6f18     .word   06f18h,07f57h,07f77h,07fb6h,04dach,0396bh,0354ah,020a5h
    5183 00023790     1442     .word   01442h,07e5ah,07e9fh,07d29h,07c21h,07e95h,07df7h,07fbah
    5184 00023810     7fbb     .word   07fbbh,07f99h,07da7h,07ef6h,07ce7h,07dceh,07d67h,07e72h
    5185 00023890     7d8a     .word   07d8ah,07e7bh,07f98h,07f79h,07f14h,07f59h,07d48h,07e10h
    5186 00023910     7df8     .word   07df8h,07f66h,07f67h,07f12h,07f7ah,07f37h,07ed3h,07dcdh
    5187 00023990     7cc6     .word   07cc6h,07ce7h,07d08h,07f7bh,07a95h,079b6h,07a19h,07b59h
    5188 00023a10     7ab2     .word   07ab2h,07af6h,07a93h,07969h,0794ah,07636h,0768eh,07691h
    5189 00023a90     75ee     .word   075eeh,07421h,074c6h,07508h,0758ch,07065h,072b0h,07317h
    5190 00023b10     72b3     .word   072b3h,071cch,07231h,06e96h,06ed4h,06e70h,07732h,06e94h
    5191 00023b90     6a4e     .word   06a4eh,06a2fh,06633h,0622dh,0622eh,076d0h,06041h,06062h
    5192 00023c10     6083     .word   06083h,0614ah,07b78h,05ce8h,06e73h,05e72h,05da9h,05e30h
    5193 00023c90     5cc3     .word   05cc3h,05d27h,06aafh,06a91h,05e10h,059cfh,0598ah,059eeh
    5194 00023d10     5927     .word   05927h,05841h,058c6h,05929h,0552ah,07af0h,05447h,07ed0h
    5195 00023d90     558f     .word   0558fh,07af0h,055cch,07b90h,07acfh,04c21h,0492ah,0486ah
    5196 00023e10     4906     .word   04906h,0494ah,06aaeh,044a6h,044c7h,04526h,04569h,04463h
    5197 00023e90     4508     .word   04508h,05e0ch,0660dh,0410ah,04021h,03ca6h,03d4ah,03d6bh
    5198 00023f10     3864     .word   03864h,0392ah,03949h,038c6h,034e5h,03421h,034a5h,03508h
    5199 00023f90     2ce7     .word   02ce7h,02084h,01c63h,07d40h,07d4ah,01783h,046d4h,04270h
    5200 00024010     7f54     .word   07f54h,07f37h,07e60h,013e1h,0103fh,0187fh,028dfh,07bdfh
    5201 00024090     397e     .word   0397eh,0739eh,07b5dh,045bdh,05a7dh,0739eh,04ddch,0633ch
    5202 00024110     6adb     .word   06adbh,051fbh,0459bh,0775bh,0669ah,07b7ch,0777bh,05a98h
    5203 00024190     7f98     .word   07f98h,07b98h,07b9bh,04637h,07fbah,07fbah,059f6h,06296h
    5204 00024210     5a76     .word   05a76h,07f79h,07f99h,05e95h,049f4h,03994h,06eb4h,07b75h
    5205 00024290     7f97     .word   07f97h,04e74h,055f3h,05633h,05e33h,07fb8h,07f34h,02e53h
    5206 00024310     5192     .word   05192h,049f2h,03db2h,07f54h,02592h,04e32h,029b2h,07f33h
    5207 00024390     6b16     .word   06b16h,03570h,02930h,07fb3h,0418fh,07b30h,045cfh,076cfh
TMS340 COFF Macro Assembler Version 6.10     Wed Apr 21 11:31:43 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE  119

    5208 00024410     18ef     .word   018efh,0252fh,0298fh,028ceh,0252eh,03deeh,07ef2h,0208dh
    5209 00024490     184c     .word   0184ch,0148ch,0728eh,0316ch,0354bh,024ebh,0292bh,02d4bh
    5210 00024510     18a9     .word   018a9h,024e8h,01c67h,020c7h,01c85h,07f8fh,07b7ah,05651h
    5211 00024590     7eff     .word   07effh,07f5ch,06a97h,03d0ch,0344ah,0677bh,0737bh,07b7ah
    5212 00024610     7f78     .word   07f78h,07b33h,04252h,07f16h,02929h,024e7h
    5213                    
    5214 00024670           BFLASHc4:
    5215 00024670     00fe     .word   254
    5216 00024680     0000     .word   00000h,07fffh,07fffh,07fdeh,07fbdh,07f9ch,07b7bh,07fb9h
    5217 00024700     6f18     .word   06f18h,07f57h,07f77h,07fb6h,04dach,0396bh,0354ah,020a5h
    5218 00024780     1442     .word   01442h,07e5ah,07e9fh,05529h,07c21h,07e95h,07df7h,07fbah
    5219 00024800     7fbb     .word   07fbbh,07f99h,07da7h,07ef6h,07ce7h,07dceh,07d67h,07e72h
    5220 00024880     7d8a     .word   07d8ah,07e7bh,07f98h,07f79h,07f14h,07f59h,07d48h,07e10h
    5221 00024900     7df8     .word   07df8h,07f66h,07f67h,07f12h,07f7ah,07f37h,07ed3h,07dcdh
    5222 00024980     7cc6     .word   07cc6h,07ce7h,07d08h,07f7bh,07a95h,079b6h,07a19h,07b59h
    5223 00024a00     7ab2     .word   07ab2h,07af6h,07a93h,07969h,0794ah,07636h,0768eh,07691h
    5224 00024a80     75ee     .word   075eeh,07421h,074c6h,07508h,0758ch,07065h,072b0h,07317h
    5225 00024b00     72b3     .word   072b3h,071cch,07231h,06e96h,06ed4h,06e70h,07732h,06e94h
    5226 00024b80     6a4e     .word   06a4eh,06a2fh,06633h,0622dh,0622eh,076d0h,06041h,06062h
    5227 00024c00     6083     .word   06083h,0614ah,07b78h,05ce8h,06e73h,05e72h,05da9h,05e30h
    5228 00024c80     5cc3     .word   05cc3h,05d27h,06aafh,06a91h,05e10h,059cfh,0598ah,059eeh
    5229 00024d00     5927     .word   05927h,05841h,058c6h,05929h,0552ah,07af0h,05447h,07ed0h
    5230 00024d80     558f     .word   0558fh,07af0h,055cch,07b90h,07acfh,04c21h,0492ah,0486ah
    5231 00024e00     4906     .word   04906h,0494ah,06aaeh,044a6h,044c7h,04526h,04569h,04463h
    5232 00024e80     4508     .word   04508h,05e0ch,0660dh,0410ah,04021h,03ca6h,03d4ah,03d6bh
    5233 00024f00     3864     .word   03864h,0392ah,03949h,038c6h,034e5h,03421h,034a5h,03508h
    5234 00024f80     2ce7     .word   02ce7h,02084h,01c63h,02c21h,03d4ah,01783h,046d4h,04270h
    5235 00025000     7f54     .word   07f54h,07f37h,03c21h,013e1h,0103fh,0187fh,028dfh,07bdfh
    5236 00025080     397e     .word   0397eh,0739eh,07b5dh,045bdh,05a7dh,0739eh,04ddch,0633ch
    5237 00025100     6adb     .word   06adbh,051fbh,0459bh,0775bh,0669ah,07b7ch,0777bh,05a98h
    5238 00025180     7f98     .word   07f98h,07b98h,07b9bh,04637h,07fbah,07fbah,059f6h,06296h
    5239 00025200     5a76     .word   05a76h,07f79h,07f99h,05e95h,049f4h,03994h,06eb4h,07b75h
    5240 00025280     7f97     .word   07f97h,04e74h,055f3h,05633h,05e33h,07fb8h,07f34h,02e53h
    5241 00025300     5192     .word   05192h,049f2h,03db2h,07f54h,02592h,04e32h,029b2h,07f33h
    5242 00025380     6b16     .word   06b16h,03570h,02930h,07fb3h,0418fh,07b30h,045cfh,076cfh
    5243 00025400     18ef     .word   018efh,0252fh,0298fh,028ceh,0252eh,03deeh,07ef2h,0208dh
    5244 00025480     184c     .word   0184ch,0148ch,0728eh,0316ch,0354bh,024ebh,0292bh,02d4bh
    5245 00025500     18a9     .word   018a9h,024e8h,01c67h,020c7h,01c85h,07f8fh,07b7ah,05651h
    5246 00025580     7eff     .word   07effh,07f5ch,06a97h,03d0ch,0344ah,0677bh,0737bh,07b7ah
    5247 00025600     7f78     .word   07f78h,07b33h,04252h,07f16h,02929h,024e7h
    5248                    
    5249 00025660           BFLASHc5:
    5250 00025660     00fe     .word   254
    5251 00025670     0000     .word   00000h,07fffh,07fffh,07fdeh,07fbdh,07f9ch,07b7bh,07fb9h
    5252 000256f0     6f18     .word   06f18h,07f57h,07f77h,07fb6h,04dach,0396bh,0354ah,020a5h
    5253 00025770     1442     .word   01442h,07e5ah,07e9fh,05529h,07c21h,07e95h,07df7h,07fbah
    5254 000257f0     7fbb     .word   07fbbh,07f99h,07da7h,07ef6h,07ce7h,07dceh,07d67h,07e72h
    5255 00025870     7d8a     .word   07d8ah,07e7bh,07f98h,07f79h,07f14h,07f59h,07d48h,07e10h
    5256 000258f0     7df8     .word   07df8h,07f66h,07f67h,07f12h,07f7ah,07f37h,07ed3h,07dcdh
    5257 00025970     7cc6     .word   07cc6h,07ce7h,07d08h,07f7bh,07a95h,079b6h,07a19h,07b59h
    5258 000259f0     7ab2     .word   07ab2h,07af6h,07a93h,07969h,0794ah,07636h,0768eh,07691h
    5259 00025a70     75ee     .word   075eeh,07421h,074c6h,07508h,0758ch,07065h,072b0h,07317h
    5260 00025af0     72b3     .word   072b3h,071cch,07231h,06e96h,06ed4h,06e70h,07732h,06e94h
    5261 00025b70     6a4e     .word   06a4eh,06a2fh,06633h,0622dh,0622eh,076d0h,06041h,06062h
    5262 00025bf0     6083     .word   06083h,0614ah,07b78h,05ce8h,06e73h,05e72h,05da9h,05e30h
TMS340 COFF Macro Assembler Version 6.10     Wed Apr 21 11:31:43 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE  120

    5263 00025c70     5cc3     .word   05cc3h,05d27h,06aafh,06a91h,05e10h,059cfh,0598ah,059eeh
    5264 00025cf0     5927     .word   05927h,05841h,058c6h,05929h,0552ah,07af0h,05447h,07ed0h
    5265 00025d70     558f     .word   0558fh,07af0h,055cch,07b90h,07acfh,04c21h,0492ah,0486ah
    5266 00025df0     4906     .word   04906h,0494ah,06aaeh,044a6h,044c7h,04526h,04569h,04463h
    5267 00025e70     4508     .word   04508h,05e0ch,0660dh,0410ah,04021h,03ca6h,03d4ah,03d6bh
    5268 00025ef0     3864     .word   03864h,0392ah,03949h,038c6h,034e5h,03421h,034a5h,03508h
    5269 00025f70     2ce7     .word   02ce7h,02084h,01c63h,02c21h,03d4ah,01783h,046d4h,04270h
    5270 00025ff0     7f54     .word   07f54h,07f37h,03c21h,01081h,0103fh,0187fh,028dfh,07bdfh
    5271 00026070     397e     .word   0397eh,0739eh,07b5dh,045bdh,05a7dh,0739eh,04ddch,0633ch
    5272 000260f0     6adb     .word   06adbh,051fbh,0459bh,0775bh,0669ah,07b7ch,0777bh,05a98h
    5273 00026170     7f98     .word   07f98h,07b98h,07b9bh,04637h,07fbah,07fbah,059f6h,06296h
    5274 000261f0     5a76     .word   05a76h,07f79h,07f99h,05e95h,049f4h,03994h,06eb4h,07b75h
    5275 00026270     7f97     .word   07f97h,04e74h,055f3h,05633h,05e33h,07fb8h,07f34h,02e53h
    5276 000262f0     5192     .word   05192h,049f2h,03db2h,07f54h,02592h,04e32h,029b2h,07f33h
    5277 00026370     6b16     .word   06b16h,03570h,02930h,07fb3h,0418fh,07b30h,045cfh,076cfh
    5278 000263f0     18ef     .word   018efh,0252fh,0298fh,028ceh,0252eh,03deeh,07ef2h,0208dh
    5279 00026470     184c     .word   0184ch,0148ch,0728eh,0316ch,0354bh,024ebh,0292bh,02d4bh
    5280 000264f0     18a9     .word   018a9h,024e8h,01c67h,020c7h,01c85h,07f8fh,07b7ah,05651h
    5281 00026570     7eff     .word   07effh,07f5ch,06a97h,03d0ch,0344ah,0677bh,0737bh,07b7ah
    5282 000265f0     7f78     .word   07f78h,07b33h,04252h,07f16h,02929h,024e7h
    5283                    
    5284 00026650           ALLBORD2:
    5285 00026650     00fe     .word   254
    5286 00026660     0000     .word   00000h,07fffh,07bdeh,077bdh,0739ch,06f7bh,06b5ah,06318h
    5287 000266e0     5ef7     .word   05ef7h,05ad6h,05294h,04631h,02d6bh,0294ah,02529h,01084h
    5288 00026760     0421     .word   00421h,07e39h,07e7eh,07d6dh,07c00h,07a74h,079d6h,07b99h
    5289 000267e0     7b9a     .word   07b9ah,07b78h,07986h,07ad5h,078c6h,079adh,07546h,07651h
    5290 00026860     7549     .word   07549h,0725ah,07377h,07358h,072f3h,07338h,07127h,071efh
    5291 000268e0     6dd7     .word   06dd7h,06f45h,06f46h,06ef1h,06f59h,06f16h,06eb2h,06dach
    5292 00026960     6ca5     .word   06ca5h,06cc6h,06ce7h,06f5ah,06a74h,06995h,069f8h,06b38h
    5293 000269e0     6a91     .word   06a91h,06ad5h,06a72h,06948h,06929h,06615h,0666dh,06670h
    5294 00026a60     65cd     .word   065cdh,06400h,064a5h,064e7h,0656bh,06044h,0628fh,062f6h
    5295 00026ae0     6292     .word   06292h,061abh,06210h,05e75h,05eb3h,05e4fh,05e71h,05e73h
    5296 00026b60     5a2d     .word   05a2dh,05a0eh,05612h,0520ch,0520dh,0522fh,05020h,05041h
    5297 00026be0     5062     .word   05062h,05129h,05273h,04cc7h,04e11h,04e51h,04d88h,04e0fh
    5298 00026c60     4ca2     .word   04ca2h,04d06h,04d6bh,04dceh,04defh,049aeh,04969h,049cdh
    5299 00026ce0     4906     .word   04906h,04820h,048a5h,04908h,04509h,0456ch,04426h,045cfh
    5300 00026d60     456e     .word   0456eh,0460fh,045abh,041efh,03d8eh,03c00h,03909h,03849h
    5301 00026de0     38e5     .word   038e5h,03929h,039adh,03485h,034a6h,03505h,03548h,03442h
    5302 00026e60     34e7     .word   034e7h,0354ah,0358ch,030e9h,03000h,02c85h,02d29h,02d4ah
    5303 00026ee0     2843     .word   02843h,02909h,02928h,028a5h,024c4h,02400h,02484h,024e7h
    5304 00026f60     1cc6     .word   01cc6h,01063h,00c42h,07c00h,07c6ah,00762h,036b3h,0324fh
    5305 00026fe0     3e30     .word   03e30h,04230h,07dc2h,00060h,0001fh,0085fh,018beh,06bbeh
    5306 00027060     295d     .word   0295dh,0637dh,06b3ch,0359ch,04a5ch,05f5ch,03dbbh,0531bh
    5307 000270e0     5aba     .word   05abah,041dah,0357ah,0673ah,05679h,056f9h,04ef9h,04a77h
    5308 00027160     52d7     .word   052d7h,042b7h,04ad7h,03616h,03e76h,04296h,049d5h,05275h
    5309 000271e0     4a55     .word   04a55h,04e95h,04275h,04e74h,039d3h,02973h,02dd3h,03613h
    5310 00027260     3633     .word   03633h,03e53h,045d2h,04612h,025b2h,03a32h,03632h,01e32h
    5311 000272e0     4171     .word   04171h,039d1h,02d91h,031d1h,01571h,03e11h,01991h,03611h
    5312 00027360     2dd0     .word   02dd0h,0254fh,0190fh,035cfh,0316eh,0318eh,035aeh,0296eh
    5313 000273e0     08ce     .word   008ceh,0150eh,0196eh,018adh,0150dh,0256dh,02d8dh,0106ch
    5314 00027460     082b     .word   0082bh,0046bh,0254bh,0214bh,0252ah,014cah,0190ah,01d2ah
    5315 000274e0     0888     .word   00888h,014c7h,00c46h,010a6h,00c64h,06f6eh,06b59h,04630h
    5316 00027560     7edf     .word   07edfh,06f3bh,05a76h,02cebh,02429h,0575ah,0635ah,04e94h
    5317 000275e0     4673     .word   04673h,03e52h,03231h,04231h,01908h,014c6h
TMS340 COFF Macro Assembler Version 6.10     Wed Apr 21 11:31:43 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE  121

    5318                    
    5319 00027640           ALLBORD3:
    5320 00027640     00fe     .word   254
    5321 00027650     0000     .word   00000h,07fffh,07bdeh,077bdh,0739ch,06f7bh,06b5ah,06318h
    5322 000276d0     5ef7     .word   05ef7h,05ad6h,05294h,04631h,02d6bh,0294ah,02529h,01084h
    5323 00027750     0421     .word   00421h,07e39h,07e7eh,07d6dh,07c00h,07a74h,079d6h,07b99h
    5324 000277d0     7b9a     .word   07b9ah,07b78h,07986h,07ad5h,078c6h,079adh,07546h,07651h
    5325 00027850     7549     .word   07549h,0725ah,07377h,07358h,072f3h,07338h,07127h,071efh
    5326 000278d0     6dd7     .word   06dd7h,06f45h,06f46h,06ef1h,06f59h,06f16h,06eb2h,06dach
    5327 00027950     6ca5     .word   06ca5h,06cc6h,06ce7h,06f5ah,06a74h,06995h,069f8h,06b38h
    5328 000279d0     6a91     .word   06a91h,06ad5h,06a72h,06948h,06929h,06615h,0666dh,06670h
    5329 00027a50     65cd     .word   065cdh,06400h,064a5h,064e7h,0656bh,06044h,0628fh,062f6h
    5330 00027ad0     6292     .word   06292h,061abh,06210h,05e75h,05eb3h,05e4fh,05e71h,05e73h
    5331 00027b50     5a2d     .word   05a2dh,05a0eh,05612h,0520ch,0520dh,0522fh,05020h,05041h
    5332 00027bd0     5062     .word   05062h,05129h,05273h,04cc7h,04e11h,04e51h,04d88h,04e0fh
    5333 00027c50     4ca2     .word   04ca2h,04d06h,04d6bh,04dceh,04defh,049aeh,04969h,049cdh
    5334 00027cd0     4906     .word   04906h,04820h,048a5h,04908h,04509h,0456ch,04426h,045cfh
    5335 00027d50     456e     .word   0456eh,0460fh,045abh,041efh,03d8eh,03c00h,03909h,03849h
    5336 00027dd0     38e5     .word   038e5h,03929h,039adh,03485h,034a6h,03505h,03548h,03442h
    5337 00027e50     34e7     .word   034e7h,0354ah,0358ch,030e9h,03000h,02c85h,02d29h,02d4ah
    5338 00027ed0     2843     .word   02843h,02909h,02928h,028a5h,024c4h,02400h,02484h,024e7h
    5339 00027f50     1cc6     .word   01cc6h,01063h,00c42h,07c00h,07c6ah,00762h,036b3h,0324fh
    5340 00027fd0     3e30     .word   03e30h,04230h,07dc2h,003e0h,0001fh,0085fh,018beh,06bbeh
    5341 00028050     295d     .word   0295dh,0637dh,06b3ch,0359ch,04a5ch,05f5ch,03dbbh,0531bh
    5342 000280d0     5aba     .word   05abah,041dah,0357ah,0673ah,05679h,056f9h,04ef9h,04a77h
    5343 00028150     52d7     .word   052d7h,042b7h,04ad7h,03616h,03e76h,04296h,049d5h,05275h
    5344 000281d0     4a55     .word   04a55h,04e95h,04275h,04e74h,039d3h,02973h,02dd3h,03613h
    5345 00028250     3633     .word   03633h,03e53h,045d2h,04612h,025b2h,03a32h,03632h,01e32h
    5346 000282d0     4171     .word   04171h,039d1h,02d91h,031d1h,01571h,03e11h,01991h,03611h
    5347 00028350     2dd0     .word   02dd0h,0254fh,0190fh,035cfh,0316eh,0318eh,035aeh,0296eh
    5348 000283d0     08ce     .word   008ceh,0150eh,0196eh,018adh,0150dh,0256dh,02d8dh,0106ch
    5349 00028450     082b     .word   0082bh,0046bh,0254bh,0214bh,0252ah,014cah,0190ah,01d2ah
    5350 000284d0     0888     .word   00888h,014c7h,00c46h,010a6h,00c64h,06f6eh,06b59h,04630h
    5351 00028550     7edf     .word   07edfh,06f3bh,05a76h,02cebh,02429h,0575ah,0635ah,04e94h
    5352 000285d0     4673     .word   04673h,03e52h,03231h,04231h,01908h,014c6h
    5353                    
    5354 00028630           ALLBORD4:
    5355 00028630     00fe     .word   254
    5356 00028640     0000     .word   00000h,07fffh,07bdeh,077bdh,0739ch,06f7bh,06b5ah,06318h
    5357 000286c0     5ef7     .word   05ef7h,05ad6h,05294h,04631h,02d6bh,0294ah,02529h,01084h
    5358 00028740     0421     .word   00421h,07e39h,07e7eh,04508h,07c00h,07a74h,079d6h,07b99h
    5359 000287c0     7b9a     .word   07b9ah,07b78h,07986h,07ad5h,078c6h,079adh,07546h,07651h
    5360 00028840     7549     .word   07549h,0725ah,07377h,07358h,072f3h,07338h,07127h,071efh
    5361 000288c0     6dd7     .word   06dd7h,06f45h,06f46h,06ef1h,06f59h,06f16h,06eb2h,06dach
    5362 00028940     6ca5     .word   06ca5h,06cc6h,06ce7h,06f5ah,06a74h,06995h,069f8h,06b38h
    5363 000289c0     6a91     .word   06a91h,06ad5h,06a72h,06948h,06929h,06615h,0666dh,06670h
    5364 00028a40     65cd     .word   065cdh,06400h,064a5h,064e7h,0656bh,06044h,0628fh,062f6h
    5365 00028ac0     6292     .word   06292h,061abh,06210h,05e75h,05eb3h,05e4fh,05e71h,05e73h
    5366 00028b40     5a2d     .word   05a2dh,05a0eh,05612h,0520ch,0520dh,0522fh,05020h,05041h
    5367 00028bc0     5062     .word   05062h,05129h,05273h,04cc7h,04e11h,04e51h,04d88h,04e0fh
    5368 00028c40     4ca2     .word   04ca2h,04d06h,04d6bh,04dceh,04defh,049aeh,04969h,049cdh
    5369 00028cc0     4906     .word   04906h,04820h,048a5h,04908h,04509h,0456ch,04426h,045cfh
    5370 00028d40     456e     .word   0456eh,0460fh,045abh,041efh,03d8eh,03c00h,03909h,03849h
    5371 00028dc0     38e5     .word   038e5h,03929h,039adh,03485h,034a6h,03505h,03548h,03442h
    5372 00028e40     34e7     .word   034e7h,0354ah,0358ch,030e9h,03000h,02c85h,02d29h,02d4ah
TMS340 COFF Macro Assembler Version 6.10     Wed Apr 21 11:31:43 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE  122

    5373 00028ec0     2843     .word   02843h,02909h,02928h,028a5h,024c4h,02400h,02484h,024e7h
    5374 00028f40     1cc6     .word   01cc6h,01063h,00c42h,01c00h,02d29h,00762h,036b3h,0324fh
    5375 00028fc0     3e30     .word   03e30h,04230h,02c00h,003e0h,0001fh,0085fh,018beh,06bbeh
    5376 00029040     295d     .word   0295dh,0637dh,06b3ch,0359ch,04a5ch,05f5ch,03dbbh,0531bh
    5377 000290c0     5aba     .word   05abah,041dah,0357ah,0673ah,05679h,056f9h,04ef9h,04a77h
    5378 00029140     52d7     .word   052d7h,042b7h,04ad7h,03616h,03e76h,04296h,049d5h,05275h
    5379 000291c0     4a55     .word   04a55h,04e95h,04275h,04e74h,039d3h,02973h,02dd3h,03613h
    5380 00029240     3633     .word   03633h,03e53h,045d2h,04612h,025b2h,03a32h,03632h,01e32h
    5381 000292c0     4171     .word   04171h,039d1h,02d91h,031d1h,01571h,03e11h,01991h,03611h
    5382 00029340     2dd0     .word   02dd0h,0254fh,0190fh,035cfh,0316eh,0318eh,035aeh,0296eh
    5383 000293c0     08ce     .word   008ceh,0150eh,0196eh,018adh,0150dh,0256dh,02d8dh,0106ch
    5384 00029440     082b     .word   0082bh,0046bh,0254bh,0214bh,0252ah,014cah,0190ah,01d2ah
    5385 000294c0     0888     .word   00888h,014c7h,00c46h,010a6h,00c64h,06f6eh,06b59h,04630h
    5386 00029540     7edf     .word   07edfh,06f3bh,05a76h,02cebh,02429h,0575ah,0635ah,04e94h
    5387 000295c0     4673     .word   04673h,03e52h,03231h,04231h,01908h,014c6h
    5388                    
    5389                            .end

 No Errors,  No Warnings
