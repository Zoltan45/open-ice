TMS340 COFF Macro Assembler Version 6.10     Wed Apr 21 11:30:43 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE    1

       1                            .MLIB   "HHMACS.LIB"
       2                            .FILE   "HHAFUNC.ASM"
       3                            .WIDTH  132
       4                            .OPTION B,D,L
       5                            .MNOLIST
       6                    
       7                    **************************************************************************
       8                    *                                                                        *
       9                    *       COPYRIGHT (C) 1994 MIDWAY MANUFACTURING COMPANY.                 *
      10                    *                      ALL RIGHTS RESERVED.                              *
      11                    *                                                                        *
      12                    **************************************************************************
      13                    
      14                            .INCLUDE        "HH.INC"
      15                            .include        "hhafunc.e"
      16                            .include        "hhsnd.g"
      17                            .include        "hhutil.g"
      18                            .include        "hhd.g"
      19                            .include        "hhproc.g"
      20                            .include        "hhram.g"
      21                            .include        "hhpall.g"
      22                    
      23                    ; end of include files
      24                    
      25                    
      26 00000000                   .TEXT
      27                    
      28                    **************************************************************************
      29                    *                                                                        *
      30                    * A_nFUNCS - CALL n ANIMATION SUBROUTINES                                *
      31                    *                                                                        *
      32                    * PASS:                                                                  *
      33                    * A8 = OBJECT                                                            *
      34                    * AARG+,L    = 1ST SUBROUTINE ADDRESS                                    *
      35                    * AARG+,W(L) = 1ST SUBROUTINE PARAMETERS                                 *
      36                    * .                                                                      *
      37                    * .                                                                      *
      38                    * .                                                                      *
      39                    * AARG+,L    = nTH SUBROUTINE ADDRESS                                    *
      40                    * AARG+,W(L) = nTH SUBROUTINE PARAMETERS                                 *
      41                    *                                                                        *
      42                    **************************************************************************
      43                    
      44 00000000           A_5FUNCS
      45 00000000     0d5f          CALLA   GETAFARG_LONG
         00000010 00000000! 
      46 00000030     0920          CALL    A0
      47 00000040           A_4FUNCS
      48 00000040     0d5f          CALLA   GETAFARG_LONG
         00000050 00000000! 
      49 00000070     0920          CALL    A0
      50 00000080           A_3FUNCS
      51 00000080     0d5f          CALLA   GETAFARG_LONG
         00000090 00000000! 
      52 000000b0     0920          CALL    A0
TMS340 COFF Macro Assembler Version 6.10     Wed Apr 21 11:30:43 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE    2

      53 000000c0           A_2FUNCS
      54 000000c0     0d5f          CALLA   GETAFARG_LONG
         000000d0 00000000! 
      55 000000f0     0920          CALL    A0
      56 00000100     0d5f          CALLA   GETAFARG_LONG
         00000110 00000000! 
      57 00000130     0160          JUMP    A0
      58                    
      59                    **************************************************************************
      60                    *                                                                        *
      61                    * A_DO_SOUND - CALL do_sound                                             *
      62                    *                                                                        *
      63                    * PASS:                                                                  *
      64                    * A8 = OBJECT                                                            *
      65                    * AARG+,W = SOUND INDEX                                                  *
      66                    *                                                                        *
      67                    **************************************************************************
      68                    
      69 00000140           A_DO_SOUND
      70 00000140     0d5f          CALLA   GETAFARG_WORD
         00000150 00000000! 
      71 00000170     4c04          MOVE    A0,A4
      72 00000180     c080          JAUC    do_sound
         00000190 00000000! 
      73                    
      74                    **************************************************************************
      75                    *                                                                        *
      76                    * A_RAND_BRANCH - BRANCH TO FRAME ON RANDOM EVENT                        *
      77                    *                                                                        *
      78                    * A8 = OBJECT                                                            *
      79                    * AARG+,W = PROBABILITY (0-1023)                                         *
      80                    * AARG+,L = BRANCH ADDRESS                                               *
      81                    *                                                                        *
      82                    **************************************************************************
      83 000001b0           A_RAND_BRANCH
      84 000001b0     0d5f          CALLA   GETAFARG_WORD
         000001c0 00000000! 
      85 000001e0     0d5f          CALLA   RANDPER
         000001f0 00000000! 
      86 00000210     c905          JRNC    A_RB_NOPE                       ;BR=DON'T BRANCH
      87                    
      88 00000220     0d5f          CALLA   GETAFARG_LONG                   ;BRANCH
         00000230 00000000! 
      89 00000250     b208          MOVE    A0,*A8(ANIMFRM),L
         00000260     0320  
      90 00000270           A_RB_NOPE
      91 00000270     0960          RETS
      92                    
      93                    **************************************************************************
      94                    *                                                                        *
      95                    * A_RAND_JUMP - JUMP TO ANIMATION ON RANDOM EVENT                        *
      96                    *                                                                        *
      97                    * A8 = OBJECT                                                            *
      98                    * AARG+,W = PROBABILITY (0-1023)                                         *
      99                    * AARG+,L = JUMP ADDRESS                                                 *
TMS340 COFF Macro Assembler Version 6.10     Wed Apr 21 11:30:43 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE    3

     100                    *                                                                        *
     101                    **************************************************************************
     102 00000280           A_RAND_JUMP
     103 00000280     0d5f          CALLA   GETAFARG_WORD
         00000290 00000000! 
     104 000002b0     0d5f          CALLA   RANDPER
         000002c0 00000000! 
     105 000002e0     c907          JRNC    A_RJ_NOPE                       ;BR=DON'T JUMP
     106                    
     107 000002f0     0d5f          CALLA   GETAFARG_LONG                   ;JUMP
         00000300 00000000! 
     108 00000320     b208          MOVE    A0,*A8(ANIMSCR),L
         00000330     0340  
     109 00000340     b208          MOVE    A0,*A8(ANIMFRM),L
         00000350     0320  
     110 00000360           A_RJ_NOPE
     111 00000360     0960          RETS
     112                    
     113                    **************************************************************************
     114                    *                                                                        *
     115                    * A_GOSUB - JUMP TO SUBROUTINE                                           *
     116                    *           NOTE: SUBROUTINES CANNOT BE NESTED!                          *
     117                    *                                                                        *
     118                    * A8 = Ptr to object                                                     *
     119                    * AARG+,L = SUBROUTINE ADDRESS                                           *
     120                    *                                                                        *
     121                    **************************************************************************
     122                    
     123 00000370           A_GOSUB
     124 00000370     bb08          MOVE    *A8(ANIMSCR),*A8(ANIMRETSCR),L
         00000380     0340  
         00000390     0380  
     125 000003a0     bb08          MOVE    *A8(ANIMFRM),*A8(ANIMRETFRM),L
         000003b0     0320  
         000003c0     03a0  
     126 000003d0     c080          JAUC    A_ANIMGO
         000003e0 00000000! 
     127                    
     128                    **************************************************************************
     129                    *                                                                        *
     130                    * A_RETURN - RETURN FROM SUBROUTINE                                      *
     131                    *                                                                        *
     132                    * A8 = Ptr to object                                                     *
     133                    *                                                                        *
     134                    **************************************************************************
     135                    
     136 00000400           A_RETURN
     137 00000400     bb08          MOVE    *A8(ANIMRETSCR),*A8(ANIMSCR),L
         00000410     0380  
         00000420     0340  
     138 00000430     bb08          MOVE    *A8(ANIMRETFRM),*A8(ANIMFRM),L
         00000440     03a0  
         00000450     0320  
     139 00000460     0960          RETS
     140                    
TMS340 COFF Macro Assembler Version 6.10     Wed Apr 21 11:30:43 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE    4

     141                    **************************************************************************
     142                    *                                                                        *
     143                    *       A_CREATEP                                                        *
     144                    *                                                                        *
     145                    *       Anim func to Create a process.                                   *
     146                    *                                                                        *
     147                    *       AARG+,W = Process I.D.                                           *
     148                    *       AARG+,L = Process Address                                        *
     149                    *       A8 - A11 are passed to the process                               *
     150                    *                                                                        *
     151                    **************************************************************************
     152 00000470           A_CREATEP
     153 00000470     0d5f          CALLA   GETAFARG_WORD
         00000480 00000000! 
     154 000004a0     4c01          MOVE    A0,A1
     155 000004b0     0d5f          CALLA   GETAFARG_LONG
         000004c0 00000000! 
     156 000004e0     4c07          MOVE    A0,A7
     157 000004f0     c080          JAUC    GETPRC
         00000500 00000000! 
     158                    
     159                    **************************************************************************
     160                    *                                                                        *
     161                    * A_SET_ANIMLOOP - Anim func to initialize the Animation Loop count.     *
     162                    * A8 = Ptr to object                                                     *
     163                    * AARG+,W = Initial value                                                *
     164                    *                                                                        *
     165                    **************************************************************************
     166 00000520           A_SET_ANIMLOOP
     167 00000520     0d5f          calla   GETAFARG_WORD
         00000530 00000000! 
     168 00000550     ac08          movb    A0,*A8(ANIMLOOP)
         00000560     0370  
     169 00000570     0960          rets
     170                    
     171                    **************************************************************************
     172                    *                                                                        *
     173                    * A_Anim_DSJ - Anim func to decrement ANIMLOOP count and branch          *
     174                    *               if not 0.                                                *
     175                    * A8 = Ptr to object                                                     *
     176                    * AARG+,L = Branch if ANIMLOOP <> 0                                      *
     177                    *                                                                        *
     178                    **************************************************************************
     179 00000580           A_Anim_DSJ
     180 00000580     af0e          movb    *A8(ANIMLOOP),A14
         00000590     0370  
     181 000005a0     142e          dec     A14
     182 000005b0     adc8          movb    A14,*A8(ANIMLOOP)
         000005c0     0370  
     183 000005d0     ca05          jrz     AAD_X
     184 000005e0     0d5f          calla   GETAFARG_LONG
         000005f0 00000000! 
     185                    ;       move    A0,A1
     186                    ;       jruc    SetAnim
     187 00000610     b208          MOVE    A0,*A8(ANIMFRM),L
TMS340 COFF Macro Assembler Version 6.10     Wed Apr 21 11:30:43 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE    5

         00000620     0320  
     188 00000630           AAD_X
     189 00000630     0960          rets
     190                    
     191                    **************************************************************************
     192                    *                                                                        *
     193                    *       A_Anim_Rel_DSJ                                                   *
     194                    *                                                                        *
     195                    *       Anim func to decrement a byte sized variable relative to the     *
     196                    *       beginning of the object, and branches the animation if not 0.    *
     197                    *                                                                        *
     198                    *       A8 = Ptr to object                                               *
     199                    *       AARG+,W = Relative offset of byte loop counter                   *
     200                    *       AARG+,L = Branch if loop counter <> 0                            *
     201                    *                                                                        *
     202                    **************************************************************************
     203 00000640           A_Anim_Rel_DSJ
     204 00000640     0d5f          CALLA   GETAFARG_WORD           ;Get the offset
         00000650 00000000! 
     205 00000670     4d01          MOVE    A8,A1
     206 00000680     4001          ADD     A0,A1                   ;And index into the object
     207                    
     208 00000690     8e2e          MOVB    *A1,A14
     209 000006a0     142e          DEC     A14                     ;Decrement the loop counter
     210 000006b0     8dc1          MOVB    A14,*A1
     211 000006c0     ca05          JRZ     AARD_X                  ;BR = loop counter = 0
     212                    
     213 000006d0     0d5f          CALLA   GETAFARG_LONG           ;Grab the branch address
         000006e0 00000000! 
     214 00000700     4c01          MOVE    A0,A1
     215 00000710     c06b          JRUC    SetAnim                 ;And stuff it
     216 00000720           AARD_X
     217 00000720     0960          RETS
     218                    
     219                    **************************************************************************
     220                    *                                                                        *
     221                    * A_Set_Rel_Byte - Anim func to set a given byte relative to the current *
     222                    *               object to a given value.                                 *
     223                    *                                                                        *
     224                    * AARG+,W = Offset in to object                                          *
     225                    * AARG+,W = Value to store                                               *
     226                    *                                                                        *
     227                    **************************************************************************
     228 00000730           A_Set_Rel_Byte
     229 00000730     0d5f          CALLA   GETAFARG_WORD           ;Get the offset
         00000740 00000000! 
     230 00000760     4d01          MOVE    A8,A1
     231 00000770     4001          ADD     A0,A1                   ;And index into the object
     232 00000780     0d5f          CALLA   GETAFARG_WORD           ;Get the value
         00000790 00000000! 
     233 000007b0     8c01          MOVB    A0,*A1                  ;And store it
     234 000007c0     0960          RETS
     235                    
     236                    **************************************************************************
     237                    *                                                                        *
TMS340 COFF Macro Assembler Version 6.10     Wed Apr 21 11:30:43 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE    6

     238                    *       A_Set_Rel_Byte_Head                                              *
     239                    *                                                                        *
     240                    *       Anim func to set a given byte in the head object of a            *
     241                    *       multi-parter that is relative to the beginning of the            *
     242                    *       object block.                                                    *
     243                    *                                                                        *
     244                    *       A8 = Ptr to any object in a multi-parter                         *
     245                    *       AARG+,W = Offset in to object                                    *
     246                    *       AARG+,W = Value to store                                         *
     247                    *                                                                        *
     248                    **************************************************************************
     249 000007d0           A_Set_Rel_Byte_Head
     250 000007d0     0d5f          CALLA   GETAFARG_WORD           ;Get the offset
         000007e0 00000000! 
     251 00000800     4c01          MOVE    A0,A1                   ;Save it here
     252 00000810     0d5f          CALLA   GETAFARG_WORD           ;Get the value to store
         00000820 00000000! 
     253 00000840     0d5f          CALLA   GET_HEAD_PART           ;Grab the head part
         00000850 00000000! 
     254 00000870     4101          ADD     A8,A1                   ;Offset into object block
     255 00000880     8c01          MOVB    A0,*A1                  ;And store value
     256 00000890     0960          RETS
     257                    
     258                    **************************************************************************
     259                    *                                                                        *
     260                    *       A_RAND_REL_BYTE                                                  *
     261                    *                                                                        *
     262                    *       Anim func to set a given byte relative to the current object     *
     263                    *       to a random value in the given range.                            *
     264                    *                                                                        *
     265                    *       A8 = Ptr to object                                               *
     266                    *       AARG+,W = Lower bound of random value                            *
     267                    *       AARG+,W = Upper bound of random value                            *
     268                    *       AARG+,W = Offset into object                                     *
     269                    *                                                                        *
     270                    **************************************************************************
     271 000008a0           A_RAND_REL_BYTE
     272 000008a0     0d5f          CALLA   GETAFARG_LONG           ;Get the random values
         000008b0 00000000! 
     273 000008d0     ee01          MOVY    A0,A1
     274 000008e0     2a01          SRA     16,A1                   ;Split 'em up
     275 000008f0     0520          ZEXT    A0
     276 00000900     0d5f          CALLA   RANGERND                ;And make it into something
         00000910 00000000! 
     277 00000930     4c02          MOVE    A0,A2
     278 00000940     0d5f          CALLA   GETAFARG_WORD           ;Get the offset
         00000950 00000000! 
     279 00000970     4100          ADD     A8,A0
     280 00000980     8c40          MOVB    A2,*A0
     281 00000990     0960          RETS
     282                    
     283                    **************************************************************************
     284                    *                                                                        *
     285                    * A_Set_Rel_Word - Anim func to set a given word relative to the current *
     286                    *               object to a given value.                                 *
TMS340 COFF Macro Assembler Version 6.10     Wed Apr 21 11:30:43 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE    7

     287                    *                                                                        *
     288                    * AARG+,W = Offset in to object                                          *
     289                    * AARG+,W = Value to store                                               *
     290                    *                                                                        *
     291                    **************************************************************************
     292 000009a0           A_Set_Rel_Word
     293 000009a0     0d5f          CALLA   GETAFARG_WORD           ;Get the offset
         000009b0 00000000! 
     294 000009d0     4d01          MOVE    A8,A1
     295 000009e0     4001          ADD     A0,A1                   ;And index into the object
     296 000009f0     0d5f          CALLA   GETAFARG_WORD           ;Get the value
         00000a00 00000000! 
     297 00000a20     8001          MOVE    A0,*A1,W                ;And store it
     298 00000a30     0960          RETS
     299                    
     300                    **************************************************************************
     301                    *                                                                        *
     302                    *       A_Set_Rel_Word_Head                                              *
     303                    *                                                                        *
     304                    *       Anim func to set a given Word in the head object of a            *
     305                    *       multi-parter that is relative to the beginning of the            *
     306                    *       object block.                                                    *
     307                    *                                                                        *
     308                    *       A8 = Ptr to any object in a multi-parter                         *
     309                    *       AARG+,W = Offset in to object                                    *
     310                    *       AARG+,W = Value to store                                         *
     311                    *                                                                        *
     312                    **************************************************************************
     313 00000a40           A_Set_Rel_Word_Head
     314 00000a40     0d5f          CALLA   GETAFARG_WORD           ;Get the offset
         00000a50 00000000! 
     315 00000a70     4c01          MOVE    A0,A1                   ;Save it here
     316 00000a80     0d5f          CALLA   GETAFARG_WORD           ;Get the value to store
         00000a90 00000000! 
     317 00000ab0     0d5f          CALLA   GET_HEAD_PART           ;Grab the head part
         00000ac0 00000000! 
     318 00000ae0     4101          ADD     A8,A1                   ;Offset into object block
     319 00000af0     8001          MOVE    A0,*A1,W                ;And store value
     320 00000b00     0960          RETS
     321                    
     322                    **************************************************************************
     323                    *                                                                        *
     324                    * A_Set_Rel_Long - Anim func to set a given long word relative to the    *
     325                    *               current object to a given value.                         *
     326                    *                                                                        *
     327                    * AARG+,W = Offset in to object                                          *
     328                    * AARG+,L = Value to store                                               *
     329                    *                                                                        *
     330                    **************************************************************************
     331 00000b10           A_Set_Rel_Long
     332 00000b10     0d5f          CALLA   GETAFARG_WORD           ;Get the offset
         00000b20 00000000! 
     333 00000b40     4d01          MOVE    A8,A1
     334 00000b50     4001          ADD     A0,A1                   ;And index into the object
     335 00000b60     0d5f          CALLA   GETAFARG_LONG           ;Get the value
TMS340 COFF Macro Assembler Version 6.10     Wed Apr 21 11:30:43 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE    8

         00000b70 00000000! 
     336 00000b90     8201          MOVE    A0,*A1,L                ;And store it
     337 00000ba0     0960          RETS
     338                    
     339                    **************************************************************************
     340                    *                                                                        *
     341                    * A_Set_Var_Byte - Anim func to set a given variable of byte length      *
     342                    *               to a given value.                                        *
     343                    * AARG+,L = Address of variable                                          *
     344                    * AARG+,W = Value to store                                               *
     345                    *                                                                        *
     346                    **************************************************************************
     347 00000bb0           A_Set_Var_Byte
     348 00000bb0     0d5f          calla   GETAFARG_LONG
         00000bc0 00000000! 
     349 00000be0     4c01          move    A0,A1
     350 00000bf0     0d5f          calla   GETAFARG_WORD
         00000c00 00000000! 
     351 00000c20     8c01          movb    A0,*A1
     352 00000c30     0960          rets
     353                    
     354                    **************************************************************************
     355                    *                                                                        *
     356                    * A_Set_Var_Word - Anim func to set a given variable of word length      *
     357                    *               to a given value.                                        *
     358                    * AARG+,L = Address of variable                                          *
     359                    * AARG+,W = Value to store                                               *
     360                    *                                                                        *
     361                    **************************************************************************
     362 00000c40           A_Set_Var_Word
     363 00000c40     0d5f          calla   GETAFARG_LONG
         00000c50 00000000! 
     364 00000c70     4c01          move    A0,A1
     365 00000c80     0d5f          calla   GETAFARG_WORD
         00000c90 00000000! 
     366 00000cb0     8001          move    A0,*A1,W
     367 00000cc0     0960          rets
     368                    
     369                    **************************************************************************
     370                    *                                                                        *
     371                    * A_SET_OYACCEL - ANIM FUNC TO SET THE OYACCEL FIELD OF AN OBJECT.       *
     372                    * A8 = OBJECT                                                            *
     373                    * AARG+,W = NEW YACCEL                                                   *
     374                    *                                                                        *
     375                    **************************************************************************
     376 00000cd0           A_SET_OYACCEL
     377 00000cd0     0d5f          CALLA   GETAFARG_WORD
         00000ce0 00000000! 
     378 00000d00     b008          MOVE    A0,*A8(OYACCEL),W
         00000d10     02f0  
     379 00000d20     0960          RETS
     380                    
     381                    **************************************************************************
     382                    *                                                                        *
     383                    * A_OBJ_ON_CHANGE_PAL - ANIM FUNC THAT DOES JUST WHAT IT SAYS.           *
TMS340 COFF Macro Assembler Version 6.10     Wed Apr 21 11:30:43 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE    9

     384                    * A8 = OBJECT                                                            *
     385                    * AARG+,L = NEW PALETTE                                                  *
     386                    *                                                                        *
     387                    **************************************************************************
     388 00000d30           A_OBJ_ON_CHANGE_PAL
     389 00000d30     0d5f          CALLA   OBJ_ON
         00000d40 00000000! 
     390 00000d60     c080          JAUC    A_CHANGE_PAL
         00000d70 00000000! 
     391                    
     392 00000d90           SetAnim_AFARG
     393 00000d90     0d5f          CALLA   GETAFARG_LONG
         00000da0 00000000! 
     394 00000dc0     4c01          MOVE    A0,A1
     395 00000dd0           SetAnim
     396 00000dd0     b228          MOVE    A1,*A8(ANIMFRM),L
         00000de0     0320  
     397 00000df0     b228          MOVE    A1,*A8(ANIMSCR),L
         00000e00     0340  
     398 00000e10           AFB_X
     399 00000e10     0960          RETS
     400                    
     401                    **************************************************************************
     402                    *                                                                        *
     403                    * A_RAND_ANIMSLP - ANIM FUNC TO SET A RANDOM AnimSLP VALUE IN THE        *
     404                    *               GIVEN RANGE                                              *
     405                    * A8 = OBJECT TO SET                                                     *
     406                    * AARG+,W = LOWEST SLEEP                                                 *
     407                    * AARG+,W = HIGHEST SLEEP                                                *
     408                    *                                                                        *
     409                    **************************************************************************
     410 00000e20           A_RAND_ANIMSLP
     411 00000e20     0d5f          CALLA   GETAFARG_LONG
         00000e30 00000000! 
     412 00000e50     ee01          MOVY    A0,A1
     413 00000e60     2a01          SRA     16,A1
     414 00000e70     0520          ZEXT    A0
     415 00000e80     0d5f          CALLA   RANGERND
         00000e90 00000000! 
     416 00000eb0     ac08          MOVB    A0,*A8(ANIMSLP)
         00000ec0     0360  
     417 00000ed0     0960          RETS
     418                    
     419                    **************************************************************************
     420                    *                                                                        *
     421                    * A_SET_OXZVEL - ANIM FUNC TO SET THE X AND Z VELOCITIES OF AN OBJECT.   *
     422                    *                IF OBJECT IS H-FLIPPED, THE X VALUE IS NEGATED.         *
     423                    * A8 = PTR TO OBJECT                                                     *
     424                    * AARG+,L = OXVEL                                                        *
     425                    * AARG+,L = OZVEL                                                        *
     426                    *                                                                        *
     427                    **************************************************************************
     428                    
     429 00000ee0           A_SET_OXZVEL
     430 00000ee0     0d5f          CALLA   GETAFARG_LONG
TMS340 COFF Macro Assembler Version 6.10     Wed Apr 21 11:30:43 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   10

         00000ef0 00000000! 
     431 00000f10     b208          MOVE    A0,*A8(OXVEL),L
         00000f20     0100  
     432 00000f30     0d5f          CALLA   GETAFARG_LONG
         00000f40 00000000! 
     433 00000f60     b208          MOVE    A0,*A8(OZVEL),L
         00000f70     00e0  
     434 00000f80     0960          RETS
     435                    
     436 00000f90           A_CLR_OXZVEL
     437 00000f90     57ce          CLR     A14
     438 00000fa0     b3c8          MOVE    A14,*A8(OXVEL),L
         00000fb0     0100  
     439 00000fc0     b3c8          MOVE    A14,*A8(OZVEL),L
         00000fd0     00e0  
     440 00000fe0     0960          RETS
     441                    
     442                    **************************************************************************
     443                    *                                                                        *
     444                    * A_SET_OXVEL - ANIM FUNC TO SET THE X VELOCITY OF AN OBJECT. IF         *
     445                    *               OBJECT IS FLIPPED, THE VALUE IS NEGATED.                 *
     446                    * A8 = PTR TO OBJECT                                                     *
     447                    * AARG+,L = OXVEL                                                        *
     448                    *                                                                        *
     449                    **************************************************************************
     450 00000ff0           A_SET_OXVEL
     451 00000ff0     0d5f          CALLA   GETAFARG_LONG
         00001000 00000000! 
     452 00001020     b50e          MOVE    *A8(OCTRL),A14,W
         00001030     01f0  
     453 00001040     1f6e          BTST    B_FLIPH,A14
     454 00001050     ca01          JRZ     ASO_NOW
     455 00001060     03a0          NEG     A0
     456 00001070           ASO_NOW
     457 00001070     b208          MOVE    A0,*A8(OXVEL),L
         00001080     0100  
     458 00001090     0960          RETS
     459                    
     460                    **************************************************************************
     461                    *                                                                        *
     462                    * A_SET_OYVEL - ANIM FUNC TO SET THE Y VELOCITY OF AN OBJECT             *
     463                    * A8 = PTR TO OBJECT                                                     *
     464                    * AARG+,L = OYVEL                                                        *
     465                    *                                                                        *
     466                    **************************************************************************
     467 000010a0           A_SET_OYVEL
     468 000010a0     0d5f          CALLA   GETAFARG_LONG
         000010b0 00000000! 
     469 000010d0     b208          MOVE    A0,*A8(OYVEL),L
         000010e0     0120  
     470 000010f0     0960          RETS
     471                    
     472                    **************************************************************************
     473                    *                                                                        *
     474                    * A_STRT_ANIM - ANIM FUNC TO START ANOTHER ANIMATION.                    *
TMS340 COFF Macro Assembler Version 6.10     Wed Apr 21 11:30:43 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   11

     475                    * A8 = PTR TO OBJECT TO START                                            *
     476                    * AARG+,L = PTR TO ANIM SCRIPT                                           *
     477                    *                                                                        *
     478                    **************************************************************************
     479 00001100           A_STRT_ANIM
     480 00001100     0d5f          CALLA   GETAFARG_LONG
         00001110 00000000! 
     481 00001130     4c01          MOVE    A0,A1
     482 00001140     c080          JAUC    STRT_ANIM
         00001150 00000000! 
     483                    
     484                    **************************************************************************
     485                    *                                                                        *
     486                    * A_SET_OZVEL - ANIM FUNC TO SET THE OZVEL FIELD OF AN OBJECT.           *
     487                    * A8 = PTR TO OBJECT                                                     *
     488                    * AARG+,L = NEW OZVEL                                                    *
     489                    *                                                                        *
     490                    **************************************************************************
     491 00001170           A_SET_OZVEL
     492 00001170     0d5f          CALLA   GETAFARG_LONG
         00001180 00000000! 
     493                    ;       MOVE    A8,A7
     494                    ;       CALLA   GET_HEAD_PART
     495 000011a0     b208          MOVE    A0,*A8(OZVEL),L
         000011b0     00e0  
     496 000011c0     0960          RETS
     497                    
     498                    
     499                    **************************************************************************
     500                    *                                                                        *
     501                    * A_CLR_OXVEL - ANIM FUNC TO CLR THE OXVEL FIELD OF AN OBJECT.           *
     502                    * A8 = PTR TO OBJECT                                                     *
     503                    *                                                                        *
     504                    **************************************************************************
     505 000011d0           A_CLR_OXVEL
     506                    ;       CALLA   GET_HEAD_PART
     507 000011d0                   CLRM    *A8(OXVEL),L
     508 00001200     0960          RETS
     509                    
     510                    **************************************************************************
     511                    *                                                                        *
     512                    * A_INIT_ANIMSLP - Anim Func to initialize the AnimSLP field of          *
     513                    *               a given object.                                          *
     514                    * A8 = Ptr to Object                                                     *
     515                    * AARG+,W = Initial Value                                                *
     516                    *                                                                        *
     517                    **************************************************************************
     518 00001210           A_INIT_ANIMSLP
     519 00001210     0d5f          CALLA   GETAFARG_WORD
         00001220 00000000! 
     520 00001240     ac08          MOVB    A0,*A8(ANIMSLP)
         00001250     0360  
     521 00001260     0960          RETS
     522                    
     523                    **************************************************************************
TMS340 COFF Macro Assembler Version 6.10     Wed Apr 21 11:30:43 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   12

     524                    *                                                                        *
     525                    * A_INC_ANIMSLP - ANIM FUNC TO INCREMENT THE AnimSLP FIELD OF            *
     526                    *               A GIVEN OBJECT BY 1.                                     *
     527                    * A8 = PTR TO OBJECT                                                     *
     528                    * AARG+,W = MAX ANIMSLP VALUE                                            *
     529                    *                                                                        *
     530                    **************************************************************************
     531 00001270           A_INC_ANIMSLP
     532 00001270     0d5f          CALLA   GETAFARG_WORD
         00001280 00000000! 
     533 000012a0     af0e          MOVB    *A8(ANIMSLP),A14
         000012b0     0360  
     534 000012c0     102e          INC     A14
     535 000012d0     480e          CMP     A0,A14
     536 000012e0     c201          JRLS    AIA_STUFF
     537 000012f0     4c0e          MOVE    A0,A14
     538 00001300           AIA_STUFF
     539 00001300     adc8          MOVB    A14,*A8(ANIMSLP)
         00001310     0360  
     540 00001320     0960          RETS

 No Errors,  No Warnings
