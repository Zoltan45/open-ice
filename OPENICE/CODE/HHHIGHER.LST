TMS340 COFF Macro Assembler Version 6.10     Wed Apr 21 11:32:03 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE    1

       1                            .MLIB   "HHMACS.LIB"
       2                            .FILE   "HHCONTROL.ASM"
       3                            .WIDTH  132
       4                            .OPTION B,D,L,T
       5                            .MNOLIST
       6                    
       7                    *
       8                    *GET THE SYSTEM STUFF
       9                    *
      10                            .INCLUDE        "HH.INC"
      11                            .INCLUDE        "HHSTRING.H"
      12                            .INCLUDE        "IMGTBL.GLO"
      13                            .include        "hhhigher.e"
      14                            .include        "hhplayer.g"
      15                            .include        "hhmath.g"
      16                            .include        "hhproc.g"
      17                            .include        "hhcontrl.g"
      18                            .include        "hhgame.g"
      19                            .include        "hhpuck.g"
      20                            .include        "hhutil.g"
      21                            .include        "hhshow.g"
      22                            .include        "hhtimer.g"
      23                            .include        "hhd.g"
      24                            .include        "hhmisc.g"
      25                            .include        "hh.g"
      26                            .include        "hhselect.g"
      27                            .include        "hhrscr.g"
      28                            .include        "hhspeech.g"
      29                            .include        "hhc.g"
      30                            .include        "hhpall.g"
      31                            .include        "hhscr_ms.g"
      32                            .include        "hhscr_sk.g"
      33                            .include        "hhram.g"
      34                            .include        "hhfade.g"
      35                            .include        "hhcontr2.g"
      36                            .include        "hhtext.g"
      37                            .include        "hhtg.g"
      38                            .include        "hhscore.g"
      39                            .include        "hhpup.g"
      40                            .include        "hhcx.g"
      41                    
      42                    ; end of include files
      43                    
      44 00000000                   .bss    faceoff_x,16
      45 00000010                   .bss    faceoff_z,16
      46 00000020                   .bss    faceoff_1,32
      47 00000040                   .bss    faceoff_2,32
      48                    
      49 00000060                   .bss    taps_ok,16
      50 00000070                   .bss    tap_count1,16
      51 00000080                   .bss    tap_count2,16
      52                    
      53 00000090                   .bss    ref_object,32
      54 000000b0                   .bss    ref_shadow,32
      55 000000d0                   .bss    faceoff_time,32         ;time last drop of puck (drone signals)
TMS340 COFF Macro Assembler Version 6.10     Wed Apr 21 11:32:03 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE    2

      56 000000f0                   .bss    faceoff_type,16
      57                    
      58 00000100                   .bss    fangle_drone1,16
      59 00000110                   .bss    fangle_drone5,16
      60                    
      61                    **************************************************************************
      62                    *                                                                        *
      63                    * PUCK_FROZEN - PUCK FROZEN BY A GOALIE                                  *
      64                    *                                                                        *
      65                    * PASS:                                                                  *
      66                    * A6 = GOALIE BLOCK                                                      *
      67                    * A8 = GOALIE OBJECT                                                     *
      68                    *                                                                        *
      69                    * RETURN:                                                                *
      70                    * NUTIN'                                                                 *
      71                    *                                                                        *
      72                    **************************************************************************
      73 00000000           PUCK_FROZEN
      74 00000000     098f          MMTM    SP,A6,A8
         00000010     0280  
      75 00000020     05ae          move    @minutes,a14,W
         00000030 00000000! 
      76 00000050     cb08          jrnz    pf_11
      77 00000060     05ae          move    @tenseconds,a14,W
         00000070 00000000! 
      78 00000090     cb04          jrnz    pf_11
      79 000000a0     05ae          move    @seconds,a14
         000000b0 00000000! 
      80 000000d0     ca31          jrz     pf_909                  ;no faceoff with less than 1 second
      81 000000e0     0d5f  pf_11   calla   check_freeze_smotherpass
         000000f0 00000000! 
      82 00000110     0d5f          calla   stop_timer
         00000120 00000000! 
      83 00000140     09c0          movi    522,a0
         00000150     020a  
      84 00000160     aece          movb    *a6(POF_NUMBER),a14
         00000170     0000  
      85 00000180     0b4e          cmpi    4,a14
         00000190     fffb  
      86 000001a0     cb01          jrnz    pf_1
      87 000001b0     03a0          neg     a0
      88 000001c0     09c1  pf_1    movi    164,a1
         000001d0     00a4  
      89 000001e0     b6c8          move    *a6(POF_OBJECT),a8,L
         000001f0     0280  
      90 00000200     b50e          MOVE    *A8(ODT_GZPOSPOSS+010h),A14,W   ;Z POSITION AT TIME OF POSSESSION
         00000210     0710  
      91 00000220     0b4e          cmpi    339,a14
         00000230     feac  
      92 00000240     c602          jrle    pf_2
      93 00000250     09c1          movi    515,a1
         00000260     0203  
      94 00000270     0d5f  pf_2    calla   spx_zone_faceoff
         00000280 00000000! 
      95 000002a0     0d5f          calla   zone_faceoff_show
TMS340 COFF Macro Assembler Version 6.10     Wed Apr 21 11:32:03 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE    3

         000002b0 00000000! 
      96                    
      97 000002d0     098f          MMTM    SP,A0,A1,A9
         000002e0     c040  
      98 000002f0     4cc9          MOVE    A6,A9
      99 00000300                   CREATE  PID_GCARD_FREEZE,SHOW_GCARDS_FREEZE_PROC
     100 00000380     09af          MMFM    SP,A0,A1,A9
         00000390     0203  
     101                    
     102 000003a0     0d3f          CALLR   faceoff
         000003b0     0008  
     103 000003c0     0d5f          calla   store_players_tired
         000003d0 00000000! 
     104 000003f0     09af  pf_909  MMFM    SP,A6,A8
         00000400     0140  
     105 00000410     0960          RETS
     106                    
     107                    
     108                    **************************************************************************
     109                    *                                                                        *
     110                    * faceoff                                                                *
     111                    *       input   a0 = xpos of faceoff                                     *
     112                    *               a1 = zpos of faceoff                                     *
     113                    *                                                                        *
     114                    **************************************************************************
     115 00000420           period_faceoff
     116 00000420     182e          movk    1,a14
     117 00000430     c001          jruc    frtr1
     118 00000440           faceoff
     119 00000440     57ce          clr     a14
     120 00000450     058e  frtr1   move    a14,@faceoff_type,W
         00000460 000000f0- 
     121 00000480     57ce          clr     a14
     122 00000490     058e          move    a14,@show_puck_on_fire,W
         000004a0 00000000! 
     123 000004c0     09ce          movi    PUM_FACEOFF,a14
         000004d0     0064  
     124 000004e0     058e          move    a14,@PUCK_MODE,W        ;now set puck mode to face off
         000004f0 00000000! 
     125 00000510     0d5f          calla   clear_all_signals
         00000520 00000000! 
     126 00000540     0d5f          calla   reset_all_pulled_goalies
         00000550 00000000! 
     127 00000570     0580          move    a0,@faceoff_x,W
         00000580 00000000- 
     128 000005a0     0581          move    a1,@faceoff_z,W
         000005b0 00000010- 
     129 000005d0     0d5f          calla   reset_puck_position
         000005e0 00000000! 
     130 00000600     0d5f          calla   new_puck_control
         00000610 00000000! 
     131                    ;       calla   turn_puck_on
     132 00000630                   C_O_R   PID_FACEOFF,faceoff_process
     133 000006b0     184e          movk    2,a14
     134 000006c0                   GBLOCK  a14,a14
TMS340 COFF Macro Assembler Version 6.10     Wed Apr 21 11:32:03 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE    4

     135 00000700     b5c0          move    *a14(POF_FLAGS),a0,W
         00000710     0200  
     136 00000720     0ba0          ori     M_PF_REV_FACE,a0
         00000730 00000800  
     137 00000750     b00e          move    a0,*a14(POF_FLAGS),W
         00000760     0200  
     138 00000770     05ae          move    @hot_goals,a14,W
         00000780 00000000! 
     139 000007a0     0b4e          cmpi    3,a14
         000007b0     fffc  
     140 000007c0     c803          jrlo    nhclr
     141 000007d0     0d5f          calla   clear_hot
         000007e0 00000000! 
     142 00000800     c080  nhclr   jauc    fix_palette_lights_off
         00000810 00000000! 
     143                    
     144                    
     145 00000830           faceoff_process
     146 00000830     1820          movk    1,a0
     147 00000840     0580          move    a0,@no_control,W
         00000850 00000000! 
     148 00000870                   SLEEP   1               ;just long enough to let freeze process stop us
     149 000008b0     57ce          clr     a14
     150 000008c0     058e          move    a14,@no_control,W
         000008d0 00000000! 
     151 000008f0     0d3f          callr   create_ref
         00000900     0652  
     152 00000910     57ce          clr     a14
     153 00000920     058e          move    a14,@taps_ok,W
         00000930 00000060- 
     154 00000950     058e          move    a14,@PUCK_CONTROL,W
         00000960 00000000! 
     155 00000980     058e          move    a14,@PUCK_LAST_CONTROL,W
         00000990 00000000! 
     156 000009b0     058e          move    a14,@puck_op,W
         000009c0 00000000! 
     157 000009e0     058e          move    a14,@show_puck_on_fire,W
         000009f0 00000000! 
     158 00000a10     184e          movk    2,a14
     159 00000a20                   GBLOCK  a14,a14
     160 00000a60     b5c4          move    *a14(POF_DRONE_LEVEL),a4,W
         00000a70     0be0  
     161 00000a80     b7ce          move    *a14(POF_S_FACE),a14,L
         00000a90     0180  
     162 00000aa0     85ce          move    *a14,a14,W
     163 00000ab0     0b44          cmpi    9,a4
         00000ac0     fff6  
     164 00000ad0     c40d          jrlt    fodr1
     165 00000ae0     242e          sll     1,a14
     166 00000af0     0b44          cmpi    10,a4
         00000b00     fff5  
     167 00000b10     c409          jrlt    fodr1
     168 00000b20     242e          sll     1,a14
     169 00000b30     0b44          cmpi    11,a4
         00000b40     fff4  
TMS340 COFF Macro Assembler Version 6.10     Wed Apr 21 11:32:03 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE    5

     170 00000b50     c405          jrlt    fodr1
     171 00000b60     242e          sll     1,a14
     172 00000b70     0b44          cmpi    12,a4
         00000b80     fff3  
     173 00000b90     c401          jrlt    fodr1
     174 00000ba0     242e          sll     1,a14
     175 00000bb0     058e  fodr1   move    a14,@tap_count1,W
         00000bc0 00000070- 
     176 00000be0     18ae          movk    5,a14
     177 00000bf0                   GBLOCK  a14,a14
     178 00000c30     b5c4          move    *a14(POF_DRONE_LEVEL),a4,W
         00000c40     0be0  
     179 00000c50     b7ce          move    *a14(POF_S_FACE),a14,L
         00000c60     0180  
     180 00000c70     85ce          move    *a14,a14,W
     181 00000c80     0b44          cmpi    9,a4
         00000c90     fff6  
     182 00000ca0     c40d          jrlt    fodr2
     183 00000cb0     242e          sll     1,a14
     184 00000cc0     0b44          cmpi    10,a4
         00000cd0     fff5  
     185 00000ce0     c409          jrlt    fodr2
     186 00000cf0     242e          sll     1,a14
     187 00000d00     0b44          cmpi    11,a4
         00000d10     fff4  
     188 00000d20     c405          jrlt    fodr2
     189 00000d30     242e          sll     1,a14
     190 00000d40     0b44          cmpi    12,a4
         00000d50     fff3  
     191 00000d60     c401          jrlt    fodr2
     192 00000d70     242e          sll     1,a14
     193 00000d80     058e  fodr2   move    a14,@tap_count2,W
         00000d90 00000080- 
     194 00000db0     0d5f          calla   new_puck_control
         00000dc0 00000000! 
     195 00000de0     09e4          movi    face_off_points,a4
         00000df0 00004350' 
     196 00000e10     05ae          move    @faceoff_z,a14,W
         00000e20 00000010- 
     197 00000e40     0b4e          cmpi    400,a14
         00000e50     fe6f  
     198 00000e60     c403          jrlt    rfo1
     199 00000e70     09e4          movi    other_face_off_points,a4
         00000e80 000044e0' 
     200 00000ea0     0d3f  rfo1    callr   move_players_to_points_ng
         00000eb0     03ec  
     201 00000ec0                   JSRP    wait_for_all_control
     202 00000f30     57ce          clr     a14                     ;safety
     203 00000f40     058e          move    a14,@no_control,W       ;safety
         00000f50 00000000! 
     204 00000f70     0d5f          calla   turn_all_arrows_long
         00000f80 00000000! 
     205 00000fa0     09e4          movi    face_off_2_points,a4
         00000fb0 00004670' 
     206 00000fd0     05ae          move    @faceoff_z,a14,W
TMS340 COFF Macro Assembler Version 6.10     Wed Apr 21 11:32:03 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE    6

         00000fe0 00000010- 
     207 00001000     0b4e          cmpi    400,a14
         00001010     fe6f  
     208 00001020     c403          jrlt    rfo134
     209 00001030     09e4          movi    other_face_off_2_points,a4
         00001040 00004800' 
     210 00001060     0d3f  rfo134  callr   free_skate_players_to_points_ng
         00001070     03fe  
     211 00001080                   JSRP    wait_for_stopped_ref
     212 000010f0     57ce          clr     a14                     ;safety
     213 00001100     058e          move    a14,@no_control,W       ;safety
         00001110 00000000! 
     214 00001130     0d3f          callr   start_ref_faceoff
         00001140     061e  
     215 00001150                   JSRP    wait_for_all_control
     216 000011c0     57ce          clr     a14                     ;safety
     217 000011d0     058e          move    a14,@no_control,W       ;safety
         000011e0 00000000! 
     218                    ;       calla   spx_faceoff_start
     219                    ;       movk    1,a14
     220                    ;       move    a14,@taps_ok,W
     221                    ;       movi    50,a10
     222                    ;revf   callr   revsub
     223                    ;       SLEEP   1
     224                    ;       dsjs    a10,revf
     225                    
     226 00001200     05ae          MOVE    @GAME_STATE,A14,W
         00001210 00000000! 
     227 00001230     0b4e          CMPI    INAMODE,A14
         00001240     ffcf  
     228 00001250     ca00          JREQ    FP_DROP                         ;BR=IN ATTRACT MODE
         00001260     00bc  
     229                    
     230 00001270     05ae          MOVE    @SHOW_START_SHIT,A14,W
         00001280 00000000! 
     231 000012a0     ca00          JRZ     FP_DROP                         ;BR=DON'T DO IT
         000012b0     00b7  
     232                    
     233 000012c0     57ce          CLR     A14
     234 000012d0     058e          MOVE    A14,@SHOW_START_SHIT,W  ;DON'T EVER LET THIS HAPPEN AGAIN
         000012e0 00000000! 
     235                    
     236 00001300     57ce          clr     a14                     ;safety
     237 00001310     058e          move    a14,@no_control,W       ;safety
         00001320 00000000! 
     238                    
     239 00001340     190e          MOVK    8,A14
     240 00001350     058e          MOVE    A14,@SLIDE_OFF_COUNT,W          ;START GRAPHICS SLIDIN'
         00001360 00000000! 
     241                    
     242 00001380           FP_SLIDE_WAIT
     243 00001380                   SLEEP   1
     244 000013c0     05ae          MOVE    @SLIDE_OFF_COUNT,A14,W
         000013d0 00000000! 
     245 000013f0     cbf8          JRNZ    FP_SLIDE_WAIT                   ;BR=SLIDIN' GRAPHICS NOT DONE
TMS340 COFF Macro Assembler Version 6.10     Wed Apr 21 11:32:03 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE    7

     246                    
     247 00001400                   JSRP    SHOW_GCARDS_INTRO
     248                    
     249                            .if     NO_HELP_WINDOWS
     250                            .else
     251                    
     252 00001470     0d5f          CALLA   START_HELP_WINDOWS
         00001480 00000000! 
     253 000014a0     05ae          MOVE    @HELP_WINDOW_COUNT,A14,W
         000014b0 00000000! 
     254 000014d0     ca3b          JRZ     FP_CHECK_CUP_GAME               ;BR=NO WINDOWS
     255                    
     256 000014e0     0d5f          CALLA   COPY_HEAD_PALS
         000014f0 00000000! 
     257                    
     258 00001510     09ce          MOVI    99,A14
         00001520     0063  
     259 00001530     058e          MOVE    A14,@MAX_PALXFERS,W
         00001540 00000000! 
     260 00001560     09e0          MOVI    HELP_PAL_LIST,A0
         00001570 000028e0' 
     261 00001590     0d5f          calla   FADE_FULL2HALFf
         000015a0 00000000! 
     262 000015c0                   JSRP    FADE_WAIT
     263 00001630     0d5f          CALLA   RESET_MAX_PALXFERS
         00001640 00000000! 
     264                    
     265 00001660     0d5f          CALLA   ALLOCATE_ALT_HEAD_PALS
         00001670 00000000! 
     266                    
     267 00001690           FP_HELP_WINDOW_WAIT
     268 00001690                   SLEEP   1
     269 000016d0     05ae          MOVE    @HELP_WINDOW_COUNT,A14,W
         000016e0 00000000! 
     270 00001700     cbf8          JRNZ    FP_HELP_WINDOW_WAIT             ;BR=NO WINDOWS
     271                    
     272 00001710     0d5f          CALLA   DEALLOCATE_ALT_HEAD_PALS
         00001720 00000000! 
     273                    
     274 00001740     09ce          MOVI    99,A14
         00001750     0063  
     275 00001760     058e          MOVE    A14,@MAX_PALXFERS,W
         00001770 00000000! 
     276 00001790     09e0          MOVI    HELP_PAL_LIST,A0
         000017a0 000028e0' 
     277 000017c0     0d5f          calla   FADE_HALF2FULLf
         000017d0 00000000! 
     278 000017f0                   JSRP    FADE_WAIT
     279 00001860     0d5f          CALLA   RESET_MAX_PALXFERS
         00001870 00000000! 
     280                    
     281                            .endif
     282                    
     283 00001890           FP_CHECK_CUP_GAME
     284 00001890     09e6          MOVI    PLAYER_1_BLOCK,A6
TMS340 COFF Macro Assembler Version 6.10     Wed Apr 21 11:32:03 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE    8

         000018a0 00000000! 
     285 000018c0     05a1          MOVE    @team2,A1,W
         000018d0 00000000! 
     286 000018f0     0d3f          CALLR   CHECK_STANCUP_GAME
         00001900     00be  
     287 00001910     ca1b          JRZ     FP_CUP_GAME
     288                    
     289 00001920     09e6          MOVI    PLAYER_2_BLOCK,A6
         00001930 00000000! 
     290 00001950     05a1          MOVE    @team2,A1,W
         00001960 00000000! 
     291 00001980     0d3f          CALLR   CHECK_STANCUP_GAME
         00001990     00b5  
     292 000019a0     ca12          JRZ     FP_CUP_GAME
     293                    
     294 000019b0     09e6          MOVI    PLAYER_5_BLOCK,A6
         000019c0 00000000! 
     295 000019e0     05a1          MOVE    @team1,A1,W
         000019f0 00000000! 
     296 00001a10     0d3f          CALLR   CHECK_STANCUP_GAME
         00001a20     00ac  
     297 00001a30     ca09          JRZ     FP_CUP_GAME
     298                    
     299 00001a40     09e6          MOVI    PLAYER_6_BLOCK,A6
         00001a50 00000000! 
     300 00001a70     05a1          MOVE    @team1,A1,W
         00001a80 00000000! 
     301 00001aa0     0d3f          CALLR   CHECK_STANCUP_GAME
         00001ab0     00a3  
     302 00001ac0     cb2b          JRNZ    FP_POWERUPS
     303                    
     304 00001ad0           FP_CUP_GAME
     305 00001ad0     09c0          MOVI    PID_POWERUP,A0
         00001ae0     090d  
     306 00001af0     0d5f          CALLA   KILLPROC_ALL
         00001b00 00000000! 
     307                    
     308 00001b20     09e0          MOVI    ORGTXT1P,A0
         00001b30 00000000! 
     309 00001b50     0d5f          CALLA   GETFPAL
         00001b60 00000000! 
     310 00001b80     4c09          move    a0,a9
     311                    
     312 00001b90     1868          MOVK    3,A8
     313 00001ba0           FP_STANCUP_LUPE
     314                    ;       PUSH    A8
     315 00001ba0     098f          mmtm    sp,a8,a9
         00001bb0     00c0  
     316 00001bc0     09e8          MOVI    STANLEY_CUP_MESS,A8
         00001bd0 00002680' 
     317 00001bf0                   JSRP    LM_PRINTF
     318                    ;       PULLQ   A8
     319 00001c60     09af          mmfm    sp,a8,a9
         00001c70     0300  
     320                    
TMS340 COFF Macro Assembler Version 6.10     Wed Apr 21 11:32:03 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE    9

     321 00001c80                   SLEEP   20
     322                    
     323 00001cc0     0d5f          CALLA   CLRTEXT
         00001cd0 00000000! 
     324                    
     325 00001cf0                   SLEEP   10
     326                    
     327 00001d30     3f48          DSJ     A8,FP_STANCUP_LUPE      
     328                    
     329                    ;       MOVI    ORGTXT1P,A0
     330                    ;       CALLA   DELETE_PAL              ;DELETE OLD
     331 00001d40     4d20          move    a9,a0
     332 00001d50     0d5f          calla   FREEPAL
         00001d60 00000000! 
     333                    
     334 00001d80           FP_POWERUPS
     335 00001d80     0d5f          CALLA   REPORT_POWERUPS
         00001d90 00000000! 
     336 00001db0                   CREATE  PID_IND,START_1ST_SMALL_TIMER   ;START SMALL TIMER SOON
     337                    
     338 00001e30           FP_DROP
     339 00001e30     09c0          MOVI    PID_POWERUP,A0
         00001e40     090d  
     340 00001e50     0d5f          CALLA   KILLPROC_ALL
         00001e60 00000000! 
     341                    
     342 00001e80     098f          mmtm    sp,a0
         00001e90     8000  
     343 00001ea0     09c0          movi    360,a0
         00001eb0     0168  
     344 00001ec0     0d5f          calla   RAND0
         00001ed0 00000000! 
     345 00001ef0     0580          move    a0,@PLAYER_1_BLOCK+POF_FAKE_DIRECTION,W
         00001f00 000003e0! 
     346 00001f20     09c0          movi    360,a0
         00001f30     0168  
     347 00001f40     0d5f          calla   RAND0
         00001f50 00000000! 
     348 00001f70     0580          move    a0,@PLAYER_6_BLOCK+POF_FAKE_DIRECTION,W
         00001f80 000003e0! 
     349 00001fa0     09af          mmfm    sp,a0
         00001fb0     0001  
     350 00001fc0     0d5f          calla   spx_faceoff_start
         00001fd0 00000000! 
     351 00001ff0     182e          movk    1,a14
     352 00002000     058e          move    a14,@taps_ok,W
         00002010 00000060- 
     353 00002030     09ca          movi    60,a10
         00002040     003c  
     354 00002050     05ae          move    @faceoff_type,a14,W
         00002060 000000f0- 
     355 00002080     cb02          jrnz    revf
     356 00002090     09ca          movi    50,a10
         000020a0     0032  
     357 000020b0     0d3f  revf    callr   revsub
TMS340 COFF Macro Assembler Version 6.10     Wed Apr 21 11:32:03 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   10

         000020c0     00b1  
     358 000020d0                   SLEEP   1
     359 00002110     3cea          dsjs    a10,revf
     360 00002120     57ce          clr     a14                     ;safety
     361 00002130     058e          move    a14,@no_control,W       ;safety
         00002140 00000000! 
     362                    
     363 00002160     0d3f          callr   start_ref_drop
         00002170     0521  
     364 00002180     0d3f          callr   pick_faceoff_winner
         00002190     0179  
     365 000021a0     0d5f          calla   spx_faceoff_taken
         000021b0 00000000! 
     366 000021d0     0d3f          callr   set_faceoff_take_scripts
         000021e0     0192  
     367 000021f0     4c2a          move    a1,a10
     368 00002200                   SLEEP   3
     369 00002240     4d41          move    a10,a1
     370 00002250     0d3f          callr   set_faceoff_puck_state
         00002260     01d5  
     371 00002270     0d5f          calla   start_timer
         00002280 00000000! 
     372                    
     373 000022a0     05a0          move    @timer_on,a0,W
         000022b0 00000000! 
     374 000022d0     ca04          jrz     stru1
     375 000022e0     19e0          movk    15,a0
     376 000022f0     0d5f          calla   show_timer
         00002300 00000000! 
     377 00002320           stru1
     378                    ;;      movi    100,a0
     379                    ;       movi    15,a0
     380                    ;       calla   show_timer
     381                    
     382 00002320                   SLEEP   14
     383                    
     384 00002360     0d3f          callr   get_rid_of_ref
         00002370     056f  
     385 00002380     0d3f          callr   give_back_all_control
         00002390     02f5  
     386 000023a0     57ce          clr     a14
     387 000023b0     058e          move    a14,@taps_ok,W
         000023c0 00000060- 
     388 000023e0     c080          jauc    SUCIDE
         000023f0 00000000! 
     389                    
     390 00002410           wait_for_stopped_ref
     391 00002410     07a8          move    @ref_object,a8,L
         00002420 00000090- 
     392 00002440     b700  wfsr1   move    *a8(OXVEL),a0,L
         00002450     0100  
     393 00002460     ca05          jrz     wfsr9
     394 00002470                   SLEEP   1
     395 000024b0     c0f8          jruc    wfsr1
     396 000024c0           wfsr9   RETP
TMS340 COFF Macro Assembler Version 6.10     Wed Apr 21 11:32:03 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   11

     397                    
     398                    **************************************************************************
     399                    *                                                                        *
     400                    * CHECK_STANCUP_GAME                                                     *
     401                    *                                                                        *
     402                    * PASS:                                                                  *
     403                    * A1 = OPPOSING TEAM                                                     *
     404                    * A6 = PLAYER BLOCK                                                      *
     405                    *                                                                        *
     406                    * RETURN:                                                                *
     407                    * Z SET IF THIS IS THE STANLEY CUP GAME, ELSE Z CLR                      *
     408                    *                                                                        *
     409                    **************************************************************************
     410                    
     411 000024f0           CHECK_STANCUP_GAME
     412 000024f0     b4c0          MOVE    *A6(POF_CMOS),A0,W
         00002500     0060  
     413 00002510     ce15          JRN     CSG_DONE                        ;BR=NO RECORD (NZ)
     414 00002520     0d5f          CALLA   get_cmos_record_a
         00002530 00000000! 
     415                    
     416 00002550     07a0          MOVE    @b_teamsbeat,A0,L
         00002560 00000000! 
     417 00002580     1b22          MOVK    25,A2                           ;LAST NHL TEAM
     418 00002590     5663          CLR     A3                              ;RESET TOTAL DEFEATS
     419 000025a0     5684          CLR     A4
     420 000025b0     1424          DEC     A4                              ;INVALID STANLEY CUP TEAM
     421 000025c0           CSG_LUPE
     422 000025c0     4a40          BTST    A2,A0
     423 000025d0     ca02          JRZ     CSG_NEXT                        ;BR=DIDN'T BEAT THIS TEAM
     424 000025e0     1023          INC     A3                              ;BEAT 'EM!
     425 000025f0     c002          JRUC    CSG_NEXT2
     426 00002600           CSG_NEXT
     427 00002600     4c44          MOVE    A2,A4                           ;LAST UNBEATEN TEAM
     428 00002610     1024          INC     A4
     429 00002620           CSG_NEXT2
     430 00002620     1422          DEC     A2
     431 00002630     cff8          JRNN    CSG_LUPE                        ;BR=MORE TEAMS TO CHECK
     432                    
     433 00002640     1723          SUBK    25,A3
     434 00002650     cb01          JRNZ    CSG_DONE                        ;BR=NOT LAST TEAM (NZ)
     435                    
     436 00002660     4824          CMP     A1,A4
     437                            ;Z IF STANLEY CUP GAME, ELSE NZ
     438                    
     439 00002670           CSG_DONE
     440 00002670     0960          RETS
     441                    
     442 00002680           STANLEY_CUP_MESS
     443 00002680                   MESS_MAC2 H50FONT,-2,0,199,65,HFPAL,STRCNCONV,OID_TEXT
     444 00002740       5c          .STRING "\pSTANLEY\nCUP] GAME !",0
     445 00002800 00000000!         .LONG   ORGTXT1P        
     446 00002820                   .EVEN
     447                            
     448                    **************************************************************************
TMS340 COFF Macro Assembler Version 6.10     Wed Apr 21 11:32:03 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   12

     449                    *                                                                        *
     450                    * START_1ST_SMALL_TIMER - FLAG SMALL TIMER TO BE DISPLAYED AFTER FACEOFF *
     451                    *                                                                        *
     452                    * PASS:                                                                  *
     453                    * NUTIN'                                                                 *
     454                    *                                                                        *
     455                    **************************************************************************
     456                    
     457 00002820           START_1ST_SMALL_TIMER
     458 00002820                   SLEEP   91
     459 00002870     1820          movk    1,a0
     460 00002880     0580          move    a0,@small_timer_on,W
         00002890 00000000! 
     461 000028b0                   DIE
     462                    
     463 000028e0           HELP_PAL_LIST
     464 000028e0 00000000!         .long   FREEBOXP
     465 00002900 00000000!         .long   PRPTRBOP,BLUTRBOP,YLWTRBOP,GRNTRBOP
     466 00002980 00000000!         .long   LSTNME1P,NAMEBARP
     467 000029c0 00000000!         .long   SCOREBAR,JITTERP,CITYP,SCORESP,PERIODP,LEDSP    ;,SCCITYP
     468 00002a80 00000000!         .long   T2FIXED,TEXTPAL
     469 00002ac0 00000000!         .long   player_1_turbopal,player_2_turbopal
     470 00002b00 00000000!         .long   player_3_turbopal,player_4_turbopal
     471 00002b40 00000000!         .LONG   arrp_pal,arrb_pal,arry_pal,arrg_pal
     472 00002bc0 00000000          .long   0
     473                    
     474 00002be0     1820  revsub  movk    1,a0
     475 00002bf0     1847          movk    2,a7
     476 00002c00     0d3f          callr   ttx1
         00002c10     0002  
     477 00002c20     18c0          movk    6,a0
     478 00002c30     18a7          movk    5,a7
     479 00002c40           ttx1    GBLOCK  a0,a6
     480 00002c90     b6c8          move    *a6(POF_OBJECT),a8,L
         00002ca0     0280  
     481 00002cb0     b4c0          move    *a6(POF_FAKE_DIRECTION),a0,W
         00002cc0     03e0  
     482 00002cd0     2600          sll     16,a0
     483 00002ce0     b4ce          move    *a6(POF_FLAGS),a14,W
         00002cf0     0200  
     484 00002d00     1fee          btst    B_PF_HUMAN,a14
     485 00002d10     cb0b          jrnz    ttx2nd
     486 00002d20                   GBLOCK  a7,a7
     487 00002d60     b4ee          move    *a7(POF_FLAGS),a14,W
         00002d70     0200  
     488 00002d80     1fee          btst    B_PF_HUMAN,a14
     489 00002d90     ca0e          jrz     ttx2d
     490 00002da0     aee0          movb    *a7(POF_JOY),a0
         00002db0     0398  
     491 00002dc0     c002          jruc    ttx2rd
     492 00002dd0     aec0  ttx2nd  movb    *a6(POF_JOY),a0
         00002de0     0398  
     493 00002df0     4c00  ttx2rd  move    a0,a0
     494 00002e00     ca00          jrz     tttx            ;we stay still, we don't move
         00002e10     008f  
TMS340 COFF Macro Assembler Version 6.10     Wed Apr 21 11:32:03 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   13

     495 00002e20     1480          subk    4,a0
     496 00002e30     c101          jrp     ttx2
     497 00002e40     1100          addk    8,a0
     498 00002e50     0d5f  ttx2    calla   dir_to_degrees  ;get our joystick angle, a0
         00002e60 00000000! 
     499 00002e80     4c09  ttx2d   move    a0,a9
     500 00002e90     4c04          move    a0,a4
     501 00002ea0     0d3f          callr   fa555           ;get our current angle, a0
         00002eb0     0086  
     502 00002ec0     4404          sub     a0,a4
     503 00002ed0                   THETA_H a4              ;a4 is +/- 180 of difference
     504 00002fe0     09e5          movi    XD0023,a5
         00002ff0 00024ccd  
     505 00003010     4c84          move    a4,a4
     506 00003020     c101          jrp     ttx3
     507 00003030     03a5          neg     a5
     508 00003040     0384  ttx3    abs     a4              ;a5 is our maximum change
     509 00003050     0b64          cmpi    XD0023,a4
         00003060 fffdb332  
     510 00003080     c902          jrhs    tlk1
     511 00003090     4d20          move    a9,a0
     512 000030a0     c001          jruc    tttl1
     513 000030b0     40a0  tlk1    add     a5,a0           ;a0 is our new angle
     514 000030c0     aece  tttl1   movb    *a6(POF_NUMBER),a14
         000030d0     0000  
     515 000030e0     142e          dec     a14
     516 000030f0     2fce          srl     2,a14
     517 00003100     cb21          jrnz    ttteam2
     518 00003110           ttteam1 THETA_H a0
     519 00003220     0b60          cmpi    XD0750,a0
         00003230 ffb4ffff  
     520 00003250     c604          jrle    tx1_1
     521 00003260     09e0          movi    XD0750,a0
         00003270 004b0000  
     522 00003290     c025          jruc    adone
     523 000032a0     0b60  tx1_1   cmpi    -XD0800,a0
         000032b0 004fffff  
     524 000032d0     c521          jrge    adone
     525 000032e0     09e0          movi    -XD0800,a0
         000032f0 ffb00000  
     526 00003310     c01d          jruc    adone
     527 00003320           ttteam2 THETA_N a0
     528 00003400     0b60          cmpi    XD1000,a0
         00003410 ff9bffff  
     529 00003430     c904          jrhs    tx2_1
     530 00003440     09e0          movi    XD1000,a0
         00003450 00640000  
     531 00003470     c007          jruc    adone
     532 00003480     0b60  tx2_1   cmpi    XD2600,a0
         00003490 fefbffff  
     533 000034b0     c203          jrls    adone
     534 000034c0     09e0          movi    XD2600,a0
         000034d0 01040000  
     535 000034f0     09e1  adone   movi    [150,0],a1
         00003500 00960000  
TMS340 COFF Macro Assembler Version 6.10     Wed Apr 21 11:32:03 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   14

     536 00003520     0d5f          calla   polar_to_rect
         00003530 00000000! 
     537 00003550     05ae          move    @faceoff_x,a14,W
         00003560 00000000- 
     538 00003580     260e          sll     16,a14
     539 00003590     45c0          sub     a14,a0
     540 000035a0     03a0          neg     a0
     541 000035b0     05ae          move    @faceoff_z,a14,W
         000035c0 00000010- 
     542 000035e0     260e          sll     16,a14
     543 000035f0     45c1          sub     a14,a1
     544 00003600     03a1          neg     a1
     545 00003610     b208          move    a0,*a8(OXVAL),L
         00003620     0140  
     546 00003630     b228          move    a1,*a8(OZVAL),L
         00003640     0180  
     547 00003650     098f          mmtm    sp,a0,a1,a7,a9
         00003660     c140  
     548 00003670     b6c7          move    *a6(POF_ARROW_CPU),a7,L
         00003680     0360  
     549 00003690     ca05          jrz     abgta
     550 000036a0     b6c9          move    *a6(POF_OBJECT),a9,L
         000036b0     0280  
     551 000036c0     0d5f          calla   cpu_arrow_on
         000036d0 00000000! 
     552 000036f0     09af  abgta   mmfm    sp,a0,a1,a7,a9
         00003700     0283  
     553 00003710     0960  tttx    rets
     554                    
     555 00003720     b700  fa555   move    *a8(OXVAL),a0,L
         00003730     0140  
     556 00003740     b701          move    *a8(OZVAL),a1,L
         00003750     0180  
     557 00003760     05ae          move    @faceoff_x,a14,W
         00003770 00000000- 
     558 00003790     260e          sll     16,a14
     559 000037a0     45c0          sub     a14,a0
     560 000037b0     03a0          neg     a0
     561 000037c0     05ae          move    @faceoff_z,a14,W
         000037d0 00000010- 
     562 000037f0     260e          sll     16,a14
     563 00003800     45c1          sub     a14,a1
     564 00003810     03a1          neg     a1
     565 00003820     0d5f          calla   rect_to_dir
         00003830 00000000! 
     566 00003850     4c03          move    a0,a3
     567 00003860     0d5f          calla   dir_to_18
         00003870 00000000! 
     568 00003890     ac06          movb    a0,*a6(POF_DIRECTION)
         000038a0     0390  
     569 000038b0     5600          clr     a0
     570 000038c0     ac06          movb    a0,*a6(POF_BDIRECTION)
         000038d0     03d0  
     571 000038e0     0d5f          calla   set_faceoff_ready_script
         000038f0 00000000! 
TMS340 COFF Macro Assembler Version 6.10     Wed Apr 21 11:32:03 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   15

     572 00003910     4c60          move    a3,a0
     573 00003920     0960          rets
     574                    
     575 00003930           pick_faceoff_winner
     576 00003930     05a0          move    @tap_count1,a0,W
         00003940 00000070- 
     577 00003960     05a1          move    @tap_count2,a1,W
         00003970 00000080- 
     578 00003990     4020          add     a1,a0
     579 000039a0     0d5f          calla   RANDU
         000039b0 00000000! 
     580 000039d0     4820          cmp     a1,a0
     581 000039e0     c203          jrls    pfw_2
     582 000039f0     0300          jruc    pfw_1
     583 00003a00     1820  pfw_1   movk    1,a0
     584 00003a10     c001          jruc    pfwx
     585 00003a20     1840  pfw_2   movk    2,a0
     586 00003a30     4c01  pfwx    move    a0,a1
     587 00003a40     098f          mmtm    sp,a1
         00003a50     4000  
     588 00003a60     4c0e          move    a0,a14
     589 00003a70     24ae          sll     5,a14
     590 00003a80     0b2e          addi    faceoff_1-32,a14
         00003a90 00000000- 
     591 00003ab0     87c1          move    *a14,a1,L
     592 00003ac0     1021          inc     a1
     593 00003ad0     822e          move    a1,*a14,L
     594 00003ae0     09af          mmfm    sp,a1
         00003af0     0002  
     595 00003b00     0960          rets
     596                    
     597 00003b10           set_faceoff_take_scripts        ;don't change a0,a1
     598 00003b10     098f          mmtm    sp,a0,a1
         00003b20     c000  
     599 00003b30     24c0          sll     6,a0
     600 00003b40     0b20          addi    set_fts-64,a0
         00003b50 00003c90' 
     601 00003b70     4c0b          move    a0,a11
     602 00003b80     1840          movk    2,a0
     603 00003b90     0d3f          callr   sftr1
         00003ba0     0006  
     604 00003bb0     18a0          movk    5,a0
     605 00003bc0     0d3f          callr   sftr1
         00003bd0     0003  
     606 00003be0     09af          mmfm    sp,a0,a1
         00003bf0     0003  
     607 00003c00     0960          rets
     608 00003c10     9761  sftr1   move    *a11+,a1,L
     609 00003c20                   GBLOCK  a0,a6
     610 00003c70     b6c8          move    *a6(POF_OBJECT),a8,L
         00003c80     0280  
     611 00003c90     0d5f          calla   take_player_control
         00003ca0 00000000! 
     612 00003cc0     0161          jump    a1              ;set our script
     613                    
TMS340 COFF Macro Assembler Version 6.10     Wed Apr 21 11:32:03 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   16

     614 00003cd0 00003d50' set_fts .long   set_faceoff_take_for_2
     615 00003cf0 00003d70'         .long   set_faceoff_take_for_5
     616                    
     617 00003d10 00003d50'         .long   set_faceoff_take_for_2
     618 00003d30 00003d70'         .long   set_faceoff_take_for_5
     619                    
     620 00003d50           set_faceoff_take_for_2
     621 00003d50     1827          movk    1,a7
     622 00003d60     c001          jruc    sfr1
     623 00003d70           set_faceoff_take_for_5
     624 00003d70     18c7          movk    6,a7
     625 00003d80           sfr1    GBLOCK  a7,a7
     626 00003dc0     b4ee          move    *a7(POF_FLAGS),a14,W
         00003dd0     0200  
     627 00003de0     1e8e          btst    B_PF_REV_FACE,a14
     628 00003df0     cb19          jrnz    sfrr1
     629 00003e00     b6e7          move    *a7(POF_OBJECT),a7,L
         00003e10     0280  
     630 00003e20     b4e7          move    *a7(OZPOS),a7,W
         00003e30     0190  
     631 00003e40     b50e          move    *a8(OZPOS),a14,W
         00003e50     0190  
     632 00003e60     45c7          sub     a14,a7
     633 00003e70     0b47          cmpi    125,a7
         00003e80     ff82  
     634 00003e90     c780          jagt    set_faceoff_take_up_script
         00003ea0 00000000! 
     635 00003ec0     0b47          cmpi    76,a7
         00003ed0     ffb3  
     636 00003ee0     c780          jagt    set_face_take_up_back_script
         00003ef0 00000000! 
     637 00003f10     0b47          cmpi    -80,a7
         00003f20     004f  
     638 00003f30     c780          jagt    set_faceoff_take_back_script
         00003f40 00000000! 
     639 00003f60     c080          jauc    set_faceoff_take_down_script
         00003f70 00000000! 
     640 00003f90     c080  sfrr1   jauc    set_rev_face_take_back_script
         00003fa0 00000000! 
     641                    
     642 00003fc0           set_faceoff_puck_state
     643 00003fc0     24e1          sll     7,a1
     644 00003fd0     0b21          addi    faceoff_state_table-128,a1
         00003fe0 000041d0' 
     645 00004000     1904          movk    8,a4
     646 00004010     1865          movk    3,a5
     647 00004020     9420  cb4l    move    *a1+,a0,W
     648 00004030                   GBLOCK  a0,a6
     649 00004080     ac86          movb    a4,*a6(POF_IGNORE_PUCK)
         00004090     0598  
     650 000040a0     3d25          dsjs    a5,cb4l
     651 000040b0     9420          move    *a1+,a0,W
     652 000040c0     0580          move    a0,@world_mt_point,W
         000040d0 00000000! 
     653 000040f0     09f6          movi    DUMRETS,b6              ;don't modify
TMS340 COFF Macro Assembler Version 6.10     Wed Apr 21 11:32:03 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   17

         00004100 00000000! 
     654 00004120     9420          move    *a1+,a0,W
     655 00004130     09e7          movi    [11,0],a7
         00004140 000b0000  
     656 00004160     0d5f          calla   send_puck_to_player
         00004170 00000000! 
     657 00004190     1820          movk    1,a0
     658 000041a0     0580          move    a0,@PUCK_MODE,W
         000041b0 00000000! 
     659 000041d0     07c0          move    @WAVEIRQS,@faceoff_time,L
         000041e0 00000000! 
         00004200 000000d0- 
     660 00004220     c080          jauc    puck_slide_sound
         00004230 00000000! 
     661                    
     662 00004250           faceoff_state_table
     663 00004250     0002          .word   2,5,6,160,1,0,0,0
     664 000042d0     0001          .word   1,2,5,-160,6,0,0,0
     665                    
     666 00004350           face_off_points
     667 00004350     0001          .word   1,-150,71,2
     668 00004390     0002          .word   2,-150,0,3
     669 000043d0     0005          .word   5,150,0,7
     670 00004410     0006          .word   6,150,71,8
     671 00004450     0004          .word   4,-150,-69,4
     672 00004490     0008          .word   8,150,-69,6
     673 000044d0     0000          .word   0
     674                    
     675 000044e0           other_face_off_points                   ;when face off is on far side of ice
     676 000044e0     0001          .word   1,-150,-69,4
     677 00004520     0002          .word   2,-150,0,3
     678 00004560     0005          .word   5,150,0,7
     679 000045a0     0006          .word   6,150,-69,6
     680 000045e0     0004          .word   4,-150,71,2
     681 00004620     0008          .word   8,150,71,8
     682 00004660     0000          .word   0
     683                    
     684 00004670           face_off_2_points
     685 00004670     0002          .word   2,-60,0,-3
     686 000046b0     0005          .word   5,60,0,-7
     687 000046f0     0001          .word   1,-140,61,-2
     688 00004730     0006          .word   6,140,61,-8
     689 00004770     0004          .word   4,-140,-59,-4
     690 000047b0     0008          .word   8,140,-59,-6
     691 000047f0     0000          .word   0
     692                    
     693 00004800           other_face_off_2_points
     694 00004800     0002          .word   2,-60,0,-3
     695 00004840     0005          .word   5,60,0,-7
     696 00004880     0001          .word   1,-140,-59,-4
     697 000048c0     0006          .word   6,140,-59,-6
     698 00004900     0004          .word   4,-140,61,-2
     699 00004940     0008          .word   8,140,61,-8
     700 00004980     0000          .word   0
     701                    
TMS340 COFF Macro Assembler Version 6.10     Wed Apr 21 11:32:03 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   18

     702 00004990           inc_tap
     703 00004990     0b40          cmpi    2,a0
         000049a0     fffd  
     704 000049b0     ca13          jrz     it1
     705 000049c0     0b40          cmpi    5,a0
         000049d0     fffa  
     706 000049e0     ca10          jrz     it1
     707 000049f0     1841          movk    2,a1
     708 00004a00     0b40          cmpi    5,a0
         00004a10     fffa  
     709 00004a20     c801          jrlo    it3
     710 00004a30     18a1          movk    5,a1
     711 00004a40           it3     GBLOCK  a1,a14
     712 00004a90     b5ce          move    *a14(POF_FLAGS),a14,W
         00004aa0     0200  
     713 00004ab0     1fee          btst    B_PF_HUMAN,a14
     714 00004ac0     cb0c          jrnz    it9             ;the player we want is a human, ignore this guy
     715 00004ad0     4c2e          move    a1,a14
     716 00004ae0     c001          jruc    it2
     717 00004af0     4c0e  it1     move    a0,a14
     718 00004b00     142e  it2     dec     a14
     719 00004b10     2fce          srl     2,a14
     720 00004b20     248e          sll     4,a14
     721 00004b30     0b2e          addi    tap_count1,a14
         00004b40 00000070- 
     722 00004b60     85c1          move    *a14,a1,W
     723 00004b70     1021          inc     a1
     724 00004b80     802e          move    a1,*a14,W
     725 00004b90     0960  it9     rets
     726                    
     727 00004ba0           faceoff_tap
     728 00004ba0     05ae          move    @taps_ok,a14
         00004bb0 00000060- 
     729 00004bd0     ca06          jrz     ft999
     730 00004be0     0d5f          calla   take_player_control
         00004bf0 00000000! 
     731 00004c10     c080          jauc    set_faceoff_tap_script
         00004c20 00000000! 
     732 00004c40     0960  ft999   rets
     733                    
     734                    **************************************************************************
     735                    *                                                                        *
     736                    * move_players_to_points                                                 *
     737                    *       input   a4 = list of player/points                               *
     738                    *                                                                        *
     739                    **************************************************************************
     740 00004c50           move_players_to_points
     741 00004c50     9480  mtps_2  move    *a4+,a0,W
     742 00004c60     ca10          jrz     mtps_9
     743 00004c70     9482          move    *a4+,a2,W
     744 00004c80     05ae          move    @faceoff_x,a14
         00004c90 00000000- 
     745 00004cb0     41c2          add     a14,a2
     746 00004cc0     2602          sll     16,a2
     747 00004cd0     9483          move    *a4+,a3,W
TMS340 COFF Macro Assembler Version 6.10     Wed Apr 21 11:32:03 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   19

     748 00004ce0     05ae          move    @faceoff_z,a14
         00004cf0 00000010- 
     749 00004d10     41c3          add     a14,a3
     750 00004d20     2603          sll     16,a3
     751 00004d30     9481          move    *a4+,a1,W
     752 00004d40     0d3f          callr   move_player_to_point
         00004d50     0065  
     753 00004d60     c0ee          jruc    mtps_2
     754 00004d70     0960  mtps_9  rets
     755                    
     756 00004d80           move_players_to_points_ng               ;skips any player that is a goalie
     757 00004d80     9480  mtng_2  move    *a4+,a0,W
     758 00004d90     cafd          jrz     mtps_9
     759 00004da0     9482          move    *a4+,a2,W
     760 00004db0     05ae          move    @faceoff_x,a14
         00004dc0 00000000- 
     761 00004de0     41c2          add     a14,a2
     762 00004df0     2602          sll     16,a2
     763 00004e00     9483          move    *a4+,a3,W
     764 00004e10     05ae          move    @faceoff_z,a14
         00004e20 00000010- 
     765 00004e40     41c3          add     a14,a3
     766 00004e50     2603          sll     16,a3
     767 00004e60     9481          move    *a4+,a1,W
     768 00004e70                   GBLOCK  a0,a14
     769 00004ec0     b5ce          move    *a14(POF_FLAGS),a14,W
         00004ed0     0200  
     770 00004ee0     1fae          btst    B_PF_GOALIE,a14
     771 00004ef0     cbe8          jrnz    mtng_2                  ;skip if he is a goalie
     772 00004f00     0d3f          callr   move_player_to_point
         00004f10     0049  
     773 00004f20     c0e5          jruc    mtng_2
     774                    
     775                    
     776                    **************************************************************************
     777                    *                                                                        *
     778                    * free_skate_players_to_points                                           *
     779                    *       input   a4 = list of player/points                               *
     780                    *                                                                        *
     781                    **************************************************************************
     782 00004f30           free_skate_players_to_points
     783 00004f30     9480  fsps_2  move    *a4+,a0,W
     784 00004f40     ca10          jrz     fsps_9
     785 00004f50     9482          move    *a4+,a2,W
     786 00004f60     05ae          move    @faceoff_x,a14
         00004f70 00000000- 
     787 00004f90     41c2          add     a14,a2
     788 00004fa0     2602          sll     16,a2
     789 00004fb0     9483          move    *a4+,a3,W
     790 00004fc0     05ae          move    @faceoff_z,a14
         00004fd0 00000010- 
     791 00004ff0     41c3          add     a14,a3
     792 00005000     2603          sll     16,a3
     793 00005010     9481          move    *a4+,a1,W
     794 00005020     0d3f          callr   free_skate_player_to_point
TMS340 COFF Macro Assembler Version 6.10     Wed Apr 21 11:32:03 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   20

         00005030     0054  
     795 00005040     c0ee          jruc    fsps_2
     796 00005050     0960  fsps_9  rets
     797                    
     798 00005060           free_skate_players_to_points_ng
     799 00005060     9480  fasps_2 move    *a4+,a0,W
     800 00005070     ca19          jrz     fasps_9
     801 00005080     9482          move    *a4+,a2,W
     802 00005090     05ae          move    @faceoff_x,a14
         000050a0 00000000- 
     803 000050c0     41c2          add     a14,a2
     804 000050d0     2602          sll     16,a2
     805 000050e0     9483          move    *a4+,a3,W
     806 000050f0     05ae          move    @faceoff_z,a14
         00005100 00000010- 
     807 00005120     41c3          add     a14,a3
     808 00005130     2603          sll     16,a3
     809 00005140     9481          move    *a4+,a1,W
     810 00005150                   GBLOCK  a0,a14
     811 000051a0     b5ce          move    *a14(POF_FLAGS),a14,W
         000051b0     0200  
     812 000051c0     1fae          btst    B_PF_GOALIE,a14
     813 000051d0     cbe8          jrnz    fasps_2                 ;skip if he is a goalie
     814 000051e0     0d3f          callr   free_skate_player_to_point
         000051f0     0038  
     815 00005200     c0e5          jruc    fasps_2
     816 00005210     0960  fasps_9 rets
     817                    
     818                    **************************************************************************
     819                    *                                                                        *
     820                    * wait_for_all_control                                                   *
     821                    *       waits for all control to end (by process id, not flags)          *
     822                    *    USE JSRP                                                            *
     823                    *                                                                        *
     824                    **************************************************************************
     825 00005220           wfa_1   SLEEP   1
     826 00005260           wait_for_all_control
     827 00005260     09c0          movi    PID_MOVE_TO,a0
         00005270     0a01  
     828 00005280     0d5f          calla   EXISTP_ALL
         00005290 00000000! 
     829 000052b0     cbf6          jrnz    wfa_1
     830 000052c0                   RETP
     831                    
     832                    **************************************************************************
     833                    *                                                                        *
     834                    * give_back_all_control                                                  *
     835                    *       gives control back to every player, start play                   *
     836                    *                                                                        *
     837                    **************************************************************************
     838 000052f0           give_back_all_control
     839 000052f0     1900          movk    8,a0
     840 00005300     0b40  gba_1   cmpi    3,a0
         00005310     fffc  
     841 00005320     ca03          jrz     ghy_1
TMS340 COFF Macro Assembler Version 6.10     Wed Apr 21 11:32:03 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   21

     842 00005330     0b40          cmpi    7,a0
         00005340     fff8  
     843 00005350     cb01          jrnz    ghy_2
     844 00005360     1420  ghy_1   dec     a0
     845 00005370     0d3f  ghy_2   callr   release_higher_control
         00005380     0178  
     846 00005390     3d40          dsjs    a0,gba_1
     847 000053a0     0960          rets
     848                    
     849                    **************************************************************************
     850                    *                                                                        *
     851                    * move_player_to_point                                                   *
     852                    *       input   a0 = player                                              *
     853                    *               a1 = direction to face when over (- means at start also) *
     854                    *               a2 = x position                                          *
     855                    *               a3 = z position                                          *
     856                    *                                                                        *
     857                    **************************************************************************
     858 000053b0           move_player_to_point
     859 000053b0     4c09          move    a0,a9
     860 000053c0     4c4a          move    a2,a10
     861 000053d0     4c6b          move    a3,a11
     862 000053e0     4c28          move    a1,a8
     863 000053f0                   CREATEP PID_MOVE_TO,mptp_1
     864 00005470     0960          rets
     865 00005480     09e1  mptp_1  movi    set_relaxed_fast_skate_script+1,a1
         00005490 00000001! 
     866 000054b0     09e2          movi    set_relaxed_stand_script,a2
         000054c0 00000000! 
     867 000054e0                   JSRP    move_player_to_point_process
     868 00005550     c080          jauc    SUCIDE
         00005560 00000000! 
     869                    
     870                    **************************************************************************
     871                    *                                                                        *
     872                    * free_skate_player_to_point                                             *
     873                    *       input   a0 = player                                              *
     874                    *               a1 = direction to face when over (- means at start also) *
     875                    *               a2 = x position                                          *
     876                    *               a3 = z position                                          *
     877                    *                                                                        *
     878                    **************************************************************************
     879 00005580           free_skate_player_to_point
     880 00005580     4c09          move    a0,a9
     881 00005590     4c4a          move    a2,a10
     882 000055a0     4c6b          move    a3,a11
     883 000055b0     4c28          move    a1,a8
     884 000055c0     0b40          cmpi    2,a0
         000055d0     fffd  
     885 000055e0                   CREATEP PID_MOVE_TO,fstp_1
     886 00005660     0960          rets
     887 00005670     0b49  fstp_1  cmpi    2,a9
         00005680     fffd  
     888 00005690     cb05          jrnz    fstp2
     889 000056a0                   GBLOCK  a9,a6
TMS340 COFF Macro Assembler Version 6.10     Wed Apr 21 11:32:03 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   22

     890 000056f0     09e1  fstp2   movi    set_go_into_faceoff_script,a1
         00005700 00000000! 
     891 00005720     09e2          movi    DUMRETS,a2
         00005730 00000000! 
     892 00005750                   JSRP    move_player_to_point_pnw
     893 000057c0     c080          jauc    SUCIDE
         000057d0 00000000! 
     894                    
     895                    **************************************************************************
     896                    *                                                                        *
     897                    * move_player_to_point_process                                           *
     898                    *       input   a9 = player                                              *
     899                    *               a10 = x position                                         *
     900                    *               a11 = z position                                         *
     901                    *               a8 = direction to face when done (- means at start)      *
     902                    *               a1 = routine to call set move script (+1 means do always *
     903                    *               a2 = routine to call to set stand script                 *
     904                    *   USE JSRP                                                             *
     905                    *                                                                        *
     906                    **************************************************************************
     907 000057f0           move_player_to_point_pnw        ;assumes we have control
     908 000057f0     4d20          move    a9,a0
     909 00005800                   PUSHP   a2              ;stand script
     910 00005810                   PUSHP   a8              ;direction to face
     911 00005820                   PUSHP   a1              ;move routine to set script
     912 00005830                   GBLOCK  a0,a6
     913 00005880     c00b          jruc    mptp_31
     914 00005890           move_player_to_point_process
     915 00005890     4d20          move    a9,a0
     916 000058a0                   PUSHP   a2              ;stand script
     917 000058b0                   PUSHP   a8              ;direction to face
     918 000058c0                   PUSHP   a1              ;move routine to set script
     919 000058d0                   JSRP    get_higher_control
     920 00005940     57ce  mptp_31 clr     a14
     921 00005950     adc6          movb    a14,*a6(POF_SKATE_RATE_G)
         00005960     0a08  
     922 00005970     0d5f          calla   clear_srt
         00005980 00000000! 
     923 000059a0     b6c8          move    *a6(POF_OBJECT),a8,L
         000059b0     0280  
     924 000059c0     b702          move    *a8(OXVAL),a2,L
         000059d0     0140  
     925 000059e0     b703          move    *a8(OZVAL),a3,L
         000059f0     0180  
     926 00005a00     4d40          move    a10,a0
     927 00005a10     4d61          move    a11,a1
     928 00005a20     0d5f          calla   find_dir_to_point
         00005a30 00000000! 
     929 00005a50     098f          mmtm    sp,a11
         00005a60     0010  
     930 00005a70     0d5f          calla   dir_to_18
         00005a80 00000000! 
     931 00005aa0     09af          mmfm    sp,a11
         00005ab0     0800  
     932                    
TMS340 COFF Macro Assembler Version 6.10     Wed Apr 21 11:32:03 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   23

     933 00005ac0     b78e          move    *a12(020h),a14,L        ;get direction
         00005ad0     0020  
     934 00005ae0     cf02          jrnn    mpti1
     935 00005af0     038e          abs     a14
     936 00005b00     4dc0          move    a14,a0
     937 00005b10     ac06  mpti1   movb    a0,*a6(POF_DIRECTION)
         00005b20     0390  
     938 00005b30     57ce          clr     a14
     939 00005b40     b1c6          move    a14,*a6(POF_BDIRECTION)
         00005b50     03d0  
     940                    
     941 00005b60     878e          move    *a12,a14,L      ;get move routine from process stack
     942 00005b70     2fee          srl     1,a14
     943 00005b80     242e          sll     1,a14
     944 00005b90     092e          call    a14             ;set move script
     945 00005ba0     878e  mptp_3  move    *a12,a14,L      ;get move routine from process stack
     946 00005bb0     2fee          srl     1,a14
     947 00005bc0     c902          jrnc    mpj_31
     948 00005bd0     242e          sll     1,a14
     949 00005be0     092e          call    a14             ;set move script
     950 00005bf0     57ce  mpj_31  clr     a14
     951 00005c00     adc6          movb    a14,*a6(POF_I_JOY)      ;clear out joystick ignore
         00005c10     03a0  
     952 00005c20     adc6          movb    a14,*a6(POF_JOY)
         00005c30     0398  
     953 00005c40     b6c8          move    *a6(POF_OBJECT),a8,L
         00005c50     0280  
     954 00005c60     b702          move    *a8(OXVAL),a2,L
         00005c70     0140  
     955 00005c80     b703          move    *a8(OZVAL),a3,L
         00005c90     0180  
     956 00005ca0     4d40          move    a10,a0
     957 00005cb0     4d61          move    a11,a1
     958 00005cc0     0d5f          calla   find_dirdis_to_point
         00005cd0 00000000! 
     959 00005cf0     4c29          move    a1,a9           ;save distance
     960 00005d00     2a01          sra     16,a1
     961 00005d10     6a21          lmo     a1,a1
     962 00005d20     24a1          sll     5,a1
     963 00005d30     0b21          addi    mptp_v,a1
         00005d40 00006190' 
     964 00005d60     8622          move    *a1,a2,L
     965 00005d70     ca28          jrz     mptp_8
     966 00005d80     4c4e          move    a2,a14
     967 00005d90     2bee          sra     1,a14
     968 00005da0     b3c6          move    a14,*a6(POF_SPEED_GL),L
         00005db0     0440  
     969 00005dc0     1b23          movk    25,a3                   ;move to
     970 00005dd0     b50e          move    *a8(OFLAGS),a14,W
         00005de0     0420  
     971 00005df0     1f0e          btst    B_OFSCRN,a14
     972 00005e00     cb0c          jrnz    ak48
     973 00005e10     b701          move    *a8(ODT_VEL),a1,L
         00005e20     04d0  
     974 00005e30     0b61          cmpi    [16,0],a1
TMS340 COFF Macro Assembler Version 6.10     Wed Apr 21 11:32:03 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   24

         00005e40 ffefffff  
     975 00005e60     c202          jrls    ak49
     976 00005e70     4c41          move    a2,a1
     977 00005e80     c007          jruc    ak47
     978 00005e90     0d5f  ak49    calla   move_to_speed_x
         00005ea0 00000000! 
     979 00005ec0     c003          jruc    ak47
     980 00005ed0     09e1  ak48    movi    [18,0],a1
         00005ee0 00120000  
     981 00005f00     4921  ak47    cmp     a9,a1
     982 00005f10     c201          jrls    ak472
     983 00005f20     4d21          move    a9,a1                   ;don't let us go faster than our distance
     984 00005f30     0d5f  ak472   calla   set_obj_to_polar
         00005f40 00000000! 
     985 00005f60     0d5f          calla   close_area_check
         00005f70 00000000! 
     986 00005f90     4cc9  skipfc  move    a6,a9
     987 00005fa0                   SLEEP   1
     988 00005fe0     4d26          move    a9,a6
     989 00005ff0     c0ba          jruc    mptp_3
     990 00006000     5621  mptp_8  clr     a1
     991 00006010     100c          addk    32,a12          ;remove move routine from stack
     992 00006020                   PULLP   a0              ;get face direction
     993 00006040     0380          abs     a0
     994 00006050     ac06          movb    a0,*a6(POF_DIRECTION)
         00006060     0390  
     995 00006070     57ce          clr     a14
     996 00006080     adc6          movb    a14,*a6(POF_BDIRECTION)
         00006090     03d0  
     997 000060a0     0d5f          calla   dir_to_degrees
         000060b0 00000000! 
     998 000060d0     0d5f          calla   set_obj_to_polar
         000060e0 00000000! 
     999 00006100     0d5f          calla   close_area_check
         00006110 00000000! 
    1000 00006130                   PULLP   a14
    1001 00006150     092e          call    a14             ;set stand script
    1002 00006160                   RETP
    1003                    
    1004 00006190 00000000  mptp_v  .long   0               ;lmo = 31       80000000-ffffffff, 0
    1005 000061b0 00160000          .long   [22,0]          ;lmo = 30       40000000-7fffffff
    1006 000061d0 00160000          .long   [22,0]          ;lmo = 29       20000000-3fffffff
    1007 000061f0 00160000          .long   [22,0]          ;lmo = 28       10000000-1fffffff
    1008 00006210 00160000          .long   [22,0]          ;lmo = 27       08000000-0fffffff
    1009 00006230 00160000          .long   [22,0]          ;lmo = 26       04000000-07ffffff
    1010 00006250 00160000          .long   [22,0]          ;lmo = 25       02000000-03ffffff
    1011 00006270 00160000          .long   [22,0]          ;lmo = 24       01000000-01ffffff
    1012 00006290 00160000          .long   [22,0]          ;lmo = 23       00800000-00ffffff
    1013 000062b0 00160000          .long   [22,0]          ;lmo = 22       00400000-007fffff
    1014 000062d0 00160000          .long   [22,0]          ;lmo = 21       00200000-003fffff
    1015 000062f0 00160000          .long   [22,0]          ;lmo = 20       00100000-001fffff
    1016 00006310 00160000          .long   [22,0]          ;lmo = 19       00080000-000fffff
    1017 00006330 00160000          .long   [22,0]          ;lmo = 18       00040000-0007ffff
    1018 00006350 00160000          .long   [22,0]          ;lmo = 17       00020000-0003ffff
    1019 00006370 00150000          .long   [21,0]          ;lmo = 16       00010000-0001ffff
TMS340 COFF Macro Assembler Version 6.10     Wed Apr 21 11:32:03 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   25

    1020 00006390 00150000          .long   [21,0]          ;lmo = 15       00008000-0000ffff
    1021 000063b0 00140000          .long   [20,0]          ;lmo = 14       00004000-00007fff
    1022 000063d0 00140000          .long   [20,0]          ;lmo = 13       00002000-00003fff
    1023 000063f0 00130000          .long   [19,0]          ;lmo = 12       00001000-00001fff
    1024 00006410 00120000          .long   [18,0]          ;lmo = 11       00000800-00000fff
    1025 00006430 00110000          .long   [17,0]          ;lmo = 10       00000400-000007ff
    1026 00006450 00100000          .long   [16,0]          ;lmo = 9        00000200-000003ff
    1027 00006470 000c0000          .long   [12,0]          ;lmo = 8        00000100-000001ff
    1028 00006490 00090000          .long   [9,0]           ;lmo = 7        00000080-000000ff
    1029 000064b0 00050000          .long   [5,0]           ;lmo = 6        00000040-0000007f
    1030 000064d0 00030000          .long   [3,0]           ;lmo = 5        00000020-0000003f
    1031 000064f0 0001f001          .long   [1,0f001h]      ;lmo = 4        00000010-0000001f
    1032 00006510 0000f001          .long   [0,0f001h]      ;lmo = 3        00000008-0000000f
    1033 00006530 0000c001          .long   [0,0c001h]      ;lmo = 2        00000004-00000007
    1034 00006550 00008001          .long   [0,08001h]      ;lmo = 1        00000002-00000003
    1035 00006570 00006001          .long   [0,06001h]      ;lmo = 0        00000001-00000001
    1036                    
    1037                    **************************************************************************
    1038                    *                                                                        *
    1039                    * get_higher_control                                                     *
    1040                    *       input   a0 = player number                                       *
    1041                    *   USE JSRP                                                             *
    1042                    *                                                                        *
    1043                    **************************************************************************
    1044 00006590           get_higher_control
    1045 00006590     0d3f  ghc_1   callr   get_higher_status
         000065a0     0066  
    1046 000065b0     4c21          move    a1,a1
    1047 000065c0     ca1a          jrz     ghc_8
    1048 000065d0     0b41          cmpi    1,a1
         000065e0     fffe  
    1049 000065f0     ca07          jrz     ghc_2
    1050 00006600     4c09          move    a0,a9
    1051 00006610                   SLEEP   1
    1052 00006650     4d20          move    a9,a0
    1053 00006660     c0f2          jruc    ghc_1
    1054 00006670     0d3f  ghc_2   callr   take_higher_wait
         00006680     0072  
    1055 00006690           ghc_3   SLEEP   1
    1056 000066d0     4d20          move    a9,a0
    1057 000066e0                   GBLOCK  a0,a6
    1058 00006730     b4ce          move    *a6(POF_FLAGS),a14,W
         00006740     0200  
    1059 00006750     1f6e          btst    B_PF_HIGHER,a14
    1060 00006760     cbf2          jrnz    ghc_3
    1061 00006770     0d3f  ghc_8   callr   take_higher_control
         00006780     0057  
    1062 00006790                   PUSHP   a10
    1063 000067a0                   PUSHP   a11
    1064 000067b0     09ca  ghc_84  movi    40,a10
         000067c0     0028  
    1065 000067d0     b6ce          move    *a6(POF_OBJECT),a14,L
         000067e0     0280  
    1066 000067f0     b7cb          move    *a14(ANIMSCR),a11,L
         00006800     0340  
TMS340 COFF Macro Assembler Version 6.10     Wed Apr 21 11:32:03 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   26

    1067 00006810     b4ce  ghc_85  move    *a6(POF_FLAGS),a14,W
         00006820     0200  
    1068 00006830     1fce          btst    B_PF_CONTROL,a14
    1069 00006840     cb13          jrnz    ghc_9
    1070 00006850     142a          dec     a10
    1071 00006860     ce11          jrn     ghc_9
    1072 00006870                   SLEEP   1
    1073 000068b0     4d20          move    a9,a0
    1074 000068c0                   GBLOCK  a0,a6
    1075 00006910     b6ce          move    *a6(POF_OBJECT),a14,L
         00006920     0280  
    1076 00006930     b7ce          move    *a14(ANIMSCR),a14,L
         00006940     0340  
    1077 00006950     496e          cmp     a11,a14
    1078 00006960     cbe4          jrnz    ghc_84          ;as long as script is changing, we will wait
    1079 00006970     c0e9          jruc    ghc_85
    1080 00006980     b4ce  ghc_9   move    *a6(POF_FLAGS),a14,W
         00006990     0200  
    1081 000069a0     0bae          ori     M_PF_CONTROL,a14
         000069b0 00000002  
    1082 000069d0     b1c6          move    a14,*a6(POF_FLAGS),W
         000069e0     0200  
    1083 000069f0     57ce          clr     a14
    1084 00006a00     adc6          movb    a14,*a6(POF_BDIRECTION)
         00006a10     03d0  
    1085 00006a20     b6ca          move    *a6(POF_OBJECT),a10,L
         00006a30     0280  
    1086 00006a40     b1ca          move    a14,*a10(OYACCEL),W
         00006a50     02f0  
    1087 00006a60     b3ca          move    a14,*a10(OYVEL),L
         00006a70     0120  
    1088 00006a80     b3ca          move    a14,*a10(OYVAL),L
         00006a90     0160  
    1089 00006aa0                   PULLP   a11
    1090 00006ac0                   PULLP   a10
    1091 00006ae0                   RETP
    1092                    
    1093                    **************************************************************************
    1094                    *                                                                        *
    1095                    * release_higher_control                                                 *
    1096                    *       input   a0 = player number                                       *
    1097                    *                                                                        *
    1098                    **************************************************************************
    1099 00006b10           release_higher_control
    1100 00006b10                   GBLOCK  a0,a6
    1101 00006b60     b4ce          move    *a6(POF_FLAGS),a14,W
         00006b70     0200  
    1102 00006b80     0b8e          andni   M_PF_HIGHER|M_PF_HIGHER_W,a14
         00006b90 00000030  
    1103 00006bb0     0bae          ori     M_PF_CONTROL,a14
         00006bc0 00000002  
    1104 00006be0     b1c6          move    a14,*a6(POF_FLAGS),W
         00006bf0     0200  
    1105 00006c00     0960          rets
    1106                    
TMS340 COFF Macro Assembler Version 6.10     Wed Apr 21 11:32:03 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   27

    1107                    **************************************************************************
    1108                    *                                                                        *
    1109                    * get_higher_status                                                      *
    1110                    *       input   a0 = player number                                       *
    1111                    *       output  a1 = 0 - no one has control                              *
    1112                    *                    1 - someone has control now                         *
    1113                    *                    2 - someone has control, and someone is waiting     *
    1114                    *               a6 = player block                                        *
    1115                    *                                                                        *
    1116                    **************************************************************************
    1117 00006c10           get_higher_status
    1118 00006c10                   GBLOCK  a0,a6
    1119 00006c60     b4ce          move    *a6(POF_FLAGS),a14,W
         00006c70     0200  
    1120 00006c80     5621          clr     a1
    1121 00006c90     1f6e          btst    B_PF_HIGHER,a14
    1122 00006ca0     ca01          jrz     ghs_7
    1123 00006cb0     1821          movk    1,a1
    1124 00006cc0     1f4e  ghs_7   btst    B_PF_HIGHER_W,a14
    1125 00006cd0     ca01          jrz     ghs_9
    1126 00006ce0     1841          movk    2,a1
    1127 00006cf0     0960  ghs_9   rets
    1128                    
    1129                    **************************************************************************
    1130                    *                                                                        *
    1131                    * take_higher_control                                                    *
    1132                    *       input   a6 = player block                                        *
    1133                    *                                                                        *
    1134                    **************************************************************************
    1135 00006d00           take_higher_control
    1136 00006d00     b4ce          move    *a6(POF_FLAGS),a14,W
         00006d10     0200  
    1137 00006d20     0b8e          andni   M_PF_HIGHER_W,a14
         00006d30 00000020  
    1138 00006d50     0bae          ori     M_PF_HIGHER,a14
         00006d60 00000010  
    1139 00006d80     b1c6          move    a14,*a6(POF_FLAGS),W
         00006d90     0200  
    1140 00006da0     0960          rets
    1141                    
    1142                    **************************************************************************
    1143                    *                                                                        *
    1144                    * take_higher_wait                                                       *
    1145                    *       input   a6 = player_block                                        *
    1146                    *                                                                        *
    1147                    **************************************************************************
    1148 00006db0           take_higher_wait
    1149 00006db0     b4ce          move    *a6(POF_FLAGS),a14,W
         00006dc0     0200  
    1150 00006dd0     0bae          ori     M_PF_HIGHER_W,a14
         00006de0 00000020  
    1151 00006e00     b1c6          move    a14,*a6(POF_FLAGS),W
         00006e10     0200  
    1152 00006e20     0960          rets
    1153                    
TMS340 COFF Macro Assembler Version 6.10     Wed Apr 21 11:32:03 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   28

    1154 00006e30           create_ref
    1155 00006e30     0d3f          callr   kill_ref
         00006e40     0110  
    1156 00006e50     09f0          movi    ref_shadow_init,b0
         00006e60 000080a0' 
    1157 00006e80     0d5f          calla   EASYMAKE
         00006e90 00000000! 
    1158 00006eb0     0788          move    a8,@ref_shadow,L
         00006ec0 000000b0- 
    1159 00006ee0     09f0          movi    ref_init,b0
         00006ef0 00008040' 
    1160 00006f10     0d5f          calla   EASYMAKE
         00006f20 00000000! 
    1161 00006f40     09e0          movi    ref_palette,a0
         00006f50 00008100' 
    1162 00006f70     0d5f          calla   CHANGE_PAL
         00006f80 00000000! 
    1163 00006fa0     0788          move    a8,@ref_object,L
         00006fb0 00000090- 
    1164 00006fd0     05a0          move    @faceoff_x,a0,W
         00006fe0 00000000- 
    1165 00007000     ca01          jrz     cr_iu1
    1166 00007010     2bc0          sra     2,a0
    1167 00007020     b008  cr_iu1  move    a0,*a8(OXPOS),W
         00007030     0150  
    1168 00007040     1880          movk    4,a0
    1169 00007050     b008          move    a0,*a8(OYPOS),W
         00007060     0170  
    1170 00007070     05a0          move    @faceoff_z,a0,W
         00007080 00000010- 
    1171 000070a0     b008          move    a0,*a8(OZPOS),W
         000070b0     0190  
    1172 000070c0     0d5f          calla   INSERT_OBJ
         000070d0 00000000! 
    1173 000070f0     57ce          clr     a14
    1174 00007100     0b40          cmpi    300,a0
         00007110     fed3  
    1175 00007120     c405          jrlt    cci1
    1176 00007130     182e          movk    1,a14
    1177 00007140     0b40          cmpi    360,a0
         00007150     fe97  
    1178 00007160     c401          jrlt    cci1
    1179 00007170     184e          movk    2,a14
    1180 00007180     058e  cci1    move    a14,@ref_size
         00007190 00000000! 
    1181 000071b0     05a0          move    @faceoff_x,a0,W
         000071c0 00000000- 
    1182 000071e0     cb04          jrnz    cci2
    1183 000071f0     0d3f          callr   start_ref_look
         00007200     0006  
    1184 00007210     c000          jruc    clean_up_ref
         00007220     011a  
    1185 00007230     0d3f  cci2    callr   bring_ref_on
         00007240     001d  
    1186 00007250     c000          jruc    clean_up_ref
TMS340 COFF Macro Assembler Version 6.10     Wed Apr 21 11:32:03 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   29

         00007260     0116  
    1187                    
    1188 00007270           start_ref_look
    1189 00007270     07a8          move    @ref_object,a8,L
         00007280 00000090- 
    1190 000072a0     c080          jauc    set_ref_look_script
         000072b0 00000000! 
    1191                    
    1192 000072d0           start_ref_stand
    1193 000072d0     07a8          move    @ref_object,a8,L
         000072e0 00000090- 
    1194 00007300     c080          jauc    set_ref_stand_script
         00007310 00000000! 
    1195                    
    1196 00007330           start_ref_faceoff
    1197 00007330     07a8          move    @ref_object,a8,L
         00007340 00000090- 
    1198 00007360     c080          jauc    set_ref_setup_script
         00007370 00000000! 
    1199                    
    1200 00007390           start_ref_drop
    1201 00007390     0d5f          calla   turn_puck_on
         000073a0 00000000! 
    1202 000073c0     07a8          move    @ref_object,a8,L
         000073d0 00000090- 
    1203 000073f0     c080          jauc    set_ref_drop_script
         00007400 00000000! 
    1204                    
    1205 00007420           bring_ref_on
    1206 00007420                   C_A_K   PID_REF,move_ref_on
    1207 000074a0     09e1          movi    set_ref_skate_right_norm_script,a1
         000074b0 00000000! 
    1208 000074d0     07a8          move    @ref_object,a8,L
         000074e0 00000090- 
    1209 00007500     b50e          move    *a8(OXPOS),a14,W
         00007510     0150  
    1210 00007520     c103          jrp     bro_ok
    1211 00007530     09e1          movi    set_ref_skate_left_norm_script,a1
         00007540 00000000! 
    1212 00007560     0161  bro_ok  jump    a1
    1213                    
    1214 00007570     0d3f  mro_1   callr   clean_up_ref
         00007580     00e4  
    1215 00007590                   SLEEP   1
    1216 000075d0           move_ref_on
    1217 000075d0     07a8          move    @ref_object,a8,L
         000075e0 00000090- 
    1218 00007600     b500          move    *a8(OXPOS),a0,W
         00007610     0150  
    1219 00007620     05a1          move    @faceoff_x,a1,W
         00007630 00000000- 
    1220 00007650     4c22          move    a1,a2
    1221 00007660     4402          sub     a0,a2
    1222 00007670     0382          abs     a2
    1223 00007680     0b42          cmpi    2,a2
TMS340 COFF Macro Assembler Version 6.10     Wed Apr 21 11:32:03 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   30

         00007690     fffd  
    1224 000076a0     c42f          jrlt    mro_9k
    1225 000076b0     4820          cmp     a1,a0
    1226 000076c0     c316          jrhi    mrotl           ;moving to left
    1227 000076d0     09e3  mrotr   movi    [5,0],a3
         000076e0 00050000  
    1228 00007700     0b42          cmpi    127,a2
         00007710     ff80  
    1229 00007720     c30d          jrhi    mtr2
    1230 00007730     0b42          cmpi    110,a2
         00007740     ff91  
    1231 00007750     c803          jrlo    mtr21
    1232 00007760     0d5f          calla   set_ref_stop_left_right_script
         00007770 00000000! 
    1233 00007790     0b42  mtr21   cmpi    80,a2
         000077a0     ffaf  
    1234 000077b0     c304          jrhi    mtr2
    1235 000077c0     0b02          addi    80,a2
         000077d0     0050  
    1236 000077e0     2562          sll     11,a2
    1237 000077f0     4c43          move    a2,a3
    1238 00007800     b268  mtr2    move    a3,*a8(OXVEL),L
         00007810     0100  
    1239 00007820     c0d4          jruc    mro_1
    1240 00007830     09e3  mrotl   movi    [-5,0],a3
         00007840 fffb0000  
    1241 00007860     0b42          cmpi    127,a2
         00007870     ff80  
    1242 00007880     c30e          jrhi    mtl2
    1243 00007890     0b42          cmpi    110,a2
         000078a0     ff91  
    1244 000078b0     c803          jrlo    mtl21
    1245 000078c0     0d5f          calla   set_ref_stop_left_right_script
         000078d0 00000000! 
    1246 000078f0     0b42  mtl21   cmpi    80,a2
         00007900     ffaf  
    1247 00007910     c305          jrhi    mtl2
    1248 00007920     0b02          addi    80,a2
         00007930     0050  
    1249 00007940     2562          sll     11,a2
    1250 00007950     03a2          neg     a2
    1251 00007960     4c43          move    a2,a3
    1252 00007970     b268  mtl2    move    a3,*a8(OXVEL),L
         00007980     0100  
    1253 00007990     c0bd          jruc    mro_1
    1254 000079a0     5663  mro_9k  clr     a3
    1255 000079b0     b268          move    a3,*a8(OXVEL),L
         000079c0     0100  
    1256 000079d0     05a1          move    @faceoff_x,a1,W
         000079e0 00000000- 
    1257 00007a00     b028          move    a1,*a8(OXPOS),W
         00007a10     0150  
    1258 00007a20     0d3f          callr   clean_up_ref
         00007a30     0099  
    1259 00007a40     c080          jauc    SUCIDE
TMS340 COFF Macro Assembler Version 6.10     Wed Apr 21 11:32:03 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   31

         00007a50 00000000! 
    1260                    
    1261 00007a70           get_rid_of_ref
    1262 00007a70                   C_A_K   PID_REF,move_ref_off
    1263 00007af0     0960          rets
    1264 00007b00           move_ref_off
    1265 00007b00     07a8          move    @ref_object,a8,L
         00007b10 00000090- 
    1266 00007b30     b50e          move    *a8(OXPOS),a14,W
         00007b40     0150  
    1267 00007b50     0b4e          cmpi    200,a14
         00007b60     ff37  
    1268 00007b70     c70d          jrgt    mrol
    1269 00007b80     0b4e          cmpi    -200,a14
         00007b90     00c7  
    1270 00007ba0     c406          jrlt    mror
    1271 00007bb0     07ae          move    @PUCK_OBJECT,a14,L
         00007bc0 00000000! 
    1272 00007be0     b5ce          move    *a14(OXPOS),a14,W
         00007bf0     0150  
    1273 00007c00     c104          jrp     mrol
    1274 00007c10     0d5f  mror    calla   set_ref_skate_right_script
         00007c20 00000000! 
    1275 00007c40     c003          jruc    mrb5
    1276 00007c50     0d5f  mrol    calla   set_ref_skate_left_script
         00007c60 00000000! 
    1277                    ;       movi    [5,0],a0
    1278                    ;       move    a0,*a8(OZVEL),L
    1279 00007c80     0d3f  mrb5    callr   clean_up_ref
         00007c90     0073  
    1280 00007ca0                   SLEEP   3
    1281 00007ce0     b50e          move    *a8(OFLAGS),a14,W
         00007cf0     0420  
    1282 00007d00     1f0e          btst    B_OFSCRN,a14
    1283 00007d10     cb17          jrnz    mrb2
    1284 00007d20     b500          move    *a8(OZPOS),a0,W
         00007d30     0190  
    1285 00007d40     0b40          cmpi    660,a0
         00007d50     fd6b  
    1286 00007d60     c2f1          jrls    mrb5
    1287 00007d70     5600          clr     a0
    1288 00007d80     b208          move    a0,*a8(OZVEL),L
         00007d90     00e0  
    1289 00007da0     0d3f          callr   clean_up_ref
         00007db0     0061  
    1290 00007dc0     0d5f          calla   set_ref_bump_script
         00007dd0 00000000! 
    1291 00007df0           mrb6    SLEEP   5
    1292 00007e30     0d3f          callr   clean_up_ref
         00007e40     0058  
    1293 00007e50     b50e          move    *a8(OFLAGS),a14,W
         00007e60     0420  
    1294 00007e70     1f0e          btst    B_OFSCRN,a14
    1295 00007e80     caf6          jrz     mrb6
    1296 00007e90     5600  mrb2    clr     a0
TMS340 COFF Macro Assembler Version 6.10     Wed Apr 21 11:32:03 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   32

    1297 00007ea0     0780          move    a0,@ref_object,L
         00007eb0 00000090- 
    1298 00007ed0     0780          move    a0,@ref_shadow,L
         00007ee0 000000b0- 
    1299 00007f00     0d3f          callr   kill_ref
         00007f10     0003  
    1300 00007f20     c080          jauc    SUCIDE
         00007f30 00000000! 
    1301                    
    1302 00007f50           kill_ref
    1303 00007f50     09c0          movi    PID_REF,a0
         00007f60     0b01  
    1304 00007f70     0d5f          calla   KILLPROC_ALL
         00007f80 00000000! 
    1305 00007fa0     09c0          movi    OID_REF,a0
         00007fb0     0502  
    1306 00007fc0     0d5f          calla   KILOBJ_ALL
         00007fd0 00000000! 
    1307 00007ff0     09c0          movi    OID_REF_SHAD,a0
         00008000     11f0  
    1308 00008010     c080          jauc    KILOBJ_ALL
         00008020 00000000! 
    1309                    
    1310 00008040           ref_init
    1311 00008040 00000000!         .long   shadow3
    1312                    ;       .long   RFO51F03
    1313 00008060     8002          .word   DMAWNZ,M_NOSCALE
    1314 00008080     0100          .word   OM_OID
    1315 00008090     0502          .word   OID_REF
    1316                    
    1317 000080a0           ref_shadow_init
    1318 000080a0 00000000!         .long   shadow3
    1319 000080c0     8002          .word   DMAWNZ,M_NOSCALE
    1320 000080e0     0900          .word   OM_OID|OM_INSERT
    1321 000080f0     11f0          .word   OID_REF_SHAD
    1322                    
    1323 00008100           ref_palette
    1324 00008100     002c     .word   44
    1325 00008110     0000     .word   00000h,07fffh,077deh,06f9ch,0675ah,05f18h,052b5h,04652h
    1326 00008190     31ad     .word   031adh,0296bh,02529h,02508h,02508h,024c8h,020a8h,01c88h
    1327 00008210     7e01     .word   07e01h,07d80h,074a0h,06880h,06080h,05c60h,05860h,05400h
    1328 00008290     4c00     .word   04c00h,04800h,03c00h,03000h,02400h,07fbdh,07f7ah,07f9ah
    1329 00008310     7f37     .word   07f37h,07ef5h,0728fh,06a4eh,055cdh,04daah,0496ah,03d49h
    1330 00008390     3d28     .word   03d28h,02cc5h,02486h,01c88h
    1331                    
    1332 000083d0           clean_up_ref
    1333 000083d0     098f          mmtm    sp,a11
         000083e0     0010  
    1334 000083f0     07a9          move    @ref_object,a9,L
         00008400 00000090- 
    1335 00008420     07a8          move    @ref_shadow,a8,L
         00008430 000000b0- 
    1336 00008450     09eb          movi    [4700,0],a11
         00008460 125c0000  
    1337 00008480     0d5f          calla   shad_do
TMS340 COFF Macro Assembler Version 6.10     Wed Apr 21 11:32:03 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   33

         00008490 00000000! 
    1338 000084b0     09af          mmfm    sp,a11
         000084c0     0800  
    1339 000084d0     07a8          move    @ref_object,a8,L
         000084e0 00000090- 
    1340 00008500     0960          rets

 No Errors,  No Warnings
