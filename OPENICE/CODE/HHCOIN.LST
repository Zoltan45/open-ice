TMS340 COFF Macro Assembler Version 6.10     Wed Apr 21 11:41:16 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE    1

       1                            .MLIB   "HHMACS.LIB"
       2                            .FILE   "HHCOIN.ASM"
       3                            .WIDTH  132
       4                            .OPTION B,D,L,T
       5                            .MNOLIST
       6                    
       7                    **************************************************************************
       8                    *                                                                        *
       9                    *       COPYRIGHT (C) 1994 MIDWAY MANUFACTURING COMPANY.                 *
      10                    *                      ALL RIGHTS RESERVED.                              *
      11                    *                                                                        *
      12                    **************************************************************************
      13                    
      14                            .INCLUDE        "HH.INC"
      15                            .INCLUDE        "HHSTRING.H"
      16                            .INCLUDE        "IMGTBL.GLO"
      17                            .include        "hhcoin.e"
      18                            .include        "hhram.g"
      19                            .include        "hhsnd.g"
      20                            .include        "hhtext.g"
      21                            .include        "hhd.g"
      22                            .include        "hhmisc.g"
      23                            .include        "hhproc.g"
      24                            .include        "hhcmos.g"
      25                            .include        "hhadj.g"
      26                            .include        "hh.g"
      27                            .include        "hhmenu.g"
      28                            .include        "hhdtst.g"
      29                            .include        "hhutil.g"
      30                            .include        "hhattrct.g"
      31                            .include        "hhpick.g"
      32                            .include        "hhpall.g"
      33                            .include        "hhgame.g"
      34                    
      35                    ; end of include files
      36                    
      37                            .if     DEBUG
      38                            .ref    VCOUNT0
      39                            .ref    VCOUNT1
      40                            .endif
      41                    
      42                    **************************************************************************
      43                    *                                                                        *
      44                    *       GLOBAL VARIABLES                                                 *
      45                    *                                                                        *
      46                    **************************************************************************
      47                    
      48 00000000                   .BSS    C_FLAGS,5*32            ;INTERRUPT COIN BOUNCE
      49 000000a0                   .BSS    CTRLEFT,16              ; FOR THE COIN COUNTERS
      50 000000b0                   .BSS    CTRRIGHT,16  
      51 000000c0                   .BSS    COINFLAG,16
      52 000000d0                   .BSS    GAMEUNITS,16            ;UNITS USED PER CURRENT GAME
      53 000000e0                   .BSS    TIMECNT,16              ;TIME COUNTER
      54 000000f0                   .BSS    SUBTIMECNT,16           ;YET ANOTHER TIMER COUNTER
      55 00000100                   .BSS    OCTO_FLAG,16            ;OCTOPUS FLAG
TMS340 COFF Macro Assembler Version 6.10     Wed Apr 21 11:41:16 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE    2

      56                    ;       .bss    xxxx,16         ;fill space to 32 bits
      57 00000110                   .BSS    NEWCRED,16              ;"NEW" CREDIT MESSAGE FLAG
      58 00000120                   .BSS    TEXT_BUFF,30*16         ;TEMP FOR BUILDING STRINGS
      59                    
      60                    **************************************************************************
      61                    *                                                                        *
      62                    *       COIN EQUATES                                                     *
      63                    *                                                                        *
      64                    **************************************************************************
      65                    
      66              0000- LC_FLAG  EQU     C_FLAGS
      67              0008- RC_FLAG  EQU     C_FLAGS+8
      68              0010- CC_FLAG  EQU     RC_FLAG+8
      69              0018- XC_FLAG EQU     CC_FLAG+8
      70              0020- DBV_FLAG equ    XC_FLAG+8
      71                    
      72              0028  RUN_TIME EQU     32+8           ;2ND LONG WORD COUNTS DOWN LONG TIME
      73              0050  OPENS_LEFT EQU   RUN_TIME+32+8  ;3RD LONG WORD COUNTS DOWN CONSEC OPENS
      74                    
      75              002b  PULSE_MAX        EQU     700/16       ;FRAMES TILL ITS TOO LINE.
      76              0004  MIN_OPENS        EQU     4
      77              0080  ACC_LIMIT        EQU     80H          ;AFTER 2 SECONDS OF NO-REPLY....RE-SET FLAG!
      78              0000  COIN_SBIT        EQU     0
      79              0001  COIN_SUCC_BIT    EQU     1
      80              0002  COIN_FAIL_BIT    EQU     2
      81              0003  COIN_ACK_BIT     EQU     3
      82                    
      83              0001  COIN_SFLAG       EQU     1
      84              0002  COIN_SUCC_VAL    EQU     2
      85              0004  COIN_FAIL_VAL    EQU     4
      86              0008  COIN_ACK_VAL     EQU     8
      87                    
      88                    **************************************************************************
      89                    *                                                                        *
      90                    *       COIN ROUTINES                                                    *
      91                    *                                                                        *
      92                    **************************************************************************
      93                    
      94 00000000                   .TEXT
      95 00000000                   .EVEN
      96                    
      97                    **************************************************************************
      98                    *                                                                        *
      99                    *       COINCOUNTER                                                      *
     100                    *                                                                        *
     101                    *       PROCESS THAT DEALS WITH THE COIN COUNTER                         *
     102                    *                                                                        *
     103                    *       ENTRY                                                            *
     104                    *               NOTHING                                                  *
     105                    *                                                                        *
     106                    *       EXIT                                                             *
     107                    *               NOTHING                                                  *
     108                    *                                                                        *
     109                    **************************************************************************
     110 00000000           COINCOUNTER
TMS340 COFF Macro Assembler Version 6.10     Wed Apr 21 11:41:16 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE    3

     111 00000000     5708          CLR     A8
     112 00000010     05a1          MOVE    @CTRLEFT,A1,W
         00000020 000000a0- 
     113 00000040     ca06          JRZ     CC1
     114 00000050     09c8          MOVI    LEFT_COIN,A8
         00000060     0001  
     115 00000070     1421          DEC     A1
     116 00000080     0581          MOVE    A1,@CTRLEFT,W
         00000090 000000a0- 
     117 000000b0           CC1
     118 000000b0     05a1          MOVE    @CTRRIGHT,A1,W
         000000c0 000000b0- 
     119 000000e0     ca07          JRZ     CC2
     120 000000f0     0ba8          ORI     RIGHT_COIN,A8
         00000100 00000002  
     121 00000120     1421          DEC     A1
     122 00000130     0581          MOVE    A1,@CTRRIGHT,W
         00000140 000000b0- 
     123 00000160           CC2
     124 00000160     4d08          MOVE    A8,A8
     125 00000170     ca11          JRZ     CCDIE                   ; BOTH WERE EMPTY
     126                    
     127                    * the following is commented out in MK3
     128                    ;       CALLA   READ_DIP
     129                    ;       ANDI    DPCOUNTER,A0
     130                    ;       JRNZ    CC3
     131                    ;       ORI     RIGHT_COIN,A8
     132                    ;       ORI     LEFT_COIN,A8            ; MAKE SURE BOTH TRIGGER
     133                    ;CC3
     134                    *
     135 00000180     4d00          MOVE    A8,A0
     136 00000190     0d5f          CALLA   COUNTER_ON
         000001a0 000002c0' 
     137                    
     138 000001c0                   SLEEP   7                       ; THIS SUCKS, BUT CARY LIKES IT
     139                    
     140 00000200     4d00          MOVE    A8,A0
     141 00000210     0d5f          CALLA   COUNTER_OFF
         00000220 000003d0' 
     142                    
     143 00000240                   SLEEP   7                       ; GIVE THEM TIME TO BE OFF
     144 00000280     c0d7          JRUC    COINCOUNTER
     145 00000290           CCDIE
     146 00000290                   DIE
     147                    
     148                    **************************************************************************
     149                    *                                                                        *
     150                    * COIL_ON - TURN A COIL ON VIA THE SECURITY CHIP.                        *
     151                    * A0 = COIL MASK                                                         *
     152                    * RETURNS:                                                               *
     153                    *       NOTHING                                                          *
     154                    *                                                                        *
     155                    **************************************************************************
     156 000002c0           COUNTER_ON
     157 000002c0                   PUSH    A1
TMS340 COFF Macro Assembler Version 6.10     Wed Apr 21 11:41:16 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE    4

     158 000002d0     05a1          MOVE    @COUNTER_COPY,A1,W
         000002e0 00000000! 
     159 00000300     5401          OR      A0,A1
     160 00000310     0581          MOVE    A1,@COUNTER_COPY,W
         00000320 00000000! 
     161 00000340     0ba1          ori     20h,a1
         00000350 00000020  
     162 00000370     0581          MOVE    A1,@COIN_COUNTERS,W
         00000380 01860010  
     163 000003a0                   PULL    A1
     164 000003c0     0960          RETS
     165                    
     166                    **************************************************************************
     167                    *                                                                        *
     168                    * COIL_OFF - TURN A COIL OFF VIA THE SECURITY CHIP.                      *
     169                    * A0 = COIL MASK                                                         *
     170                    * RETURNS:                                                               *
     171                    *       NOTHING                                                          *
     172                    *                                                                        *
     173                    **************************************************************************
     174 000003d0           COUNTER_OFF
     175 000003d0                   PUSH    A1
     176 000003e0     05a1          MOVE    @COUNTER_COPY,A1,W
         000003f0 00000000! 
     177 00000410     5201          ANDN    A0,A1
     178 00000420     0581          MOVE    A1,@COUNTER_COPY,W
         00000430 00000000! 
     179 00000450     0ba1          ori     20h,a1                  ; 
         00000460 00000020  
     180 00000480     0581          MOVE    A1,@COIN_COUNTERS,W
         00000490 01860010  
     181 000004b0                   PULL    A1
     182 000004d0     0960          RETS
     183                    
     184                    **************************************************************************
     185                    *                                                                        *
     186                    *       COINCTR_P                                                        *
     187                    *                                                                        *
     188                    *       IS THERE A COIN COUNTER PROCESS RUNNING                          *
     189                    *                                                                        *
     190                    *       ENTRY                                                            *
     191                    *               NOTHING                                                  *
     192                    *                                                                        *
     193                    *       EXIT                                                             *
     194                    *               .EQ.    NO                                               *
     195                    *               .NE.    YES                                              *
     196                    *                                                                        *
     197                    **************************************************************************
     198                    
     199 000004e0           COINCTR_P
     200 000004e0     09e0          MOVI    PID_COINCTR,A0
         000004f0 00008f05  
     201 00000510     0d5f          CALLA   EXISTP_ALL
         00000520 00000000! 
     202 00000540     0960          RETS
TMS340 COFF Macro Assembler Version 6.10     Wed Apr 21 11:41:16 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE    5

     203                    
     204 00000550           CREDIT_JUMP
     205 00000550     05ae          MOVE    @VOLUME_SET,A14,W
         00000560 00000000! 
     206 00000580     ca12          JRZ     CREDIT_JUMP2                    ;BR=VOLUME NOT SET
     207                    
     208 00000590     0d5f          CALLA   kill_all_sound
         000005a0 00000000! 
     209 000005c0     05a0          MOVE    @SOUNDSUP,A0,W
         000005d0 00000000! 
     210 000005f0     57ce          CLR     A14
     211 00000600     058e          MOVE    A14,@SOUNDSUP,W
         00000610 00000000! 
     212 00000630     09c4          MOVI    S_CREDIT,A4
         00000640     010c  
     213 00000650     0d5f          CALLA   do_sound
         00000660 00000000! 
     214 00000680     0580          MOVE    A0,@SOUNDSUP,W
         00000690 00000000! 
     215 000006b0           CREDIT_JUMP2
     216 000006b0     0d5f          calla   ATSTRT_CREDITS
         000006c0 00000000! 
     217 000006e0     c080          jauc    SUCIDE
         000006f0 00000000! 
     218                    
     219                    ;       JSRP    CREDIT_SCREEN
     220                    ;
     221                    ;       MOVI    PID_ATTRACT_MODE,A0
     222                    ;       MOVE    A0,*A13(PROCID),W
     223                    ;
     224                    ;       CLR     A14
     225                    ;       MOVE    A14,*A13(PDATA),W               ;RESET ATT_MODE_COUNT
     226                    ;
     227                    ;       JAUC    ATT_MODE_CREDIT_RETURN
     228                    
     229                    **************************************************************************
     230                    *                                                                        *
     231                    *       CREDIT_SCREEN                                                    *
     232                    *                                                                        *
     233                    *       PLOT THE APPROPRIATE CREDIT SCREEN -- DESTROY ANYTHING THAT      *
     234                    *       HAPPENS TO BE AROUND AT THE TIME                                 *
     235                    *                                                                        *
     236                    *       ENTRY                                                            *
     237                    *               NOTHING                                                  *
     238                    *                                                                        *
     239                    *       EXIT                                                             *
     240                    *               NOTHING                                                  *
     241                    *                                                                        *
     242                    **************************************************************************
     243                    
     244 00000710           CREDIT_SCREEN:
     245                            .if     DEBUG
     246                            MOVE    @VCOUNT,@VCOUNT0,W
     247                            .endif
     248                    
TMS340 COFF Macro Assembler Version 6.10     Wed Apr 21 11:41:16 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE    6

     249 00000710     09c0          MOVI    PID_ATTRACT_MODE,A0
         00000720     1000  
     250 00000730     0d5f          CALLA   KILLPROC_ALL
         00000740 00000000! 
     251 00000760     09c0          MOVI    PID_IND,A0
         00000770     000c  
     252 00000780     0d5f          CALLA   KILLPROC_ALL
         00000790 00000000! 
     253                    
     254 000007b0     05a0          MOVE    @COINFLAG,A0,W
         000007c0 000000c0- 
     255 000007e0     ce00          JRN     CS_NAP                  ;BR=MAXIMUM CREDITS
         000007f0     00d1  
     256 00000800     cb00          JRNZ    CS1                     ;BR=ON THIS PAGE ALREADY
         00000810     00ac  
     257                    
     258 00000820     05ae          MOVE    @in_at_game,A14,W
         00000830 00000000! 
     259 00000850     ca03          JRZ     CS_WIPE                 ;BR=NOT RUNNIN'
     260 00000860     0d5f          CALLA   stop_attract_game_quick_SNDOK
         00000870 00000000! 
     261 00000890           CS_WIPE
     262 00000890     0d5f          CALLA   WIPEOUT                 ; LATER, DUDES!
         000008a0 00000000! 
     263 000008c0                   DISPON
     264                    
     265 00000900     09e0          MOVI    GFONT10CP,A0
         00000910 00000000! 
     266 00000930     0d5f          CALLA   GETFPAL
         00000940 00000000! 
     267 00000960     09e0          MOVI    REDTXT3P,A0
         00000970 00000000! 
     268 00000990     0d5f          CALLA   GETFPAL
         000009a0 00000000! 
     269 000009c0     09e0          MOVI    BLUTXT3P,A0
         000009d0 00000000! 
     270 000009f0     0d5f          CALLA   GETFPAL
         00000a00 00000000! 
     271 00000a20     09e0          MOVI    GRNTXT3P,A0
         00000a30 00000000! 
     272 00000a50     0d5f          CALLA   GETFPAL
         00000a60 00000000! 
     273 00000a80     09e0          MOVI    GLDTXT1P,A0
         00000a90 00000000! 
     274 00000ab0     0d5f          CALLA   GETFPAL
         00000ac0 00000000! 
     275 00000ae0     09e0          MOVI    ORGTXT1P,A0
         00000af0 00000000! 
     276 00000b10     0d5f          CALLA   GETFPAL
         00000b20 00000000! 
     277                    
     278 00000b40     182e          MOVK    1,A14
     279 00000b50     058e          MOVE    A14,@GAMERASE,W
         00000b60 00000000! 
     280                    
TMS340 COFF Macro Assembler Version 6.10     Wed Apr 21 11:41:16 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE    7

     281 00000b80     0d5f          CALLA   OPEN_ICE_BGND
         00000b90 00000000! 
     282                    
     283 00000bb0     09c0          MOVI    ADJFREPL,A0
         00000bc0     0014  
     284 00000bd0     0d5f          CALLA   GET_ADJ
         00000be0 00000000! 
     285 00000c00     cb61          JRNZ    CS_STATUS_PROC                          ;BR=FREE PLAY
     286                    *
     287                    *       not free play, print out coinage description
     288                    *
     289 00000c10     0d5f          calla   TAMPEREDP               ;are we in custom coinage?
         00000c20 00000000! 
     290 00000c40     ca02          jrz     show_nothing            ;br = yes
     291 00000c50     0d3f          CALLR   PLOTCOINAGE
         00000c60     029c  
     292 00000c70           show_nothing:
     293                    
     294                    ;       MOVI    ADJCUNIT,A0
     295                    ;       CALLA   GET_ADJ
     296                    ;       MOVI    CREDIT_PER_COIN_MESS,A8
     297                    ;       CMPI    1,A0
     298                    ;       JREQ    CS_COIN                                 ;BR=1 COIN
     299                    ;       MOVE    A0,@RAMTEMP1,W
     300                    ;       MOVI    CREDIT_PER_COINS_MESS,A8
     301                    ;CS_COIN
     302                    ;       JSRP    LM_PRINTF
     303                    
     304 00000c70     09c0          MOVI    ADJCSTRT,A0
         00000c80     000b  
     305 00000c90     0d5f          CALLA   GET_ADJ
         00000ca0 00000000! 
     306 00000cc0     09e8          MOVI    START_CREDIT_MESS,A8
         00000cd0 00001b50' 
     307 00000cf0     0b40          CMPI    1,A0
         00000d00     fffe  
     308 00000d10     ca06          JREQ    CS_START                                ;BR=1 COIN
     309 00000d20     0580          MOVE    A0,@RAMTEMP1,W
         00000d30 00000000! 
     310 00000d50     09e8          MOVI    START_CREDITS_MESS,A8
         00000d60 00001ca0' 
     311 00000d80           CS_START
     312 00000d80                   PUSH    A0
     313 00000d90                   JSRP    LM_PRINTF
     314                    
     315 00000e00     09c0          MOVI    ADJCCONT,A0
         00000e10     000c  
     316 00000e20     0d5f          CALLA   GET_ADJ
         00000e30 00000000! 
     317 00000e50     09e8          MOVI    CONT_CREDIT_MESS,A8
         00000e60 00001e20' 
     318 00000e80     0b40          CMPI    1,A0
         00000e90     fffe  
     319 00000ea0     ca06          JREQ    CS_CONTXX                       ; BR=1 COIN
     320 00000eb0     0580          MOVE    A0,@RAMTEMP1,W
TMS340 COFF Macro Assembler Version 6.10     Wed Apr 21 11:41:16 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE    8

         00000ec0 00000000! 
     321 00000ee0     09e8          MOVI    CONT_CREDITS_MESS,A8
         00000ef0 00001f90' 
     322 00000f10           CS_CONTXX                                       ; 
     323 00000f10                   PUSH    A0
     324 00000f20                   JSRP    LM_PRINTF
     325 00000f90     09af          MMFM    SP,A1,A2
         00000fa0     0006  
     326 00000fb0     09c0          MOVI    ADJFULLGAME,A0
         00000fc0     0010  
     327 00000fd0     0d5f          CALLA   GET_ADJ
         00000fe0 00000000! 
     328                    
     329 00001000     4820          CMP     A1,A0
     330 00001010     c411          JRLT    CS_DOLLAR_BILL                          ;BR=FULL GAME TOO LOW
     331                    
     332 00001020     2422          SLL     1,A2                                    ;2 CONTINUES
     333 00001030     4022          ADD     A1,A2                                   ;PLUS 1 START
     334                    
     335 00001040     4840          CMP     A2,A0
     336 00001050     c70d          JRGT    CS_DOLLAR_BILL                          ;BR=FULL GAME TOO HIGH
     337                    
     338 00001060     0580          MOVE    A0,@RAMTEMP1,W
         00001070 00000000! 
     339 00001090     09e8          MOVI    FULL_GAME_MESS,A8
         000010a0 000015d0' 
     340 000010c0                   JSRP    LM_PRINTF
     341 00001130           CS_DOLLAR_BILL
     342 00001130     05ae          MOVE    @DIPSWITCH,A14,W
         00001140 01860020  
     343 00001160     1eee          BTST    8,A14
     344 00001170     cb0a          JRNZ    CS_STATUS_PROC                          ;BR=NO BILLS
     345 00001180     09e8          MOVI    DOLLAR_BILL_MESS,A8
         00001190 00002130' 
     346 000011b0                   JSRP    LM_PRINTF
     347                    
     348 00001220           CS_STATUS_PROC
     349 00001220                   CREATE  PID_CREDIT,CREDIT_STATUS_PROC
     350                    
     351 000012a0     1820          MOVK    1,A0
     352 000012b0     0580          MOVE    A0,@COINFLAG,W          ; FLAG WE ARE ON THE COIN PAGE
         000012c0 000000c0- 
     353                    ;       SLEEP   1
     354 000012e0           CS1
     355 000012e0                   SLEEP   1
     356                    
     357 00001320     09c0          MOVI    OID_CREDIT,A0
         00001330     0488  
     358 00001340     0d5f          CALLA   KILOBJ_ALL
         00001350 00000000! 
     359                    
     360 00001370     09d1          MOVI    OID_CREDIT,B1                   ;[SOUND,OID]
         00001380     0488  
     361 00001390     5600          CLR     A0                              ;NO SLEEP TIL
     362 000013a0     09e1          MOVI    STRCNCONV,A1                    ;ROUTINE
TMS340 COFF Macro Assembler Version 6.10     Wed Apr 21 11:41:16 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE    9

         000013b0 00000000! 
     363 000013d0     09c5          MOVI    HFPAL+0404H,A5                  ;[COLOR,PALETTE]
         000013e0     0606  
     364 000013f0     09e9          MOVI    [127-63-6-4,200],A9                     ;[Y,X] SCREEN ADDRESS
         00001400 003600c8  
     365 00001420     09ea          MOVI    [0,-1],A10                      ;[Y,X] SPACING
         00001430 0000ffff  
     366 00001450     09eb          MOVI    H18FONT,A11                     ;FONT
         00001460 00000000! 
     367                    
     368 00001480     0d3f          CALLR   GET_CSTR                ; GET THE CHARACTER STRING
         00001490     026d  
     369 000014a0                   JSRP    PRINTF
     370 00001510           CS_NAP
     371                            .if     DEBUG
     372                            MOVE    @VCOUNT,@VCOUNT1,W
     373                            .endif
     374                    
     375 00001510                   SLEEP   60*5
     376                    
     377 00001560     5600          CLR     A0
     378 00001570     0580          MOVE    A0,@COINFLAG,W
         00001580 000000c0- 
     379 000015a0                   RETP
     380                    
     381 000015d0           FULL_GAME_MESS
     382                    ;       MESS_MAC2 H11WFONT,-1,0,200,20,HFPAL+0101H,STRCNCONV,OID_JUNK
     383 000015d0                   MESS_MAC2 H11WFONT,-1,0,200,20,HFPAL+0505H,STRCNCONV,OID_JUNK
     384 00001690       50          .STRING "PURCHASE FULL GAME FOR\n\fONLY %u CREDITS PER PLAYER!",0
     385 00001840 fffd0000          .LONG   [-3,0]
     386 00001860 00000000!         .LONG   RAMTEMP1
     387 00001880                   .EVEN
     388                    
     389              0081  CPC_YPOS        EQU     127+2
     390                    
     391 00001880           CREDIT_PER_COIN_MESS
     392 00001880                   MESS_MAC2 H11WFONT,-1,0,200,CPC_YPOS,HFPAL+0202H,STRCNCONV,OID_JUNK
     393 00001940       31          .STRING "1 CREDIT / 1 COIN",0
     394 000019d0                   .EVEN
     395                    
     396 000019d0           CREDIT_PER_COINS_MESS
     397 000019d0                   MESS_MAC2 H11WFONT,-1,0,200,CPC_YPOS,HFPAL+0202H,STRCNCONV,OID_JUNK
     398 00001a90       31          .STRING "1 CREDIT / %u COINS",0
     399 00001b30 00000000!         .LONG   RAMTEMP1
     400 00001b50                   .EVEN
     401                    
     402 00001b50           START_CREDIT_MESS
     403 00001b50                   MESS_MAC2 H11WFONT,-1,0,200,CPC_YPOS+13,HFPAL+0202H,STRCNCONV,OID_JUNK
     404 00001c10       31          .STRING "1 CREDIT TO START",0
     405 00001ca0                   .EVEN
     406                    
     407 00001ca0           START_CREDITS_MESS
     408 00001ca0                   MESS_MAC2 H11WFONT,-1,0,200,CPC_YPOS+13,HFPAL+0202H,STRCNCONV,OID_JUNK
     409 00001d60       25          .STRING "%u CREDITS TO START",0
     410 00001e00 00000000!         .LONG   RAMTEMP1
TMS340 COFF Macro Assembler Version 6.10     Wed Apr 21 11:41:16 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   10

     411 00001e20                   .EVEN
     412                    
     413 00001e20           CONT_CREDIT_MESS
     414 00001e20                   MESS_MAC2 H11WFONT,-1,0,200,CPC_YPOS+26,HFPAL+0202H,STRCNCONV,OID_JUNK
     415 00001ee0       31          .STRING "1 CREDIT TO CONTINUE",0
     416 00001f90                   .EVEN
     417                    
     418 00001f90           CONT_CREDITS_MESS
     419 00001f90                   MESS_MAC2 H11WFONT,-1,0,200,CPC_YPOS+26,HFPAL+0202H,STRCNCONV,OID_JUNK
     420 00002050       25          .STRING "%u CREDITS TO CONTINUE",0
     421 00002110 00000000!         .LONG   RAMTEMP1
     422 00002130                   .EVEN
     423                    
     424 00002130           DOLLAR_BILL_MESS
     425 00002130                   MESS_MAC2 H11WFONT,-1,0,200,CPC_YPOS+44,HFPAL+0101H,STRCNCONV,OID_JUNK
     426 000021f0       54          .STRING "THIS GAME ACCEPTS DOLLAR BILLS",0
     427 000022f0                   .EVEN
     428                    
     429                    
     430                    **************************************************************************
     431                    *                                                                        *
     432                    * CREDIT_STATUS_PROC - DISPLAY CREDIT PLAY STATUS                        *
     433                    *                                                                        *
     434                    * PASS:                                                                  *
     435                    * NUTIN'                                                                 *
     436                    *                                                                        *
     437                    **************************************************************************
     438                    
     439 000022f0           CREDIT_STATUS_PROC
     440 000022f0     09c0          MOVI    ADJFREPL,A0
         00002300     0014  
     441 00002310     0d5f          CALLA   GET_ADJ
         00002320 00000000! 
     442 00002340     ca2a          JRZ     CSP_CREDIT
     443                    
     444 00002350     1880          MOVK    4,A0
     445 00002360     0580          MOVE    A0,@RAMTEMP1,W
         00002370 00000000! 
     446 00002390     09e8          MOVI    READY_NP_MESS,A8
         000023a0 00003250' 
     447 000023c0                   JSRP    LM_PRINTF
     448 00002430           CSP_FREE_PRESS_FLASH
     449                    
     450 00002430     05ae          MOVE    @VOLUME_SET,A14,W
         00002440 00000000! 
     451 00002460     ca13          JRZ     CSP_FPF_NAP                     ;BR=VOLUME NOT SET
     452                    
     453 00002470     09e8          MOVI    PRESS_START_MESS,A8
         00002480 00003510' 
     454 000024a0                   JSRP    LM_PRINTF
     455                    
     456 00002510                   SLEEP   30
     457                    
     458 00002550     09c0          MOVI    OID_PROMPT2,A0
         00002560     048a  
TMS340 COFF Macro Assembler Version 6.10     Wed Apr 21 11:41:16 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   11

     459 00002570     0d5f          CALLA   KILOBJ_ALL
         00002580 00000000! 
     460 000025a0           CSP_FPF_NAP
     461 000025a0                   SLEEP   15
     462                    
     463 000025e0     c0e4          JRUC    CSP_FREE_PRESS_FLASH
     464                    
     465 000025f0           CSP_CREDIT
     466 000025f0     576b          CLR     A11                             ;READY FOR NOBODY, ZERO COUNT
     467                    
     468 00002600     1960          MOVK    ADJCSTRT,A0
     469 00002610     0d5f          CALLA   GET_ADJ                         ;GET NUMBER OF CREDITS TO START
         00002620 00000000! 
     470 00002640     4c09          MOVE    A0,A9
     471                    
     472 00002650     1a60          MOVK    ADJMAXC,A0
     473 00002660     0d5f          CALLA   GET_ADJ                         ;GET NUMBER MAXIMUM CREDITS
         00002670 00000000! 
     474 00002690     4c0a          MOVE    A0,A10
     475 000026a0           CSP_NEW_CREDIT
     476 000026a0     57ce          CLR     A14
     477 000026b0     058e          MOVE    A14,@NEWCRED,W                  ;RESET "NEW" CREDIT MESSAGE FLAG
         000026c0 00000110- 
     478                    
     479 000026e0     4d4a          MOVE    A10,A10
     480 000026f0     ca62          JRZ     CSP_CHECK_NEW                   ;BR=AT MAXIMUM CREDITS
     481                    
     482 00002700     0d5f          CALLA   CRED_P
         00002710 000069b0' 
     483 00002730     4c01          MOVE    A0,A1
     484 00002740     0b4b          CMPI    1,A11
         00002750     fffe  
     485 00002760     c51d          JRGE    CSP_CHECK_READY                 ;BR=ALREADY "PRESS START"
     486                    
     487 00002770     09c0          MOVI    OID_PROMPT2,A0
         00002780     048a  
     488 00002790     0d5f          CALLA   KILOBJ_ALL
         000027a0 00000000! 
     489                    
     490 000027c0     09e8          MOVI    PRESS_START_MESS,A8
         000027d0 00003510' 
     491 000027f0     4921          CMP     A9,A1
     492 00002800     c504          JRGE    CSP_CHECK_VOLUME                ;BR=ENOUGH CREDITS, CHECK VOLUME
     493 00002810     09e8          MOVI    INSERT_COIN_MESS,A8
         00002820 000033f0' 
     494 00002840     c004          JRUC    CSP_UPDATE_MESS
     495                    
     496 00002850           CSP_CHECK_VOLUME
     497 00002850     05ae          MOVE    @VOLUME_SET,A14,W
         00002860 00000000! 
     498 00002880     ca0b          JRZ     CSP_CHECK_READY                 ;BR=VOLUME NOT SET
     499                    
     500 00002890           CSP_UPDATE_MESS
     501 00002890     098c          MMTM    A12,A1,A8,A9,A10,A11
         000028a0     40f0  
TMS340 COFF Macro Assembler Version 6.10     Wed Apr 21 11:41:16 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   12

     502 000028b0                   JSRP    LM_PRINTF
     503 00002920     09ac          MMFM    A12,A1,A8,A9,A10,A11
         00002930     0f02  
     504                    
     505 00002940           CSP_CHECK_READY
     506 00002940     4941          CMP     A10,A1
     507 00002950     c40f          JRLT    CSP_GET_READY_COUNT             ;BR=NOT A MAXIMUM CREDITS
     508 00002960     574a          CLR     A10                             ;FLAG MAXIMUM CREDIT MESSAGE
     509                    
     510 00002970     098c          MMTM    A12,A1,A8,A9,A10,A11
         00002980     40f0  
     511 00002990     09e8          MOVI    MAX_CREDIT_MESS,A8
         000029a0 00002fb0' 
     512 000029c0                   JSRP    LM_PRINTF
     513 00002a30     09ac          MMFM    A12,A1,A8,A9,A10,A11
         00002a40     0f02  
     514                    
     515 00002a50           CSP_GET_READY_COUNT
     516 00002a50     0b4b          CMPI    4,A11
         00002a60     fffb  
     517 00002a70     ca2a          JREQ    CSP_CHECK_NEW                   ;BR=MAX READY MESSAGE
     518                    
     519 00002a80     5b21          DIVU    A9,A1
     520 00002a90     4961          CMP     A11,A1
     521 00002aa0     ca27          JREQ    CSP_CHECK_NEW                   ;BR=SAME READY COUNT
     522 00002ab0     0b41          CMPI    4,A1
         00002ac0     fffb  
     523 00002ad0     c601          JRLE    CSP_NEW_READY                   ;BR=VALID READY COUNT
     524 00002ae0     1881          MOVK    4,A1                            ;MAX READY COUNT
     525 00002af0           CSP_NEW_READY
     526 00002af0     4c2b          MOVE    A1,A11                          ;UPDATE PLAYER READY COUNT
     527                    
     528 00002b00     09c0          MOVI    OID_PROMPT,A0
         00002b10     0489  
     529 00002b20     0d5f          CALLA   KILOBJ_ALL
         00002b30 00000000! 
     530                    
     531 00002b50     098c          MMTM    A12,A8,A9,A10,A11
         00002b60     00f0  
     532 00002b70     09e8          MOVI    READY_1P_MESS,A8
         00002b80 000030f0' 
     533 00002ba0     0b4b          CMPI    1,A11
         00002bb0     fffe  
     534 00002bc0     ca0c          JREQ    CSP_DO_READY_MESS               ;BR=READY FOR 1 PLAYER
     535 00002bd0                   KITN    4
     536 00002c10     ca01          JREQ    CSP_NP_MESS                     ;BR=4 PLAYER KIT
     537 00002c20     184b          MOVK    2,A11                           ;2 PLAYER MAXIMUM
     538 00002c30           CSP_NP_MESS
     539 00002c30     058b          MOVE    A11,@RAMTEMP1,W
         00002c40 00000000! 
     540 00002c60     09e8          MOVI    READY_NP_MESS,A8
         00002c70 00003250' 
     541 00002c90           CSP_DO_READY_MESS
     542 00002c90                   JSRP    LM_PRINTF
     543 00002d00     09ac          MMFM    A12,A8,A9,A10,A11
TMS340 COFF Macro Assembler Version 6.10     Wed Apr 21 11:41:16 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   13

         00002d10     0f00  
     544 00002d20           CSP_CHECK_NEW
     545 00002d20     1bc0          MOVK    30,A0
     546 00002d30           CSP_CHECK_NEW_LUPE
     547 00002d30                   PUSHP   A0
     548 00002d40                   SLEEP   1
     549 00002d80                   PULLPQ  A0
     550 00002d90     05ae          MOVE    @NEWCRED,A14,W
         00002da0 00000110- 
     551 00002dc0     cb8d          JRNZ    CSP_NEW_CREDIT                  ;BR="NEW" CREDIT FLAG
     552 00002dd0     3d60          DSJ     A0,CSP_CHECK_NEW_LUPE
     553                    
     554 00002de0     09c0          MOVI    OID_PROMPT2,A0
         00002df0     048a  
     555 00002e00     0d5f          CALLA   KILOBJ_ALL
         00002e10 00000000! 
     556                    
     557 00002e30                   SLEEP   15
     558                    
     559 00002e70     0b68          CMPI    PRESS_START_MESS,A8
         00002e80 ffffcaef' 
     560 00002ea0     cb04          JRNE    CSP_PRINT_MESS                  ;BR="INSERT COIN" MESSAGE
     561                    
     562 00002eb0     05ae          MOVE    @VOLUME_SET,A14,W
         00002ec0 00000000! 
     563 00002ee0     cae3          JRZ     CSP_CHECK_NEW                   ;BR=VOLUME NOT SET
     564                    
     565 00002ef0           CSP_PRINT_MESS
     566 00002ef0     098c          MMTM    A12,A8,A9,A10,A11
         00002f00     00f0  
     567 00002f10                   JSRP    LM_PRINTF
     568 00002f80     09ac          MMFM    A12,A8,A9,A10,A11
         00002f90     0f00  
     569                    
     570 00002fa0     c0d7          JRUC    CSP_CHECK_NEW
     571                    
     572 00002fb0           MAX_CREDIT_MESS
     573 00002fb0                   MESS_MAC2 H18TFONT,-1,0,200,84-6-4,HFPAL+0101H,STRCNCONV,OID_JUNK
     574 00003070       4d          .STRING "MAXIMUM CREDITS",0
     575 000030f0                   .EVEN
     576                    
     577 000030f0           READY_1P_MESS
     578 000030f0                   MESS_MAC2 H18TFONT,-1,0,200,190+2,HFPAL+0303H,STRCNCONV,OID_PROMPT
     579 000031b0       52          .STRING "READY FOR 1 PLAYER",0
     580 00003250                   .EVEN
     581                    
     582 00003250           READY_NP_MESS
     583 00003250                   MESS_MAC2 H18TFONT,-1,0,200,190+2,HFPAL+0303H,STRCNCONV,OID_PROMPT
     584 00003310       52          .STRING "READY FOR 1-%u PLAYERS",0
     585 000033d0 00000000!         .LONG   RAMTEMP1
     586 000033f0                   .EVEN
     587                    
     588 000033f0           INSERT_COIN_MESS
     589 000033f0                   MESS_MAC2 H18FONT,-1,0,200,220,HFPAL+0101H,STRCNCONV,OID_PROMPT2
     590 000034b0       49          .STRING "INSERT COIN",0
TMS340 COFF Macro Assembler Version 6.10     Wed Apr 21 11:41:16 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   14

     591 00003510                   .EVEN
     592                    
     593 00003510           PRESS_START_MESS
     594 00003510                   MESS_MAC2 H18FONT,-1,0,200,220,HFPAL+0303H,STRCNCONV,OID_PROMPT2
     595 000035d0       50          .STRING "PRESS START",0
     596 00003630                   .EVEN
     597                    
     598                    ;**************************************************************************
     599                    ;*                                                                       *
     600                    ;*      PLOTCOINAGE                                                      *
     601                    ;*                                                                       *
     602                    ;*      PLOT OUT THE CURRENT COINAGE ON THE SCREEN                       *
     603                    ;*                                                                       *
     604                    ;*      ENTRY                                                            *
     605                    ;*              NOTHING                                                  *
     606                    ;*                                                                       *
     607                    ;*      EXIT                                                             *
     608                    ;*              NOTHING                                                  *
     609                    ;*                                                                       *
     610                    ;**************************************************************************
     611                    
     612          000d00c8  CM_Y_ADDGAP     EQU     [13,200]
     613                    
     614 00003630           PLOTCOINAGE:
     615 00003630     098f          MMTM    SP,A0,A1,A6
         00003640     c200  
     616 00003650     5642          CLR     A2
     617 00003660     09c0          MOVI    ADJFREPL,A0
         00003670     0014  
     618 00003680     0d5f          CALLA   GET_ADJ
         00003690 00000000! 
     619 000036b0     cb37          JRNZ    PCNOHEAD
     620                    
     621 000036c0     09c0          MOVI    ADJPRICE,A0
         000036d0     0001  
     622 000036e0     0d5f          CALLA   GET_ADJ                 ; GET THE CURRENT PRICING
         000036f0 00000000! 
     623 00003710     0d5f          CALLA   GET_CSPT
         00003720 00000000! 
     624 00003740     b6c2          MOVE    *A6(CS_LIST),A2,L
         00003750     0190  
     625 00003760     ca2c          JRZ     PCNOHEAD                ; NO HEADER, BELIEVE IT OR NOT
     626 00003770     09e8          MOVI    PCSETUP,A8
         00003780 00003a70' 
     627 000037a0     0d5f          CALLA   LM_SETUP
         000037b0 00000000! 
     628 000037d0     098f          MMTM    SP,A0,A1,A2
         000037e0     e000  
     629 000037f0     5600          CLR     A0
     630 00003800           PC2
     631 00003800     9641          MOVE    *A2+,A1,L               ; COUNT UP NUMBER OF MESSAGES
     632 00003810     ca02          JRZ     PC3
     633 00003820     1020          inc     A0
     634 00003830     c0fc          JRUC    PC2
     635 00003840           PC3
TMS340 COFF Macro Assembler Version 6.10     Wed Apr 21 11:41:16 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   15

     636 00003840     2480          SLL     4,A0
     637 00003850     0b20          ADDI    CM_YTAB,A0
         00003860 00003b30' 
     638 00003880     8409          MOVE    *A0,A9,W
     639 00003890     2609          SLL     16,A9
     640 000038a0     0b09          ADDI    200,A9
         000038b0     00c8  
     641 000038c0     09af          MMFM    SP,A0,A1,A2
         000038d0     0007  
     642 000038e0           PCNEXTHEAD
     643 000038e0     9648          MOVE    *A2+,A8,L               ; PICKUP THE NEXT POINTER
     644 000038f0     ca11          JRZ     PCDONE
     645 00003900     098c          mmtm    a12,a2
         00003910     2000  
     646 00003920                   JSRP    PRINTF
     647 00003990     09ac          mmfm    a12,a2
         000039a0     0004  
     648 000039b0     2e09          SRL     16,A9
     649 000039c0     2609          SLL     16,A9                   ; MASK OFF X ADDRESS
     650 000039d0     0b29          ADDI    CM_Y_ADDGAP,A9
         000039e0 000d00c8  
     651 00003a00     c0ed          JRUC    PCNEXTHEAD
     652 00003a10           PCDONE
     653 00003a10     1822          MOVK    1,A2
     654 00003a20     c001          JRUC    PCRET
     655                    
     656 00003a30           PCNOHEAD
     657 00003a30     5642          CLR     A2
     658 00003a40           PCRET
     659 00003a40     09af          MMFM    SP,A0,A1,A6
         00003a50     0043  
     660 00003a60     0960          RETS
     661                    
     662 00003a70           PCSETUP
     663 00003a70                   MESS_MAC2 H11WFONT,-1,0,200,CPC_YPOS,HFPAL+0202H,STRCNCONV,OID_JUNK
     664                    
     665 00003b30     0000  CM_YTAB .WORD   0,CPC_YPOS-6+2, CPC_YPOS-19+2, CPC_YPOS-32+2
     666                    
     667                    
     668                    ;**************************************************************************
     669                    ;*                                                                       *
     670                    ;* REQUIRE_PROC - PROCESS TO FLASH THE CREDIT REQUIREMENTS FOR THIS GAME. *
     671                    ;*                                                                       *
     672                    ;**************************************************************************
     673                    ;REQUIRE_PROC
     674                    ;       CALLR   CHECKFREE
     675                    ;       JANZ    SUCIDE
     676                    ;
     677                    ;       MOVI    REQUIRE_MESS,A8
     678                    ;       JSRP    LM_PRINTF
     679                    ;RP_LP
     680                    ;*PRINT THE CREDITS REQUIRED TO START
     681                    ;       MOVIM   SUFFIX_BS,@RAMTEMP2,L
     682                    ;       ADJUST  ADJCSTRT
     683                    ;       MOVE    A0,@RAMTEMP1,L
TMS340 COFF Macro Assembler Version 6.10     Wed Apr 21 11:41:16 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   16

     684                    ;       CMPI    1,A0
     685                    ;       JRNE    RP_TOSTART
     686                    ;       MOVIM   SUFFIX_NULL,@RAMTEMP2,L
     687                    ;RP_TOSTART
     688                    ;       MOVI    RTOSTART_MESS,A8
     689                    ;       JSRP    LM_PRINTF
     690                    ;
     691                    ;       SLEEP   45
     692                    ;       MOVI    OID_REQUIRED,A0
     693                    ;       CALLA   KILOBJ_ALL
     694                    ;
     695                    ;*PRINT THE CREDITS REQUIRED TO CONTINUE
     696                    ;       MOVIM   SUFFIX_BS,@RAMTEMP2,L
     697                    ;       ADJUST  ADJCCONT
     698                    ;       MOVE    A0,@RAMTEMP1,L
     699                    ;       CMPI    1,A0
     700                    ;       JRNE    RP_TOCONTINUE
     701                    ;       MOVIM   SUFFIX_NULL,@RAMTEMP2,L
     702                    ;RP_TOCONTINUE
     703                    ;       MOVI    RTOCONTINUE_MESS,A8
     704                    ;       JSRP    LM_PRINTF
     705                    ;
     706                    ;       SLEEP   45
     707                    ;       MOVI    OID_REQUIRED,A0
     708                    ;       CALLA   KILOBJ_ALL
     709                    ;       JRUC    RP_LP
     710                    ;
     711                    ;
     712                    ;REQUIRE_MESS
     713                    ;         MESS_MAC  RD7FONT,SPACING20,200,CREDIT_Y+70,COLOR_PWHITE,STRCNRMO,OID_TEXT
     714                    ;       .STRING "THIS GAME REQUIRES:",0
     715                    ;       .EVEN
     716                    ;
     717                    ;RTOSTART_MESS
     718                    ;         MESS_MAC  RD15FONT,SPACING20,200,CREDIT_Y+82,COLOR_PLF,STRCNRMO,OID_REQUIRED
     719                    ;       .STRING "%d CREDIT%p TO START.",0
     720                    ;       .LONG   RAMTEMP1
     721                    ;       .LONG   RAMTEMP2
     722                    ;       .EVEN
     723                    ;
     724                    ;RTOCONTINUE_MESS
     725                    ;         MESS_MAC  RD15FONT,SPACING20,200,CREDIT_Y+92,COLOR_PLF,STRCNRMO,OID_REQUIRED
     726                    ;       .STRING "%d CREDIT%p TO CONTINUE.",0
     727                    ;       .LONG   RAMTEMP1
     728                    ;       .LONG   RAMTEMP2
     729                    ;       .EVEN
     730                    ;
     731                    ;SUFFIX_BS:
     732                    ;       .STRING "S",0
     733                    ;
     734                    
     735                    ;**************************************************************************
     736                    ;*                                                                       *
     737                    ;*      OUTPUT_CUSTOM                                                    *
     738                    ;*                                                                       *
TMS340 COFF Macro Assembler Version 6.10     Wed Apr 21 11:41:16 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   17

     739                    ;*      OUTPUT THE COINUP MESSAGE.  THIS PLOTS ALL THE DIFFERENT         *
     740                    ;*      FORMS OF IT..                                                    *
     741                    ;*                                                                       *
     742                    ;*      ENTRY                                                            *
     743                    ;*              NOTHING                                                  *
     744                    ;*                                                                       *
     745                    ;*      EXIT                                                             *
     746                    ;*              A2      NUMBER OF LINES PLOTTED                          *
     747                    ;*                                                                       *
     748                    ;**************************************************************************
     749                    ;
     750                    ;CM_LINE1 EQU     CUSTOM_MESSAGE
     751                    ;CM_LINE2 EQU     CUSTOM_MESSAGE+CMESS_LINE_SIZE
     752                    ;CM_LINE3 EQU     CUSTOM_MESSAGE+(2*CMESS_LINE_SIZE)
     753                    ;
     754                    ;CM_Y_GAP       EQU     13
     755                    ;CM_Y1          EQU     25
     756                    ;CM_Y2          EQU     15
     757                    ;CM_Y3          EQU     7
     758                    ;
     759                    ;OUTPUT_CUSTOM
     760                    ;       MOVI    OID_CUSTOM,A0
     761                    ;       CALLA   KILOBJ_ALL              ;KILL CURRENT CUSTOM MESSAGE
     762                    ;
     763                    ;       CLR     A2
     764                    ;       CALLR   CHECKFREE
     765                    ;       JRNZ    OCGO                    ; BR = FREEPLAY
     766                    ;
     767                    ;        MOVI    ADJMAXC,A0
     768                    ;        CALLA   GET_ADJ                        ; MAX CREDITS ALLOWED
     769                    ;        JRZ    OCGO                    ; BR = NO MAX CREDITS
     770                    ;       MOVE    A0,A1
     771                    ;        CALLR   CRED_P
     772                    ;       JRZ     OCGO                    ; AIN'T GOT NO CREDITS
     773                    ;       CMP     A1,A0
     774                    ;       JRLO    OCGO                    ; CREDITS < MAXCREDITS
     775                    ;       MOVI    MESS_MAX,A8
     776                    ;       JSRP    LM_PRINTF
     777                    ;       MOVI    1,A2
     778                    ;       JRUC    OCRET
     779                    ;;      JRUC    OCNOMESS
     780                    ;OCGO
     781                    ;;XUNIT  CALLA   ADJ_PAGE
     782                    ;        MOVI    VALID_CUSTOM,A7
     783                    ;        CALLA   RC_WORD
     784                    ;        CMPI    VALID_VALUE,A0         ; CHECK TO SEE IF MESSAGE IS VALID
     785                    ;       JRNZ    OCNOMESS                ; BR = NOT VALID
     786                    ;
     787                    ;       CALLR   NUM_CLINES              ; COMPUTE NUMBER OF DISPLAYABLE LINES
     788                    ;       JRZ     OCNOMESS                ; NOTHING TO SHOW
     789                    ;       MOVK    1,A2
     790                    ;       SLL     4,A0
     791                    ;       ADDI    CM_YTAB,A0
     792                    ;       MOVE    *A0,A9,W
     793                    ;
TMS340 COFF Macro Assembler Version 6.10     Wed Apr 21 11:41:16 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   18

     794                    ;       MOVI    CM_LINE1,A10
     795                    ;       CALLR   CK_LINE                 ; LOAD IT UP, BABY!
     796                    ;       JRZ     OC1
     797                    ;       CALLR   CPLOTLINE
     798                    ;OC1
     799                    ;       MOVI    CM_LINE2,A10
     800                    ;       CALLR   CK_LINE
     801                    ;       JRZ     OC2
     802                    ;       CALLR   CPLOTLINE
     803                    ;OC2
     804                    ;       MOVI    CM_LINE3,A10
     805                    ;       CALLR   CK_LINE
     806                    ;       JRZ     OC3
     807                    ;       CALLR   CPLOTLINE
     808                    ;OC3
     809                    ;       JRUC    OCRET
     810                    ;OCNOMESS
     811                    ;       CALLA   TAMPEREDP               ;ARE WE IN CUSTOM COINAGE?
     812                    ;       JRZ     OCRET                   ;BR = YES
     813                    ;       CALLR   PLOTCOINAGE
     814                    ;OCRET
     815                    ;       RETS
     816                    ;
     817                    
     818                    ;**************************************************************************
     819                    ;*                                                                       *
     820                    ;*      CPLOTLINE                                                        *
     821                    ;*                                                                       *
     822                    ;*      PLOT THE LINE IN PDATA OUT ON THE SCREEN                         *
     823                    ;*                                                                       *
     824                    ;*      ENTRY                                                            *
     825                    ;*              A9      Y LOCATION TO PLOT AT                            *
     826                    ;*                                                                       *
     827                    ;*      EXIT                                                             *
     828                    ;*              A9      NEW Y LOCATION                                   *
     829                    ;*                                                                       *
     830                    ;**************************************************************************
     831                    ;
     832                    ;CPLOTLINE:
     833                    ;       PUSH    A9
     834                    ;       PUSH    A9
     835                    ;       MOVI    CUSTOM_SETUP,A8
     836                    ;       CALLA   LM_SETUP
     837                    ;;      MOVE    A13,A8
     838                    ;;      ADDI    PDATA,A8
     839                    ;       MOVI    TEXT_BUFF,A8
     840                    ;       PULL    A9
     841                    ;       SLL     16,A9
     842                    ;       ADDI    200,A9
     843                    ;       JSRP    PRINTF
     844                    ;       PULL    A9
     845                    ;       ADDI    CM_Y_GAP,A9
     846                    ;       RETS
     847                    ;
     848                    ;CUSTOM_SETUP:
TMS340 COFF Macro Assembler Version 6.10     Wed Apr 21 11:41:16 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   19

     849                    ;         MESS_MAC  RD7FONT,SPACING20,196,0,COLOR_PWHITE,STRCNRMO,OID_CUSTOM
     850                    ;
     851                    ;
     852                    ;MESS_MAX:
     853                    ;         MESS_MAC  RD15FONT,SPACING20,200,CM_Y1-5,COLOR_PLF,STRCNRMO,OID_CUSTOM
     854                    ;       .STRING "MAXIMUM CREDITS",0
     855                    ;       .EVEN
     856                    ;
     857                    ;
     858                    ;**************************************************************************
     859                    ;*                                                                       *
     860                    ;*      NUM_CLINES                                                       *
     861                    ;*                                                                       *
     862                    ;*      COMPUTE THE NUMBER OF DISPLAYABLE LINES IN CUSTOM RAM            *
     863                    ;*                                                                       *
     864                    ;*      ENTRY                                                            *
     865                    ;*              NOTHING                                                  *
     866                    ;*                                                                       *
     867                    ;*      EXIT                                                             *
     868                    ;*              A0      NUMBER OF LINES                                  *
     869                    ;*                                                                       *
     870                    ;**************************************************************************
     871                    ;
     872                    ;NUM_CLINES
     873                    ;       MMTM    SP,A1,A10
     874                    ;       CLR     A1
     875                    ;       MOVI    CM_LINE1,A10
     876                    ;       CALLR   CK_LINE
     877                    ;       JRZ     NC2
     878                    ;       INC     A1
     879                    ;NC2
     880                    ;       MOVI    CM_LINE2,A10
     881                    ;       CALLR   CK_LINE
     882                    ;       JRZ     NC3
     883                    ;       INC     A1
     884                    ;NC3
     885                    ;       MOVI    CM_LINE3,A10
     886                    ;       CALLR   CK_LINE
     887                    ;       JRZ     NC4
     888                    ;       INC     A1
     889                    ;NC4
     890                    ;       MOVE    A1,A0
     891                    ;       MMFM    SP,A1,A10
     892                    ;       RETS
     893                    ;
     894                    ;**************************************************************************
     895                    ;*                                                                       *
     896                    ;*      CK_LINE                                                          *
     897                    ;*                                                                       *
     898                    ;*      COPY A LINE INTO PDATA AREA, AND RETURN IN A0 NUMBER OF CHARS    *
     899                    ;*                                                                       *
     900                    ;*      ENTRY                                                            *
     901                    ;*              A10     POINTER TO CMOS LOC OF LINE                      *
     902                    ;*                                                                       *
     903                    ;*      EXIT                                                             *
TMS340 COFF Macro Assembler Version 6.10     Wed Apr 21 11:41:16 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   20

     904                    ;*              A0      NUMBER OF VALID CHARS IN LINE                    *
     905                    ;*                                                                       *
     906                    ;**************************************************************************
     907                    ;
     908                    ;CK_LINE:
     909                    ;       MMTM    SP,A1,A2,A3,A4,A7,A10
     910                    ;        MOVE    A10,A7               ;INPUT POINTER TO CMOS
     911                    ;;        MOVE    A13,A2              ;OUR PDATA AREA
     912                    ;;        ADDI    PDATA,A2            ;A10 IS DESTINATION.
     913                    ;       MOVI    TEXT_BUFF,A2
     914                    ;
     915                    ;        MOVI    CMESS_CHARS,A1       ;COUNTER
     916                    ;;XUNIT  CALLA   ADJ_PAGE             ;POINT THE PAGE
     917                    ;       CLR     A3              ; ONLY SPACES SO FAR
     918                    ;
     919                    ;CK_LOOP CALLA   RC_BYTEI             ;FETCH A BYTE
     920                    ;        MOVB    A0,*A2               ;STORE
     921                    ;       MOVE    A0,A0
     922                    ;       JRZ     CKLX                    ; END OF STRING
     923                    ;       CMPI    20H,A0                  ; CHECK FOR NON-SPACES
     924                    ;       JRZ     CKGO
     925                    ;       INC     A3
     926                    ;CKGO
     927                    ;        ADDI    BYTE_SIZE,A2
     928                    ;        DSJS    A1,CK_LOOP
     929                    ;       CLR     A0
     930                    ;       MOVE    A0,*A2,W                ; MAKE SURE OF THINGS
     931                    ;CKLX
     932                    ;;XUNIT  CALLA   DEF_PAGE             ;POINT AWAY NOW
     933                    ;       MOVE    A3,A3                   ; HOW MANY "REAL" CHARACTERS
     934                    ;       MMFM    SP,A1,A2,A3,A4,A7,A10
     935                    ;       RETS
     936                    ;
     937                    **************************************************************************
     938                    *                                                                        *
     939                    *       GET_CSTR                                                         *
     940                    *                                                                        *
     941                    *       CREATE THE CREDIT STRING AND RETURN IT IN TEXT_BUFF              *
     942                    *                                                                        *
     943                    *       ENTRY                                                            *
     944                    *               NOTHING                                                  *
     945                    *                                                                        *
     946                    *       EXIT                                                             *
     947                    *               A8      POINTS TO TEXT_BUFF                              *
     948                    *                                                                        *
     949                    **************************************************************************
     950 00003b70           GET_CSTR:
     951 00003b70     098f          MMTM    SP,A0,A1,A7,A10
         00003b80     c120  
     952                    
     953 00003b90     0d3f          CALLR   CHECKFREE
         00003ba0     0132  
     954 00003bb0     ca04          JRZ     NOT_FREE
     955                    
     956 00003bc0     09e8          MOVI    MESS_FREEP,A8           ;FREEPLAY MESSAGE
TMS340 COFF Macro Assembler Version 6.10     Wed Apr 21 11:41:16 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   21

         00003bd0 00004dc0' 
     957 00003bf0     c040          JRUC    GET_CX
     958 00003c00           NOT_FREE
     959 00003c00     09e7          MOVI    TEXT_BUFF,A7            ;TEXT STRING TO BUILD IN
         00003c10 00000120- 
     960 00003c30     09e8          MOVI    MESS_CREDITS,A8         ;POINT AT TEXT PART
         00003c40 000048c0' 
     961 00003c60     0d5f          CALLA   STRCAT                  ;BUILD THIS IN.
         00003c70 00004100' 
     962 00003c90     0d3f          CALLR   CRED_P
         00003ca0     02d0  
     963 00003cb0     4c0a          MOVE    A0,A10                  ;SAVE CREDITS
     964 00003cc0     0d3f          CALLR   CAT_A0
         00003cd0     0036  
     965                    *
     966                    *       NOW WE NEED TO SEE IF WE SHOULD ADD A FRACTION.
     967                    *
     968 00003ce0     09c0          MOVI    ADJFRAC,A0
         00003cf0     000a  
     969 00003d00     0d5f          CALLA   GET_ADJ                 ;CHECK THE ADJUSTMENT
         00003d10 00000000! 
     970 00003d30     ca29          JRZ     NSFRAC                  ;DON'T SHOW IT!
     971                    *
     972                    *       ADD ANY FRACTION WE HAVE.
     973                    *
     974                    ;XUNIT  CALLR   COIN_PAG                ;PUT US ON COIN PAGE
     975 00003d40     0d3f          CALLR   GET_CUNITS              ;A0 HAS CUNITS
         00003d50     02dc  
     976                    ;XUNIT  CALLA   DEF_PAGE                ;FLIP CMOS AWAY
     977 00003d60     4c00          MOVE    A0,A0                   ;ZERO?
     978 00003d70     ca25          JRZ     NSFRAC                  ;THEN NO FRACTION.
     979                    *
     980                    *       WE HAVE A FRACTION...WERE THE CREDITS ZERO?
     981                    *
     982 00003d80     4d4a          MOVE    A10,A10                 ;WE SAVED EM IN A10
     983 00003d90     cb0e          JRNZ    NZM                     ;NON ZERO MANTISSA
     984                    
     985 00003da0     09e8          MOVI    TEXT_BUFF,A8            ;LOOK FOR THE TERMINATOR
         00003db0 00000120- 
     986 00003dd0           KILL_Z
     987 00003dd0     8f01          MOVB    *A8,A1                  ;GET A BYTE
     988 00003de0     ca09          JRZ     NZM                     ;COULDN'T FIND IT....GO ON.
     989 00003df0     0b41          CMPI    LET_0,A1                ;IS THIS THE ZERO?
         00003e00     ffcf  
     990 00003e10     ca03          JRZ     GOT_ZERO
     991 00003e20     0b08          ADDI    BYTE_SIZE,A8
         00003e30     0008  
     992 00003e40     c0f8          JRUC    KILL_Z
     993 00003e50           GOT_ZERO
     994 00003e50     5621          CLR     A1
     995 00003e60     8c28          MOVB    A1,*A8                  ;KILL THE ZERO
     996 00003e70     4d07          MOVE    A8,A7                   ;UPDATE END OF STRING LOCATION
     997                    
     998 00003e80           NZM
     999 00003e80     09e8          MOVI    MESS_2SPACE,A8          ;SPACE BET. MANTISSA AND DENMO
TMS340 COFF Macro Assembler Version 6.10     Wed Apr 21 11:41:16 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   22

         00003e90 000048b0' 
    1000 00003eb0     0d5f          CALLA   STRCAT
         00003ec0 00004100' 
    1001                    
    1002 00003ee0           NOT_ZM
    1003 00003ee0     0d3f          CALLR   CAT_A0                  ;ADD A0 ONTO FRACTION
         00003ef0     0014  
    1004                    
    1005 00003f00     09e8          MOVI    MESS_SLASH,A8
         00003f10 000048a0' 
    1006 00003f30     0d5f          CALLA   STRCAT                  ;ADD SLASH
         00003f40 00004100' 
    1007                    
    1008 00003f60     09c0          MOVI    ADJCUNIT,A0             ;UNITS REQUIRED FOR CREDIT
         00003f70     0006  
    1009 00003f80     0d5f          CALLA   GET_ADJ
         00003f90 00000000! 
    1010 00003fb0     0d3f          CALLR   CAT_A0                  ;DENOMINATOR
         00003fc0     0007  
    1011                    
    1012 00003fd0           NSFRAC
    1013 00003fd0     09e8          MOVI    TEXT_BUFF,A8
         00003fe0 00000120- 
    1014 00004000           GET_CX
    1015 00004000     0320          CLRC                            ;RETURN OK
    1016 00004010           GET_CXX
    1017 00004010     09af          MMFM    SP,A0,A1,A7,A10
         00004020     0483  
    1018 00004030     0960          RETS
    1019                    
    1020                    **************************************************************************
    1021                    *                                                                        *
    1022                    *       CAT_A0                                                           *
    1023                    *                                                                        *
    1024                    *       TURN A0 INTO A DECIMAL NUMBER AND THEN CONCATENATE IT ONTO       *
    1025                    *       THE END OF THE STRING WE ARE BUILDING                            *
    1026                    *                                                                        *
    1027                    *       ENTRY                                                            *
    1028                    *               A0      NUMBER FOR THE END OF THE STRING                 *
    1029                    *                                                                        *
    1030                    *       EXIT                                                             *
    1031                    *               NOTHING                                                  *
    1032                    *                                                                        *
    1033                    **************************************************************************
    1034                    
    1035 00004040           CAT_A0
    1036 00004040     098f          MMTM    SP,A8
         00004050     0080  
    1037 00004060     4c08          MOVE    A0,A8                          ;CREDIT COUNT IN A8
    1038 00004070     0d5f          CALLA   HEXTOASC                       ;STRING
         00004080 00000000! 
    1039 000040a0     0d5f          CALLA   STRCAT                         ;NOW WE HAVE WHOLE NUMBER.
         000040b0 00004100' 
    1040 000040d0     09af          MMFM    SP,A8
         000040e0     0100  
TMS340 COFF Macro Assembler Version 6.10     Wed Apr 21 11:41:16 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   23

    1041 000040f0     0960          RETS
    1042                    
    1043                    **************************************************************************
    1044                    *                                                                        *
    1045                    *       STRCAT                                                           *
    1046                    *                                                                        *
    1047                    *       CONCATENATE THE STRING POINTED TO BY A8 ONTO A7 STARTING AT      *
    1048                    *       A7.  GROSS BUT EFFECTIVE                                         *
    1049                    *                                                                        *
    1050                    *       ENTRY                                                            *
    1051                    *               A7      STARTING POSITION IN STRING                      *
    1052                    *               A8      ZERO-TERMINATED STRING TO STICK ONTO A7          *
    1053                    *                                                                        *
    1054                    *       EXIT                                                             *
    1055                    *               A7      POINTS AT ZERO TERMINATOR                        *
    1056                    *                                                                        *
    1057                    **************************************************************************
    1058                    
    1059 00004100           STRCAT
    1060 00004100                   PUSH    A0
    1061 00004110           STRLOOP
    1062 00004110     9d07          MOVB    *A8,*A7                 ; STICK NEXT CHAR IN
    1063 00004120     8ee0          MOVB    *A7,A0                  ; MOVB SUCKS
    1064 00004130     ca05          JRZ     STRDONE
    1065 00004140     0b07          ADDI    8,A7
         00004150     0008  
    1066 00004160     0b08          ADDI    8,A8                    ; WOOF WOOF WHO CARES
         00004170     0008  
    1067 00004180     c0f8          JRUC    STRLOOP
    1068 00004190           STRDONE
    1069 00004190                   PULL    A0
    1070 000041b0     0960          RETS
    1071                    
    1072                    **************************************************************************
    1073                    *                                                                        *
    1074                    *       ADD_PROMPT                                                       *
    1075                    *                                                                        *
    1076                    *       THIS IS CALLED ON THE CREDITS PAGE TO ADD A WORD OF              *
    1077                    *       WISDOM BELOW THE CREDITS MESSAGE -- IT PICKS OUT THE             *
    1078                    *       BEST MESSAGES AND BLINKS THEM                                    *
    1079                    *                                                                        *
    1080                    *       ENTRY                                                            *
    1081                    *               NOTHING                                                  *
    1082                    *                                                                        *
    1083                    *       EXIT                                                             *
    1084                    *               NOTHING                                                  *
    1085                    *                                                                        *
    1086                    **************************************************************************
    1087                    
    1088 000041c0           ADD_PROMPT:
    1089                    ;        MOVI    PROMPT_PROC,A7
    1090                    ;        CALLA   P_FORK               ;START UP ANOTHER W/ SAME ID TO FLASH!
    1091 000041c0                   P_FORK  PROMPT_PROC
    1092 00004220                   RETP
    1093                    
TMS340 COFF Macro Assembler Version 6.10     Wed Apr 21 11:41:16 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   24

    1094                    **************************************************************************
    1095                    *                                                                        *
    1096                    *       PROMPT_PROC                                                      *
    1097                    *                                                                        *
    1098                    *       PROCESS TO PICK A GOOD MESSAGE AND SHOW IT                       *
    1099                    *                                                                        *
    1100                    *       ENTRY                                                            *
    1101                    *               NOTHING                                                  *
    1102                    *                                                                        *
    1103                    *       EXIT                                                             *
    1104                    *               NOTHING                                                  *
    1105                    *                                                                        *
    1106                    **************************************************************************
    1107                    
    1108 00004250           PROMPT_PROC:
    1109 00004250     0d3f          CALLR   CHECKFREE
         00004260     00c6  
    1110 00004270     cb18          JRNZ    PPFREE                  ; BR = FREEPLAY
    1111                    
    1112 00004280     0d3f          CALLR   CRED_P
         00004290     0271  
    1113 000042a0     ca35          JRZ     PPNOCOIN                ; BR = NOT ENOUGH TO START 1 PLAYER
    1114                    
    1115 000042b0     4c01          MOVE    A0,A1                   ; STORE CREDS IN A1
    1116 000042c0     09c0          MOVI    ADJCSTRT,A0             ; CREDITS TO START
         000042d0     000b  
    1117 000042e0     0d5f          CALLA   GET_ADJ
         000042f0 00000000! 
    1118 00004310     4801          CMP     A0,A1
    1119 00004320     c82d          JRLO    PPNOCOIN                ; BR = NOT ENOUGH TO START
    1120 00004330     4c02          MOVE    A0,A2                   ; CREDS REQUIRED IN A2
    1121 00004340     4441          SUB     A2,A1                   ; GET US GOING HERE
    1122 00004350     1820          MOVK    1,A0                    ; HAVE ENOUGH FOR 1 PLAYER
    1123 00004360     4441          SUB     A2,A1
    1124 00004370     ce09          JRN     PPMESS                  ; BR = NOT ENOUGH FOR 2
    1125 00004380     1020          INC     A0
    1126 00004390     4441          SUB     A2,A1
    1127 000043a0     ce06          JRN     PPMESS                  ; BR = NOT ENOUGH FOR 3
    1128 000043b0     1020          INC     A0
    1129 000043c0     4441          SUB     A2,A1
    1130 000043d0     ce03          JRN     PPMESS                  ; BR = NOT ENOUGH FOR 4
    1131 000043e0     1020          INC     A0
    1132 000043f0     c001          JRUC    PPMESS                  ; CAN HAVE UP TO 4 PLAYERS
    1133                    
    1134 00004400           PPFREE
    1135 00004400     1880          MOVK    4,A0                    ; FREEPLAY IS MAX PLAYERS
    1136                    ;
    1137                    ;       A0      NUMBER OF PLAYERS WE ARE READY FOR ( 0 = NONE )
    1138                    ;
    1139 00004410           PPMESS
    1140 00004410     05a1          MOVE    @NPLAYERS,A1,W          ; GRAB GAME NUMBER OF PLAYERS
         00004420 00000000! 
    1141 00004440     1021          INC     A1
    1142 00004450     4820          CMP     A1,A0
    1143 00004460     c201          JRLS    PPMESS1                 ; BR = COOL NUMBER
TMS340 COFF Macro Assembler Version 6.10     Wed Apr 21 11:41:16 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   25

    1144 00004470     4c20          MOVE    A1,A0                   ; SET TO MAXIMUM NUMBER OF PLAYERS
    1145 00004480           PPMESS1
    1146 00004480     24a0          SLL     5,A0
    1147 00004490     0b20          ADDI    PROMPT_TAB,A0
         000044a0 00004c00' 
    1148 000044c0     8600          MOVE    *A0,A0,L                ; GET APPROPRIATE MESSAGE
    1149 000044d0     ca12          JRZ     PPNOCOIN
    1150 000044e0                   PUSH    A0
    1151 000044f0     09e8          MOVI    PROMPT_SETUP,A8
         00004500 00004910' 
    1152 00004520     0d5f          CALLA   LM_SETUP
         00004530 00000000! 
    1153 00004550                   PULL    A8                      ; PULL OUT THE MESSAGE STRING
    1154 00004570                   JSRP    PRINTF
    1155 000045e0     1820          MOVK    1,A0
    1156 000045f0     c001          JRUC    BLINKINIT
    1157 00004600           PPNOCOIN
    1158 00004600     5600          CLR     A0
    1159 00004610           BLINKINIT
    1160 00004610     b00d          MOVE    A0,*A13(PDATA),W        ; FLASH "PRESS START"
         00004620     0100  
    1161 00004630     09e0          MOVI    PROMPT_COLOR,A0
         00004640 02020101  
    1162 00004660     b20d          MOVE    A0,*A13(PDATA+10H),L    ; COLOR TO FLASH IT IN
         00004670     0110  
    1163                    
    1164 00004680           BLINKLOOP
    1165 00004680     09e8          MOVI    PROMPT_SETUP2,A8
         00004690 000049d0' 
    1166 000046b0     0d5f          CALLA   LM_SETUP
         000046c0 00000000! 
    1167 000046e0     b5a8          MOVE    *A13(PDATA),A8,W        ; GET STRING
         000046f0     0100  
    1168 00004700     24a8          SLL     5,A8
    1169 00004710     0b28          ADDI    PROMPT_MESSTAB,A8
         00004720 00004d80' 
    1170 00004740     8708          MOVE    *A8,A8,L
    1171 00004750                   JSRP    PRINTF
    1172 000047c0                   SLEEP   10H
    1173 00004800     09c0          MOVI    OID_PROMPT2,A0
         00004810     048a  
    1174 00004820     0d5f          CALLA   KILOBJ_ALL
         00004830 00000000! 
    1175 00004850                   SLEEP   10H
    1176 00004890     c0de          JRUC    BLINKLOOP
    1177                    
    1178          02020101  PROMPT_COLOR    EQU     COLOR_PWHITE
    1179                    
    1180 000048a0       2f  MESS_SLASH .STRING "/"
    1181 000048a8       00             .BYTE 0
    1182 000048b0                      .EVEN
    1183                    
    1184 000048b0       20  MESS_2SPACE .STRING " "
    1185 000048b8       00  MESS_NULL   .BYTE 0
    1186 000048c0                       .EVEN
TMS340 COFF Macro Assembler Version 6.10     Wed Apr 21 11:41:16 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   26

    1187                    
    1188              001f  CREDIT_Y .EQU   31
    1189                    
    1190                    
    1191 000048c0           MESS_CREDITS
    1192 000048c0       43           .STRING   "CREDITS "
    1193 00004900       00           .BYTE     0
    1194 00004910                    .EVEN
    1195                    
    1196                    
    1197 00004910           PROMPT_SETUP
    1198 00004910                    MESS_MAC  RD7FONT,SPACING20,196,CREDIT_Y+28,COLOR_PYELLOW,STRCNRMO,OID_PROMPT
    1199                    
    1200 000049d0           PROMPT_SETUP2
    1201 000049d0                    MESS_MAC  RD15FONT,SPACING20,200,CREDIT_Y+44,PROMPT_COLOR,STRCNRMO,OID_PROMPT2
    1202                    
    1203                    
    1204 00004a90           PROMPT_1
    1205 00004a90       52          .STRING "READY FOR 1 PLAYER.",0
    1206 00004b30                   .EVEN
    1207 00004b30           PROMPT_2
    1208 00004b30       52          .STRING "READY FOR 1 OR 2 PLAYERS.",0
    1209 00004c00                   .EVEN
    1210                    
    1211                    
    1212 00004c00           PROMPT_TAB
    1213 00004c00 00000000          .LONG   0,PROMPT_1, PROMPT_2, PROMPT_2, PROMPT_2
    1214                    
    1215                    
    1216 00004ca0           PROMPT_INSCOIN
    1217 00004ca0       49          .STRING "INSERT COIN.",0
    1218 00004d10                   .EVEN
    1219 00004d10           PROMPT_PRESSSTART
    1220 00004d10       50          .STRING "PRESS START.",0
    1221 00004d80                   .EVEN
    1222                    
    1223                    
    1224 00004d80           PROMPT_MESSTAB
    1225 00004d80 00004ca0'         .LONG   PROMPT_INSCOIN, PROMPT_PRESSSTART
    1226                    
    1227                    *
    1228                    *        NORMAL CREDITS SETUP STRING
    1229                    *
    1230                    
    1231                    
    1232 00004dc0           MESS_FREEP
    1233 00004dc0       46           .STRING   "FREE  PLAY"
    1234 00004e10       00           .BYTE     0
    1235 00004e20                    .EVEN
    1236                    
    1237                    
    1238                    **************************************************************************
    1239                    *                                                                        *
    1240                    *       COIN UTILITY ROUTINES                                            *
    1241                    *                                                                        *
TMS340 COFF Macro Assembler Version 6.10     Wed Apr 21 11:41:16 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   27

    1242                    **************************************************************************
    1243                    
    1244                    **************************************************************************
    1245                    *                                                                        *
    1246                    *       CRED_STRING                                                      *
    1247                    *                                                                        *
    1248                    *       RETURN A STRING TO JUST THE NUMBER OF CREDITS IN A8              *
    1249                    *                                                                        *
    1250                    *       ENTRY                                                            *
    1251                    *               NOTHING                                                  *
    1252                    *                                                                        *
    1253                    *       EXIT                                                             *
    1254                    *               A8      STRING POINTING TO CREDITS                       *
    1255                    *                                                                        *
    1256                    **************************************************************************
    1257                    
    1258 00004e20           CRED_STRING:
    1259 00004e20     098f          MMTM    SP,A0
         00004e30     8000  
    1260 00004e40     0d3f          CALLR   CRED_P                  ; GET CREDITS IN A0
         00004e50     01b5  
    1261 00004e60     4c08          MOVE    A0,A8
    1262 00004e70     0d5f          CALLA   HEXTOASC
         00004e80 00000000! 
    1263 00004ea0     09af          MMFM    SP,A0
         00004eb0     0001  
    1264 00004ec0     0960          RETS
    1265                    
    1266                    **************************************************************************
    1267                    *                                                                        *
    1268                    *       CHECKFREE                                                        *
    1269                    *                                                                        *
    1270                    *       CHECK TO SEE IF THE GAME IS IN FREEPLAY STATE                    *
    1271                    *                                                                        *
    1272                    *       ENTRY                                                            *
    1273                    *               NOTHING                                                  *
    1274                    *                                                                        *
    1275                    *       EXIT                                                             *
    1276                    *               NZ      = FREEPLAY                                       *
    1277                    *               Z       = NOT IN FREEPLAY                                *
    1278                    *                                                                        *
    1279                    **************************************************************************
    1280                    
    1281 00004ed0           CHECKFREE:
    1282                            .IF     FORCEFREE
    1283                            MOVK    1,A0
    1284                            JRUC    CFRET
    1285                            .ENDIF
    1286                    
    1287 00004ed0     09c0          MOVI    ADJFREPL,A0
         00004ee0     0014  
    1288 00004ef0     0d5f          CALLA   GET_ADJ
         00004f00 00000000! 
    1289 00004f20           CFRET
    1290 00004f20     4c00          MOVE    A0,A0
TMS340 COFF Macro Assembler Version 6.10     Wed Apr 21 11:41:16 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   28

    1291 00004f30     0960          RETS
    1292                    
    1293                    **************************************************************************
    1294                    *                                                                        *
    1295                    *       SCOIN                                                            *
    1296                    *                                                                        *
    1297                    *       PROCESS CALLED WHEN SERVICE COIN SWITCH TRIGGERED                *
    1298                    *                                                                        *
    1299                    *       ENTRY                                                            *
    1300                    *               NOTHING                                                  *
    1301                    *                                                                        *
    1302                    *       EXIT                                                             *
    1303                    *               NOTHING                                                  *
    1304                    *                                                                        *
    1305                    **************************************************************************
    1306 00004f40           SCOIN:
    1307 00004f40     05ae          MOVE    @COINS,A14,W
         00004f50 01860030  
    1308 00004f70     1e4e          BTST    13,A14
    1309 00004f80     ca00          JRZ     CRX                     ;BR=COIN DOOR INTERLOCK OPEN
         00004f90     00d7  
    1310                    
    1311 00004fa0     05a0          MOVE    @GAME_STATE,A0,W        ;DIAGNOSTICS?
         00004fb0 00000000! 
    1312 00004fd0     0b40          CMPI    INDIAG,A0
         00004fe0     ffbf  
    1313 00004ff0     ca00          JREQ    CRX                     ;THEN NO ACTION!
         00005000     00d0  
    1314                    
    1315 00005010     09e0          MOVI    PID_LC,A0               ;USE THIS FOR SERVICE
         00005020 00008f00  
    1316 00005040     b00d          MOVE    A0,*A13(PROCID),W       ;SET OUR ID (IN CASE TABLE IS WRONG)
         00005050     0020  
    1317                    
    1318 00005060     0d3f          CALLR   CK_MAX                  ;ARE WE AT MAXIMUM CREDITS?
         00005070     0160  
    1319 00005080     c907          JRHS    SCOIN_KURT_DAMAGE       ;BR = YES, SKIP THIS KURT BONER
    1320                    
    1321 00005090     09c0          MOVI    AUDPAIDC,A0
         000050a0     0007  
    1322 000050b0     09c1          MOVI    -1,A1
         000050c0     ffff  
    1323 000050d0     0d5f          CALLA   AUD                     ;OFFSET FOR SERVICE, GROSS!!
         000050e0 00000000! 
    1324                    
    1325 00005100           SCOIN_KURT_DAMAGE
    1326                    ****    MOVI    AUDSCOIN,A11
    1327                    ****    MOVK    1,A8
    1328                    
    1329 00005100                   AUDIT   AUDSCOIN
    1330 00005150     0d3f          CALLR   FETCH_REQ
         00005160     016d  
    1331 00005170     4c48          MOVE    A2,A8                   ;NEED THIS MANY FOR A CREDIT HERE
    1332                    
    1333 00005180     c000          JRUC    CGOPROC
TMS340 COFF Macro Assembler Version 6.10     Wed Apr 21 11:41:16 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   29

         00005190     0097  
    1334                    
    1335                    **************************************************************************
    1336                    *                                                                        *
    1337                    *       DBVCOIN                                                          *
    1338                    *                                                                        *
    1339                    *       PROCESS CALLED WHEN FOURTH COIN SWITCH TRIGGERED                 *
    1340                    *                                                                        *
    1341                    *       ENTRY                                                            *
    1342                    *               NOTHING                                                  *
    1343                    *                                                                        *
    1344                    *       EXIT                                                             *
    1345                    *               NOTHING                                                  *
    1346                    *                                                                        *
    1347                    **************************************************************************
    1348 000051a0           DBVCOIN
    1349 000051a0     09c8          MOVI    ADJDBVMULT,A8
         000051b0     001e  
    1350 000051c0     09ea          MOVI    DBV_FLAG,A10    ;fix this
         000051d0 00000020- 
    1351 000051f0     09cb          MOVI    AUD_DBV,A11
         00005200     0005  
    1352 00005210     c01f          JRUC    COIN_ROUTINE
    1353                    
    1354                    **************************************************************************
    1355                    *                                                                        *
    1356                    *       XCOIN                                                            *
    1357                    *                                                                        *
    1358                    *       PROCESS CALLED WHEN FOURTH COIN SWITCH TRIGGERED                 *
    1359                    *                                                                        *
    1360                    *       ENTRY                                                            *
    1361                    *               NOTHING                                                  *
    1362                    *                                                                        *
    1363                    *       EXIT                                                             *
    1364                    *               NOTHING                                                  *
    1365                    *                                                                        *
    1366                    **************************************************************************
    1367 00005220           XCOIN
    1368 00005220     09c8          MOVI    ADJ4MULT,A8
         00005230     0005  
    1369 00005240     09ea          MOVI    XC_FLAG,A10             ;FOURTH COIN FLAG
         00005250 00000018- 
    1370 00005270     09cb          MOVI    AUD4COIN,A11
         00005280     0004  
    1371 00005290     c017          JRUC    COIN_ROUTINE
    1372                    
    1373                    **************************************************************************
    1374                    *                                                                        *
    1375                    *       LCOIN                                                            *
    1376                    *                                                                        *
    1377                    *       PROCESS CALLED WHEN LEFT COIN SWITCH TRIGGERED                   *
    1378                    *                                                                        *
    1379                    *       ENTRY                                                            *
    1380                    *               NOTHING                                                  *
    1381                    *                                                                        *
TMS340 COFF Macro Assembler Version 6.10     Wed Apr 21 11:41:16 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   30

    1382                    *       EXIT                                                             *
    1383                    *               NOTHING                                                  *
    1384                    *                                                                        *
    1385                    **************************************************************************
    1386 000052a0           LCOIN
    1387 000052a0     09c8          MOVI    ADJLMULT,A8
         000052b0     0002  
    1388 000052c0     09ea          MOVI    LC_FLAG,A10             ;LEFT COIN FLAG
         000052d0 00000000- 
    1389 000052f0     09cb          MOVI    AUDLCOIN,A11
         00005300     0001  
    1390 00005310     c00f          JRUC    COIN_ROUTINE
    1391                    
    1392                    **************************************************************************
    1393                    *                                                                        *
    1394                    *       CCOIN                                                            *
    1395                    *                                                                        *
    1396                    *       PROCESS CALLED WHEN CENTER COIN SWITCH TRIGGERED                 *
    1397                    *                                                                        *
    1398                    *       ENTRY                                                            *
    1399                    *               NOTHING                                                  *
    1400                    *                                                                        *
    1401                    *       EXIT                                                             *
    1402                    *               NOTHING                                                  *
    1403                    *                                                                        *
    1404                    **************************************************************************
    1405 00005320           CCOIN
    1406 00005320     09c8          MOVI    ADJCMULT,A8
         00005330     0003  
    1407 00005340     09ea          MOVI    CC_FLAG,A10             ;CENTER COIN FLAG
         00005350 00000010- 
    1408 00005370     09cb          MOVI    AUDCCOIN,A11
         00005380     0002  
    1409 00005390     c007          JRUC    COIN_ROUTINE
    1410                    
    1411                    **************************************************************************
    1412                    *                                                                        *
    1413                    *       RCOIN                                                            *
    1414                    *                                                                        *
    1415                    *       PROCESS CALLED WHEN RIGHT COIN SWITCH TRIGGERED                  *
    1416                    *                                                                        *
    1417                    *       ENTRY                                                            *
    1418                    *               NOTHING                                                  *
    1419                    *                                                                        *
    1420                    *       EXIT                                                             *
    1421                    *               NOTHING                                                  *
    1422                    *                                                                        *
    1423                    **************************************************************************
    1424 000053a0           RCOIN
    1425 000053a0     09c8          MOVI    ADJRMULT,A8
         000053b0     0004  
    1426 000053c0     09ea          MOVI    RC_FLAG,A10             ;RIGHT COIN FLAG
         000053d0 00000008- 
    1427 000053f0     09cb          MOVI    AUDRCOIN,A11
         00005400     0003  
TMS340 COFF Macro Assembler Version 6.10     Wed Apr 21 11:41:16 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   31

    1428                    
    1429                    ;       FALL THROUGH
    1430                    
    1431                    **************************************************************************
    1432                    *                                                                        *
    1433                    *          COIN_ROUTINE                                                  *
    1434                    *                                                                        *
    1435                    *          THIS IS CALLED FROM EACH OF THE COIN SWITCHES WHEN            *
    1436                    *          MADE.  IT CONTAINS THE FOLLOWING:                             *
    1437                    *                                                                        *
    1438                    *                  A8 = MULTIPLIER FOR THAT SWITCH.                      *
    1439                    *                  A10 = BASE OF RAM POINTERS                            *
    1440                    *                  A11 = BASE AUDIT NUMBER                               *
    1441                    *                                                                        *
    1442                    **************************************************************************
    1443 00005410           COIN_ROUTINE
    1444 00005410     05a0          MOVE    @GAME_STATE,A0,W        ;DIAGNOSTICS?
         00005420 00000000! 
    1445 00005440     0b40          CMPI    INDIAG,A0
         00005450     ffbf  
    1446 00005460     ca00          JREQ    CRX                     ;THEN NO ACTION!
         00005470     0089  
    1447                    
    1448 00005480     4d00          MOVE    A8,A0                   ;MOVE MULTIPLIER ADJUST NUMBER TO A0
    1449 00005490     0d5f          CALLA   GET_ADJ                 ;FETCH IT
         000054a0 00000000! 
    1450 000054c0     4c08          MOVE    A0,A8                   ;AND BACK TO STATIC REG...ANY THERE?
    1451 000054d0     ca00          JRZ     CRX                     ;NOPE....DON'T WASTE THE TIME!
         000054e0     0082  
    1452                    
    1453 000054f0     0d3f          CALLR   SLAM_P                  ;SLAM AROUND?
         00005500     03d2  
    1454 00005510     cb7f          JRNZ    CRX                     ;THEN NO ACTION
    1455                    
    1456 00005520     09e0          MOVI    PID_LC,A0               ;ALL 3 SLOTS USE THIS ID NOW
         00005530 00008f00  
    1457 00005550     b00d          MOVE    A0,*A13(PROCID),W       ;SET OUR ID (IN CASE TABLE IS WRONG)
         00005560     0020  
    1458                    
    1459 00005570     8f40          MOVB    *A10,A0                 ;GET FLAG BYTE
    1460 00005580     cb78          JRNZ    CRX                     ;SOMEONE ELSE THERE...WE'RE A BOUNCE!
    1461                    *
    1462                    *       OK....THIS IS A NEW POSITIVE EDGE....START THE TIMING
    1463                    *       WHEELS   (A0 HAS A ZERO!)
    1464                    *
    1465 00005590     09c1          MOVI    PULSE_MAX,A1            ;MAXIMUM PULSE WIDTH
         000055a0     002b  
    1466 000055b0     ac2a          MOVB    A1,*A10(RUN_TIME)       ;COUNT IT DOWN HERE.
         000055c0     0028  
    1467                    
    1468 000055d0     09c1          MOVI    MIN_OPENS,A1            ;THIS MANY FRAMES OF OPEN TIL OPEN
         000055e0     0004  
    1469 000055f0     ac2a          MOVB    A1,*A10(OPENS_LEFT)
         00005600     0050  
    1470                    
TMS340 COFF Macro Assembler Version 6.10     Wed Apr 21 11:41:16 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   32

    1471 00005610     09c1          MOVI    COIN_SFLAG,A1
         00005620     0001  
    1472 00005630     8c2a          MOVB    A1,*A10                 ;TELL INTERRUPT TO START!
    1473                    
    1474 00005640     09c9          MOVI    100H,A9                 ;4 SECONDS MAX
         00005650     0100  
    1475 00005660           COIN_LOOP
    1476 00005660                   SLEEP   1                       ;NOW SLEEP TIGHTLY TILL WE GET SUCCESS OR FAIL
    1477 000056a0     8f40          MOVB    *A10,A0                 ;GET THE FLAGS
    1478 000056b0     1fa0          BTST    COIN_FAIL_BIT,A0        ;TOO LONG?
    1479 000056c0     ca05          JRZ     CK_SUCC
    1480                    *
    1481                    *       WE HAVE FAILURE...ACKNOWLEDGE IT
    1482                    *
    1483 000056d0     0ba0          ORI     COIN_ACK_VAL,A0         ;THIS ACKNOWLEDGES WE SAW IT.
         000056e0 00000008  
    1484 00005700     8c0a          MOVB    A0,*A10                 ;PUT IT BACK
    1485 00005710     c05f          JRUC    CRX                     ;AND GET OUT
    1486                    
    1487 00005720           CK_SUCC
    1488 00005720     1fc0          BTST    COIN_SUCC_BIT,A0
    1489 00005730     cb02          JRNZ    COIN_GO                 ;GOT IT!...CONTINUE!
    1490                    
    1491 00005740     3de9          DSJS    A9,COIN_LOOP            ;TIME OUT FOR SAFETY
    1492                    
    1493                    
    1494                            .IF     DEBUG                   ;THIS IS A STUPID PLACE TO BE
    1495                            JRUC    $
    1496                            .ENDIF
    1497                    
    1498 00005750     c05b          JRUC    CRX                     ;TIMED OUT....JUST DIE!
    1499                    
    1500 00005760           COIN_GO
    1501 00005760     5600          CLR     A0
    1502 00005770     8c0a          MOVB    A0,*A10                 ;CLEAR THE FLAGS BACK OUT!
    1503                    
    1504 00005780     0d3f          CALLR   SLAM_P                  ;SLAM?
         00005790     03a9  
    1505 000057a0     cb56          JRNZ    CRX                     ;THEN WE'RE OUT OF HERE
    1506                    *
    1507                    *        WE SURVIVED 1/2 SECOND WITHOUT A SLAM....ITS TIME TO CASH
    1508                    *        IN HIS STACHE.
    1509                    *
    1510                    ; add JAKE code from MK3 for TOTALIZER
    1511                    
    1512 000057b0     0d5f          calla   READ_DIP                ; DIP takes precedence
         000057c0 00000000! 
    1513 000057e0     0b80          andi    DPCOUNTER,a0            ; if set for 2 counters,
         000057f0 ffffffbf  
    1514 00005810     cb11          jrnz    two_counters            ; skip totalizing 
    1515                    
    1516 00005820     09e1          movi    CTRLEFT,a1              ; 
         00005830 000000a0- 
    1517 00005850     09c0          movi    ADJTOTALIZER,a0         ; do we want to totalize?
         00005860     001f  
TMS340 COFF Macro Assembler Version 6.10     Wed Apr 21 11:41:16 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   33

    1518 00005870     0d5f          calla   GET_ADJ                 ; if no, click the counter once
         00005880 00000000! 
    1519 000058a0     ca14          jrz     no_totalizer
    1520 000058b0     09c0          movi    ADJTOTALIZER,a0
         000058c0     001f  
    1521 000058d0     4160          add     a11,a0
    1522 000058e0     0d5f          calla   GET_ADJ                 ;number of clicks to make in a2
         000058f0 00000000! 
    1523 00005910     4c02          move    a0,a2
    1524 00005920     c00d          jruc    mech3b
    1525                    
    1526                    *multiple of least value coin mode
    1527                    ;normal_totalizer:
    1528                    ;       calla   GET_CSPT                ;point to coin table a6
    1529                    ;
    1530                    ;       addi    CS_LVAL,a6              ;add in offset to chute values
    1531                    ;       move    a11,a2
    1532                    ;       dec     a2                      ;get your click count
    1533                    ;       sll     4,a2                    ;offset for chute, word correct
    1534                    ;       add     a2,a6
    1535                    ;       move    *a6,a2                  ;get money value
    1536                    ;       move    a2,a2
    1537                    ;       jrz     mech10                  ;something illegal happened, just one
    1538                    
    1539 00005930           two_counters:   
    1540 00005930     09e1          movi    CTRLEFT,a1              ; assume left counter
         00005940 000000a0- 
    1541 00005960     0b4b          cmpi    AUDLCOIN,a11
         00005970     fffe  
    1542 00005980     ca06          jreq    no_totalizer
    1543 00005990     0b4b          cmpi    AUDRCOIN,a11
         000059a0     fffc  
    1544 000059b0     cb13          jrne    mech4
    1545 000059c0     09e1          movi    CTRRIGHT,a1             ; DIP must be set for 2 counters.
         000059d0 000000b0- 
    1546 000059f0           no_totalizer:
    1547 000059f0     1822          movk    1,a2
    1548 00005a00           mech3b
    1549 00005a00     8420          move    *a1,a0
    1550 00005a10     4040          add     a2,a0
    1551 00005a20     8001          move    a0,*a1
    1552                    
    1553 00005a30     0d3f          callr   COINCTR_P               ; check to see if process exists
         00005a40     faa9  
    1554 00005a50     cb09          jrne    mech4
    1555 00005a60                   CREATE  PID_COINCTR,COINCOUNTER
    1556 00005af0           mech4
    1557 00005af0     0d3f          CALLR   CHALK_COIN              ;STRIKE UP THE AUDIT(S)
         00005b00     002b  
    1558                    *
    1559 00005b10           CGOPROC
    1560 00005b10     4d08          MOVE    A8,A8                   ;NO CUNITS?
    1561 00005b20     ca1e          JRZ     CRX                     ;THEN NO MORE WORK TO DO.
    1562                    
    1563 00005b30     182e          MOVK    1,A14
TMS340 COFF Macro Assembler Version 6.10     Wed Apr 21 11:41:16 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   34

    1564 00005b40     058e          MOVE    A14,@NEWCRED,W          ;FLAG "NEW" CREDIT MESSAGE
         00005b50 00000110- 
    1565                    
    1566 00005b70     0d3f          CALLR   ADJUST_CREDITS          ;GIVE CREDIT FOR THE MONEY.
         00005b80     0033  
    1567                    ;XUNIT  CALLA   DEF_PAGE                ;POINT PAGE AWAY!
    1568                    
    1569 00005b90     05a1          MOVE    @SOUNDSUP,A1,W
         00005ba0 00000000! 
    1570 00005bc0                   SOUNDON
    1571                    ;       SOUND1  COINSND
    1572 00005c00     0581          MOVE    A1,@SOUNDSUP,W
         00005c10 00000000! 
    1573                    
    1574 00005c30     05a0          MOVE    @GAME_STATE,A0,W        ;CHECK FOR ATTRACT MODE
         00005c40 00000000! 
    1575 00005c60     0b40          CMPI    INAMODE,A0
         00005c70     ffcf  
    1576 00005c80     cb06          JRNZ    CRCALL
    1577                    
    1578 00005c90     09c0          MOVI    PID_IND,A0
         00005ca0     000c  
    1579 00005cb0     b00d          MOVE    A0,*A13(PROCID),W       ;MAKE ME KILLABLE
         00005cc0     0020  
    1580 00005cd0     c000          JRUC    CREDIT_JUMP
         00005ce0     fa86  
    1581 00005cf0           CRCALL
    1582 00005cf0     0d3f          CALLR   CREDIT_SOUND
         00005d00     0003  
    1583                    
    1584                    ;       CALLR   GET_CSTR                ;GET CREDIT STRING
    1585                    ;       CALLA   G_CRED                  ;CALL GEORGE
    1586 00005d10           CRX
    1587 00005d10     c080          JAUC    SUCIDE
         00005d20 00000000! 
    1588                    
    1589 00005d40           CREDIT_SOUND
    1590 00005d40                   PUSH    A4
    1591 00005d50     09c4          MOVI    S_CREDIT,A4
         00005d60     010c  
    1592 00005d70     0d5f          CALLA   do_sound
         00005d80 00000000! 
    1593 00005da0                   PULLQ   A4
    1594 00005db0     0960          RETS
    1595                    
    1596                    **************************************************************************
    1597                    *                                                                        *
    1598                    *          CHALK_COIN                                                    *
    1599                    *                                                                        *
    1600                    *          A11 contains the base audit number.  Chalk the audit for      *
    1601                    *          1 more coin hit there!                                        *
    1602                    *                                                                        *
    1603                    *          3 away from the base is the "door-closed" counter             *
    1604                    *                                                                        *
    1605                    *          3 away from that is the "sub-total".                          *
TMS340 COFF Macro Assembler Version 6.10     Wed Apr 21 11:41:16 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   35

    1606                    *                                                                        *
    1607                    *          3 away from that is the "door-closed" sub-total.              *
    1608                    *                                                                        *
    1609                    *                                                                        *
    1610                    **************************************************************************
    1611 00005dc0           CHALK_COIN:
    1612 00005dc0     098f          MMTM    SP,A0
         00005dd0     8000  
    1613 00005de0     4d60          MOVE    A11,A0
    1614 00005df0     0d3f          CALLR   CHALK_FOR_A0    ;CHALK RELEVANT COUNTERS
         00005e00     0003  
    1615 00005e10     09af          MMFM    SP,A0
         00005e20     0001  
    1616 00005e30     0960          RETS
    1617                    
    1618                    **************************************************************************
    1619                    *                                                                        *
    1620                    *          CHALK_FOR_A0                                                  *
    1621                    *                                                                        *
    1622                    *          THIS IS CALLED TO CHALK THE AUDITS FOR A COIN SWITCH.         *
    1623                    *          A0 HAS THE BASE AUDIT FOR THE COIN SWITCH.                    *
    1624                    *                                                                        *
    1625                    **************************************************************************
    1626 00005e40           CHALK_FOR_A0
    1627 00005e40     098f          MMTM    SP,A0
         00005e50     8000  
    1628 00005e60     0d5f          CALLA   AUD1            ;CHALK THE DIRECT AUDIT
         00005e70 00000000! 
    1629 00005e90     09af          MMFM    SP,A0
         00005ea0     0001  
    1630 00005eb0     0960          RETS
    1631                    
    1632                    **************************************************************************
    1633                    *                                                                        *
    1634                    *       ADJUST_CREDITS                                                   *
    1635                    *                                                                        *
    1636                    *       TAKES A VALID COIN SWITCH HIT AND COUNTS IT TOWARDS CREDITS      *
    1637                    *                                                                        *
    1638                    *       ENTRY                                                            *
    1639                    *               A8      CHUTE MULTIPLIER                                 *
    1640                    *                                                                        *
    1641                    *       EXIT                                                             *
    1642                    *               NOTHING                                                  *
    1643                    *                                                                        *
    1644                    **************************************************************************
    1645                    
    1646 00005ec0           ADJUST_CREDITS
    1647 00005ec0     098f          MMTM    SP,A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11
         00005ed0     fff0  
    1648 00005ee0     0d3f          CALLR   CK_MAX          ;ARE WE AT MAXIMUM CREDITS?
         00005ef0     0078  
    1649 00005f00     c951          JRHS    ADCRXX          ;YEP.....DON'T ROCK THE BOAT!
    1650                    *
    1651 00005f10     0d3f          CALLR   CCCC            ;VALIDATE THE CURRENT TOTALS (OR CLEAR!)
         00005f20     0113  
TMS340 COFF Macro Assembler Version 6.10     Wed Apr 21 11:41:16 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   36

    1652                    
    1653 00005f30     0d3f          CALLR   FETCH_REQ       ;GET THE REQUIRED FOR CREDIT, BONUS AND MINIMUM
         00005f40     008f  
    1654                    *
    1655                    *        A2 = REQUIRED FOR CREDIT
    1656                    *        A3 = FOR BONUS
    1657                    *        A4 = MINIMUM
    1658                    *
    1659 00005f50     0d5f          CALLA   CMOSUNLOCK
         00005f60 00000000! 
    1660 00005f80     0d3f          CALLR   ADD_TO_CUNITS   ;ADD TO OUR CUNITS
         00005f90     00ae  
    1661 00005fa0     4c63          MOVE    A3,A3           ;BONUS EFFECTIVE?
    1662 00005fb0     ca02          JRZ     NO_BUNITS       ;NOPE....DON'T RUN UP THE COUNTER!
    1663                    
    1664 00005fc0     0d3f          CALLR   ADD_TO_BUNITS   ;ADD TO BONUS UNITS
         00005fd0     00ca  
    1665                    
    1666 00005fe0           NO_BUNITS
    1667 00005fe0     4c84          MOVE    A4,A4           ;MINIMUM REQUIRED?
    1668 00005ff0     ca10          JRZ     NO_MINIMUM      ;NOPE.....LEAVE ALONE.
    1669                    
    1670 00006000     09e7          MOVI    MINUNITS,A7     ;POINT AT MINIMUM
         00006010 014025d0  
    1671 00006030     0d5f          CALLA   RC_WORD         ;GET THE AMOUNT ACCUMULATED
         00006040 00000000! 
    1672 00006060     4100          ADD     A8,A0           ;ADD AMOUNT RECEIVED
    1673 00006070     0d5f          CALLA   WC_WORD         ;WRITE THE MINUNITS BACK IN CASE NOT ENOUGH.
         00006080 00000000! 
    1674                    
    1675 000060a0     4480          SUB     A4,A0           ;DO WE HAVE ENOUGH TO ACT?
    1676 000060b0     c831          JRLO    ADCRX           ;NOPE....NO CREDITS YET!
    1677                    
    1678 000060c0     5600          CLR     A0              ;CLEAR OUT MINIMUM FOR NEXT SHOT!
    1679 000060d0     0d5f          CALLA   WC_WORD         ;REMOVE ACCUMULATED MINIMUM.
         000060e0 00000000! 
    1680                    
    1681 00006100           NO_MINIMUM
    1682 00006100     56c6          CLR     A6              ;COUNT ACCUMULATED CREDITS IN A6
    1683 00006110     574a          CLR     A10             ;IN CASE NO BONUS!
    1684                    
    1685 00006120     5708          CLR     A8
    1686 00006130     09e7          MOVI    BUNITS,A7
         00006140 014025b0  
    1687 00006160     0d5f          CALLA   RC_WORD         ;GET THE NUMBER OF BUNITS
         00006170 00000000! 
    1688 00006190     4c09          MOVE    A0,A9           ;INTO A9
    1689                    
    1690 000061a0     4c63          MOVE    A3,A3           ;DON'T DIVIDE BY ZERO!
    1691 000061b0     ca07          JRZ     NO_BU_BU
    1692 000061c0     5a68          DIVU    A3,A8           ;DIVIDE BUNITS BY NUMBER NEEDED FOR BONUS
    1693                    
    1694 000061d0     4d20          MOVE    A9,A0           ;WRITE REMAINDER BACK
    1695 000061e0     0d5f          CALLA   WC_WORD
         000061f0 00000000! 
TMS340 COFF Macro Assembler Version 6.10     Wed Apr 21 11:41:16 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   37

    1696                    
    1697 00006210     4d06          MOVE    A8,A6           ;NUMBER OF BONUS CREDITS EARNED.
    1698 00006220     4d0a          MOVE    A8,A10          ;REMEMBER IF ANY BONUS CREDITS WERE EARNED!
    1699                    
    1700 00006230           NO_BU_BU
    1701 00006230     5708          CLR     A8
    1702 00006240     0d3f          CALLR   GET_CUNITS      ;READ IN THE CUNITS
         00006250     008c  
    1703 00006260     4c09          MOVE    A0,A9
    1704                    
    1705 00006270     4c42          MOVE    A2,A2           ;DON'T DIVIDE BY ZERO.
    1706 00006280     ca05          JRZ     NO_CR
    1707                    
    1708 00006290     5a48          DIVU    A2,A8           ;GET CREDITS!
    1709 000062a0     4d20          MOVE    A9,A0           ;REMAINDER IS LEFTOVER CUNITS
    1710 000062b0     0d3f          CALLR   PUT_CUNITS
         000062c0     0090  
    1711 000062d0     4106          ADD     A8,A6           ;A6 HAS WHAT WE'VE WON!
    1712                    
    1713 000062e0     4cc1  NO_CR   MOVE    A6,A1
    1714 000062f0     09c0          MOVI    AUDPAIDC,A0
         00006300     0007  
    1715 00006310     0d5f          CALLA   AUD             ;CHALK UP THE EARNED CREDITS!
         00006320 00000000! 
    1716                    
    1717 00006340     0d3f          CALLR   GET_CREDITS
         00006350     0067  
    1718 00006360     40c0          ADD     A6,A0           ;ADD IN THE NEW ONES.
    1719 00006370     0d3f          CALLR   PUT_CREDITS     ;NOW STORE EM BACK (ENFORCE MAX)
         00006380     000c  
    1720                    
    1721 00006390     4d4a          MOVE    A10,A10         ;WAS THE BONUS EARNED?
    1722 000063a0     ca02          JRZ     ADCRX           ;NOPE...EXIT!
    1723                    *
    1724                    *        WHEN BONUS EARNED...WE START THE WHOLE SYSTEM OVER!
    1725                    *
    1726 000063b0     0d3f          CALLR   CLEAR_UNITS
         000063c0     0035  
    1727                    
    1728 000063d0           ADCRX
    1729 000063d0     0d3f          CALLR   FORM_COIN_CKSUM_AND_STORE
         000063e0     00b3  
    1730 000063f0     0d5f          CALLA   CMOSLOCK
         00006400 00000000! 
    1731 00006420           ADCRXX
    1732 00006420     09af          MMFM    SP,A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11
         00006430     0fff  
    1733 00006440     0960          RETS
    1734                    
    1735                    **************************************************************************
    1736                    *                                                                        *
    1737                    *       PUT_CREDITS                                                      *
    1738                    *                                                                        *
    1739                    *       STORE THE CREDIT COUNT IN A0 TO CMOS -- ENFORCE MAX CREDITS      *
    1740                    *                                                                        *
TMS340 COFF Macro Assembler Version 6.10     Wed Apr 21 11:41:16 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   38

    1741                    *       ENTRY                                                            *
    1742                    *               A0      CREDIT COUNT                                     *
    1743                    *                                                                        *
    1744                    *       EXIT                                                             *
    1745                    *               NOTHING                                                  *
    1746                    *                                                                        *
    1747                    **************************************************************************
    1748                    
    1749 00006450           PUT_CREDITS
    1750 00006450     098f          MMTM    SP,A0,A6,A7
         00006460     8300  
    1751 00006470     0d3f          CALLR   GET_MAX         ;GET MAX CREDS IN A1....BE ON COIN PAGE
         00006480     0014  
    1752 00006490     4820          CMP     A1,A0           ;SEE HOW WE STACK UP.
    1753 000064a0     c803          JRLO    USE_A0          ;WE'RE LOWER...JUST STORE.
    1754                    *
    1755                    *        WE'RE AT (OR OVER) MAXIMUM CREDITS
    1756                    *
    1757 000064b0     0d3f          CALLR   CLEAR_UNITS     ;CLEAR OUT THE UNIT FRACTIONS.
         000064c0     0025  
    1758 000064d0     4c20          MOVE    A1,A0           ;USE MAXIMUM
    1759                    
    1760 000064e0     09e7  USE_A0  MOVI    CREDITS,A7
         000064f0 01402580  
    1761 00006510     0d5f          CALLA   CMOSUNLOCK
         00006520 00000000! 
    1762 00006540     0d5f          CALLA   WC_BYTE         ;WRITE THE CREDITS OUT.
         00006550 00000000! 
    1763 00006570     0d5f          CALLA   CMOSLOCK
         00006580 00000000! 
    1764 000065a0     09af          MMFM    SP,A0,A6,A7
         000065b0     00c1  
    1765 000065c0     0960          RETS
    1766                    
    1767                    **************************************************************************
    1768                    *                                                                        *
    1769                    *       GET_MAX                                                          *
    1770                    *                                                                        *
    1771                    *       GET MAXIMUM CREDITS IN A1 ( LEAVES YOU ON COIN PAGE )            *
    1772                    *                                                                        *
    1773                    *       ENTRY                                                            *
    1774                    *               NOTHING                                                  *
    1775                    *                                                                        *
    1776                    *       EXIT                                                             *
    1777                    *               A1      MAXIMUM CREDITS                                  *
    1778                    *                                                                        *
    1779                    **************************************************************************
    1780                    
    1781 000065d0           GET_MAX
    1782 000065d0     098f          MMTM    SP,A0
         000065e0     8000  
    1783 000065f0     09c0          MOVI    ADJMAXC,A0
         00006600     0013  
    1784 00006610     0d5f          CALLA   GET_ADJ    ;FETCH MAXIMUM CREDITS (PUT US ON COIN PAGE)
         00006620 00000000! 
TMS340 COFF Macro Assembler Version 6.10     Wed Apr 21 11:41:16 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   39

    1785 00006640     4c01          MOVE    A0,A1
    1786 00006650     09af          MMFM    SP,A0
         00006660     0001  
    1787 00006670     0960          RETS
    1788                    
    1789                    **************************************************************************
    1790                    *                                                                        *
    1791                    *       CK_MAX                                                           *
    1792                    *                                                                        *
    1793                    *       CALED TO SEE IF WE ARE AT MAXIMUM CREDITS                        *
    1794                    *                                                                        *
    1795                    *       ENTRY                                                            *
    1796                    *               NOTHING                                                  *
    1797                    *                                                                        *
    1798                    *       EXIT                                                             *
    1799                    *               .HS.    AT MAXIMUM CREDITS                               *
    1800                    *                                                                        *
    1801                    **************************************************************************
    1802                    
    1803 00006680     098f  CK_MAX  MMTM    SP,A0,A1
         00006690     c000  
    1804 000066a0     0d3f          CALLR   GET_MAX              ;GET MAXIMUM IN A1
         000066b0     fff1  
    1805 000066c0     0d3f          CALLR   CRED_P               ;GET CREDITS IN A0 (AND FLIP PAGE AWAY)
         000066d0     002d  
    1806 000066e0     4820          CMP     A1,A0                ;JRHS FOR MAXIMUM CREDITS!
    1807 000066f0     09af          MMFM    SP,A0,A1
         00006700     0003  
    1808 00006710     0960          RETS
    1809                    
    1810                    **************************************************************************
    1811                    *                                                                        *
    1812                    *       CLEAR_UNITS                                                      *
    1813                    *                                                                        *
    1814                    *       CLEAR OUT ANY FRACTIONS OF A UNIT IN CMOS                        *
    1815                    *                                                                        *
    1816                    *       ENTRY                                                            *
    1817                    *               NOTHING                                                  *
    1818                    *                                                                        *
    1819                    *       EXIT                                                             *
    1820                    *               NOTHING                                                  *
    1821                    *                                                                        *
    1822                    **************************************************************************
    1823                    
    1824 00006720           CLEAR_UNITS
    1825 00006720     098f          MMTM    SP,A0,A7
         00006730     8100  
    1826 00006740     5600          CLR     A0
    1827 00006750     09e7          MOVI    CUNITS,A7       ;3 CONSECUTIVE WORDS OF CMOS
         00006760 01402590  
    1828 00006780     0d5f          CALLA   WC_WORDI
         00006790 00000000! 
    1829 000067b0     0d5f          CALLA   WC_WORDI
         000067c0 00000000! 
    1830 000067e0     0d5f          CALLA   WC_WORD
TMS340 COFF Macro Assembler Version 6.10     Wed Apr 21 11:41:16 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   40

         000067f0 00000000! 
    1831 00006810     09af          MMFM    SP,A0,A7
         00006820     0081  
    1832 00006830     0960          RETS
    1833                    
    1834                    **************************************************************************
    1835                    *                                                                        *
    1836                    *       FETCH_REQ                                                        *
    1837                    *                                                                        *
    1838                    *       SNAG THE NUMBER OF UNITS REQUIRED FOR CREDIT, BONUS AND          *
    1839                    *       MINIMUM                                                          *
    1840                    *                                                                        *
    1841                    *       ENTRY                                                            *
    1842                    *               NOTHING                                                  *
    1843                    *                                                                        *
    1844                    *       EXIT                                                             *
    1845                    *               A2      REQUIRED FOR CREDITS                             *
    1846                    *               A3      REQUIRED FOR BONUS                               *
    1847                    *               A4      MINIMUM                                          *
    1848                    *                                                                        *
    1849                    **************************************************************************
    1850                    
    1851 00006840           FETCH_REQ
    1852 00006840     098f          MMTM    SP,A0
         00006850     8000  
    1853 00006860     09c0          MOVI    ADJCUNIT,A0
         00006870     0006  
    1854 00006880     0d5f          CALLA   GET_ADJ
         00006890 00000000! 
    1855 000068b0     4c02          MOVE    A0,A2
    1856                    
    1857 000068c0     09c0          MOVI    ADJBUNIT,A0
         000068d0     0007  
    1858 000068e0     0d5f          CALLA   GET_ADJ
         000068f0 00000000! 
    1859 00006910     4c03          MOVE    A0,A3
    1860                    
    1861 00006920     09c0          MOVI    ADJMUNIT,A0
         00006930     0008  
    1862 00006940     0d5f          CALLA   GET_ADJ
         00006950 00000000! 
    1863 00006970     4c04          MOVE    A0,A4
    1864 00006980     09af          MMFM    SP,A0
         00006990     0001  
    1865 000069a0     0960          RETS
    1866                    
    1867                    
    1868                    **************************************************************************
    1869                    *                                                                        *
    1870                    *       CRED_P                                                           *
    1871                    *                                                                        *
    1872                    *       RETURN NUMBER OF CREDITS IN A0.  ALSO CLEARS Z BIT IF            *
    1873                    *       CREDITS EXIST OR IN FREE PLAY                                    *
    1874                    *                                                                        *
    1875                    *       ENTRY                                                            *
TMS340 COFF Macro Assembler Version 6.10     Wed Apr 21 11:41:16 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   41

    1876                    *               NOTHING                                                  *
    1877                    *                                                                        *
    1878                    *       EXIT                                                             *
    1879                    *               A0      NUMBER OF CREDITS                                *
    1880                    *               .NZ.    CREDITS OR FREEPLAY                              *
    1881                    *                                                                        *
    1882                    **************************************************************************
    1883                    
    1884 000069b0           CRED_P:
    1885 000069b0     0d3f          CALLR   CCCC                    ; CHECKSUM COIN CREDITS
         000069c0     0069  
    1886                    
    1887 000069d0           GET_CREDITS
    1888 000069d0     098f          MMTM    SP,A7
         000069e0     0100  
    1889                    ;XUNIT  CALLR   COIN_PAG                ; COIN PAGE
    1890 000069f0     09e7          MOVI    CREDITS,A7              ; WANT NUMBER OF CREDITS
         00006a00 01402580  
    1891 00006a20     0d5f          CALLA   RC_BYTE         ;READ CURRENT CREDITS
         00006a30 00000000! 
    1892                    ;        JRNZ    GC1             ;WE GOT SOME!
    1893                    
    1894                    ;        MOVI    ADJFREPL,A0
    1895                    ;        CALLA   GET_ADJ         ;SEE IF FREEPLAY......(Z BIT CLEAR IF SO!)
    1896                    
    1897 00006a50           GC1:
    1898                    ;XUNIT  CALLA   DEF_PAGE        ;FLIP CMOS AWAY
    1899 00006a50     09af          MMFM    SP,A7
         00006a60     0080  
    1900 00006a70     0960          RETS
    1901                    
    1902                    **************************************************************************
    1903                    *                                                                        *
    1904                    *       ADD_TO_CUNITS                                                    *
    1905                    *                                                                        *
    1906                    *       ADD A VALUE TO THE CREDIT UNITS                                  *
    1907                    *                                                                        *
    1908                    *       ENTRY                                                            *
    1909                    *               A8      NUMBER OF CUNITS TO ADD                          *
    1910                    *                                                                        *
    1911                    *       EXIT                                                             *
    1912                    *               NOTHING                                                  *
    1913                    *                                                                        *
    1914                    **************************************************************************
    1915                    
    1916 00006a80           ADD_TO_CUNITS
    1917 00006a80     098f          MMTM    SP,A0,A7
         00006a90     8100  
    1918 00006aa0     0d3f          CALLR   GET_CUNITS
         00006ab0     0006  
    1919 00006ac0     4100          ADD     A8,A0
    1920 00006ad0     0d3f          CALLR   PUT_CUNITS
         00006ae0     000e  
    1921 00006af0     09af          MMFM    SP,A0,A7
         00006b00     0081  
TMS340 COFF Macro Assembler Version 6.10     Wed Apr 21 11:41:16 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   42

    1922 00006b10     0960          RETS
    1923                    
    1924                    **************************************************************************
    1925                    *                                                                        *
    1926                    *       GET_CUNITS                                                       *
    1927                    *                                                                        *
    1928                    *       GET THE NUMBER OF CREDIT UNITS HANGING AROUND                    *
    1929                    *                                                                        *
    1930                    *       ENTRY                                                            *
    1931                    *               NOTHING                                                  *
    1932                    *                                                                        *
    1933                    *       EXIT                                                             *
    1934                    *               A0      NUMBER OF CUNITS                                 *
    1935                    *                                                                        *
    1936                    **************************************************************************
    1937                    
    1938 00006b20           GET_CUNITS
    1939 00006b20     098f          MMTM    SP,A7
         00006b30     0100  
    1940 00006b40     09e7          MOVI    CUNITS,A7
         00006b50 01402590  
    1941 00006b70     0d5f          CALLA   RC_WORD
         00006b80 00000000! 
    1942 00006ba0     09af          MMFM    SP,A7
         00006bb0     0080  
    1943 00006bc0     0960          RETS
    1944                    
    1945                    **************************************************************************
    1946                    *                                                                        *
    1947                    *       PUT_CUNITS                                                       *
    1948                    *                                                                        *
    1949                    *       PUT THE NUMBER OF CREDIT UNITS IN A0 OUT TO CMOS                 *
    1950                    *                                                                        *
    1951                    *       ENTRY                                                            *
    1952                    *               A0      NUMBER OF CUNITS                                 *
    1953                    *                                                                        *
    1954                    *       EXIT                                                             *
    1955                    *               NOTHING                                                  *
    1956                    *                                                                        *
    1957                    **************************************************************************
    1958                    
    1959 00006bd0           PUT_CUNITS
    1960 00006bd0     098f          MMTM    SP,A7
         00006be0     0100  
    1961 00006bf0     09e7          MOVI    CUNITS,A7
         00006c00 01402590  
    1962 00006c20     0d5f          CALLA   WC_WORD
         00006c30 00000000! 
    1963 00006c50     09af          MMFM    SP,A7
         00006c60     0080  
    1964 00006c70     0960          RETS
    1965                    
    1966                    **************************************************************************
    1967                    *                                                                        *
    1968                    *       ADD_TO_BUNITS                                                    *
TMS340 COFF Macro Assembler Version 6.10     Wed Apr 21 11:41:16 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   43

    1969                    *                                                                        *
    1970                    *       ADD A NUMBER OF BONUS UNITS TO THE BONUS COUNTER                 *
    1971                    *                                                                        *
    1972                    *       ENTRY                                                            *
    1973                    *               A8      NUMBER OF BONUS UNITS TO ADD                     *
    1974                    *                                                                        *
    1975                    *       EXIT                                                             *
    1976                    *               NOTHING                                                  *
    1977                    *                                                                        *
    1978                    **************************************************************************
    1979                    
    1980 00006c80           ADD_TO_BUNITS
    1981 00006c80     098f          MMTM    SP,A7,A0
         00006c90     8100  
    1982 00006ca0     09e7          MOVI    BUNITS,A7
         00006cb0 014025b0  
    1983 00006cd0     0d5f          CALLA   RC_WORD
         00006ce0 00000000! 
    1984 00006d00     4100          ADD     A8,A0
    1985 00006d10     0d5f          CALLA   WC_WORD
         00006d20 00000000! 
    1986 00006d40     09af          MMFM    SP,A7,A0
         00006d50     0081  
    1987 00006d60     0960          RETS
    1988                    
    1989                    **************************************************************************
    1990                    *                                                                        *
    1991                    *       FORM_COIN_CKSUM                                                  *
    1992                    *                                                                        *
    1993                    *       THIS ROUTINE IS CALLED TO FORM THE COINS/CREDITS CHECKSUM.       *
    1994                    *       THE CHECKSUM IS RETURNED IN A1                                   *
    1995                    *                                                                        *
    1996                    *       ENTRY                                                            *
    1997                    *               NOTHING                                                  *
    1998                    *                                                                        *
    1999                    *       EXIT                                                             *
    2000                    *               A1      CHECKSUM                                         *
    2001                    *               .EQ.    MATCHES WHAT'S THERE                             *
    2002                    *               .NE.    IT DON'T MATCH, DUDE                             *
    2003                    *                                                                        *
    2004                    **************************************************************************
    2005                    
    2006 00006d70           FORM_COIN_CKSUM:
    2007 00006d70     098f          MMTM    SP,A0,A7,A2
         00006d80     a100  
    2008                    ;XUNIT  CALLR   COIN_PAG                 ;MAKE SURE WE'RE ON THE RIGHT PAGE.
    2009 00006d90     09e7          MOVI    COIN_CKSUM_START,A7       ;POINT AT FIRST BYTE TO CHECK
         00006da0 01402580  
    2010 00006dc0     09c2          MOVI    COIN_CKSUM_BYTES,A2
         00006dd0     0007  
    2011 00006de0     5621          CLR     A1                        ;CLEAR OUT CHECKSUM
    2012                    
    2013 00006df0     0d5f  CN_SUM  CALLA   RC_BYTEI                  ;FETCH A BYTE IN A0
         00006e00 00000000! 
    2014 00006e20     4001          ADD     A0,A1                     ;ADD TO SUM
TMS340 COFF Macro Assembler Version 6.10     Wed Apr 21 11:41:16 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   44

    2015 00006e30     3ca2          DSJS    A2,CN_SUM                 ;TILL WE HAVE EM ALL
    2016                    
    2017 00006e40     03e1          NOT     A1                        ;COMPLEMENT OF COURSE
    2018 00006e50     0b81          ANDI    BYTE_MASK,A1              ;AND KEEP THE BYTE
         00006e60 ffffff00  
    2019                    
    2020 00006e80     09e7          MOVI    COIN_CKSUM,A7
         00006e90 014025f0  
    2021 00006eb0     0d5f          CALLA   RC_BYTE                   ;FETCH THE CURRENT CKSUM
         00006ec0 00000000! 
    2022 00006ee0     4801          CMP     A0,A1                     ;COMPARE TO THIS
    2023 00006ef0     09af          MMFM    SP,A0,A7,A2
         00006f00     0085  
    2024 00006f10     0960          RETS
    2025                    
    2026                    **************************************************************************
    2027                    *                                                                        *
    2028                    *       FORM_COIN_CKSUM_AND_STORE                                        *
    2029                    *                                                                        *
    2030                    *       CHECKSUM THE COINS AND THEN STORE IT OUT                         *
    2031                    *                                                                        *
    2032                    *       ENTRY                                                            *
    2033                    *               NOTHING                                                  *
    2034                    *                                                                        *
    2035                    *       EXIT                                                             *
    2036                    *               NOTHING                                                  *
    2037                    *                                                                        *
    2038                    **************************************************************************
    2039                    
    2040 00006f20           FORM_COIN_CKSUM_AND_STORE
    2041 00006f20     098f          MMTM    SP,A1,A7,A0
         00006f30     c100  
    2042 00006f40     0d3f          CALLR   FORM_COIN_CKSUM
         00006f50     ffe1  
    2043 00006f60     09e7          MOVI    COIN_CKSUM,A7
         00006f70 014025f0  
    2044 00006f90     4c20          MOVE    A1,A0
    2045 00006fa0     0d5f          CALLA   CMOSUNLOCK
         00006fb0 00000000! 
    2046 00006fd0     0d5f          CALLA   WC_BYTE
         00006fe0 00000000! 
    2047 00007000     0d5f          CALLA   CMOSLOCK
         00007010 00000000! 
    2048 00007030     09af          MMFM    SP,A1,A7,A0
         00007040     0083  
    2049 00007050     0960          RETS
    2050                    
    2051                    **************************************************************************
    2052                    *                                                                        *
    2053                    *       CCCC                                                             *
    2054                    *                                                                        *
    2055                    *       CHECK COIN AND CLEAR ON BAD CHECKSUM -- BASICALLY JUST           *
    2056                    *       CHECKS OUT THE COIN CHECKSUMS AND IF THEY ARE WRONG IT           *
    2057                    *       CLEARS THEM OUT                                                  *
    2058                    *                                                                        *
TMS340 COFF Macro Assembler Version 6.10     Wed Apr 21 11:41:16 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   45

    2059                    *       ENTRY                                                            *
    2060                    *               NOTHING                                                  *
    2061                    *                                                                        *
    2062                    *       EXIT                                                             *
    2063                    *               NOTHING                                                  *
    2064                    *                                                                        *
    2065                    **************************************************************************
    2066                    
    2067 00007060           CCCC
    2068 00007060     098f          MMTM    SP,A0,A1,A7,A2
         00007070     e100  
    2069 00007080     0d3f          CALLR   FORM_COIN_CKSUM      ;THIS SETS US TO THE COINAGE PAGE!
         00007090     ffcd  
    2070 000070a0     ca12          JRZ     CCCCX                ;ALL IS OK!
    2071                    
    2072 000070b0     0d5f          calla   CMOSUNLOCK
         000070c0 00000000! 
    2073 000070e0     09e7          MOVI    COIN_CKSUM_START,A7  ;POINT AT FIRST BYTE
         000070f0 01402580  
    2074 00007110     09c2          MOVI    COIN_CKSUM_BYTES,A2  ;NUMBER OF BYTES TO CLEAR
         00007120     0007  
    2075 00007130     5600          CLR     A0
    2076                    
    2077 00007140           CCCC_LOOP
    2078 00007140     0d5f          CALLA   WC_BYTEI             ;WRITE A BYTE
         00007150 00000000! 
    2079 00007170     3c82          DSJS    A2,CCCC_LOOP         ;UNTIL THEY'RE DONE!
    2080                    
    2081 00007180     0d3f          CALLR   FORM_COIN_CKSUM_AND_STORE  ;NOW MAKE THE CKSUM VALID
         00007190     ffd8  
    2082 000071a0     0d5f          calla   CMOSLOCK
         000071b0 00000000! 
    2083                    
    2084 000071d0     09af  CCCCX   MMFM    SP,A0,A1,A7,A2
         000071e0     0087  
    2085 000071f0     0960          RETS
    2086                    
    2087                    
    2088                    **************************************************************************
    2089                    *                                                                        *
    2090                    *       NO_CREDS                                                         *
    2091                    *                                                                        *
    2092                    *       THIS IS CALLED TO REMOVE CREDITS AND STUFF FROM THE MACHINE      *
    2093                    *                                                                        *
    2094                    *       ENTRY                                                            *
    2095                    *               NOTHING                                                  *
    2096                    *                                                                        *
    2097                    *       EXIT                                                             *
    2098                    *               NOTHING                                                  *
    2099                    *                                                                        *
    2100                    **************************************************************************
    2101                    
    2102 00007200           NO_CREDS
    2103 00007200     098f          MMTM    SP,A0,A1,A7
         00007210     c100  
TMS340 COFF Macro Assembler Version 6.10     Wed Apr 21 11:41:16 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   46

    2104 00007220     0d3f          CALLR   FORM_COIN_CKSUM
         00007230     ffb3  
    2105 00007240     09e7          MOVI    COIN_CKSUM,A7
         00007250 014025f0  
    2106 00007270     4c20          MOVE    A1,A0
    2107 00007280     1020          INC     A0              ;MAKE THE CKSUM BAD!
    2108 00007290     0d5f          calla   CMOSUNLOCK
         000072a0 00000000! 
    2109 000072c0     0d5f          CALLA   WC_BYTE
         000072d0 00000000! 
    2110 000072f0     0d5f          calla   CMOSLOCK
         00007300 00000000! 
    2111 00007320     09af          MMFM    SP,A0,A1,A7
         00007330     0083  
    2112 00007340     0960          RETS
    2113                    
    2114                    **************************************************************************
    2115                    *                                                                        *
    2116                    *       CR_BOTH                                                          *
    2117                    *                                                                        *
    2118                    *       CHECK TO SEE IF THINGS ARE GOOD FOR A LOT OF STUFF               *
    2119                    *                                                                        *
    2120                    *       ENTRY                                                            *
    2121                    *               NOTHING                                                  *
    2122                    *                                                                        *
    2123                    *       EXIT                                                             *
    2124                    *               A2      0 = NEITHER                                      *
    2125                    *                       1 = CAN START                                    *
    2126                    *                       2 = CAN CONTINUE                                 *
    2127                    *                       3 = YOU CAN DO ANYTHING YOU WANT                 *
    2128                    *                                                                        *
    2129                    **************************************************************************
    2130                    
    2131 00007350           CR_BOTH:
    2132 00007350     098f          MMTM    SP,A0,A1
         00007360     c000  
    2133                    
    2134                            .IF     FORCEFREE
    2135                            MOVK    3,A2
    2136                            JRUC    CR_BX
    2137                            .ENDIF
    2138                    
    2139 00007370     1862          MOVK    3,A2            ; ASSUME FREEPLAY
    2140                    
    2141 00007380     09c0          MOVI    ADJFREPL,A0
         00007390     0014  
    2142 000073a0     0d5f          CALLA   GET_ADJ         ; ARE WE IN FREE PLAY?
         000073b0 00000000! 
    2143 000073d0     4c00          MOVE    A0,A0
    2144 000073e0     cb19          JRNZ    CR_BX
    2145                    
    2146 000073f0     5642          CLR     A2              ; ASSUME NOTHING
    2147 00007400     0d3f          CALLR   GET_CREDITS     ; GET CURRENT CREDS
         00007410     ff5b  
    2148 00007420     0b40          CMPI    1,A0
TMS340 COFF Macro Assembler Version 6.10     Wed Apr 21 11:41:16 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   47

         00007430     fffe  
    2149 00007440     c813          JRLO    CR_BX
    2150 00007450     4c01          MOVE    A0,A1
    2151 00007460     09c0          MOVI    ADJCSTRT,A0
         00007470     000b  
    2152 00007480     0d5f          CALLA   GET_ADJ         ; GET START CREDS
         00007490 00000000! 
    2153 000074b0     4801          CMP     A0,A1
    2154 000074c0     c801          JRLO    CR_B1
    2155 000074d0     1822          MOVK    1,A2            ; YES, ENOUGH TO START
    2156 000074e0           CR_B1
    2157 000074e0     09c0          MOVI    ADJCCONT,A0
         000074f0     000c  
    2158 00007500     0d5f          CALLA   GET_ADJ         ; GET CONTINUE CREDS
         00007510 00000000! 
    2159 00007530     4801          CMP     A0,A1
    2160 00007540     c803          JRLO    CR_BX
    2161 00007550     0ba2          ORI     2,A2            ; SET SECOND BIT
         00007560 00000002  
    2162                    
    2163 00007580     09af  CR_BX   MMFM    SP,A0,A1
         00007590     0003  
    2164 000075a0     0960          RETS
    2165                    
    2166                    **************************************************************************
    2167                    *                                                                        *
    2168                    *       CR_STRTP                                                         *
    2169                    *                                                                        *
    2170                    *       CHECK TO SEE IF THERE ARE ENOUGH CREDITS TO START                *
    2171                    *                                                                        *
    2172                    *       ENTRY                                                            *
    2173                    *               NOTHING                                                  *
    2174                    *                                                                        *
    2175                    *       EXIT                                                             *
    2176                    *               .HS.    ENOUGH CREDITS TO START                          *
    2177                    *                                                                        *
    2178                    **************************************************************************
    2179 000075b0           CR_STRTP:
    2180 000075b0     098f          MMTM    SP,A0,A1
         000075c0     c000  
    2181                    
    2182                            .IF     FORCEFREE
    2183                            MOVK    1,A0
    2184                            CMPI    0,A0
    2185                            JRUC    CR_STX
    2186                            .ENDIF
    2187                    
    2188 000075d0     09c0          MOVI    ADJFREPL,A0
         000075e0     0014  
    2189 000075f0     0d5f          CALLA   GET_ADJ         ;ARE WE IN FREE PLAY?
         00007600 00000000! 
    2190 00007620     4c00          MOVE    A0,A0
    2191 00007630     cb0e          JRNZ    CR_STX
    2192                    
    2193 00007640     0d3f          CALLR   CCCC            ;CHECK IT OUT
TMS340 COFF Macro Assembler Version 6.10     Wed Apr 21 11:41:16 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   48

         00007650     ffa0  
    2194                    
    2195 00007660     0d3f          CALLR   GET_CREDITS     ;GET CURRENT CREDITS
         00007670     ff35  
    2196 00007680     0b40          CMPI    1,A0
         00007690     fffe  
    2197 000076a0     c807          JRLO    CR_STX
    2198 000076b0     4c01          MOVE    A0,A1
    2199 000076c0     09c0          MOVI    ADJCSTRT,A0
         000076d0     000b  
    2200 000076e0     0d5f          CALLA   GET_ADJ         ;GET NUMBER NEEDED
         000076f0 00000000! 
    2201 00007710     4801          CMP     A0,A1           ;DO WE HAVE ENOUGH TO START?
    2202 00007720           CR_STX
    2203 00007720     09af          MMFM    SP,A0,A1
         00007730     0003  
    2204 00007740     0960          RETS
    2205                    
    2206                    **************************************************************************
    2207                    *                                                                        *
    2208                    *       CR_CONTP                                                         *
    2209                    *                                                                        *
    2210                    *       CHECK TO SEE IF THERE ARE ENOUGH CREDITS TO CONTINUE             *
    2211                    *                                                                        *
    2212                    *       ENTRY                                                            *
    2213                    *               NOTHING                                                  *
    2214                    *                                                                        *
    2215                    *       EXIT                                                             *
    2216                    *               .HS.    ENOUGH CREDITS TO START                          *
    2217                    *                                                                        *
    2218                    **************************************************************************
    2219 00007750           CR_CONTP
    2220 00007750     098f          MMTM    SP,A0,A1
         00007760     c000  
    2221                    
    2222                            .IF     FORCEFREE
    2223                            MOVK    1,A0
    2224                            CMPI    0,A0
    2225                            JRUC    CR_CTX
    2226                            .ENDIF
    2227                    
    2228 00007770     09c0          MOVI    ADJFREPL,A0
         00007780     0014  
    2229 00007790     0d5f          CALLA   GET_ADJ         ;ARE WE IN FREE PLAY?
         000077a0 00000000! 
    2230 000077c0     4c00          MOVE    A0,A0
    2231 000077d0     cb0e          JRNZ    CR_CTX
    2232                    
    2233 000077e0     0d3f          CALLR   CCCC            ;CHECK IT OUT
         000077f0     ff86  
    2234                    
    2235 00007800     0d3f          CALLR   GET_CREDITS     ;GET CURRENT CREDITS
         00007810     ff1b  
    2236 00007820     4c01          MOVE    A0,A1
    2237 00007830     0b40          CMPI    1,A0
TMS340 COFF Macro Assembler Version 6.10     Wed Apr 21 11:41:16 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   49

         00007840     fffe  
    2238 00007850     c8ec          JRLO    CR_STX
    2239 00007860     09c0          MOVI    ADJCCONT,A0
         00007870     000c  
    2240 00007880     0d5f          CALLA   GET_ADJ         ;GET NUMBER NEEDED
         00007890 00000000! 
    2241 000078b0     4801          CMP     A0,A1           ;DO WE HAVE ENOUGH TO START?
    2242 000078c0           CR_CTX
    2243 000078c0     09af          MMFM    SP,A0,A1
         000078d0     0003  
    2244 000078e0     0960          RETS
    2245                    
    2246                    **************************************************************************
    2247                    *                                                                        *
    2248                    *       P_START                                                          *
    2249                    *                                                                        *
    2250                    *       PLAYER STARTED -- DEDUCT REQUISITE NUMBER OF CREDITS             *
    2251                    *                                                                        *
    2252                    *       ENTRY                                                            *
    2253                    *               NOTHING                                                  *
    2254                    *                                                                        *
    2255                    *       EXIT                                                             *
    2256                    *               NOTHING                                                  *
    2257                    *                                                                        *
    2258                    **************************************************************************
    2259 000078f0           P_START
    2260 000078f0     098f          MMTM    SP,A0,A1,A8
         00007900     c080  
    2261 00007910     0d3f          CALLR   CRED_P
         00007920     ff08  
    2262 00007930     4c01          MOVE    A0,A1
    2263 00007940     09c0          MOVI    ADJCSTRT,A0
         00007950     000b  
    2264 00007960     0d5f          CALLA   GET_ADJ                 ;GET NUMBER NEEDED ( IN A0 )
         00007970 00000000! 
    2265 00007990                   ADDRM   A0,@GAMEUNITS,W         ;CONTINUING COST OF THE GAME
    2266 00007a00     0d3f          CALLR   REMOVE_CREDITS
         00007a10     002c  
    2267                    ;       CALLA   DEC_HSR                 ;TAKE 1 FROM HIGH SCORE RESET COUNTER
    2268                    ;       CALLR   GET_CSTR                ;GET CREDIT STRING
    2269                    ;       CALLA   G_CRED                  ;CALL GEORGE
    2270 00007a20     09af          MMFM    SP,A0,A1,A8
         00007a30     0103  
    2271 00007a40     0960          RETS
    2272                    
    2273                    **************************************************************************
    2274                    *                                                                        *
    2275                    *       P_CONT                                                           *
    2276                    *                                                                        *
    2277                    *       PLAYER CONTINUED -- DEDUCT REQUISITE NUMBER OF CREDITS           *
    2278                    *                                                                        *
    2279                    *       ENTRY                                                            *
    2280                    *               NOTHING                                                  *
    2281                    *                                                                        *
    2282                    *       EXIT                                                             *
TMS340 COFF Macro Assembler Version 6.10     Wed Apr 21 11:41:16 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   50

    2283                    *               NOTHING                                                  *
    2284                    *                                                                        *
    2285                    **************************************************************************
    2286                    
    2287 00007a50     098f  P_CONT  MMTM    SP,A0,A1,A8
         00007a60     c080  
    2288 00007a70     0d3f          CALLR   CRED_P
         00007a80     fef2  
    2289 00007a90     4c01          MOVE    A0,A1
    2290 00007aa0     09c0          MOVI    ADJCCONT,A0
         00007ab0     000c  
    2291 00007ac0     0d5f          CALLA   GET_ADJ              ;GET NUMBER NEEDED
         00007ad0 00000000! 
    2292 00007af0                   ADDRM   A0,@GAMEUNITS,W         ; CONTINUING COST OF THE GAME
    2293 00007b60     0d3f          CALLR   REMOVE_CREDITS
         00007b70     0016  
    2294                    ;        CALLA   DEC_HSR              ;TAKE 1 FROM HIGH SCORE RESET COUNTER
    2295                    ;       CALLR   GET_CSTR                ; GET CREDIT STRING
    2296                    ;       CALLA   G_CRED                  ; CALL GEORGE
    2297 00007b80     09af          MMFM    SP,A0,A1,A8
         00007b90     0103  
    2298 00007ba0     0960          RETS
    2299                    
    2300                    **************************************************************************
    2301                    *                                                                        *
    2302                    *       P_FULL_GAME_BALANCE                                              *
    2303                    *                                                                        *
    2304                    *       FULL GAME PURCHASED -- DEDUCT BALANCE                            *
    2305                    *                                                                        *
    2306                    *       ENTRY                                                            *
    2307                    *               A1      BALANCE CREDITS                                  *
    2308                    *                                                                        *
    2309                    *       EXIT                                                             *
    2310                    *               NOTHING                                                  *
    2311                    *                                                                        *
    2312                    **************************************************************************
    2313                    
    2314 00007bb0           P_FULL_GAME_BALANCE
    2315 00007bb0     098f          MMTM    SP,A0,A1,A8
         00007bc0     c080  
    2316 00007bd0     0d3f          CALLR   CRED_P
         00007be0     fedc  
    2317 00007bf0                   SWAP    A0,A1
    2318 00007c20                   ADDRM   A0,@GAMEUNITS,W         ; CONTINUING COST OF THE GAME
    2319 00007c90     0d3f          CALLR   REMOVE_CREDITS
         00007ca0     0003  
    2320 00007cb0     09af          MMFM    SP,A0,A1,A8
         00007cc0     0103  
    2321 00007cd0     0960          RETS
    2322                    
    2323                    **************************************************************************
    2324                    *                                                                        *
    2325                    *       REMOVE_CREDITS                                                   *
    2326                    *                                                                        *
    2327                    *       REMOVE N CREDITS FROM THE MACHINE                                *
TMS340 COFF Macro Assembler Version 6.10     Wed Apr 21 11:41:16 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   51

    2328                    *                                                                        *
    2329                    *       ENTRY                                                            *
    2330                    *               A0      NUMBER OF CREDITS TO REMOVE                      *
    2331                    *               A1      NUMBER OF CREDITS ON THE MACHINE                 *
    2332                    *                                                                        *
    2333                    *       EXIT                                                             *
    2334                    *               NOTHING                                                  *
    2335                    *                                                                        *
    2336                    **************************************************************************
    2337                    
    2338 00007ce0           REMOVE_CREDITS
    2339 00007ce0     4401          SUB     A0,A1                ;REMOVE START AMOUNT FROM WHAT WE HAVE
    2340 00007cf0     c901          JRHS    PS1                  ;WE'RE OK.
    2341 00007d00     5621          CLR     A1                   ;IT WENT NEGATIVE....MAKE ZERO.
    2342 00007d10           PS1:
    2343                    ;XUNIT  CALLR   COIN_PAG
    2344 00007d10     09e7          MOVI    CREDITS,A7
         00007d20 01402580  
    2345 00007d40     4c20          MOVE    A1,A0                ;PUT WHATS LEFT OUT TO WRITE
    2346 00007d50     0d5f          calla   CMOSUNLOCK
         00007d60 00000000! 
    2347 00007d80     0d5f          CALLA   WC_BYTE              ;WRITE THE NEW AMOUNT
         00007d90 00000000! 
    2348 00007db0     0d3f          CALLR   FORM_COIN_CKSUM_AND_STORE
         00007dc0     ff15  
    2349 00007dd0     0d5f          calla   CMOSLOCK
         00007de0 00000000! 
    2350                    ;XUNIT  CALLA   DEF_PAGE             ;POINT AT DEFAULT PAGE.
    2351 00007e00     0960          RETS
    2352                    
    2353 00007e10           TIMEINIT
    2354                    ;       MOVI    PTAB,A0
    2355                    ;TILOOP
    2356                    ;       MOVE    *A0+,A1,L
    2357                    ;       JRZ     TIDONE
    2358                    ;       CLR     A2
    2359                    ;       MOVE    A2,*A1(PTOTTIME),L
    2360                    ;       JRUC    TILOOP
    2361                    ;TIDONE
    2362 00007e10     0960          RETS
    2363                    
    2364                    
    2365                    **************************************************************************
    2366                    *                                                                        *
    2367                    *       TIMEINT                                                          *
    2368                    *                                                                        *
    2369                    *       TIME INTERRUPT -- CALLED ONCE EVERY TIME THROUGH THE EXEC        *
    2370                    *       LOOP..                                                           *
    2371                    *                                                                        *
    2372                    *       ENTRY                                                            *
    2373                    *               NOTHING                                                  *
    2374                    *                                                                        *
    2375                    *       EXIT                                                             *
    2376                    *               NOTHING                                                  *
    2377                    *                                                                        *
TMS340 COFF Macro Assembler Version 6.10     Wed Apr 21 11:41:16 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   52

    2378                    * NOTE: TRASHES A0,A1,A2,A3,A14                                          *
    2379                    *                                                                        *
    2380                    **************************************************************************
    2381              0001  MINRES          EQU     1                       ;MINIMUM TIME RESOLUTION
    2382              0037  ONE_SECOND      EQU     55                      ;THIS MANY TICKS PER SECOND
    2383                    
    2384 00007e20           TIMEINT:
    2385 00007e20     05a0          MOVE    @LAST_TIMER,A0,W                ;DO IT VIA TIMER
         00007e30 00000000! 
    2386 00007e50     05a3          MOVE    @GAME_STATE,A3,W                ;STATE MUST STAY IN A3
         00007e60 00000000! 
    2387 00007e80     2fa3          SRL     3,A3                            ;SHIFT OUT SUB STATE
    2388 00007e90     2463          SLL     3,A3
    2389                    
    2390 00007ea0     05ae          MOVE    @SUBTIMECNT,A14,W
         00007eb0 000000f0- 
    2391 00007ed0     400e          ADD     A0,A14
    2392                    ****    INC     A14                             ;CLICK ANOTHER TICK
    2393 00007ee0     058e          MOVE    A14,@SUBTIMECNT,W
         00007ef0 000000f0- 
    2394 00007f10     0b4e          CMPI    MINRES,A14                      ;IS IT TIME TO PROCESS?
         00007f20     fffe  
    2395 00007f30     c850          JRLO    TIMECHECK                       ;BR = NO, JUST RETURN
    2396                    
    2397 00007f40     57ce          CLR     A14
    2398 00007f50     058e          MOVE    A14,@SUBTIMECNT,W
         00007f60 000000f0- 
    2399                    ;
    2400                    ;       EVERY MINRES TICKS
    2401                    ;
    2402                    
    2403                    
    2404                    *
    2405                    *CHECK FOR ANY OCTOPUS STUFF HERE
    2406                    *
    2407 00007f80           TIME_OCTO_CHECK:
    2408 00007f80     0b43          CMPI    INAMODE,A3              ;OCTOS ONLY ALLOWED IN ATTRACT MODE
         00007f90     ffcf  
    2409 00007fa0     cb49          JRNZ    TIMECHECK
    2410                    
    2411 00007fb0     05a0          MOVE    @OCTO_FLAG,A0
         00007fc0 00000100- 
    2412 00007fe0     cb12          JRNZ    TIME_OCTO_PART2         ;BR = WORKING ON SECOND PART YET
    2413                    
    2414 00007ff0     07a1          MOVE    @SWITCH,A1,L            ; GET SWITCH STATE
         00008000 01860000  
    2415 00008020     03e1          NOT     A1
    2416 00008030     0b81          ANDI    3030H,A1                ; BUTTONS ONLY, DUDE
         00008040 ffffcfcf  
    2417 00008060     0b41          CMPI    3030H,A1                ; ALL TRIGGERS AND BOMBS
         00008070     cfcf  
    2418 00008080     cb37          JRNZ    TIME_OCTO_FAIL
    2419 00008090     1820          MOVK    1,A0
    2420 000080a0     0580          MOVE    A0,@SWITCH_SPOKEN,W     ;STOP THE "NO WAY JOSE"
         000080b0 00000000! 
TMS340 COFF Macro Assembler Version 6.10     Wed Apr 21 11:41:16 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   53

    2421 000080d0     1820          MOVK    1,A0
    2422 000080e0     0580          MOVE    A0,@OCTO_FLAG,W         ;SET THE "WE SAW IT" FLAG
         000080f0 00000100- 
    2423 00008110           TIME_OCTO_PART2:
    2424 00008110     0b40          CMPI    2,A0
         00008120     fffd  
    2425 00008130     c919          JRHS    TIME_OCTO_PART3
    2426 00008140     07a1          MOVE    @SWITCH,A1,L
         00008150 01860000  
    2427 00008170     03e1          NOT     A1
    2428 00008180     4c22          MOVE    A1,A2
    2429 00008190     0b81          ANDI    3030H,A1                ;ANY OF THOSE SWITCHES STILL HELD?
         000081a0 ffffcfcf  
    2430 000081c0     cb27          JRNZ    TIME_HSTD_CHECK         ;YEP, KEEP WAITING
    2431 000081d0     4c41          MOVE    A2,A1
    2432 000081e0     0b81          ANDI    00240000H,A1            ;JUST CHECK THE STARTS
         000081f0 ffdbffff  
    2433 00008210     0b61          CMPI    00240000H,A1            ;BOTH HELD?
         00008220 ffdbffff  
    2434 00008240     cb1b          JRNZ    TIME_OCTO_FAIL
    2435 00008250     1820          MOVK    1,A0
    2436 00008260     0580          MOVE    A0,@SWITCH_SPOKEN,W     ;STOP THE "NO WAY JOSE"
         00008270 00000000! 
    2437 00008290     1840          MOVK    2,A0
    2438 000082a0     0580          MOVE    A0,@OCTO_FLAG,W         ;SET THE "WE SAW IT AGAIN" FLAG
         000082b0 00000100- 
    2439 000082d0           TIME_OCTO_PART3
    2440 000082d0     05a1          MOVE    @COINS,A1               ; XUNIT
         000082e0 01860030  
    2441 00008300     2601          sll     16,a1                   ; XUNIT
    2442 00008310     05a2          move    @SWITCH,a2              ; XUNIT
         00008320 01860000  
    2443 00008340     03e1          NOT     A1
    2444 00008350     03e2          NOT     a2
    2445 00008360     0b81          ANDI    00240000H,A1            ;STILL HOLDING A START BUTTON?
         00008370 ffdbffff  
    2446 00008390     cb0a          JRNZ    TIME_HSTD_CHECK         ;BR = YES
    2447 000083a0     0b82          ANDI    3030H,A2                ;NOW LOOK AT THE GUN
         000083b0 ffffcfcf  
    2448 000083d0     0b42          CMPI    2020H,A2                ;ARE JUST THE BOMB BUTTONS HELD?
         000083e0     dfdf  
    2449 000083f0     0300          JRNZ    TIME_OCTO_FAIL          ;BR = NO SIR, YOU FAILED
    2450                    ;       CREATE  PID_INDW,OCTO_PAGE      ;FIRE OFF THE PUSSY PAGE
    2451 00008400           TIME_OCTO_FAIL:
    2452 00008400     5600          CLR     A0
    2453 00008410     0580          MOVE    A0,@OCTO_FLAG,W
         00008420 00000100- 
    2454                    ;
    2455                    ;       CHECK FOR P1 DOWN, P2 DOWN FOR HSTD PAGE
    2456                    ;
    2457 00008440           TIME_HSTD_CHECK:
    2458                    ****    MOVE    @SWITCH,A1,L            ; GET SWITCH STATE
    2459                    ****    NOT     A1
    2460                    ****    ANDI    1F1FH,A1                ; STICKS AND BUTTONS ONLY, DUDE
    2461                    ****    CMPI    0202H,A1                ; P1 DOWN, P2 DOWN
TMS340 COFF Macro Assembler Version 6.10     Wed Apr 21 11:41:16 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   54

    2462                    ****    JRNZ    TIME_CRED_CHECK
    2463                    ****    MOVE    @ON_HSTD,A2,W
    2464                    ****    JRNZ    TIMECHECK
    2465                    ****    ADJUST  ADJHSON                 ; CHECK TO SEE IF HIGHSCORE EXISTS
    2466                    ****    JREQ    TIMECHECK
    2467                    ****    CREATE  PID_INDW,HSTD_ENTRY_POINT
    2468                    ****    JRUC    TIMECHECK
    2469 00008440           TIME_CRED_CHECK:
    2470                    ****    CMPI    0408H,A1
    2471                    ****    JRNZ    TIMECHECK
    2472                    ****    MOVE    @ON_CRED,A2,W
    2473                    ****    JRNZ    TIMECHECK
    2474                    ****    CREATE  PID_INDW,CRED_ENTRY_POINT
    2475                    
    2476                    ;
    2477                    ;EVERY TICK
    2478                    ;
    2479 00008440           TIMECHECK
    2480 00008440     05ae          MOVE    @DISPATCH_DELAY,A14,W
         00008450 00000000! 
    2481 00008470     ca04          JRZ     TC_TICK1
    2482 00008480     142e          DEC     A14
    2483 00008490     058e          MOVE    A14,@DISPATCH_DELAY,W
         000084a0 00000000! 
    2484 000084c0           TC_TICK1
    2485 000084c0     05a0          MOVE    @TIMECNT,A0,W
         000084d0 000000e0- 
    2486 000084f0     05ae          MOVE    @TIMER,A14,W
         00008500 00000000! 
    2487 00008520     41c0          ADD     A14,A0
    2488 00008530     0580          MOVE    A0,@TIMECNT,W
         00008540 000000e0- 
    2489 00008560     0b40          CMPI    ONE_SECOND,A0
         00008570     ffc8  
    2490 00008580     c851          JRLO    TIME_REAL_RET
    2491                    ;
    2492                    ;EVERY "SECOND"
    2493                    ;
    2494 00008590     5600          CLR     A0
    2495 000085a0     0580          MOVE    A0,@TIMECNT,W           ; RESET TIMER
         000085b0 000000e0- 
    2496                    
    2497 000085d0     09c0          MOVI    AUD_UPTIME,A0           ; TOTAL GAME POWER ON TIME
         000085e0     0012  
    2498 000085f0     0d5f          CALLA   AUD1
         00008600 00000000! 
    2499                    
    2500 00008620     09c0          MOVI    AUD_ONTIME,A0           ; GAME POWER ON TIME
         00008630     0013  
    2501 00008640     0d5f          CALLA   AUD1
         00008650 00000000! 
    2502                    
    2503 00008670     0b43          CMPI    INPLAY,A3
         00008680     ffdf  
    2504 00008690     ca15          JREQ    TIMEGAME
TMS340 COFF Macro Assembler Version 6.10     Wed Apr 21 11:41:16 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   55

    2505 000086a0     0b43          CMPI    INGAME,A3
         000086b0     ffef  
    2506 000086c0     ca12          JREQ    TIMEGAME
    2507 000086d0     0b43          CMPI    ININTRO,A3
         000086e0     ffe7  
    2508 000086f0     ca0f          JREQ    TIMEGAME
    2509                    ;       CMPI    ININTRO_INITQ,A3
    2510                    ;       JREQ    TIMEGAME
    2511                    ;       CMPI    ININTRO_INITENT,A3
    2512                    ;       JREQ    TIMEGAME
    2513                    ;       CMPI    ININTRO_TEAMSEL,A3
    2514                    ;       JREQ    TIMEGAME
    2515 00008700     0b43          CMPI    INSTAT,A3
         00008710     ff8f  
    2516 00008720     ca0c          JREQ    TIMEGAME
    2517 00008730     0b43          CMPI    INSUBST,A3
         00008740     ff7f  
    2518 00008750     ca09          JREQ    TIMEGAME
    2519 00008760     0b43          CMPI    INBUYIN,A3
         00008770     ff6f  
    2520 00008780     ca06          JREQ    TIMEGAME
    2521 00008790     0b43          CMPI    INEPILOG,A3
         000087a0     ff9f  
    2522 000087b0     ca03          JREQ    TIMEGAME
    2523 000087c0     0b43          CMPI    INGAMEOV,A3
         000087d0     ffaf  
    2524 000087e0     cb2b          JRNE    TIME_REAL_RET
    2525 000087f0           TIMEGAME
    2526 000087f0     09c0          MOVI    AUD_PLAYTIME,A0         ; GAME PLAY TIME
         00008800     0011  
    2527 00008810     0d5f          CALLA   AUD1
         00008820 00000000! 
    2528                    
    2529 00008840     0b43          CMPI    INPLAY,A3
         00008850     ffdf  
    2530 00008860     ca17          JREQ    TIMEPLAYER
    2531 00008870     0b43          CMPI    ININTRO,A3
         00008880     ffe7  
    2532 00008890     ca14          JREQ    TIMEPLAYER
    2533                    ;       CMPI    ININTRO_INITQ,A3
    2534                    ;       JREQ    TIMEPLAYER
    2535                    ;       CMPI    ININTRO_INITENT,A3
    2536                    ;       JREQ    TIMEPLAYER
    2537                    ;       CMPI    ININTRO_TEAMSEL,A3
    2538                    ;       JREQ    TIMEPLAYER
    2539 000088a0     05a1          MOVE    @period,A1,W                    ;LAST PERIOD
         000088b0 00000000! 
    2540 000088d0     0d5f          CALLA   get_period_players
         000088e0 00000000! 
    2541 00008900     05a1          MOVE    @PLAYER_BITS,A1,W
         00008910 00000000! 
    2542 00008930     5401          OR      A0,A1
    2543                    
    2544 00008940     5600          CLR     A0                              ;RESET NUMBER OF PLAYERS
    2545 00008950     57ce          CLR     A14
TMS340 COFF Macro Assembler Version 6.10     Wed Apr 21 11:41:16 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   56

    2546 00008960           TG_LUPE
    2547 00008960     4bc1          BTST    A14,A1
    2548 00008970     ca01          JRZ     TG_NEXT                         ;BR=PLAYER NOT ACTIVE
    2549 00008980     1020          INC     A0
    2550 00008990           TG_NEXT
    2551 00008990     102e          INC     A14
    2552 000089a0     0b4e          CMPI    4,A14
         000089b0     fffb  
    2553 000089c0     cbf9          JRNE    TG_LUPE                         ;BR=NEXT PLAYER
    2554                    
    2555 000089d0     c003          JRUC    TIMEPLAYER1
    2556                    
    2557 000089e0           TIMEPLAYER
    2558 000089e0     05a0          MOVE    @CURPLYRS,A0,W
         000089f0 00000000! 
    2559 00008a10           TIMEPLAYER1
    2560 00008a10     1420          DEC     A0
    2561 00008a20     2480          SLL     4,A0
    2562 00008a30     0b20          ADDI    PLAYER_TIME_TABLE,A0
         00008a40 00008ab0' 
    2563 00008a60     8400          MOVE    *A0,A0,W
    2564 00008a70     0d5f          CALLA   AUD1
         00008a80 00000000! 
    2565                    
    2566 00008aa0           TIME_REAL_RET
    2567 00008aa0           TI_XXX
    2568 00008aa0     0960          RETS
    2569                    
    2570 00008ab0           PLAYER_TIME_TABLE
    2571 00008ab0     0014          .word   AUD_1_TIME,AUD_2_TIME,AUD_3_TIME,AUD_4_TIME
    2572                    
    2573                    **************************************************************************
    2574                    *                                                                        *
    2575                    *       COININT                                                          *
    2576                    *                                                                        *
    2577                    *       INTERRUPT ROUTINE PROCESSING FOR COINS                           *
    2578                    *                                                                        *
    2579                    *       ENTRY                                                            *
    2580                    *               NOTHING                                                  *
    2581                    *                                                                        *
    2582                    *       EXIT                                                             *
    2583                    *               NOTHING                                                  *
    2584                    *                                                                        *
    2585                    **************************************************************************
    2586 00008af0           COININT:
    2587 00008af0     07a0          move    @C_FLAGS,a0,L           ;any flags set?
         00008b00 00000000- 
    2588 00008b20     cb06          jrnz    okay_guys
    2589 00008b30     05aa          move    @C_FLAGS+32,a10
         00008b40 00000020- 
    2590 00008b60     270a          sll     24,a10
    2591 00008b70     2d0a          srl     24,a10
    2592 00008b80     ca64          jrz     NO_COIN_WORK            ;nope!
    2593 00008b90           okay_guys
    2594                    
TMS340 COFF Macro Assembler Version 6.10     Wed Apr 21 11:41:16 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   57

    2595 00008b90     09ea          MOVI    C_FLAGS,A10             ;WALK THROUGH THE 3 COUNTERS
         00008ba0 00000000- 
    2596 00008bc0     09c9          MOVI    5,A9
         00008bd0     0005  
    2597                    ;       MOVI    L_COIN_BIT,A8           ;THIS IS THE BIT TO CHECK
    2598 00008be0           NEXT_SLOT
    2599 00008be0     0b49          cmpi    1,a9
         00008bf0     fffe  
    2600 00008c00     cb05          jrne    no_dbv_kludge
    2601 00008c10     05a0          move    @C_FLAGS+32,a0
         00008c20 00000020- 
    2602 00008c40     2700          sll     24,a0
    2603 00008c50     2d00          srl     24,a0
    2604 00008c60           no_dbv_kludge
    2605                    *
    2606                    *I BELIEVE THAT LC_FLAG IS IN THE LOW BYTE...THEN CC_FLAG...THEN RC_FLAG
    2607                    *
    2608 00008c60     4c01          MOVE    A0,A1                   ;GET CURRENT BYTE IN A1
    2609 00008c70     2f00          SRL     8,A0                    ;SHIFT DOWN TO NEXT
    2610 00008c80     0b81          ANDI    0FFH,A1                 ;JUST HOLD LEFT SWITCH
         00008c90 ffffff00  
    2611 00008cb0     ca4c          JRZ     TRY_NEXT                ;NOT LEFT
    2612                    
    2613 00008cc0     1fa1          BTST    COIN_FAIL_BIT,A1        ;FAIL LOOKING FOR OPEN?
    2614 00008cd0     ca11          JRZ     CHECK_START             ;YEP...THAT'S ALL WE NEED DO!
    2615                    *
    2616                    *       WE'RE IN A FAIL CONDITION SEE IF WE CAN CANCEL IT!
    2617                    *
    2618 00008ce0     1f81          BTST    COIN_ACK_BIT,A1         ;HAS IT BEEN ACKNOWLEDGED?
    2619 00008cf0     cb0a          JRNZ    FAIL_ACKED              ;YEP.....JUST RUN DOWN THE "OPEN" TIMER
    2620                    *
    2621                    *       HASN'T BEEN ACKNOWLEDGED.....TIME DOWN AND AUTO ACK IF
    2622                    *       PROCESS IS DEAD!        THIS SHOULDN'T HAPPEN, BUT
    2623                    *       DEADLOCKS ARE UGLY!
    2624                    *
    2625 00008d00     af43          MOVB    *A10(RUN_TIME),A3       ;WE'RE RUNNING OUT OF TIME
         00008d10     0028  
    2626 00008d20     1423          DEC     A3
    2627 00008d30     ac6a          MOVB    A3,*A10(RUN_TIME)       ;PUT IT BACK!
         00008d40     0028  
    2628 00008d50     cb20          JRNZ    TRY_TO_OPEN             ;NOW CONTINUE TO OPEN THE SWITCH
    2629                    *
    2630                    *       NO ACK IN ALL THIS TIME!
    2631                    *       PROVIDE THE ACK OURSELVES!
    2632                    *
    2633                            .IF     DEBUG                   ;THIS IS A FAIL-SAFE...TRAP DURING DEBUG
    2634                            JRUC    $
    2635                            .ENDIF
    2636                    
    2637 00008d60     0ba1          ORI     COIN_ACK_VAL,A1         ;ADD IN THE ACK!
         00008d70 00000008  
    2638 00008d90     8c2a          MOVB    A1,*A10                 ;AND STORE IT BACK!
    2639                    *
    2640                    *       WE HAVE ACK...HAVE WE HAD OUR OPEN?
    2641                    *
TMS340 COFF Macro Assembler Version 6.10     Wed Apr 21 11:41:16 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   58

    2642 00008da0           FAIL_ACKED
    2643 00008da0     af43          MOVB    *A10(OPENS_LEFT),A3     ;HAVE WE MADE IT?
         00008db0     0050  
    2644 00008dc0     cb19          JRNZ    TRY_TO_OPEN             ;NOT YET...KEEP TRYING.
    2645                    *
    2646                    *       WERE OPEN AND HAVE OUR ACK CLEAR OUT THE FLAGS!
    2647                    *
    2648 00008dd0     8c6a          MOVB    A3,*A10                 ;THIS CLEARS OUT THE FLAG
    2649 00008de0     c039          JRUC    TRY_NEXT                ;FLAGS ARE CLEAR...STEP TO NEXT
    2650                    
    2651 00008df0           CHECK_START
    2652 00008df0     1fe1          BTST    COIN_SBIT,A1            ;"START" FLAG?
    2653 00008e00     cb08          JRNZ    TIME_START              ;YEP......KEEP TIMING
    2654                    *
    2655                    *       HERE BY PROCESS OF ELIMINATION...ITS "SUCC" BIT OR
    2656                    *       SOMTHING ELSE GOT SET.....SIMPLY TIME IT DOWN
    2657                    *       IN CASE SOMEONE TRASHED IN ON THIS BYTE
    2658                    *
    2659 00008e10     af43          MOVB    *A10(RUN_TIME),A3       ;WE'RE RUNNING OUT OF TIME
         00008e20     0028  
    2660 00008e30     1423          DEC     A3
    2661 00008e40     ac6a          MOVB    A3,*A10(RUN_TIME)       ;PUT IT BACK!
         00008e50     0028  
    2662 00008e60     cb31          JRNZ    TRY_NEXT                ;WHEN IT HITS ZERO...WE'LL CLEAR OUT!
    2663                    
    2664                            .IF     DEBUG                   ;THIS IS A FAIL-SAFE...TRAP DURING DEBUG
    2665                            JRUC    $
    2666                            .ENDIF
    2667                    
    2668 00008e70     8c6a          MOVB    A3,*A10                 ;CLEAR OUT THE FLAGS...PROC IS GONE!
    2669 00008e80     c02f          JRUC    TRY_NEXT                ;MUST BE SUCCESS...NO ACTION.
    2670                    
    2671 00008e90           TIME_START
    2672 00008e90     af43          MOVB    *A10(RUN_TIME),A3       ;WE'RE RUNNING OUT OF TIME
         00008ea0     0028  
    2673 00008eb0     1423          DEC     A3
    2674 00008ec0     ac6a          MOVB    A3,*A10(RUN_TIME)       ;PUT IT BACK!
         00008ed0     0028  
    2675 00008ee0     cb07          JRNZ    TRY_TO_OPEN             ;NOW CONTINUE TO OPEN THE SWITCH
    2676                    *
    2677                    *       THIS ONE TIMED OUT......ITS FAIL FLAG TIME!
    2678                    *
    2679 00008ef0     09c3          MOVI    COIN_FAIL_VAL,A3
         00008f00     0004  
    2680 00008f10     8c6a          MOVB    A3,*A10                 ;WE HAVE FAILURE
    2681                    
    2682 00008f20     09c3          MOVI    ACC_LIMIT,A3
         00008f30     0080  
    2683 00008f40     ac6a          MOVB    A3,*A10(RUN_TIME)       ;THIS IS TIME LIMIT FOR PROCESS TO ANSWER!
         00008f50     0028  
    2684                    *
    2685 00008f60           TRY_TO_OPEN
    2686                    ;        CMPI   8,A8
    2687                    ;       JRZ     TTOFOURTH               ;       ANOTHER KLUDGE FOR XCOIN
    2688                    ;       MOVE    @COINS,A2,W             ;THE SWITCH HAS 1/2 SECOND TO OPEN
TMS340 COFF Macro Assembler Version 6.10     Wed Apr 21 11:41:16 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   59

    2689                    ;       CMPI    4,A8                    ;       SPECIAL CHECK FOR CENTER CHUTE
    2690                    ;       JRZ     TTOCENTER
    2691                    ;       AND     A8,A2                   ;A1 CONTIAINS ZERO FOR CLOSED
    2692                    ;       JRZ     STILL_CLOSED            ;ITS CLOSED...RE-START THE OPEN COUNT
    2693                    ;       JRUC    TTOGO
    2694                    ;TTOCENTER
    2695                    ;       ANDI    80H,A2                  ;MASK FOR JAMMA CENTER
    2696                    ;       JRZ     STILL_CLOSED
    2697                    ;       JRUC    TTOGO
    2698                    ;TTOFOURTH
    2699                    ;       MOVE    @SWITCH2,A2,W
    2700                    ;       ANDI    20H,A2
    2701                    ;       JRZ     STILL_CLOSED
    2702                    ;^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    2703                    ; very inelegant, and besides, it doesn't work !
    2704                    ;vvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvv
    2705                    ; better way to do it, using a table
    2706 00008f60     4d28          move    a9,a8
    2707 00008f70     1428          dec     a8                      ;avoid being 1 to many
    2708 00008f80     2488          sll     4,a8
    2709 00008f90     0b28          addi    which_bits_to_test,a8
         00008fa0 000091e0' 
    2710 00008fc0     8508          move    *a8,a8
    2711 00008fd0     05a2          move    @COINS,a2,W             ;the switch has 1/2 second to open
         00008fe0 01860030  
    2712 00009000     5102          and     a8,a2
    2713 00009010     2602          sll     16,a2
    2714 00009020     ca11          jrz     STILL_CLOSED
    2715                    ;^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    2716 00009030           TTOGO
    2717                    *
    2718                    *       ITS OPEN
    2719                    *
    2720 00009030     af43          MOVB    *A10(OPENS_LEFT),A3     ;HAVE WE MADE IT?
         00009040     0050  
    2721 00009050     ca04          JRZ     HIT_ZERO                ;WE HAVE A LONG ENOUGH OPEN
    2722 00009060     1423          DEC     A3
    2723 00009070     ac6a          MOVB    A3,*A10(OPENS_LEFT)     ;PUT IT BACK
         00009080     0050  
    2724 00009090     cb0e          JRNZ    TRY_NEXT                ;TRY THE NEXT BYTE
    2725                    *
    2726                    *       WE HIT ZERO....IF "START FLAG" IS ON THEN WE HAVE SUCCESS
    2727                    *
    2728 000090a0           HIT_ZERO
    2729 000090a0     1fe1          BTST    COIN_SBIT,A1            ;"START" FLAG?
    2730 000090b0     ca0c          JRZ     TRY_NEXT                ;NOPE....
    2731                    
    2732 000090c0     09c3          MOVI    COIN_SUCC_VAL,A3
         000090d0     0002  
    2733 000090e0     8c6a          MOVB    A3,*A10                 ;INDICATE WE MADE IT!
    2734                    
    2735 000090f0     09c3          MOVI    ACC_LIMIT,A3
         00009100     0080  
    2736 00009110     ac6a          MOVB    A3,*A10(RUN_TIME)       ;THIS IS TIME LIMIT FOR PROCESS TO ANSWER!
         00009120     0028  
TMS340 COFF Macro Assembler Version 6.10     Wed Apr 21 11:41:16 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   60

    2737                    
    2738 00009130     c004          JRUC    TRY_NEXT
    2739                    
    2740 00009140           STILL_CLOSED
    2741 00009140     09c1          MOVI    MIN_OPENS,A1            ;THIS MANY FRAMES OF OPEN TIL OPEN
         00009150     0004  
    2742 00009160     ac2a          MOVB    A1,*A10(OPENS_LEFT)
         00009170     0050  
    2743                    
    2744 00009180           TRY_NEXT
    2745 00009180     0b0a          ADDI    8,A10                   ;NEXT BYTE
         00009190     0008  
    2746 000091a0     2428          SLL     1,A8                    ;NEXT COIN BIT
    2747                    
    2748 000091b0     0d89          DSJ     A9,NEXT_SLOT
         000091c0     ffa1  
    2749                    
    2750 000091d0           NO_COIN_WORK
    2751 000091d0     0960          RETS
    2752                    
    2753                    
    2754 000091e0           which_bits_to_test
    2755 000091e0     8000          .word   DBV_BIT
    2756 000091f0     0100          .word   X_COIN_BIT
    2757 00009200     0080          .word   C_COIN_BIT
    2758 00009210     0002          .word   R_COIN_BIT
    2759 00009220     0001          .word   L_COIN_BIT
    2760                    
    2761                    **************************************************************************
    2762                    *                                                                        *
    2763                    *       SLAM_P                                                           *
    2764                    *                                                                        *
    2765                    *       IS THERE A SLAM PROCESS RUNNING                                  *
    2766                    *                                                                        *
    2767                    *       ENTRY                                                            *
    2768                    *               NOTHING                                                  *
    2769                    *                                                                        *
    2770                    *       EXIT                                                             *
    2771                    *               .EQ.    NO                                               *
    2772                    *               .NE.    YES                                              *
    2773                    *                                                                        *
    2774                    **************************************************************************
    2775 00009230           SLAM_P
    2776 00009230     09e0          MOVI    PID_SLAM,A0
         00009240 00008f04  
    2777 00009260     0d5f          CALLA   EXISTP_ALL
         00009270 00000000! 
    2778 00009290     0960          RETS
    2779                    
    2780                    **************************************************************************
    2781                    *                                                                        *
    2782                    *       SLAM                                                             *
    2783                    *                                                                        *
    2784                    *       PROCESS THAT STARTS UP WHEN WE GET SLAMMED ON                    *
    2785                    *                                                                        *
TMS340 COFF Macro Assembler Version 6.10     Wed Apr 21 11:41:16 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   61

    2786                    *       ENTRY                                                            *
    2787                    *               NOTHING                                                  *
    2788                    *                                                                        *
    2789                    *       EXIT                                                             *
    2790                    *               NOTHING                                                  *
    2791                    *                                                                        *
    2792                    **************************************************************************
    2793 000092a0           SLAM
    2794 000092a0     09c0          MOVI    AUD_SLAMS,A0
         000092b0     0048  
    2795 000092c0     0d5f          CALLA   AUD1
         000092d0 00000000! 
    2796 000092f0     09e0          MOVI    PID_SLAM,A0             ;YOU KNOW WHO YOU ARE DAHLINGS
         00009300 00008f04  
    2797 00009320     b00d          MOVE    A0,*A13(PROCID),W       ;SET OUR ID TO SLAM
         00009330     0020  
    2798 00009340     0d5f          CALLA   KILLPROC_ALL            ;KILL ANY OTHER INCARNATIONS
         00009350 00000000! 
    2799 00009370                   SLEEP   40H                     ;1 SECOND OF COIN IGNORING.
    2800 000093c0     c080          JAUC    SUCIDE
         000093d0 00000000! 

 No Errors,  No Warnings
