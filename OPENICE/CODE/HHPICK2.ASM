	.MLIB	"HHMACS.LIB"
	.FILE	"HHPICK2.ASM"
	.WIDTH	132
	.OPTION	B,D,L,T
	.MNOLIST

*
*GET THE SYSTEM STUFF
*
	.INCLUDE	"HH.INC"
	.INCLUDE	"HHPICK.H"
	.INCLUDE	"HHSTRING.H"
	.INCLUDE	"IMGTBL.GLO"
	.INCLUDE	"HHPICK2.TBL"
	.include	"hhpick2.e"
	.include	"hhd.g"
	.include	"hhpall.g"
	.include	"hhcx.g"
	.include	"hhram.g"
	.include	"hhtext.g"
	.include	"hhproc.g"
	.include	"hhstable.g"
	.include	"hhc.g"
	.include	"hhplayer.g"
	.include	"hhcoin.g"
	.include	"hhgame.g"
	.include	"hhcmos.g"
	.include	"hhpick.g"
	.include	"hhfade.g"
	.include	"hhspeech.g"

; end of include files

	.text

**************************************************************************
*								         *
* SUBSTITUTION_PAGE - CHANGE TEAM LINE UP				 *
* 									 *
* PASS:									 *
* NUTIN'								 *
* 									 *
* RETURN:								 *
* NUTIN'								 *
*								         *
**************************************************************************

SUBSTITUTION_PAGE
	MOVI	INSUBST,A14
	MOVE	A14,@GAME_STATE,W

	MOVB	@LOCKED_CHAR_BITS,A14
	CMPI	01111B,A14
	JREQ	SP_ABORT				;BR=ALL LOCKED

	CALLA	MY_WIPEOUT

	MOVI	FONTGRYP,A0
	CALLA	GETFPAL
	MOVI	REDTXT3P,A0
	CALLA	GETFPAL
	MOVI	ORGTXT1P,A0
	CALLA	GETFPAL

	MOVI	[241,201],A9
	CLR	A10
	CREATE	PID_CREDIT,DISPLAY_CREDIT_PROC

	MOVI	METAL_ICE_INIT,B0
	CALLA	MULTIMAKE

	MOVI	SUB_MESS,A8
	JSRP	LM_PRINTF

	MOVE	@period,A1,W				;GET LAST PERIOD
	CALLA	get_period_players
	MOVE	A0,A1

	MOVB	@LOCKED_CHAR_BITS,A14
	MOVI	150,A0					;CPU SUBST ONLY WAIT

	CMPI	011B,A14
	JRNE	SP_CHECK_RIGHT				;BR=LEFT TEAM NOT LOCKED
	CMPI	011B,A1
	JREQ	SP_SKIP					;BR=LEFT TEAM ONLY
SP_CHECK_RIGHT
	CMPI	01100B,A14
	JRNE	SP_INSTR				;BR=RGHT TEAM NOT LOCKED
	CMPI	01100B,A1
	JREQ	SP_SKIP					;BR=RGHT TEAM ONLY

SP_INSTR
	MOVI	SUB_PRESS_TURBO_MESS,A8
	JSRP	LM_PRINTF

	MOVI	SUB_PRESS_SHOOT_MESS,A8
	JSRP	LM_PRINTF

	CLR	A0					;PLAYER SUBST ALLOWED
SP_SKIP
	MOVE	A0,*A13(PDATA),W			;SET CPU SUBST WAIT

	CALLA	INITIAL_GRAPHICS_1

	CALLA	INITIAL_GRAPHICS_2

	MOVE	@team1,A9,W
	SLL	10,A9
	ADDI	team_data,A9
	MOVI	TEAM_SELECT_LEFT_POS_TABLE,A10
	CLR	A11					;LEFT TEAM
	CALLR	SET_TEAM_AND_LOGO
	CREATE	PID_SUB_SEL,SUBSTITUTION_SWAP_PROC

	MOVE	@team2,A9,W
	SLL	10,A9
	ADDI	team_data,A9
	MOVI	TEAM_SELECT_RGHT_POS_TABLE,A10
	MOVK	2,A11					;RIGHT TEAM
	CALLR	SET_TEAM_AND_LOGO
	CREATE	PID_SUB_SEL,SUBSTITUTION_SWAP_PROC

	CLR	A14
	MOVE	A14,@TIMER_DIGIT_OBJ,L			;NO TIMER DIGIT EXISTING
	MOVE	A14,@TIMES_UP,W				;RESET TIME'S UP FLAG

	MOVI	60*5,A11
	CREATE	PID_TIMER,SELECT_TIMER_PROC

SP_WAIT
	SLEEP	1
	MOVI	PID_SUB_SEL,A0
	CALLA	EXISTP_ALL
	JRNZ	SP_WAIT	

	MOVI	PID_TIMER,A0				;DELETE PROCESS
	CALLA	KILLPROC_ALL

	MOVE	@TIMER_DIGIT_OBJ,A0,L
	JRZ	SP_DONE					;BR=TIMER DONE
	CALLA	DELOBJ					;DELETE DIGIT

SP_DONE
	SLEEP	30

	MOVE	*A13(PDATA),A8,W
	JRZ	SP_ABORT				;BR=NO CPU SUBST WAIT
	JSRP	button_wait
SP_ABORT
	RETP



**************************************************************************
*								         *
* SET_TEAM_AND_LOGO							 *
* 									 *
* PASS:									 *
* A9  = TEAM DATA BLOCK ADDRESS						 *
* A10 = POSITION TABLE							 *
* 									 *
* RETURN:								 *
* NUTIN'								 *
*								         *
**************************************************************************

SET_TEAM_AND_LOGO
	MOVI	TEAM_NAME_INIT,B0
	CALLA	EASYMAKE
	MOVE	*A10+,A1,L
	CLR	A2
	CALLA	SET_SCRNOBJ
	CALLA	INSERT_OBJ
	MOVE	*A8(OCTRL),A4,W
	MOVE	*A9(TD_TEAMNAME_IMG),A1,L
	CALLA	ANI

	MOVI	LOGO_INIT,B0
	CALLA	EASYMAKE
	MOVE	*A10+,A1,L
	MOVK	3,A2
	CALLA	SET_SCRNOBJ
	CALLA	INSERT_OBJ
	MOVE	*A8(OCTRL),A4,W
	MOVE	*A9(TD_TEAMLOGO_IMG),A1,L
	CALLA	ANI
	MOVE	*A1(ICMAP),A0,L
	CALLA	CHANGE_PAL

	RETS

**************************************************************************
*								         *
* SUBSTITUTION_SWAP_PROC						 *
* 									 *
* PASS:									 *
* A9  = TEAM DATA BLOCK ADDRESS						 *
* A10 = POSITION TABLE OFFSET TO LEFT MUG ENTRY				 *
* A11 = TEAM (0 = LEFT, 2 = RIGHT)					 *
*								         *
**************************************************************************

SUBSTITUTION_SWAP_PROC
	PUSH	A11
	CALLA	SETUP_PLAYERS
	PULLQ	A11

	MOVI	TEAM1_SWAP,A10
	MOVE	A11,A11
	JRZ	SSP_GET_SWAP
	MOVI	TEAM2_SWAP,A10
SSP_GET_SWAP
	MOVE	*A10(0),*A13(PSWAP),W

	MOVE	@period,A1,W			;GET LAST PERIOD
	CALLA	get_period_players

	NEG	A11

	MOVB	@LOCKED_CHAR_BITS,A14
	SRL	A11,A14
	ANDI	011B,A14
	SUBK	011B,A14
	JRZ	SSP_FIX_AND_DIE			;BR=BOTH LOCKED

	SRL	A11,A0
	ANDI	011B,A0
	JRNZ	SSP_ALLOW			;BR=ACTIVE PLAYERS ON TEAM

	MMTM	SP,A9,A10,A11

	MOVI	[95,99],A9			;[Y,X] SCREEN ADDRESS
	MOVE	A11,A11
	JRZ	SSP_CPU_MESS			;BR=LEFT SIDE
	ADDI	200,A9				;OFFSET TO RIGHT SIDE
SSP_CPU_MESS
	MOVI	OID_TEXT,B1			;[SOUND,OID]
	CLR	A0				;NO SLEEP TIL
	MOVI	STRCNCONV,A1			;ROUTINE
	MOVI	HFPAL,A5			;[COLOR,PALETTE]
	MOVI	CPU_SUB_STR,A8			;POINTER TO STRING
	CLR	A10				;[Y,X] SPACING
	MOVI	H10FONT,A11			;FONT
	JSRP	PRINTF

	MMFM	SP,A9,A10,A11

	CLR	A14
	DEC	A14
	MOVE	A14,*A13(PSWAP),W		;FLAG RANDOM SWAP			

SSP_FIX_AND_DIE
	MOVE	A9,A2
	MOVE	A11,A9
	ABS	A9
	PUSH	A10
	MOVB	@LOCKED_CHAR_BITS,A14
	ORI	010000B,A14				;SET LOCK OVERRIDE BIT
	MOVB	A14,@LOCKED_CHAR_BITS
	CALLA	UP_UPDATE_PLAYERS
	MOVB	@LOCKED_CHAR_BITS,A14
	ANDI	01111B,A14				;CLR LOCK OVERRIDE BIT
	MOVB	A14,@LOCKED_CHAR_BITS
	PULLQ	A10

	MOVE	*A13(PSWAP),*A10(0),W

	JAUC	SUCIDE

SSP_ALLOW
	CMPI	011B,A0
	JRNE	SSP_GET_PLAYER_NUMBER		;BR=BOTH NOT ACTIVE

	MOVB	@TEAM_SELECT_BITS,A14
	SRL	A11,A14
	ANDI	011B,A14
	JRZ	SSP_GET_PLAYER_NUMBER		;BR=NO TEAM SELECT PLAYER
	MOVE	A14,A0
SSP_GET_PLAYER_NUMBER
	PUSH	A9

	MOVE	A11,A9
	ABS	A9
	BTST	1,A0
	JRZ	SSP_MAKE_ARROW			;BR=PLAYER 1 OR 3
	INC	A9				;BR=PLAYER 2 OR 4

SSP_MAKE_ARROW
	MOVI	ARROW_PTR_INIT,B0		;CREATE ARROW POINTER
	CALLA	EASYMAKE
	CALLA	PULL_ANIM

	MOVE	A9,A0
	KITN	4
	JREQ	SSP_GET_ARROW_IMG			;BR=4 PLAYER KIT
	MOVE	A0,A0
	JRZ	SSP_GET_ARROW_IMG			;BR=PLAYER 1
	MOVK	1,A0					;PLAYER 2
SSP_GET_ARROW_IMG
	SLL	5,A0
	ADDI	ARROW_IMG_TABLE,A0
	MOVE	*A0,A0,L
	MOVE	A0,*A8(OIMG),L
	MOVE	*A0(ISAG),*A8(OSAG),L
	MOVE	*A0(ICMAP),A0,L
	KITN	4
	JREQ	SSP_SET_PAL				;BR=4 PLAYER KIT
	MOVE	A9,A9
	JRZ	SSP_SET_PAL				;BR=PLAYER 1
	MOVI	arrg_pal,A0				;PLAYER 2
SSP_SET_PAL
	CALLA	CHANGE_PAL

	MOVE	A9,A1
	SLL	4,A1
	ADDI	INFOBOX_CENTER_XPOS_TABLE,A1
	MOVE	*A1,A1,W
	ADDI	[111,0],A1
	CLR	A2
	CALLA	SET_SCRNOBJ

	CALLA	INSERT_OBJ

	MOVE	A9,A11					;PLAYER NUMBER - 1
	PULLQ	A2					;TEAM DATA ADDRESS

	MMTM	SP,A2,A10,A11
	MOVB	@LOCKED_CHAR_BITS,A14
	ORI	010000B,A14				;SET LOCK OVERRIDE BIT
	MOVB	A14,@LOCKED_CHAR_BITS
	CALLA	UP_UPDATE_PLAYERS
	MOVB	@LOCKED_CHAR_BITS,A14
	ANDI	01111B,A14				;CLR LOCK OVERRIDE BIT
	MOVB	A14,@LOCKED_CHAR_BITS
	MMFM	SP,A2,A10,A11

	PUSHP	A2
	SLEEP	TEAM_SELECT_PRETIMEOUT		;DELAY BEFORE SELECT OR SWAP
	PULLPQ	A2

	KITN	4
	JREQ	SSP_MAKE_MASK				;BR=4 PLAYER KIT
	MOVE	A11,A11
	JRZ	SSP_MAKE_MASK				;BR=PLAYER 1
	MOVK	1,A11					;PLAYER 2
SSP_MAKE_MASK
	MOVE	A11,A14			
	SLL	3,A14
	MOVI	M_SW_S|M_SW_T,A3
	SLL	A14,A3				;"SELECTER" MASK

	MOVE	@period,A1,W			;GET LAST PERIOD
	CALLA	get_period_players

	CLR	A4				;DEFAULT NO TEAMMATE

	KITN	2
	JREQ	SSP_GET_FIRST_SWITCH		;BR=2 PLAYER KIT

	MOVE	A11,A14
	XORI	1,A14
	BTST	A14,A0
	JRZ	SSP_GET_FIRST_SWITCH		;BR=NO TEAMMATE

	SLL	3,A14
	MOVI	M_SW_T,A4
	SLL	A14,A4				;TEAMMATE MASK

SSP_GET_FIRST_SWITCH
	MOVE	@SWITCH,A1,L
	NOT	A1
	MOVE	A1,A5
	AND	A3,A1
	AND	A4,A5

SSP_LUPE
	MOVE	@SWITCH,A0,L
	NOT	A0
	MOVE	A0,A6
	AND	A3,A0
	JRNZ	SSP_NEW_SWITCH			;BR=NO BUTTONS
	MOVE	A0,A1

SSP_CHECK_TEAMMATE
	MOVE	A4,A4
	JRZ	SSP_NAP				;BR=TEAMMATE NOT ACTIVE
	AND	A4,A6
	JRNZ	SSP_CHECK_TEAMMATE_TURBO	;BR=TEAMMATE TURBO ON
	MOVE	A6,A5
	JRUC	SSP_NAP
SSP_CHECK_TEAMMATE_TURBO
	MOVE	A6,A14
	XOR	A5,A14
	MOVE	A6,A5

	AND	A6,A14
	JRZ	SSP_NAP				;BR=TEAMMATE BUTTONS STUCK

	JRUC	SSP_SWAP			;TEAMMATE SWAP

SSP_NEW_SWITCH
	MOVE	A0,A14
	XOR	A1,A14
	MOVE	A0,A1

	AND	A0,A14
	JRZ	SSP_CHECK_TEAMMATE		;BR=BUTTONS STUCK

	MOVE	A11,A14
	SLL	3,A14
	ADDI	B_SW_S,A14
	BTST	A14,A0
	JRNZ	SSP_SELECTED			;BR=SELECTED

	ADDI	B_SW_T-B_SW_S,A14
	BTST	A14,A0
	JRZ	SSP_NAP				;BR=NO SWAP
SSP_SWAP
	CALLA	SWAP_SOUND

	MOVE	*A13(PSWAP),A14,W		;NEXT SWAP
	INC	A14
	MOVE	A14,*A13(PSWAP),W

	MMTM	SP,A1,A2,A3,A4,A5,A9,A10,A11
	CALLA	UP_UPDATE_PLAYERS
	MMFM	SP,A1,A2,A3,A4,A5,A9,A10,A11

SSP_NAP
	MMTM	A12,A1,A2,A3,A4,A5
	SLEEP	1
	MMFM	A12,A1,A2,A3,A4,A5

	MOVE	@TIMES_UP,A14,W
	JRZ	SSP_LUPE			;BR=STILL GOT SOME

;	JRUC	SSP_LUPE

SSP_SELECTED
	MOVE	@BLUE_MUG_BGND_OBJ,A8,L

	KITN	4
	JREQ	SSP_4P_SELECTED			;BR=4 PLAYER KIT
	MOVE	A11,A11
	JRZ	SSP_SELECT_FLASH		;BR=PLAYER 1
	JRUC	SSP_RED_SELECTED		;PLAYER 2

SSP_4P_SELECTED
	CMPI	2,A11
	JRLT	SSP_SELECT_FLASH		;BR=LEFT TEAM
SSP_RED_SELECTED
	MOVE	@RED_MUG_BGND_OBJ,A8,L

SSP_SELECT_FLASH
	CALLA	PICK_SOUND

	MOVI	0101H,A14
	MOVE	A14,*A8(OCONST),W
	MOVK	SELECT_FLASHES,A14
	MOVB	A14,*A8(ANIMLOOP)
	MOVI	MUG_BGND_FLASH_ANIM,A1
	CALLA	STRT_ANIM

	MOVE	*A10,A0,W
	MOVE	*A13(PSWAP),A1,W
	MOVE	A1,*A10,W

	CMP	A0,A1
	JAEQ	SUCIDE				;BR=NO LINEUP CHANGE

	calla	spx_change_in_lineup

	DIE

SUB_MESS
	MESS_MAC2 H18FONT,-1,0,199,10,HFPAL+0202H,STRCNCONV,OID_TEXT
	.STRING	"SUBSTITUTIONS",0
	.EVEN

SUB_PRESS_TURBO_MESS
	MESS_MAC2 H18TFONT,-1,0,199,40,HFPAL,STRCNCONV,OID_TEXT
	.STRING	"PRESS TURBO TO SWAP",0
	.EVEN

SUB_PRESS_SHOOT_MESS
	MESS_MAC2 H18TFONT,-1,0,199,65,HFPAL+0101H,STRCNCONV,OID_TEXT
	.STRING	"PRESS SHOOT TO SELECT",0
	.EVEN

CPU_SUB_STR
	.STRING	"CPU SUBSTITUTIONS",0
	.EVEN

**************************************************************************
*								         *
* BUYIN_TIMER_PROC							 *
* 									 *
* PASS:									 *
* A11 = INITIAL SLEEP							 *
*								         *
**************************************************************************

PPLAYERS	EQU	PDATA			;UHW ALLOWED PLAYERS

BUYIN_TIMER_PROC
	MOVE	@period,A1,W				;LAST PERIOD
	CALLA	get_period_players
	MOVE	A0,*A13(PPLAYERS),W

	MOVE	A11,A11
	JRZ	BTP_GO					;BR=NO INITIAL SLEEP

	SLEEP	120

BTP_SLEEP_LUPE
	MOVE	@period,A1,W
	INC	A1					;NEXT PERIOD
	CALLA	get_period_players
	SLL	5,A0

	MOVI	bw_tab,A2
	KITN	4
	JREQ	BTP_ADD_TABLE				;BR=4 PLAYER KIT
	MOVI	bw_tab_2P,A2				;2 PLAYER KIT
BTP_ADD_TABLE
	ADD	A2,A0

	MOVE	*A0,A1,L
	MOVE	@SWITCH,A0,L
	NOT	A0
	AND	A0,A1					;MASK NEXT PERIOD PLYRS
	JRNZ	BTP_GO					;BR=BUTTON DOWN
	SLEEP	1
	DSJ	A11,BTP_SLEEP_LUPE

BTP_GO
	MOVI	TIMER_DIGIT_INIT,B0
	CALLA	EASYMAKE
	MOVE	A8,@TIMER_DIGIT_OBJ,L			;TIMER DIGIT OBJECT
	MOVI	TEXTZVAL-100,A14
	MOVE	A14,*A8(OZVAL),L
	CALLA	INSERT_OBJ
;	MOVI	FONTGRYP,A0
	MOVI	REDTXT3P,A0
	CALLA	CHANGE_PAL

BTP_RESTART
	MOVK	11,A11					;MAX. START SWITCHES
BTP_SWITCH_RESTART
	DEC	A11
	CLR	A14
	MOVE	A14,@STARTSW,W				;RESET START SWITCHES
	MOVI	COUNTDOWN_TABLE,A10
BTP_LUPE
	MOVE	*A10+,A1,L
	JRZ	BTP_TIMES_UP				;BR=BING!

	MOVI	DMAWNZ,A4
	CALLA	ANI

	MOVI	[126,199],A1
	MOVE	*A8(OSIZE),A0,L
	MOVE	A0,A14
	SRA	1,A0					;HALF Y-SIZE
	ZEXT	A14,W
	SRA	1,A14					;HALF X-SIZE
	MOVX	A14,A0
	SUBXY	A0,A1					;UPPER LEFT
	MOVI	TEXTZVAL-100,A2
	CALLA	SET_SCRNOBJ

	CALLA	TICK_SOUND

	MOVE	*A13(PPLAYERS),A9,W
	MOVK	5,A0
BTP_ON_WAIT
	PUSHP	A0
	SLEEP	1
	PULLPQ	A0
	MOVE	@NEWCRED,A14,W
	JRNZ	BTP_RESTART				;BR=NEW CREDIT
	CALLA	CHECK_SWITCH_RESTART
	JRNZ	BTP_SWITCH_RESTART			;BR=RESTART
	DSJ	A0,BTP_ON_WAIT

	MMTM	A12,A8,A9
	MOVI	DIGIT_ON_TIME-5,A8
	MOVE	*A13(PPLAYERS),A9,W
	JSRP	BUYIN_BUTTON_LEVEL_WAIT
	MMFM	A12,A8,A9

	GETST	A0
	MOVE	@NEWCRED,A14,W
	JRNZ	BTP_RESTART				;BR=NEW CREDIT
	PUTST	A0
	JRNZ	BTP_SWITCH_RESTART			;BR=RESTART

	CALLA	OBJ_OFF

	MOVE	*A13(PPLAYERS),A9,W
	MOVK	2,A0
BTP_OFF_WAIT
	PUSHP	A0
	SLEEP	1
	PULLPQ	A0
	MOVE	@NEWCRED,A14,W
	JRNZ	BTP_RESTART				;BR=NEW CREDIT
	CALLA	CHECK_SWITCH_RESTART
	JRNZ	BTP_SWITCH_RESTART			;BR=RESTART
	DSJ	A0,BTP_OFF_WAIT

	MMTM	A12,A8,A9
	MOVK	DIGIT_OFF_TIME-2,A8
	MOVE	*A13(PPLAYERS),A9,W
	JSRP	BUYIN_BUTTON_LEVEL_WAIT
	MMFM	A12,A8,A9

	GETST	A0
	MOVE	@NEWCRED,A14,W
	JRNZ	BTP_RESTART				;BR=NEW CREDIT
	PUTST	A0
	JRNZ	BTP_SWITCH_RESTART			;BR=RESTART

	JRUC	BTP_LUPE
BTP_TIMES_UP
	CALLA	DELETE_OBJ

	CLR	A14
	MOVE	A14,@TIMER_DIGIT_OBJ,L			;NO MORE TIMER OBJECT

	MOVK	1,A14
	MOVE	A14,@TIMES_UP,W

	DIE

**************************************************************************
*								         *
* CHECK_SWITCH_RESTART							 *
* 									 *
* PASS:									 *
* A9  = LAST PERIOD PLAYERS ALLOWED TO ADVANCE TIMER			 *
* A11 = NUMBER OF SWITCH RESTARTS LEFT					 *
* RETURN:								 *
* Z FLAG = IF CLR, THEN "YES" ELSE "NO" (SET)				 *
*								         *
**************************************************************************

CHECK_SWITCH_RESTART
	MOVE	@STARTSW,A14,W
	JRZ	CSR_DONE				;BR=NO START SWITCH,"NO"
	MOVE	A11,A11
	JRZ	CSR_DONE				;BR=OUT OF RESTARTS,"NO"
	MOVE	@PLAYER_BITS,A1,W			;GET CURRENT PLAYERS
	OR	A9,A1					;ADD ALLOWED PLAYERS
	AND	A1,A14
CSR_DONE
	RETS


**************************************************************************
*								         *
* BUYIN_BUTTON_LEVEL_WAIT						 *
* 									 *
* PASS:									 *
* A9 = LAST PERIOD PLAYERS ALLOWED TO ADVANCE TIMER			 *
* RETURN:								 *
* Z FLAG = IF CLR, THEN "YES" ELSE "NO" (SET)				 *
*								         *
**************************************************************************

BUYIN_BUTTON_LEVEL_WAIT

	.if	self_play
	RETP
	.endif

BBLW_LUPE
	MOVE	@PLAYER_BITS,A0,W			;GET CURRENT PLAYERS
	OR	A9,A0					;ADD ALLOWED PLAYERS
	SLL	5,A0

	MOVI	bw_tab,A2
	KITN	4
	JREQ	BBLW_ADD_TABLE				;BR=4 PLAYER KIT
	MOVI	bw_tab_2P,A2				;2 PLAYER KIT
BBLW_ADD_TABLE
	ADD	A2,A0

	MOVE	*A0,A1,L
	MOVE	@SWITCH,A0,L
	NOT	A0
	AND	A1,A0
	JRNZ	BBLW_ABORT				;BR=BUTTON DOWN
	SLEEP	1

	MOVE	@NEWCRED,A14,W
	JRNZ	BBLW_DONE				;BR=NEW CREDIT
	CALLA	CHECK_SWITCH_RESTART
	JRNZ	BBLW_DONE				;BR=RESTART

	DSJ	A8,BBLW_LUPE
BBLW_ABORT
	CLR	A14					;SET Z, DON'T RESTART
BBLW_DONE
	RETP

**************************************************************************
*								         *
* DO_BUY_IN - JUST GO!							 *
* 									 *
* PASS:									 *
* NUTIN'								 *
* RETURN:								 *
* NUTIN'								 *
*								         *
**************************************************************************

DO_BUY_IN
	MOVI	FONTGRYP,A0
	CALLA	GETFPAL

	MOVK	4,A1
	MOVI	PLAYER_PAL_TABLE2,A2
DBI_PAL_LUPE
	MOVE	*A2+,A0,L
	CALLA	GETFPAL
	DSJS	A1,DBI_PAL_LUPE

	CALLA	CENTER_ICE_BGND

	MOVI	SELECTFRAME_INIT,B0
	CALLA	MULTIMAKE
	MOVI	[2,5],A1
	MOVK	1,A2
	CALLA	SET_SCRNOBJ
	CALLA	INSERT_OBJ
	MOVI	BLUFRMP,A0
	CALLA	CHANGE_PAL_MULTI

	MOVI	SELECTFRAME_INIT,B0
	CALLA	MULTIMAKE
	MOVI	[2,200],A1			;UNFLIPPED POSITION
;	MOVK	M_FLIPH,A0
;	CALLA	SET_FLIP
;	MOVI	[2,394],A1
	MOVK	1,A2
	CALLA	SET_SCRNOBJ
	CALLA	INSERT_OBJ
	MOVI	REDFRMP,A0
	CALLA	CHANGE_PAL_MULTI

	MOVI	INFOBOXES_INIT,B0
	CALLA	EASYMAKE
	MOVI	[INFOBOX_Y,INFOBOX_XL],A1
	CLR	A2
	CALLA	SET_SCRNOBJ
	CALLA	INSERT_OBJ
	MOVI	BLUFRMP,A0
	CALLA	CHANGE_PAL

	MOVI	INFOBOXES_BGND_INIT,B0
	CALLA	EASYMAKE
	MOVI	[INFOBOX_Y,INFOBOX_XL],A1
	MOVK	1,A2
	CALLA	SET_SCRNOBJ
	CALLA	INSERT_OBJ

	MOVI	INFOBOXES_BGND_INIT,B0
	CALLA	EASYMAKE
	MOVI	[INFOBOX_Y,INFOBOX_XL+80],A1
	MOVK	1,A2
	CALLA	SET_SCRNOBJ
	CALLA	INSERT_OBJ

	MOVI	INFOBOXES_INIT,B0
	CALLA	EASYMAKE
	MOVI	[INFOBOX_Y,INFOBOX_XR],A1
	CLR	A2
	CALLA	SET_SCRNOBJ
	CALLA	INSERT_OBJ
	MOVI	REDFRMP,A0
	CALLA	CHANGE_PAL

	MOVI	INFOBOXES_BGND_INIT,B0
	CALLA	EASYMAKE
	MOVI	[INFOBOX_Y,INFOBOX_XR],A1
	MOVK	1,A2
	CALLA	SET_SCRNOBJ
	CALLA	INSERT_OBJ

	MOVI	INFOBOXES_BGND_INIT,B0
	CALLA	EASYMAKE
	MOVI	[INFOBOX_Y,INFOBOX_XR+80],A1
	MOVK	1,A2
	CALLA	SET_SCRNOBJ
	CALLA	INSERT_OBJ

	MOVI	PAIDBOX_INIT,B0
	CALLA	EASYMAKE
	MOVI	[INFOBOX_Y+117,INFOBOX_XL+24],A1
	MOVI	TEXTZVAL-3,A2
	CALLA	SET_SCRNOBJ
	CALLA	INSERT_OBJ
	MOVI	BLUFRMP,A0
	CALLA	CHANGE_PAL

	MOVI	PAIDBOX_INIT,B0
	CALLA	EASYMAKE
	MOVI	[INFOBOX_Y+117,INFOBOX_XR+104],A1
	MOVI	TEXTZVAL-3,A2
	CALLA	SET_SCRNOBJ
	CALLA	INSERT_OBJ
	MOVI	REDFRMP,A0
	CALLA	CHANGE_PAL

	KITN	2
	JREQ	DBI_PROCS			;BR=2 PLAYER KIT

	MOVI	PAIDBOX_INIT,B0
	CALLA	EASYMAKE
	MOVI	[INFOBOX_Y+117,INFOBOX_XL+104],A1
	MOVI	TEXTZVAL-3,A2
	CALLA	SET_SCRNOBJ
	CALLA	INSERT_OBJ
	MOVI	BLUFRMP,A0
	CALLA	CHANGE_PAL

	MOVI	PAIDBOX_INIT,B0
	CALLA	EASYMAKE
	MOVI	[INFOBOX_Y+117,INFOBOX_XR+24],A1
	MOVI	TEXTZVAL-3,A2
	CALLA	SET_SCRNOBJ
	CALLA	INSERT_OBJ
	MOVI	REDFRMP,A0
	CALLA	CHANGE_PAL

DBI_PROCS
;	CREATE	PID_LAMP,INITIAL_LAMP_PROC

	MOVI	[241,201],A9
	CLR	A10
	CREATE	PID_CREDIT,DISPLAY_CREDIT_PROC

	CLR	A9				;PLAYER NUMBER - 1

;	MOVE	@PLAYER_BITS,A10,W		;GET CURRENT PLAYERS

	MOVE	@period,A1,W			;GET UNPAID PLAYERS
	INC	A1
	CALLA	get_period_players
	MOVE	A0,A10

	CLR	A11
	MOVK	ADJFREPL,A0
	CALLA	GET_ADJ				;CHECK FOR FREE PLAY
	JRNZ	DBI_INFOBOX_MESS_LUPE		;BR=FREE PLAY

	MOVK	ADJCSTRT,A0
	CALLA	GET_ADJ				;GET NUMBER OF CREDITS TO START
	MOVE	A0,A11

DBI_INFOBOX_MESS_LUPE
	BTST	A9,A10
	JRNZ	DBI_IML_ACTIVE			;BR=PLAYER NOT ACTIVE

	MOVE	A9,A9
	JRZ	DBI_GO_INFOBOX_MESS		;BR=PLAYER 1
	CMPI	3,A9
	JREQ	DBI_GO_INFOBOX_MESS		;BR=PLAYER 4(2)		

	KITN	2
	JREQ	DBI_IML_NEXT			;BR=2 PLAYER KIT
DBI_GO_INFOBOX_MESS

	MOVI	INFOBOX_MESSAGE_INIT,B0
	CALLA	EASYMAKE

	MOVE	A9,*A8(ODATA),W			;PLAYER NUMBER - 1
	MOVE	A11,*A8(ODATA+010H),W		;NUMBER OF CREDITS TO START

	MOVE	A9,A1
	SLL	4,A1
	ADDI	PLAYER_OID_TABLE,A1
	MOVE	*A1(0),*A8(OID),W

	MOVE	A9,A1
	SLL	4,A1
	ADDI	INFOBOX_CENTER_XPOS_TABLE,A1
	MOVE	*A1,A1,W
	MOVI	[INFOBOX_Y+92,-30],A14
	ADDXY	A14,A1
	CLR	A2
	CALLA	SET_SCRNOBJ

	CALLA	INSERT_OBJ

DBI_IML_ACTIVE
	CREATE	PID_IND,PERIODS_PAID_PROC
DBI_IML_NEXT
	INC	A9
	CMPI	4,A9
	JRNE	DBI_INFOBOX_MESS_LUPE		;BR=NOT DONE WITH PLAYERS

	MOVE	@period,A3,W
	MOVK	011B,A11			;LEFT TEAM MASK

	MOVE	A3,A1
	CALLA	get_period_players		;GET LAST PERIOD PLAYERS
	MOVE	@PLAYER_BITS,A10,W		;GET CURRENT PLAYERS
	OR	A0,A10				;PUT 'EM TOGETHER

	CLR	A9				;PLAYER NUMBER - 1
DBI_JOININ_MESSAGE_LUPE
	MOVE	A9,A9
	JRZ	DBI_JML_CHECK_ACTIVE		;BR=PLAYER 1
	CMPI	3,A9
	JREQ	DBI_JML_CHECK_ACTIVE		;BR=PLAYER 4(2)		

	KITN	2
	JREQ	DBI_JML_NEXT			;BR=2 PLAYER KIT

DBI_JML_CHECK_ACTIVE
	BTST	A9,A10
	JRZ	DBI_JML_NOT_ACTIVE		;BR=PLAYER NOT ACTIVE

	MOVE	A9,A6
	INC	A6
	CMPI	3,A6
	JRLT	DBI_JML_GET_PLAYER_BLOCK	;BR=PLAYER 1 OR 2
	ADDK	2,A6
DBI_JML_GET_PLAYER_BLOCK
	GBLOCK	A6,A6

	MOVE	*A6(POF_PERIODS_PAID),A14,W
	BTST	A3,A14
	JRZ	DBI_JML_CONTINUE		;BR=NOT PAID
	CALLR	GET_READY_MESSAGE
	JRUC	DBI_JML_NEXT

DBI_JML_CONTINUE
	MOVI	CONT_MESSAGE_INIT,B0
	CALLA	EASYMAKE

	MOVE	A6,*A8(ODATA),L			;PLAYER BLOCK ADDRESS
	MOVE	A9,*A8(ODATA+020H),W		;PLAYER NUMBER - 1

	MOVE	A9,A1
	SLL	4,A1
	ADDI	INITIAL_MESS_CENTER_XPOS_TABLE,A1
	MOVE	*A1,A1,W
	MOVI	[102,1],A14
	ADDXY	A14,A1
	CLR	A2
	CALLA	SET_SCRNOBJ
	CALLA	INSERT_OBJ

	JRUC	DBI_JML_NEXT

DBI_JML_NOT_ACTIVE
	MOVI	JOININ_MESSAGE_INIT,B0
	CALLA	EASYMAKE

	MOVK	1,A14
	SLL	A9,A14
	MOVE	A14,*A8(ODATA),W		;PLAYER MASK
	MOVE	A9,*A8(ODATA+10H),W		;PLAYER NUMBER - 1

	MOVE	A9,A1
	SLL	4,A1
	ADDI	INITIAL_MESS_CENTER_XPOS_TABLE,A1
	MOVE	*A1,A1,W
	MOVI	[100,-42],A14
	ADDXY	A14,A1
	CLR	A2
	CALLA	SET_SCRNOBJ

	MOVI	CHALNEED_MESSAGE_ANIM,A1

	MOVE	A10,A14
	AND	A11,A14
	JRZ	DBI_JML_ANIM			;BR=PUT UP CHALLENGER MESSAGE

	MOVI	TEAMNEED_MESSAGE_ANIM,A1
DBI_JML_ANIM
	CALLA	STRT_ANIM
	CALLA	INSERT_OBJ
DBI_JML_NEXT
	INC	A9
	CMPI	2,A9
	JRNE	DBI_JML_CHECK_LAST		;BR=DON'T CHANGE TEAM MASK
	SLL	2,A11				;SHIFT TO RIGHT TEAM MASK
	JRUC	DBI_JOININ_MESSAGE_LUPE
DBI_JML_CHECK_LAST
	CMPI	4,A9
	JRNE	DBI_JOININ_MESSAGE_LUPE		;BR=NOT DONE WITH PLAYERS

	CLR	A14
	MOVE	A14,@TIMES_UP,W			;RESET TIME'S UP FLAG

	MOVE	@period,A1,W			;LAST PERIOD
	CALLA	get_period_players
	MOVE	A0,A9
;	MOVI	60*5,A11
	MOVI	60*3,A11

	CALLA	COUNT_PLAYER_BITS
	DEC	A14
	JRZ	DBI_CHECK_NEXT_PERIOD		;BR=ONLY ONE PLAYER ACTIVE

	CMPI	2,A1
	JRNE	DBI_START_TIMER			;BR=NOT 3RD PERIOD BUY-IN
DBI_CHECK_NEXT_PERIOD
	INC	A1				;NEXT PERIOD
	CALLA	get_period_players
	MOVE	A0,A14
	AND	A9,A14
	CMP	A9,A14
	JRNE	DBI_START_TIMER			;BR=EVERYBODY FROM LAST PERIOD
						;   NOT PAID UP FOR 3RD PERIOD
DBI_CLEAR_PRETIME
	CLR	A11				;SHORTEN TIME FOR PAID PLAYERS
DBI_START_TIMER
	C_A_K	PID_TIMER,BUYIN_TIMER_PROC

	MOVE	@period,A8,W			;NEXT PERIOD
	INC	A8

	MOVI	01111B,A9
	MOVE	@NPLAYERS,A14,W
	SUBK	2,A14
	JRNZ	DBI_TIMEOUT_LUPE		;BR=4 PLAYER KIT
	MOVI	01001B,A9

DBI_TIMEOUT_LUPE
	SLEEP	1

	MOVE	A8,A1
	CALLA	get_period_players

	CALLA	COUNT_PLAYER_BITS
	DEC	A14
	JRZ	DBI_CHECK_TIMEOUT		;BR=ONLY ONE PLAYER ACTIVE

	CMP	A9,A0
	JREQ	DBI_DONE			;BR=ALL PAID
DBI_CHECK_TIMEOUT
	MOVE	@TIMES_UP,A14,W
	JRZ	DBI_TIMEOUT_LUPE		;BR=NO TIME TO LOSE

	MOVE	A8,A1
	CALLA	get_period_players
	MOVE	A0,A0
	JRNZ	DBI_DONE			;BR=SOMEBODY PAID

	RETP
DBI_DONE
	SLEEP	15

	MOVI	PID_COLOR,A0			;KILL JOIN IN CYCLES
	CALLA	KILLPROC_ALL
	MOVI	99,A14
	MOVE	A14,@MAX_PALXFERS,W
	CLR	A0
	CALLA	FADEOUTF			;FADE DOWN ALL PALETTES
	JSRP	FADE_WAIT
	CALLA	RESET_MAX_PALXFERS

	RETP

PLAYER_PAL_TABLE2
	.LONG	PRPTXT3P,BLUTXT3P,GLDTXT1P,GRNTXT3P

PLAYER_PAL_NUM_TABLE2
	.WORD	HFPAL+0101H,HFPAL+0202H,HFPAL+0303H,HFPAL+0404H

**************************************************************************
*								         *
* GET_READY_MESSAGE							 *
* 									 *
* PASS:									 *
* A9 = PLAYER NUMBER - 1						 *
* RETURN:								 *
* NUTIN'								 *
*								         *
**************************************************************************

GET_READY_MESSAGE
	MMTM	SP,A10,A11

	MOVI	GET_READY_INIT,B0
	CALLA	EASYMAKE

	MOVE	A9,A10
	SLL	4,A10
	ADDI	INITIAL_MESS_CENTER_XPOS_TABLE,A10
	MOVE	*A10,A10,W
	MOVI	[55,0],A14
	ADDXY	A14,A10
	MOVE	A10,A1
	CLR	A2
	CALLA	SET_SCRNOBJ
	CALLA	INSERT_OBJ

	MOVE	A9,A11
	SLL	5,A11
	ADDI	PLAYER_PAL_TABLE2,A11
	MOVE	*A11,A11,L
	MOVE	A11,A0
	CALLA	CHANGE_PAL

	MOVI	SECOND_INIT,B0
	CALLA	EASYMAKE
	MOVE	A11,A0
	CALLA	CHANGE_PAL

	MOVE	A10,A1
	CLR	A2
	CALLA	SET_SCRNOBJ
	CALLA	INSERT_OBJ

	MOVE	@period,A2,W
	CMPI	1,A2
	JREQ	GRM_PERIOD			;BR=2ND PERIOD BUY-IN
	CMPI	2,A2
	JRNE	GRM_OVERTIME			;BR=OVERTIME BUY-IN

	MOVI	THIRD18,A1			;3RD PERIOD BUY-IN
	MOVI	DMAWNZ,A4
	CALLA	ANI
	JRUC	GRM_PERIOD

GRM_OVERTIME
	MOVI	OT18,A1
	MOVI	DMAWNZ,A4
	CALLA	ANI
	JRUC	GRM_DONE

GRM_PERIOD
	MOVI	PERIOD_INIT,B0
	CALLA	EASYMAKE
	MOVE	A11,A0
	CALLA	CHANGE_PAL

	MOVE	A10,A1
	CLR	A2
	CALLA	SET_SCRNOBJ
	CALLA	INSERT_OBJ
GRM_DONE

	CALLR	PUT_INITIALS_IN_INFOBOX

	MMFM	SP,A10,A11
	RETS

**************************************************************************
*								         *
* A_CHECK_PERIOD_PAID							 *
* 									 *
* PASS:									 *
* A8 = OBJECT								 *
*								         *
**************************************************************************

A_CHECK_PERIOD_PAID
	MOVE	*A8(ODATA),A6,L
	MOVE	@period,A0,W
	MOVE	*A6(POF_PERIODS_PAID),A14,W
	BTST	A0,A14
	JRZ	ACPP_DONE			;BR=STILL NOT PAID
	CALLA	DELETE_OBJ			;BR=PERIOD PAID
	MOVE	*A8(ODATA+020H),A9,W		;PLAYER NUMBER - 1
	JRUC	GET_READY_MESSAGE
ACPP_DONE
	RETS

CONT_MESSAGE_INIT
	.long	CONT19
	.word	DMAWNZ,M_SCRNOBJ|M_NOVEL|M_NOSCALE
	.word	OM_OID|OM_ANIM
	.word	OID_JUNK
	.long	CONT_MESSAGE_ANIM

CONT_MESSAGE_ANIM
	LWL	1,AFUNC|1,A_CHECK_PERIOD_PAID
	.long	0

GET_READY_INIT
	.long	GETREADYFOR17
	.word	DMAWNZ,M_SCRNOBJ|M_NOVEL|M_NOSCALE
	.word	OM_OID
	.word	OID_JUNK

SECOND_INIT
	.long	SECOND18
	.word	DMAWNZ,M_SCRNOBJ|M_NOVEL|M_NOSCALE
	.word	OM_OID
	.word	OID_JUNK

PERIOD_INIT
	.long	PERIOD17
	.word	DMAWNZ,M_SCRNOBJ|M_NOVEL|M_NOSCALE
	.word	OM_OID
	.word	OID_JUNK

**************************************************************************
*								         *
* DISPLAY_UPDATED_RECORDS						 *
* 									 *
* PASS:									 *
* NUTIN'								 *
* RETURN:								 *
* NUTIN'								 *
*								         *
**************************************************************************

DISPLAY_UPDATED_RECORDS
	MOVI	FONTGRYP,A0
	CALLA	GETFPAL

	MOVK	4,A1
	MOVI	PLAYER_PAL_TABLE2,A2
DUR_PAL_LUPE
	MOVE	*A2+,A0,L
	CALLA	GETFPAL
	DSJS	A1,DUR_PAL_LUPE

	MOVI	REDTXT3P,A0
	CALLA	GETFPAL
	MOVI	ORGTXT1P,A0
	CALLA	GETFPAL

	CALLA	CENTER_ICE_BGND

	MOVI	SELECTFRAME_INIT,B0
	CALLA	MULTIMAKE
	MOVI	[2,5],A1
	MOVK	1,A2
	CALLA	SET_SCRNOBJ
	CALLA	INSERT_OBJ
	MOVI	BLUFRMP,A0
	CALLA	CHANGE_PAL_MULTI

	MOVI	SELECTFRAME_INIT,B0
	CALLA	MULTIMAKE
	MOVI	[2,200],A1			;UNFLIPPED POSITION
;	MOVK	M_FLIPH,A0
;	CALLA	SET_FLIP
;	MOVI	[2,394],A1
	MOVK	1,A2
	CALLA	SET_SCRNOBJ
	CALLA	INSERT_OBJ
	MOVI	REDFRMP,A0
	CALLA	CHANGE_PAL_MULTI

	MOVI	INFOBOXES_INIT,B0
	CALLA	EASYMAKE
	MOVI	[INFOBOX_Y,INFOBOX_XL],A1
	CLR	A2
	CALLA	SET_SCRNOBJ
	CALLA	INSERT_OBJ
	MOVI	BLUFRMP,A0
	CALLA	CHANGE_PAL

	MOVI	INFOBOXES_BGND_INIT,B0
	CALLA	EASYMAKE
	MOVI	[INFOBOX_Y,INFOBOX_XL],A1
	MOVK	1,A2
	CALLA	SET_SCRNOBJ
	CALLA	INSERT_OBJ

	MOVI	INFOBOXES_BGND_INIT,B0
	CALLA	EASYMAKE
	MOVI	[INFOBOX_Y,INFOBOX_XL+80],A1
	MOVK	1,A2
	CALLA	SET_SCRNOBJ
	CALLA	INSERT_OBJ

	MOVI	INFOBOXES_INIT,B0
	CALLA	EASYMAKE
	MOVI	[INFOBOX_Y,INFOBOX_XR],A1
	CLR	A2
	CALLA	SET_SCRNOBJ
	CALLA	INSERT_OBJ
	MOVI	REDFRMP,A0
	CALLA	CHANGE_PAL

	MOVI	INFOBOXES_BGND_INIT,B0
	CALLA	EASYMAKE
	MOVI	[INFOBOX_Y,INFOBOX_XR],A1
	MOVK	1,A2
	CALLA	SET_SCRNOBJ
	CALLA	INSERT_OBJ

	MOVI	INFOBOXES_BGND_INIT,B0
	CALLA	EASYMAKE
	MOVI	[INFOBOX_Y,INFOBOX_XR+80],A1
	MOVK	1,A2
	CALLA	SET_SCRNOBJ
	CALLA	INSERT_OBJ

	MOVK	4,A2
	MOVI	PLAYER_6_BLOCK,A10
DUR_START_PROCS
;mdp yescmosrecord
;	MOVE	*A10(POF_LOCKED_CHAR),A14,W
;	JRNZ	DUR_SP_CHECK_NEXT		;BR=SPECIAL CHARACTER
;mdp yescmosrecord
	MOVE	*A10(POF_CMOS),A14,W
	JRN	DUR_SP_CHECK_NEXT		;BR=NO CMOS RECORD
	MOVE	A2,A9
	DEC	A9
	CREATE	PID_IND,DISPLAY_CMOS
DUR_SP_CHECK_NEXT
	CMPI	3,A2
	JRNE	DUR_SP_NEXT			;BR=NOT PLAYER 5
	SUBI	PLAYER_BLOCK_SIZE*2,A10		;SKIP DRONE PLAYER BLOCKS
DUR_SP_NEXT
	SUBI	PLAYER_BLOCK_SIZE,A10		;NEXT PLAYER BLOCK
	DSJS	A2,DUR_START_PROCS

	RETP

**************************************************************************
*								         *
* DISPLAY_CMOS								 *
* 									 *
* PASS:									 *
* A9  = PLAYER NUMBER - 1						 *
* A10 = PLAYER BLOCK ADDRESS						 *
*								         *
**************************************************************************

DISPLAY_CMOS
	MOVE	*A10(POF_CMOS),A0,W
	CALLA	get_cmos_record_a
	MOVE	A10,A6
	CALLA	cx_find_rank

	CALLR	PUT_INITIALS_IN_INFOBOX

	MOVE	A9,A5
	SLL	4,A5
	ADDI	PLAYER_PAL_NUM_TABLE2,A5
	MOVE	*A5,A5,W			;[COLOR,PALETTE]

	SLL	4,A9
	ADDI	INITIAL_MESS_CENTER_XPOS_TABLE,A9
	MOVE	*A9,A9,W
	PUSHP	A9
	ADDI	[RANK_YPOS,0],A9		;[Y,X] SCREEN ADDRESS

	CLR	A0				;NO SLEEP TIL
	MOVI	STRCNCONV,A1			;ROUTINE
;	MOVI	HFPAL,A5			;[COLOR,PALETTE]
	MOVI	RANK_STRING,A8			;POINTER TO STRING
	MOVI	[0,-1],A10			;[Y,X] SPACING
	MOVI	H11WFONT,A11			;FONT
	JSRP	PRINTF

	MOVI	HFPAL,A5			;[COLOR,PALETTE]
	MOVI	RECORD_STRING,A8		;POINTER TO STRING
	MOVE	*A12,A9,W			;RESTORE A9, [0, X CENTER]
	ADDI	[RANK_YPOS+15,0],A9		;[Y,X] SCREEN ADDRESS
	MOVI	H10FONT,A11			;FONT
	JSRP	PRINTF

	MOVE	@b_wins,A3,W
	MOVE	A3,A6
	SLL	1,A6
	MOVE	A3,A2
	MOVE	@b_losses,A14,W
	ADD	A14,A2
	MOVE	@b_ties,A14,W
	ADD	A14,A2				;TOTAL GAMES

	MOVE	*A12,A9,W			;RESTORE A9, [0, X CENTER]

	ADD	A14,A6				;POINTS
	PUSHP	A6

;	MOVI	1000,A14
;	MPYU	A14,A3
;	DIVU	A2,A3
;	MOVE	A3,A7
;	MOVI	10,A14
;	DIVU	A14,A3
;	MOVE	A3,@RAMTEMP1,W			;PERCENT INTEGER
;	MPYU	A14,A3
;	SUB	A3,A7
;	MOVE	A7,@RAMTEMP2,W			;PERCENT FRACTION
;	MOVI	WINS_STRING,A8			;POINTER TO STRING
;	ADDI	[RANK_YPOS+30,0],A9		;[Y,X] SCREEN ADDRESS
;	JSRP	PRINTF

	MOVI	HFPAL+0606H,A5			;[COLOR,PALETTE]

	SLL	1,A2
	CMP	A2,A6
	JRNE	DC_PCTG

	MOVI	PCTG_100_STRING,A8		;POINTER TO STRING
	ADDI	[RANK_YPOS+30,0],A9		;[Y,X] SCREEN ADDRESS
	JSRP	PRINTF
	JRUC	DC_POINTS
DC_PCTG
	MOVE	A6,A7
	MOVI	10000,A14
	MPYU	A14,A7
	DIVU	A2,A7
	ADDK	5,A7				;ROUND UP
	MOVI	10,A14
	DIVU	A14,A7

	CLR	A6
	DIVU	A14,A6
	MOVE	A7,@RAMTEMP3,W			;THOUSANTHS
	MOVE	A6,A7
	CLR	A6
	DIVU	A14,A6
	MOVE	A7,@RAMTEMP2,W			;HUNDRETHS
	MOVE	A6,A7
	CLR	A6
	DIVU	A14,A6
	MOVE	A7,@RAMTEMP1,W			;TENTHS
	MOVI	PCTG_STRING,A8			;POINTER TO STRING
	ADDI	[RANK_YPOS+30,0],A9		;[Y,X] SCREEN ADDRESS
	JSRP	PRINTF
DC_POINTS
	PULLPQ	A6
	MOVE	A6,@RAMTEMP1,W
	MOVI	HFPAL,A5			;[COLOR,PALETTE]
	MOVI	POINTS_STRING,A8		;POINTER TO STRING
	MOVE	*A12,A9,W			;RESTORE A9, [0, X CENTER]
	ADDI	[RANK_YPOS+45,0],A9		;[Y,X] SCREEN ADDRESS
	JSRP	PRINTF

	MOVE	@b_nextteam,A14,W
	jrz	DC_DONE				;br=invalid next team
	CMPI	31,A14
	JREQ	DC_DONE				;BR=INVALID NEXT TEAM

	DEC	A14
	SLL	4,A14
	ADDI	ALPHA_CITY_REMAP_TABLE,A14
	MOVE	*A14,A14,W
	ADDI	'a',A14
	MOVE	A14,@RAMTEMP1,L

	MOVI	HFPAL+0505H,A5			;[COLOR,PALETTE]
	MOVI	NEXT_TEAM_STRING,A8		;POINTER TO STRING
	MOVE	*A12,A9,W			;RESTORE A9, [0, X CENTER]
	ADDI	[RANK_YPOS+135,0],A9		;[Y,X] SCREEN ADDRESS
	MOVI	H10FONT,A11			;FONT
	JSRP	PRINTF
DC_DONE
	PULLPQ	A9

	DIE

NEXT_TEAM_STRING
	.STRING	"NEXT TEAM :\n\p%c",0
	.LONG	FONTGRYP
	.LONG	RAMTEMP1

**************************************************************************
*								         *
* PUT_INITIALS_IN_INFOBOX						 *
* 									 *
* PASS:									 *
* A9 = PLAYER NUMBER - 1						 *
* RETURN:								 *
* NUTIN'								 *
*								         *
**************************************************************************

PUT_INITIALS_IN_INFOBOX
	MMTM	SP,A0,A1,A5,A8,A9,A10,A11

	CALLA	a9_to_a0

	CLR	A11				;RESET SPACE COUNT

	MOVB	*A0(POF_INITIAL1),A14
	CALLR	PENACHO_TO_ASCII_COUNT
	MOVE	A14,@RAMTEMP1,L
	MOVB	*A0(POF_INITIAL2),A14
	CALLR	PENACHO_TO_ASCII_COUNT
	MOVE	A14,@RAMTEMP2,L
	MOVB	*A0(POF_INITIAL3),A14
	CALLR	PENACHO_TO_ASCII_COUNT
	MOVE	A14,@RAMTEMP3,L

	MOVI	[0,-2],A10			;[Y,X] SPACING

	SUBK	3,A11
	JRNZ	PIII_GO				;BR=NOT ALL SPACES
	MOVI	'.',A14				;REPLACE WITH "..."
	MOVE	A14,@RAMTEMP1,L
	MOVE	A14,@RAMTEMP2,L
	MOVE	A14,@RAMTEMP3,L
	MOVK	[0,2],A10			;NEW [Y,X] SPACING
PIII_GO	
	MOVE	A9,A5
	SLL	4,A5
	ADDI	PLAYER_PAL_NUM_TABLE2,A5
	MOVE	*A5,A5,W			;[COLOR,PALETTE]

	SLL	4,A9
	ADDI	INFOBOX_CENTER_XPOS_TABLE,A9
	MOVE	*A9,A9,W
	ZEXT	A9,W
	ADDI	[INFOBOX_Y+94,0],A9

	MOVI	OID_TEXT,B1			;[SOUND,OID]
	CLR	A0				;NO SLEEP TIL
	MOVI	STRCNCONV,A1			;ROUTINE
;	MOVI	HFPAL,A5			;[COLOR,PALETTE]
	MOVI	INITIAL_CHAR_STRING,A8			;POINTER TO STRING
;	MOVI	[0,-2],A10			;[Y,X] SPACING
	MOVI	H18FONT,A11			;FONT
	JSRP	PRINTF

	MMFM	SP,A0,A1,A5,A8,A9,A10,A11
	RETS

**************************************************************************
*								         *
* PENACHO_TO_ASCII_COUNT						 *
*								         *
**************************************************************************

PENACHO_TO_ASCII_COUNT
	CMPI	26,A14
	JRLT	PTA_ALPHA			;BR=DA ALPHABET
	JREQ	PTA_SPACE			;BR=EMPTY SPACE
	MOVI	' ',A14				;Q-MARK
	RETS
PTA_SPACE
	MOVI	' ',A14
	INC	A11
	RETS
PTA_ALPHA
	ADDI	'A',A14
	RETS

INITIAL_CHAR_STRING
	.STRING	"%c%c%c",0
	.LONG	RAMTEMP1
	.LONG	RAMTEMP2
	.LONG	RAMTEMP3

	.end
