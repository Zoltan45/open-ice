	.MLIB	"HHMACS.LIB"
	.FILE	"HHPICK.ASM"
	.WIDTH	132
	.OPTION	B,D,L,T
	.MNOLIST

*
*GET THE SYSTEM STUFF
*
	.INCLUDE	"HH.INC"
	.INCLUDE	"HHPICK.H"
	.INCLUDE	"HHSTRING.H"
	.INCLUDE	"IMGTBL.GLO"
	.INCLUDE	"HHPICK.TBL"
	.INCLUDE	"nonext.tbl"
	.include	"hhpick.e"
;	.include	"hhsnd.g"
	 .ref	set_select_tune
	 .ref	do_sound
	 .ref	do_sound_at_volume
	.include	"hhram.g"
	.include	"hhd.g"
	.include	"hhproc.g"
	.include	"hhmisc.g"
	.include	"hhfade.g"
	.include	"hhtext.g"
	.include	"hhgame.g"
	.include	"hhafunc.g"
	.include	"hhselect.g"
;	.include	"hhcmos.g"
	 .ref	GET_ADJ
	 .ref	AUD1
	.include	"hhc.g"
	.include	"hhpall.g"
;	.include	"hhplayer.g"
	 .ref	PLAYER_1_BLOCK
	 .ref	PLAYER_2_BLOCK
	 .ref	PLAYER_5_BLOCK
	 .ref	PLAYER_6_BLOCK
	 .ref	arrow1t
	 .ref	arrow2t
	 .ref	arrow3t
	 .ref	arrow4t
	.include	"hhutil.g"
	.include	"hhcoin.g"
	.include	"hhstable.g"
	.include	"hhcx.g"
;	.include	"hhcontrl.g"
	 .ref	shadow3
	.include	"hhstabl2.g"
;	.include	"hhcontr2.g"
	 .ref	update_drone_msgs
	.include	"hhgscr.g"
;	.include	"hhstabl3.g"
	.include	"hhpick2.g"
	.include	"hh.g"
;	.include	"hhspeech.g"
	 .ref	spx_gordie_picked

; end of include files

	.REF	WARMSK2

	.BSS	PLAYER_INITIAL_BITS,16
	.BSS	TEAM_SELECT_BITS,8
	.BSS	TEAM_SELECTED_BITS,8

	.BSS	DEFEAT_LIST_STRING,8*44	;=8*(13*3+1+1)+8*3

	.BSS	BLUE_SELECT_OBJ,32
	.BSS	BLUE_MUG_BGND_OBJ,32
	.BSS	RED_SELECT_OBJ,32
	.BSS	RED_MUG_BGND_OBJ,32

	.BSS	TIMER_DIGIT_OBJ,32
	.BSS	TIMES_UP,16

	.BSS	RANDOM_ENABLE_BITS,8
	.BSS	LOCKED_CHAR_BITS,8

	.BSS	TEAM_SELECT_STARTIRQ,32

	.text
	.even

**************************************************************************
*								         *
* INITIAL_ENTRY - ENTER INITIALS AND SELECT TEAM AND PLAYERS		 *
* 									 *
* PASS:									 *
* NUTIN'								 *
* 									 *
* RETURN:								 *
* NUTIN'								 *
*								         *
**************************************************************************

TEAMBOX_X	EQU	38
TEAMBOX_Y	EQU	21 ;17

Y_EDGE		EQU	8
YES_XYPOS	EQU	[91-Y_EDGE,99]
NO_XYPOS	EQU	[91-Y_EDGE,299]

INITIAL_ENTRY
	MOVI	ININTRO_INITQ,A14		
	MOVE	A14,@GAME_STATE,W

	CLR	A14
	MOVB	A14,@LOCKED_CHAR_BITS

	BLACKON					;USE BLACKPAL

	MOVI	FONTGRYP,A0
	CALLA	GETFPAL
	MOVI	REDTXT3P,A0
	CALLA	GETFPAL
	MOVI	ORGTXT1P,A0
	CALLA	GETFPAL

	MOVK	4,A1
	MOVI	PLAYER_PAL_TABLE,A2
IE_PAL_LUPE
	MOVE	*A2+,A0,L
	CALLA	GETFPAL
	DSJS	A1,IE_PAL_LUPE

	CLR	A14
	MOVE	A14,@BLUE_SELECT_OBJ,L		;RESET TEAM SELECT OBJECTS
	MOVE	A14,@RED_SELECT_OBJ,L

	calla	set_select_tune

	MOVI	BOTTOM_METAL_ICE_INIT,B0
	CALLA	MULTIMAKE

;	CREATE	PID_LAMP,INITIAL_LAMP_PROC

	MOVI	[241,201],A9
	CLR	A10
	CREATE	PID_CREDIT,DISPLAY_CREDIT_PROC

	CALLR	INITIAL_GRAPHICS_1

	MOVI	PAIDBOX_INIT,B0
	CALLA	EASYMAKE
	MOVI	[INFOBOX_Y+117,INFOBOX_XL+24],A1
	MOVI	TEXTZVAL-3,A2
	CALLA	SET_SCRNOBJ
	CALLA	INSERT_OBJ
	MOVI	BLUFRMP,A0
	CALLA	CHANGE_PAL

	MOVI	PAIDBOX_INIT,B0
	CALLA	EASYMAKE
	MOVI	[INFOBOX_Y+117,INFOBOX_XR+104],A1
	MOVI	TEXTZVAL-3,A2
	CALLA	SET_SCRNOBJ
	CALLA	INSERT_OBJ
	MOVI	REDFRMP,A0
	CALLA	CHANGE_PAL

	KITN	2
	JREQ	IE_MESSES				;BR=2 PLAYER KIT

	MOVI	PAIDBOX_INIT,B0
	CALLA	EASYMAKE
	MOVI	[INFOBOX_Y+117,INFOBOX_XL+104],A1
	MOVI	TEXTZVAL-3,A2
	CALLA	SET_SCRNOBJ
	CALLA	INSERT_OBJ
	MOVI	BLUFRMP,A0
	CALLA	CHANGE_PAL

	MOVI	PAIDBOX_INIT,B0
	CALLA	EASYMAKE
	MOVI	[INFOBOX_Y+117,INFOBOX_XR+24],A1
	MOVI	TEXTZVAL-3,A2
	CALLA	SET_SCRNOBJ
	CALLA	INSERT_OBJ
	MOVI	REDFRMP,A0
	CALLA	CHANGE_PAL
IE_MESSES
	MOVI	ENTER_INITIALS_MESS,A8
	JSRP	LM_PRINTF

	MOVI	YES_MESS,A8
	JSRP	LM_PRINTF

	MOVI	NO_MESS,A8
	JSRP	LM_PRINTF

	KITN	2
	JREQ	IE_ANSBOX			;BR=2 PLAYER KIT

	MOVK	ADJCHALMODE,A0
	CALLA	GET_ADJ				;CHECK FOR CHALLENGE MODE
	JRZ	IE_ANSBOX			;BR=NO
	MOVI	WINNING_MESS,A8
	SUBK	1,A0
	JRZ	IE_CHALMESS			;BR=4 PLAYER MESSAGE
	MOVI	WINNING2_MESS,A8		;ANY PLAYER MESSAGE
	subk	1,a0
	jrz	IE_CHALMESS
	movi	WINNING3_MESS,a8
IE_CHALMESS
	JSRP	LM_PRINTF
IE_ANSBOX
	MOVI	ANSBOX_INIT,B0
	CALLA	EASYMAKE
	MOVI	52 << 8 + 52,A14
	MOVE	A14,*A8(OCONST),W
	MOVI	GRNFRMP,A0
	CALLA	CHANGE_PAL

	BLACKOFF

	SLEEP	1

	CLR	A0
	CALLA	FADEINF				;FADE DOWN ALL PALETTES
	JSRP	FADE_WAIT

	PUSH	A8

	CLR	A9				;PLAYER NUMBER - 1
	MOVE	@PLAYER_BITS,A10,W		;GET CURRENT PLAYERS

	CLR	A11
	MOVK	ADJFREPL,A0
	CALLA	GET_ADJ				;CHECK FOR FREE PLAY
	JRNZ	IE_INFOBOX_MESS_LUPE		;BR=FREE PLAY

	MOVK	ADJCSTRT,A0
	CALLA	GET_ADJ				;GET NUMBER OF CREDITS TO START
	MOVE	A0,A11

IE_INFOBOX_MESS_LUPE
	BTST	A9,A10
	JRNZ	IE_IML_ACTIVE			;BR=PLAYER ACTIVE

	MOVE	A9,A9
	JRZ	IE_GO_INFOBOX_MESS		;BR=PLAYER 1
	CMPI	3,A9
	JREQ	IE_GO_INFOBOX_MESS		;BR=PLAYER 4(2)		

	KITN	2
	JREQ	IE_IML_NEXT			;BR=2 PLAYER KIT
IE_GO_INFOBOX_MESS

	MOVI	INFOBOX_MESSAGE_INIT,B0
	CALLA	EASYMAKE

	MOVE	A9,*A8(ODATA),W			;PLAYER NUMBER - 1
	MOVE	A11,*A8(ODATA+010H),W		;NUMBER OF CREDITS TO START

	MOVE	A9,A1
	SLL	4,A1
	ADDI	PLAYER_OID3_TABLE,A1
	MOVE	*A1(0),*A8(OID),W

	MOVE	A9,A1
	SLL	4,A1
	ADDI	INFOBOX_CENTER_XPOS_TABLE,A1
	MOVE	*A1,A1,W
	MOVI	[INFOBOX_Y+92,-30],A14
	ADDXY	A14,A1
	CLR	A2
	CALLA	SET_SCRNOBJ

	CALLA	INSERT_OBJ

IE_IML_ACTIVE
	CREATE	PID_IND,PERIODS_PAID_PROC
IE_IML_NEXT
	INC	A9
	CMPI	4,A9
	JRNE	IE_INFOBOX_MESS_LUPE		;BR=NOT DONE WITH PLAYERS

	PULLQ	A8

	MOVK	1,A9				;SET CURRENT STATE TO "YES"
	CLR	A10				;CLEAR LAST SWITCH
	MOVI	60*5,A11			;TIMEOUT TIME
IE_ANSWER_CHECK

	MOVE	@SWITCH,A1,L
	NOT	A1
	ANDI	07C7C7C7CH,A1			;ALL BUTTONS, LEFT, AND RIGHT
	CMP	A10,A1
	JREQ	IE_AC_NAP

	MOVE	A1,A10				;NEW LAST SWITCH

	MOVE	@PLAYER_BITS,A0,W		;GET CURRENT PLAYERS

	CLR	A2
	MOVI	M_SW_T|M_SW_P|M_SW_S,A3
	MOVK	B_SW_L,A4			;LEFT SWITCH BIT

	MOVK	4,A5

IE_AC_CHECK_LUPE
	BTST	A2,A0
	JRZ	IE_AC_CHECK_NEXT		;BR=PLAYER NOT ACTIVE

	MOVE	A1,A14
	AND	A3,A14
	JRNZ	IE_ANSWERED			;BR=ANSWER SELECTED

	BTST	A4,A1
	JRZ	IE_AC_CHECK_RIGHT		;BR=NOT LEFT
	MOVE	A9,A9
	JRNZ	IE_AC_CHECK_NEXT		;BR=ALREADY "YES"
	MOVK	1,A9
	JRUC	IE_AC_UPDATE
IE_AC_CHECK_RIGHT
	MOVE	A4,A14
	INC	A14
	BTST	A14,A1
	JRZ	IE_AC_CHECK_NEXT		;BR=NOT RIGHT
	MOVE	A9,A9
	JRZ	IE_AC_CHECK_NEXT		;BR=ALREADY "NO"
	CLR	A9
	JRUC	IE_AC_UPDATE
IE_AC_CHECK_NEXT
	INC	A2				;NEXT PLAYER BIT POSITION
	SLL	8,A3				;NEXT BUTTON SWITCH MASK
	ADDK	8,A4				;NEXT JOYSTICK SWITCH POSITION

	KITN	4
	JREQ	IE_AC_DSJ			;BR=4 PLAYER KIT
	CMPI	4,A2
	JREQ	IE_AC_NAP			;BR=CHECKED 2 PLAYER LAST
	MOVK	3,A2

IE_AC_DSJ
	DSJ	A5,IE_AC_CHECK_LUPE

	JRUC	IE_AC_NAP

IE_AC_UPDATE
	CALLR	MOVE_SOUND

	MOVI	YES_XYPOS,A1
	MOVI	YESBLK1,A3
	MOVI	GRNFRMP,A5
	MOVE	A9,A9
	JRNZ	IE_AC_UPDATE_GO			;BR=HI-LITE "YES"
	MOVI	NO_XYPOS,A1
	MOVI	NOBLK1,A3
	MOVI	REDFRMP,A5
IE_AC_UPDATE_GO
	MOVK	1,A2
	CALLA	SET_SCRNOBJ

	MOVE	A3,A1
	MOVI	DMAWNZ,A4
	CALLA	ANI

	MOVE	A5,A0
	CALLA	CHANGE_PAL

IE_AC_NAP
	SLEEP	1
	DSJ	A11,IE_ANSWER_CHECK		;TIMEOUT CHECK

	CLR	A9				;FORCE "NO"
	MOVI	NO_XYPOS,A1
	MOVK	1,A2
	CALLA	SET_SCRNOBJ

	MOVI	NOBLK1,A1
	MOVI	DMAWNZ,A4
	CALLA	ANI

	MOVI	REDFRMP,A0
	CALLA	CHANGE_PAL

IE_ANSWERED
	CALLA	PULL_ANIM			;STOP BLINK

	CALLR	PICK_SOUND

	MOVK	5,A10
IE_FLASH_LUPE
	MOVE	*A8(OCTRL),A14,W		;TURN ON CONSTANT NON-ZERO
	XORI	DMAWNZ,A14
	ORI	DMACNZ,A14
	MOVE	A14,*A8(OCTRL),W

	SLEEP	3

	MOVE	*A8(OCTRL),A14,W		;TURN ON WRITE NON-ZERO
	XORI	DMACNZ,A14
	ORI	DMAWNZ,A14
	MOVE	A14,*A8(OCTRL),W

	SLEEP	3

	DSJ	A10,IE_FLASH_LUPE

	MOVI	0101H,A14
	MOVE	A14,*A8(OCONST),W

	SLEEP	20

	CALLA	CLRTEXT

	MOVI	OID_SELECT_1,A0
	CALLA	KILOBJ_ALL

	MOVE	A9,A9
	JRZ	IE_TEAM_SELECT			;BR=THE ANSWER IS "NO!"

	CALLR	CENTER_ICE_BGND

	MOVI	CENTER_NUMBERS_INIT,B0
	KITN	4
	JREQ	IE_MAKE_CENTER_NUMBERS		;BR=4 PLAYER KIT
	MOVI	CENTER_NUMBERS_2P_INIT,B0
IE_MAKE_CENTER_NUMBERS
	CALLA	MULTIMAKE

	MOVI	ININTRO_INITENT,A14
	MOVE	A14,@GAME_STATE,W

	MOVI	SELECTFRAME_INIT,B0
	CALLA	MULTIMAKE
	MOVI	[2,5],A1
	MOVK	1,A2
	CALLA	SET_SCRNOBJ
	CALLA	INSERT_OBJ
	MOVI	BLUFRMP,A0
	CALLA	CHANGE_PAL_MULTI

	MOVI	SELECTFRAME_INIT,B0
	CALLA	MULTIMAKE
	MOVI	[2,200],A1			;UNFLIPPED POSITION
;	MOVK	M_FLIPH,A0
;	CALLA	SET_FLIP
;	MOVI	[2,394],A1
	MOVK	1,A2
	CALLA	SET_SCRNOBJ
	CALLA	INSERT_OBJ
	MOVI	REDFRMP,A0
	CALLA	CHANGE_PAL_MULTI

	MOVK	011B,A11			;LEFT TEAM MASK
	MOVE	@PLAYER_BITS,A10,W		;GET CURRENT PLAYERS
	CLR	A9				;PLAYER NUMBER - 1
IE_JOININ_MESSAGE_LUPE
	BTST	A9,A10
	JRNZ	IE_JML_NEXT			;BR=PLAYER ACTIVE

	MOVE	A9,A9
	JRZ	IE_JOININ_MESSAGE		;BR=PLAYER 1
	CMPI	3,A9
	JREQ	IE_JOININ_MESSAGE		;BR=PLAYER 4(2)		

	KITN	2
	JREQ	IE_JML_NEXT			;BR=2 PLAYER KIT

IE_JOININ_MESSAGE
	MOVI	JOININ_MESSAGE_INIT,B0
	CALLA	EASYMAKE

	MOVK	1,A14
	SLL	A9,A14
	MOVE	A14,*A8(ODATA),W		;PLAYER MASK

	MOVE	A9,A1
	SLL	4,A1
	ADDI	INITIAL_MESS_CENTER_XPOS_TABLE,A1
	MOVE	*A1,A1,W
	MOVI	[100,-42],A14
	ADDXY	A14,A1
	CLR	A2
	CALLA	SET_SCRNOBJ

	MOVI	CHALNEED_MESSAGE_ANIM,A1

	MOVE	A10,A14
	AND	A11,A14
	JRZ	IE_JML_ANIM			;BR=PUT UP CHALLENGER MESSAGE

	MOVI	TEAMNEED_MESSAGE_ANIM,A1
IE_JML_ANIM
	CALLA	STRT_ANIM
	CALLA	INSERT_OBJ
IE_JML_NEXT
	INC	A9
	CMPI	2,A9
	JRNE	IE_JML_CHECK_LAST		;BR=DON'T CHANGE TEAM MASK
	SLL	2,A11				;SHIFT TO RIGHT TEAM MASK
	JRUC	IE_JOININ_MESSAGE_LUPE
IE_JML_CHECK_LAST
	CMPI	4,A9
	JRNE	IE_JOININ_MESSAGE_LUPE		;BR=NOT DONE WITH PLAYERS

	CLR	A14
	MOVB	A14,@PLAYER_INITIAL_BITS	;RESET BITS
	MOVE	A14,@TIMER_DIGIT_OBJ,L		;NO TIMER DIGIT EXISTING
	MOVE	A14,@TIMES_UP,W			;RESET TIME'S UP FLAG

	CLR	A10				;PLAYER PROCESSES RUNNING
IE_INITIAL_PROC_LUPE
	MOVE	@PLAYER_BITS,A2,W		;GET CURRENT PLAYERS
	CLR	A9				;PLAYER NUMBER - 1
IE_INPL_LUPE
	BTST	A9,A2
	JRZ	IE_INPL_NEXT			;BR=PLAYER NOT ACTIVE
	BTST	A9,A10
	JRNZ	IE_INPL_NEXT			;BR=PROCESS ALREADY EXISTS

	MOVK	1,A14
	SLL	A9,A14
	OR	A14,A10

	CREATE	PID_INITIAL_SEL,INITIAL_SELECT_PROC
	MOVI	60*10,A11
	C_A_K	PID_TIMER,SELECT_TIMER_PROC
	MOVE	@TIMER_DIGIT_OBJ,A0,L
	JRZ	IE_INPL_NEXT			;BR=NO TIMER DIGIT EXISTING
	CALLA	DELOBJ				;DELETE OLD DIGIT
	CLR	A14
	MOVE	A14,@TIMER_DIGIT_OBJ,L		;NO MORE TIMER OBJECT

IE_INPL_NEXT
	INC	A9
	CMPI	4,A9
	JRNE	IE_INPL_LUPE			;BR=NOT DONE WITH PLAYERS

	MOVB	@PLAYER_INITIAL_BITS,A14
	XOR	A10,A14
;	JRZ	IE_INITIAL_SELECT_DONE		;BR=EVERYBODY DONE
	JRNZ	IE_INPL_CHECK_DONE		;BR=SOMEBODY'S NOT ENTERED

	MOVI	PID_TIMER,A0
	CALLA	KILLPROC_ALL
	MOVE	@TIMER_DIGIT_OBJ,A0,L
	JRZ	IE_INPL_CHECK_DONE		;BR=NO TIMER DIGIT EXISTING
	CALLA	DELOBJ				;DELETE OLD DIGIT
	CLR	A14
	MOVE	A14,@TIMER_DIGIT_OBJ,L		;NO MORE TIMER OBJECT

IE_INPL_CHECK_DONE
	MOVI	PID_INITIAL_SEL,A0
	CALLA	EXISTP_ALL
	JRZ	IE_INITIAL_SELECT_DONE

;	MOVE	@TIMES_UP,A14,W
;	JRNZ	IE_INITIAL_SELECT_DONE		;BR=TIME'S UP DUMMY!

	SLEEP	1
	JRUC	IE_INITIAL_PROC_LUPE
IE_INITIAL_SELECT_DONE
;	MOVI	PID_INITIAL_SEL,A0
;	CALLA	KILLPROC_ALL
;
;	MOVI	PID_TIMER,A0
;	CALLA	KILLPROC_ALL

	MOVI	OID_SELECT_1,A0
	CALLA	KILOBJ_ALL

	MOVI	OID_PLAYER_1,A0
	MOVI	0FF0FH,A1
	CALLA	KILOBJ

	MOVI	OID_TURBO_1,A0
	MOVI	0FFF0H,A1
	CALLA	KILOBJ

;	MOVI	TOP_METAL_ICE_INIT,B0
;	CALLA	MULTIMAKE

;	MOVE	@TIMER_DIGIT_OBJ,A0,L
;	JRZ	IE_TEAM_SELECT			;BR=NO TIMER DIGIT EXISTING
;	CALLA	DELOBJ				;DELETE OLD DIGIT
;	CLR	A14
;	MOVE	A14,@TIMER_DIGIT_OBJ,L		;NO MORE TIMER OBJECT

IE_TEAM_SELECT
	MOVI	METAL_ICE_INIT,B0
	CALLA	MULTIMAKE

	MOVI	ININTRO_TEAMSEL,A14
	MOVE	A14,@GAME_STATE,W

	MOVI	OID_JUNK,A0
	CALLA	KILOBJ_ALL

	MOVI	OID_SELECT_3,A0
	CALLA	KILOBJ_ALL

	CREATE	PID_IND,SELECT_TEAM_MESS_PROC

	MOVI	WEST_FLAG_INIT,B0
	CALLA	EASYMAKE

	MOVI	EAST_FLAG_INIT,B0
	CALLA	EASYMAKE

	MOVI	TEAMFRAME_INIT,B0
	CALLA	MULTIMAKE

	CALLR	INITIAL_GRAPHICS_2

	MOVI	TEAMS_INIT,B0
	CALLA	MULTIMAKE

	CLR	A14				;SET NULL TEAMS AND CLEAR SHIT
	MOVE	A14,@team1,W
	MOVE	A14,@team2,W
	MOVE	A14,@TEAM1_SWAP,W
	MOVE	A14,@TEAM2_SWAP,W
	MOVB	A14,@RANDOM_ENABLE_BITS

	MOVB	@TEAM_SELECT_BITS,A9		;GET TEAM SELECT PLAYERS
	MOVK	011B,A10
	MOVE	A9,A14
	AND	A10,A14
	JRNZ	IE_CHECK_RIGHT_TEAM		;BR=LEFT TEAM ACTIVE

	MOVI	JOININ_MESSAGE_INIT,B0
	CALLA	EASYMAKE

	MOVE	A10,*A8(ODATA),W		;TEAM MASK

	MOVE	*A8(OCTRL),A14,W
	ORI	DMAWNZ,A14
	MOVE	A14,*A8(OCTRL),W

	MOVI	[INFOBOX_Y+36,INFOBOX_XL+46],A1
	CLR	A2
	CALLA	SET_SCRNOBJ

	MOVI	CHALNEED_MESSAGE_ANIM,A1
	CALLA	STRT_ANIM

	CALLA	INSERT_OBJ
	JRUC	IE_TEAM_SELECT_START

IE_CHECK_RIGHT_TEAM
	MOVK	01100B,A10
	AND	A10,A9
	JRNZ	IE_TEAM_SELECT_START		;BR=RIGHT TEAM ACTIVE

	MOVI	JOININ_MESSAGE_INIT,B0
	CALLA	EASYMAKE

	MOVE	A10,*A8(ODATA),W		;TEAM MASK

	MOVE	*A8(OCTRL),A14,W
	ORI	DMAWNZ,A14
	MOVE	A14,*A8(OCTRL),W

	MOVI	[INFOBOX_Y+36,INFOBOX_XR+46],A1
	CLR	A2
	CALLA	SET_SCRNOBJ

	MOVI	CHALNEED_MESSAGE_ANIM,A1
	CALLA	STRT_ANIM

	CALLA	INSERT_OBJ

IE_TEAM_SELECT_START
	CLR	A14
	MOVB	A14,@TEAM_SELECTED_BITS		;RESET TEAM SELECTED PLAYERS
	MOVB	A14,@PLAYER_INITIAL_BITS	;RESET BITS
	MOVE	A14,@TIMER_DIGIT_OBJ,L		;NO TIMER DIGIT EXISTING
	MOVE	A14,@TIMES_UP,W			;RESET TIME'S UP FLAG
	MOVE	A14,@TEAM_SELECT_STARTIRQ,L	;RESET TEAM SELECTED PLAYERS

	CLR	A10				;PLAYER PROCESSES RUNNING
IE_TEAM_SELECT_PROC_LUPE
	MOVB	@TEAM_SELECT_BITS,A2		;GET TEAM SELECT PLAYERS
	MOVB	@TEAM_SELECTED_BITS,A14		;GET TEAM SELECTED PLAYERS
	XOR	A2,A14
	JRZ	IE_TEAM_SELECTED		;BR=GOT 'EM

	CLR	A9				;PLAYER NUMBER - 1
IE_TEAM_SELECT_LUPE
	BTST	A9,A2
	JRZ	IE_TSL_NEXT			;BR=PLAYER NOT ACTIVE
	BTST	A9,A10
	JRNZ	IE_TSL_NEXT			;BR=PROCESS ALREADY EXISTS

	MOVK	1,A14
	SLL	A9,A14
	OR	A14,A10

	CREATE	PID_TEAM_SEL,TEAM_SELECT_PROC

	MOVI	60*20,A11
	C_A_K	PID_TIMER,SELECT_TIMER_PROC
	MOVE	@TIMER_DIGIT_OBJ,A0,L
	JRZ	IE_TSL_NEXT			;BR=NO TIMER DIGIT EXISTING
	CALLA	DELOBJ				;DELETE OLD DIGIT
	CLR	A14
	MOVE	A14,@TIMER_DIGIT_OBJ,L		;NO MORE TIMER OBJECT

IE_TSL_NEXT
	INC	A9
	CMPI	4,A9
	JRNE	IE_TEAM_SELECT_LUPE		;BR=NOT DONE WITH PLAYERS

	SLEEP	1
	JRUC	IE_TEAM_SELECT_PROC_LUPE

IE_TEAM_SELECTED
	MOVI	PID_TEAM_SEL,A0
	CALLA	KILLPROC_ALL

	MOVI	PID_TIMER,A0
	CALLA	KILLPROC_ALL

	MOVE	@TIMER_DIGIT_OBJ,A0,L
	JRZ	IE_FADEOUT			;BR=NO TIMER DIGIT EXISTING
	CALLA	DELOBJ				;DELETE OLD DIGIT
	CLR	A14
	MOVE	A14,@TIMER_DIGIT_OBJ,L		;NO MORE TIMER OBJECT
IE_FADEOUT
	SLEEP	10

;	MOVI	PID_IND,A0
;	CALLA	KILLPROC_ALL
;
;	MOVI	PID_COLOR,A0			;KILL JOIN IN CYCLES
;	CALLA	KILLPROC_ALL
	calla	KILL_DESTRUCTIBLES

	SLEEP	1

	MOVI	99,A14
	MOVE	A14,@MAX_PALXFERS,W
	CLR	A0
	CALLA	FADEOUTF			;FADE DOWN ALL PALETTES
	JSRP	FADE_WAIT
	CALLA	RESET_MAX_PALXFERS

;	MOVI	PID_PLAYER_1,A0
;	CALLA	KILLPROC_ALL
;	MOVI	PID_PLAYER_2,A0
;	CALLA	KILLPROC_ALL
;	MOVI	PID_PLAYER_5,A0
;	CALLA	KILLPROC_ALL
;	MOVI	PID_PLAYER_6,A0
;	CALLA	KILLPROC_ALL

	CLR	A0
	CLR	A1
	CALLA	KILOBJ				;KILL ALL OBJECTS!

IE_CHECK_NEXT_TEAM
	MOVI	team2,A1			;DRONE TEAM
	MOVI	team1,A2			;HUMAN TEAM
	MOVI	TEAM2_SWAP,A4
	MOVE	*A1,A14,W
	JRZ	IE_GET_NEXT_TEAM		;BR=FOUND DRONE TEAM, RIGHT
	MOVI	team1,A1			;DRONE TEAM
	MOVI	team2,A2			;HUMAN TEAM
	MOVI	TEAM1_SWAP,A4
	MOVE	*A1,A14,W
	JRNZ	IE_DONE				;BR=NO DRONE TEAMS
IE_GET_NEXT_TEAM
	MOVB	@TEAM_SELECT_BITS,A14		;GET TEAM SELECT PLAYERS
	LMO	A14,A9				;GET NEXT TEAM FROM CMOS
	SUBK	31,A9
	NEG	A9
	CALLR	a9_to_a0_mod

;a0 = block of player doing picking
	mmtm	sp,a6,a7
	mmtm	sp,a1,a2	;keep separate
	move	a0,a6
	movb	*a6(POF_NUMBER),a14
	dec	a14
	xori	1,a14
	inc	a14
	GBLOCK	a14,a7		;our teammate
	clr	a1		;set initially to random p1
	clr	a2		;set initially to random p2
;mdp yescmosrecord
;	move	*a6(POF_LOCKED_CHAR),a14,W
;	jrnz	aj2
;mdp yescmosrecord
	move	*a6(POF_CMOS),a14,W
	cmpi	-2,a14
	jrz	aj2
	movk	1,a1
	move	a14,a14
	jrnn	aj2		;player 1 is picked
	movk	2,a1		;player 1 is pick new
aj2	move	*a7(POF_FLAGS),a14,W
	btst	B_PF_HUMAN,a14
	jrz	aj3		;just pick with 1st player, he is not here
;mdp yescmosrecord
;	move	*a7(POF_LOCKED_CHAR),a14,W
;	jrnz	aj3
;mdp yescmosrecord
	move	*a7(POF_CMOS),a14,W
	cmpi	-2,a14
	jrz	aj3
	movk	1,a2
	move	a14,a14
	jrnn	aj3		;player 2 is picked
	movk	2,a2		;player 2 is pick new
aj3	sll	2,a1
	add	a2,a1		;a1 - aabb bitwise of pick team address
	sll	5,a1
	addi	ptr_adr,a1
	move	*a1,a14,L
	mmfm	sp,a1,a2
	jump	a14
ptr_adr	.long	pck_rt		;pick random team (both locked, or not entered)
	.long	pck_p2		;pick team based on player 2 (a7)
	.long	pck_nw		;pick new team
	.long	pck_rt		;pick random team (we don't get here)

	.long	pck_p1		;pick team based on player 1 (a6) (pl1,rnd)
	.long	pck_p12		;pick team based on both players  (pl1,pl2)
	.long	pck_p1		;pick team based on player 1 (a6) (pl1,new)
	.long	pck_p1		;pick team based on player 1 (a6) (pl1,xxx)

	.long	pck_nw		;pick new team                    (new,rnd)
	.long	pck_p2		;pick team based on player 2 (a7) (new,pl2)
	.long	pck_nw		;pick new team                    (new,new)
	.long	pck_nw		;pick new team                    (new,xxx)

	.long	pck_rt		;pick random team (both locked, or not entered)
	.long	pck_p2		;pick team based on player 2 (a7) (xxx,pl2)
	.long	pck_nw		;pick new team			  (xxx,new)
	.long	pck_rt		;pick random team (we don't get here) (xxx,xxx)

pck_rsp	movi	num_special_teams,a0
	calla	RAND0
	addi	first_special_team,a0
	jruc	srtma

pck_rt	movk	26,a0
	calla	RANDU
	move	*a2,a14,W
	cmp	a14,a0
	jrnz	srtma
	inc	a0
	cmpi	26,a0
	jrls	srtma
	movk	1,a0
	jruc	srtma
pck_p12			;here is where we should run a bunch of tests on who
			;to pick, but we just pick p1 based
pck_p1	move	*a6(POF_CMOS),a0,W
	jrn	pck_rt			;we never get here, but just in case
	jruc	pc12a
pck_p2	move	*a7(POF_CMOS),a0,W
	jrn	pck_rt			;we never get here, but just in case
pc12a	calla	get_cmos_record_a
	move	@b_nextteam,a0,W
	jrz	pck_rsp			;some sort of error, pick random
	cmpi	31,a0
	jrz	pck_rsp			;pick random special team
	jruc	srtma
pck_nw	mmtm	sp,a1,a2,a5
	calla	pick_beginning_nextteam
	move	*a2,a14,W
	cmp	a14,a0
	jrnz	srtma1
	calla	pick_alt_nextteam
srtma1	mmfm	sp,a1,a2,a5
srtma	mmfm	sp,a6,a7

IE_SET_TEAM
	MOVE	A0,*A1,W

	SLL	10,A0
	ADDI	team_data,A0
	MOVE	*A0(TD_MEMBER1_LIST),A0,L

	CLR	A3
IE_PLAYER_COUNT
	MOVE	*A0+,A14,W
	JRZ	IE_CHECK_SWAP
	INC	A3
	JRUC	IE_PLAYER_COUNT
IE_CHECK_SWAP
	SUBK	2,A3
	.if	DEBUG
	LOCKON	N
	.endif
	SLL	5,A3
	ADDI	SWAP_TABLES_TABLE,A3
	MOVE	*A3,A3,L
	MOVE	*A3+,A0,W
	CALLA	RAND0
	MOVE	A0,*A4,W			;DRONE PLAYERS PICKED

	MOVE	@team1_home,A0,W
	MOVE	@team2_home,A1,W
	CMP	A0,A1
	JRNE	IE_DONE				;BR=NO SIDE CONFLICT

	MOVB	@TEAM_SELECT_BITS,A14		;GET TEAM SELECT PLAYERS
	SRL	2,A14
	JRZ	IE_TOGGLE_TEAM2			;BR=TEAM 1 HAS FIRST PRIORITY

	XORI	1,A0				;TOGGLE HOME/AWAY TEAM 1
	MOVE	A0,@team1_home,W
	JRUC	IE_DONE
IE_TOGGLE_TEAM2
	XORI	1,A1				;TOGGLE HOME/AWAY TEAM 2
	MOVE	A1,@team2_home,W

IE_DONE
	RETP

**************************************************************************
*								         *
* INITIAL_GRAPHICS_1 - FIRST GRAPHIC LAYER				 *
* 									 *
* PASS:									 *
* NUTIN'								 *
* 									 *
* RETURN:								 *
* NUTIN'								 *
*								         *
**************************************************************************

INITIAL_GRAPHICS_1
	MOVI	INFOBOXES_INIT,B0
	CALLA	EASYMAKE
	MOVI	[INFOBOX_Y,INFOBOX_XL],A1
	CLR	A2
	CALLA	SET_SCRNOBJ
	CALLA	INSERT_OBJ
	MOVI	BLUFRMP,A0
	CALLA	CHANGE_PAL

	MOVI	INFOBOXES_BGND_INIT,B0
	CALLA	EASYMAKE
	MOVI	[INFOBOX_Y,INFOBOX_XL],A1
	MOVK	1,A2
	CALLA	SET_SCRNOBJ
	CALLA	INSERT_OBJ

	MOVI	INFOBOXES_BGND_INIT,B0
	CALLA	EASYMAKE
	MOVI	[INFOBOX_Y,INFOBOX_XL+80],A1
	MOVK	1,A2
	CALLA	SET_SCRNOBJ
	CALLA	INSERT_OBJ

	MOVI	INFOBOXES_INIT,B0
	CALLA	EASYMAKE
	MOVI	[INFOBOX_Y,INFOBOX_XR],A1
	CLR	A2
	CALLA	SET_SCRNOBJ
	CALLA	INSERT_OBJ
	MOVI	REDFRMP,A0
	CALLA	CHANGE_PAL

	MOVI	INFOBOXES_BGND_INIT,B0
	CALLA	EASYMAKE
	MOVI	[INFOBOX_Y,INFOBOX_XR],A1
	MOVK	1,A2
	CALLA	SET_SCRNOBJ
	CALLA	INSERT_OBJ

	MOVI	INFOBOXES_BGND_INIT,B0
	CALLA	EASYMAKE
	MOVI	[INFOBOX_Y,INFOBOX_XR+80],A1
	MOVK	1,A2
	CALLA	SET_SCRNOBJ
	CALLA	INSERT_OBJ

	RETS

**************************************************************************
*								         *
* INITIAL_GRAPHICS_2 - SECOND GRAPHIC LAYER				 *
* 									 *
* PASS:									 *
* NUTIN'								 *
* 									 *
* RETURN:								 *
* NUTIN'								 *
*								         *
**************************************************************************

INITIAL_GRAPHICS_2
	MOVI	INFOBOX_HEADER_INIT,B0
	CALLA	EASYMAKE
	MOVI	[INFOBOX_Y,INFOBOX_XL],A1
	MOVK	1,A2
	CALLA	SET_SCRNOBJ
	CALLA	INSERT_OBJ

	MOVI	INFOBOX_HEADER_BGND_INIT,B0
	CALLA	EASYMAKE
	MOVI	[INFOBOX_Y,INFOBOX_XL],A1
	MOVK	10,A2
	CALLA	SET_SCRNOBJ
	CALLA	INSERT_OBJ
	MOVE	A8,@BLUE_MUG_BGND_OBJ,L

	MOVI	INFOBOX_HEADER_INIT,B0
	CALLA	EASYMAKE
	MOVE	*A8(OCTRL),A14,W
	ORI	M_FLIPH,A14
	MOVE	A14,*A8(OCTRL),W
	MOVI	[INFOBOX_Y,INFOBOX_XR+178],A1
	MOVK	1,A2
	CALLA	SET_SCRNOBJ
	CALLA	INSERT_OBJ

	MOVI	INFOBOX_HEADER_BGND_INIT,B0
	CALLA	EASYMAKE
	MOVE	*A8(OCTRL),A14,W
	ORI	M_FLIPH,A14
	MOVE	A14,*A8(OCTRL),W
	MOVI	[INFOBOX_Y,INFOBOX_XR+178],A1
	MOVK	10,A2
	CALLA	SET_SCRNOBJ
	CALLA	INSERT_OBJ
	MOVI	TMBKBLUP,A0
	CALLA	CHANGE_PAL
	MOVE	A8,@RED_MUG_BGND_OBJ,L

	RETS

METAL_ICE_INIT
	.byte	4, 0, 0, 1	;OBJCNT, PRCCNT, IMGPALCNT, PALCNT
	.long	METALP		;IMGPAL
	.word	OID_SELECT_1, OM_POS|OM_INSERT	;OID, GLOBAL_OPTIONS
	.long	[0,0],[0,0],100
*        .long IMG
*        .word OCTRL, OFLAGS, OZOFF
*        .word OPTIONS

	LWWWW	METAL1, DMAWNZ, M_SCRNOBJ|M_NOSCALE, 0, 0
	LWWWW	METAL2, DMAWNZ, M_SCRNOBJ|M_NOSCALE, 0, 0
	LWWWW	METAL3, DMAWNZ, M_SCRNOBJ|M_NOSCALE, 0, 0
	LWWWW	METAL4, DMAWNZ, M_SCRNOBJ|M_NOSCALE, 0, 0

METAL_OPEN_ICE_INIT
	.byte	9, 0, 0, 2	;OBJCNT, PRCCNT, IMGPALCNT, PALCNT
	.long	METALP		;IMGPAL
	.long	MARKSP		;IMGPAL
	.word	OID_SELECT_1, OM_POS|OM_INSERT	;OID, GLOBAL_OPTIONS
	.long	[0,0],[0,0],100
*        .long IMG
*        .word OCTRL, OFLAGS, OZOFF
*        .word OPTIONS

	LWWWW	METAL1, DMAWNZ, M_SCRNOBJ|M_NOSCALE, 0, 0
	LWWWW	METAL2, DMAWNZ, M_SCRNOBJ|M_NOSCALE, 0, 0
	LWWWW	METAL3, DMAWNZ, M_SCRNOBJ|M_NOSCALE, 0, 0
	LWWWW	METAL4, DMAWNZ, M_SCRNOBJ|M_NOSCALE, 0, 0
	LWWWW	CENTA, DMAWNZ, M_SCRNOBJ|M_NOSCALE, -1, 0
	LWWWW	CENTB, DMAWNZ, M_SCRNOBJ|M_NOSCALE, -1, 0
	LWWWW	CENTC, DMAWNZ, M_SCRNOBJ|M_NOSCALE, -1, 0
	LWWWW	CENTD, DMAWNZ, M_SCRNOBJ|M_NOSCALE, -1, 0
	LWWWW	OPENEMB3, DMAWNZ, M_SCRNOBJ|M_NOSCALE, -1, 0

BOTTOM_METAL_ICE_INIT
	.byte	10, 0, 0, 2	;OBJCNT, PRCCNT, IMGPALCNT, PALCNT
	.long	METALP		;IMGPAL
	.long	MARKSP		;IMGPAL
	.word	OID_SELECT_1, OM_POS|OM_INSERT	;OID, GLOBAL_OPTIONS
	.long	[0,0],[0,0],100
*        .long IMG
*        .word OCTRL, OFLAGS, OZOFF
*        .word OPTIONS

	LWWWW	BOTA, DMAWNZ, M_SCRNOBJ|M_NOSCALE, -1, 0
	LWWWW	BOTB, DMAWNZ, M_SCRNOBJ|M_NOSCALE, -1, 0
	LWWWW	BOTC, DMAWNZ, M_SCRNOBJ|M_NOSCALE, -1, 0
	LWWWW	BOTD, DMAWNZ, M_SCRNOBJ|M_NOSCALE, -1, 0
	LWWWW	BOTE, DMAWNZ, M_SCRNOBJ|M_NOSCALE, -1, 0
	LWWWW	BOTF, DMAWNZ, M_SCRNOBJ|M_NOSCALE, -1, 0
	LWWWW	METAL1, DMAWNZ, M_SCRNOBJ|M_NOSCALE, 0, 0
	LWWWW	METAL2, DMAWNZ, M_SCRNOBJ|M_NOSCALE, 0, 0
	LWWWW	METAL3, DMAWNZ, M_SCRNOBJ|M_NOSCALE, 0, 0
	LWWWW	METAL4, DMAWNZ, M_SCRNOBJ|M_NOSCALE, 0, 0

CENTER_METAL_ICE_INIT
;	.byte	12, 0, 0, 2	;OBJCNT, PRCCNT, IMGPALCNT, PALCNT
	.byte	9, 0, 0, 2	;OBJCNT, PRCCNT, IMGPALCNT, PALCNT
	.long	METALP		;IMGPAL
	.long	MARKSP		;IMGPAL
	.word	OID_SELECT_1, OM_POS|OM_INSERT	;OID, GLOBAL_OPTIONS
	.long	[0,0],[0,0],100
*        .long IMG
*        .word OCTRL, OFLAGS, OZOFF
*        .word OPTIONS

	LWWWW	CENTA, DMAWNZ, M_SCRNOBJ|M_NOSCALE, -1, 0
	LWWWW	CENTB, DMAWNZ, M_SCRNOBJ|M_NOSCALE, -1, 0
	LWWWW	CENTC, DMAWNZ, M_SCRNOBJ|M_NOSCALE, -1, 0
	LWWWW	CENTD, DMAWNZ, M_SCRNOBJ|M_NOSCALE, -1, 0
;	LWWWW	CENTE, DMAWNZ, M_SCRNOBJ|M_NOSCALE, -1, 0
;	LWWWW	CENTF, DMAWNZ, M_SCRNOBJ|M_NOSCALE, -1, 0
;	LWWWW	CENTG, DMAWNZ, M_SCRNOBJ|M_NOSCALE, -1, 0
;	LWWWW	CENTH, DMAWNZ, M_SCRNOBJ|M_NOSCALE, -1, 0
	LWWWW	OPENEMB3, DMAWNZ, M_SCRNOBJ|M_NOSCALE, -1, 0
	LWWWW	METAL1, DMAWNZ, M_SCRNOBJ|M_NOSCALE, 0, 0
	LWWWW	METAL2, DMAWNZ, M_SCRNOBJ|M_NOSCALE, 0, 0
	LWWWW	METAL3, DMAWNZ, M_SCRNOBJ|M_NOSCALE, 0, 0
	LWWWW	METAL4, DMAWNZ, M_SCRNOBJ|M_NOSCALE, 0, 0

CENTER_NUMBERS_INIT
	.byte	4, 0, 0, 1	;OBJCNT, PRCCNT, IMGPALCNT, PALCNT
	.long	MARKSP		;IMGPAL
	.word	OID_SELECT_1, OM_POS|OM_INSERT	;OID, GLOBAL_OPTIONS
	.long	[0,0],[0,0],100
*        .long IMG
*        .word OCTRL, OFLAGS, OZOFF
*        .word OPTIONS
	LWWWW	POSITION1, DMAWNZ, M_SCRNOBJ|M_NOSCALE, -2, 0
	LWWWW	POSITION2, DMAWNZ, M_SCRNOBJ|M_NOSCALE, -2, 0
	LWWWW	POSITION3, DMAWNZ, M_SCRNOBJ|M_NOSCALE, -2, 0
	LWWWW	POSITION4, DMAWNZ, M_SCRNOBJ|M_NOSCALE, -2, 0


CENTER_NUMBERS_2P_INIT
	.byte	2, 0, 0, 1	;OBJCNT, PRCCNT, IMGPALCNT, PALCNT
	.long	MARKSP		;IMGPAL
	.word	OID_SELECT_1, OM_POS|OM_INSERT	;OID, GLOBAL_OPTIONS
	.long	[0,0],[0,0],100
*        .long IMG
*        .word OCTRL, OFLAGS, OZOFF
*        .word OPTIONS
	LWWWW	POSITION1, DMAWNZ, M_SCRNOBJ|M_NOSCALE, -2, 0
	LWWWW	POSITION2A, DMAWNZ, M_SCRNOBJ|M_NOSCALE, -2, 0


TOP_METAL_ICE_INIT
	.byte	11, 0, 0, 2	;OBJCNT, PRCCNT, IMGPALCNT, PALCNT
	.long	METALP		;IMGPAL
	.long	MARKSP		;IMGPAL
	.word	OID_SELECT_1, OM_POS|OM_INSERT	;OID, GLOBAL_OPTIONS
	.long	[0,0],[0,0],100
*        .long IMG
*        .word OCTRL, OFLAGS, OZOFF
*        .word OPTIONS

	LWWWW	TOP1A, DMAWNZ, M_SCRNOBJ|M_NOSCALE, -1, 0
	LWWWW	TOP1B, DMAWNZ, M_SCRNOBJ|M_NOSCALE, -1, 0
	LWWWW	TOP1C, DMAWNZ, M_SCRNOBJ|M_NOSCALE, -1, 0
	LWWWW	TOP1D, DMAWNZ, M_SCRNOBJ|M_NOSCALE, -1, 0
	LWWWW	TOP1E, DMAWNZ, M_SCRNOBJ|M_NOSCALE, -1, 0
	LWWWW	TOP1F, DMAWNZ, M_SCRNOBJ|M_NOSCALE, -1, 0
	LWWWW	TOP1G, DMAWNZ, M_SCRNOBJ|M_NOSCALE, -1, 0
	LWWWW	METAL1, DMAWNZ, M_SCRNOBJ|M_NOSCALE, 0, 0
	LWWWW	METAL2, DMAWNZ, M_SCRNOBJ|M_NOSCALE, 0, 0
	LWWWW	METAL3, DMAWNZ, M_SCRNOBJ|M_NOSCALE, 0, 0
	LWWWW	METAL4, DMAWNZ, M_SCRNOBJ|M_NOSCALE, 0, 0

PLAYER_PAL_TABLE
	.LONG	PRPTXT3P,BLUTXT3P,GLDTXT1P,GRNTXT3P

PLAYER_PAL_NUM_TABLE
	.WORD	HFPAL+0303H,HFPAL+0404H,HFPAL+0505H,HFPAL+0606H

ENTER_INITIALS_MESS
	MESS_MAC2 H18FONT,-1,0,200,20,HFPAL+0202H,STRCNCONV,OID_TEXT
	.STRING	"ENTER INITIALS FOR\nRECORD KEEPING?",0
	.EVEN

YES_MESS
	MESS_MAC2 H50FONT,-2,0,(YES_XYPOS & 0FFFFH),(YES_XYPOS >> 16)+Y_EDGE,HFPAL,STRCNCONV,OID_TEXT
	.STRING	"YES",0
	.EVEN

NO_MESS
	MESS_MAC2 H50FONT,-2,0,(NO_XYPOS & 0FFFFH),(NO_XYPOS >> 16)+Y_EDGE,HFPAL,STRCNCONV,OID_TEXT
	.STRING	"NO",0
	.EVEN

WINNING_MESS
	MESS_MAC2 H11WFONT,-1,0,199,155,HFPAL+0202H,STRCNCONV,OID_TEXT
	.STRING	"WHEN 4 PLAYERS PLAY FULL GAME\nWINNING TEAM STAYS ON FOR FREE !",0
	.EVEN

WINNING2_MESS
	MESS_MAC2 H11WFONT,-1,12,199,155-2,HFPAL+0202H,STRCNCONV,OID_TEXT
	.STRING	"FREE GAME FOR\n"
	.STRING	"BEATING ANOTHER PERSON OR\n"
	.STRING	"BEATING COMPUTER BY 3 POINTS!",0
	.EVEN

WINNING3_MESS
	MESS_MAC2 H11WFONT,-1,12,199,155-2,HFPAL+0202H,STRCNCONV,OID_TEXT
	.STRING	"FREE GAME FOR\n"
	.STRING	"BEATING ANOTHER PERSON!",0
	.EVEN

INFOBOX_CENTER_XPOS_TABLE
	.WORD	INFOBOX_XL+50,INFOBOX_XL+130,INFOBOX_XR+50,INFOBOX_XR+130

ANSBOX_INIT
	.long	YESBLK1
	.word	DMAWNZ,M_SCRNOBJ|M_NOVEL|M_NOSCALE
	.word	OM_OID|OM_ANIM|OM_POS|OM_INSERT
	.word	OID_TEXT
	.long	ANSBOX_BLINK_ANIM
	.long	(YES_XYPOS & 0FFFFH) << 16,(YES_XYPOS & 0FFFF0000H),0

ANSBOX_BLINK_ANIM
	LWL	1,AFUNC|20,OBJ_ON
	LWL	1,AFUNC|10,OBJ_OFF
	.long	0

INFOBOXES_INIT
	.long	SLVFRM07
	.word	DMAWNZ,M_SCRNOBJ|M_NOVEL
	.word	OM_OID
	.word	OID_SELECT_2

BLACK_INFOBOX
	.word   00H,77,38
	.long   00H
	.word   -11,-85
	.long   T2FIXED

INFOBOXES_BGND_INIT
	.long	BLACK_INFOBOX
	.word	DMACAL,M_SCRNOBJ|M_NOVEL
	.word	OM_OID
	.word	OID_SELECT_2

PAIDBOX_INIT
	.long	PCKCRDBX
	.word	DMAWNZ,M_SCRNOBJ|M_NOVEL
	.word	OM_OID
	.word	OID_SELECT_2

INFOBOX_MESSAGE_INIT
	.long	INSERT11
	.word	DMAGO,M_SCRNOBJ|M_NOVEL|M_NOSCALE
	.word	OM_OID|OM_ANIM
	.word	OID_SELECT_2
	.long	INFOBOX_MESSAGE_ANIM

INFOBOX_MESSAGE_ANIM
	LWLL	1,AFUNC|1,A_UPDATE_INFOBOX_MESSAGE+2,INFOBOX_MESSAGE_ANIM
	LWL	1,AFUNC|15,OBJ_OFF
	.long	0

SELECTFRAME_INIT
	.byte	 5, 0, 0, 1	;OBJCNT, PRCCNT, IMGPALCNT, PALCNT
	.long	SLVFRM07P	;IMGPAL
	.word	OID_SELECT_3,0	;OID, GLOBAL_OPTIONS
*        .long IMG
*        .word OCTRL, OFLAGS, OZOFF
*        .word OPTIONS

	LWWWW	INITBX01, DMAWNZ, M_SCRNOBJ|M_NOVEL, 0, 0
	LWWWW	INITBX02, DMAWNZ, M_SCRNOBJ|M_NOVEL, 0, 0
	LWWWW	INITBX03, DMAWNZ, M_SCRNOBJ|M_NOVEL, 0, 0
	LWWWW	INITBX04, DMAWNZ, M_SCRNOBJ|M_NOVEL, 0, 0
	LWWWW	INITBX05, DMAWNZ, M_SCRNOBJ|M_NOVEL, 0, 0

JOININ_MESSAGE_INIT
	.long	JOININ11
	.word	DMAWNZ,M_SCRNOBJ|M_NOVEL|M_NOSCALE
	.word	OM_OID
	.word	OID_JUNK

CHALNEED_MESSAGE_ANIM
	LWLL	JOININ11,AFUNC|1,A_CHECK_ACTIVE_PLAYERS+2,CHALNEED_MESSAGE_ANIM
CMA_1
	LWLL	CHALNEED11,AFUNC|1,A_CHECK_ACTIVE_PLAYERS+2,CMA_1
	.long	0

TEAMNEED_MESSAGE_ANIM
	LWLL	JOININ11,AFUNC|1,A_CHECK_ACTIVE_PLAYERS+2,TEAMNEED_MESSAGE_ANIM
TMA_1
	LWLL	TEAMNEED11,AFUNC|1,A_CHECK_ACTIVE_PLAYERS+2,TMA_1
	.long	0

INITIAL_MESS_CENTER_XPOS_TABLE
	.WORD	54,150,249,345

INFOBOX_HEADER_INIT
	.long	TEAMBX1
	.word	DMAWNZ,M_SCRNOBJ|M_NOVEL
	.word	OM_OID
	.word	OID_SELECT_2

INFOBOX_HEADER_BGND_INIT
	.long	TEAMBCK1
	.word	DMAWNZ,M_SCRNOBJ|M_NOVEL
	.word	OM_OID
	.word	OID_SELECT_2

TEAMFRAME_INIT
	.byte	 5, 0, 0, 2	;OBJCNT, PRCCNT, IMGPALCNT, PALCNT
	.long	METBEV2P	;IMGPAL
	.long	BLACKPAL	;IMGPAL
	.word	OID_SELECT_2,OM_POS|OM_INSERT	;OID, GLOBAL_OPTIONS
	.long	[TEAMBOX_X+161,0],[TEAMBOX_Y,0],2
*        .long IMG
*        .word OCTRL, OFLAGS, OZOFF, OPTIONS

	LWWWW	METBEVA, DMAWNZ, M_SCRNOBJ|M_NOSCALE, 0, 0
	LWWWW	METBEVB, DMAWNZ, M_SCRNOBJ|M_NOSCALE, 0, 0
	LWWWW	METBEVC, DMAWNZ, M_SCRNOBJ|M_NOSCALE, 0, 0
	LWWWW	METBEVD, DMAWNZ, M_SCRNOBJ|M_NOSCALE, 0, 0
	LWWWW	TEAMBLACKBOX, DMACAL, M_SCRNOBJ|M_NOSCALE, 1, 0

TEAMBLACKBOX
	.word   00H,324,93
	.long   00H
	.word   161,0
	.long   T2FIXED

TEAMS_INIT
	.byte	 26, 0, 0, 2	;OBJCNT, PRCCNT, IMGPALCNT, PALCNT
	.long	CITYPURPP	;IMGPAL
	.long	CITYBLUEP	;IMGPAL
	.word	OID_SELECT_2,OM_POS|OM_INSERT	;OID, GLOBAL_OPTIONS
	.long	[TEAMBOX_X,0],[TEAMBOX_Y,0],-10
*        .long IMG
*        .word OCTRL, OFLAGS, OZOFF
*        .word OPTIONS

	LWWWW	ANAHEIMS, DMAWNZ, M_SCRNOBJ|M_NOVEL, 0, 0
	LWWWW	CALGARYS, DMAWNZ, M_SCRNOBJ|M_NOVEL, 0, 0
	LWWWW	COLORADS, DMAWNZ, M_SCRNOBJ|M_NOVEL, 0, 0
	LWWWW	EDMONTOS, DMAWNZ, M_SCRNOBJ|M_NOVEL, 0, 0
	LWWWW	LOSANGES, DMAWNZ, M_SCRNOBJ|M_NOVEL, 0, 0
	LWWWW	SANJOSES, DMAWNZ, M_SCRNOBJ|M_NOVEL, 0, 0
	LWWWW	VANCOUVS, DMAWNZ, M_SCRNOBJ|M_NOVEL, 0, 0

	LWWWW	CHICAGOS, DMAWNZ, M_SCRNOBJ|M_NOVEL, 0, 0
	LWWWW	DALLASS, DMAWNZ, M_SCRNOBJ|M_NOVEL, 0, 0
	LWWWW	DETROITS, DMAWNZ, M_SCRNOBJ|M_NOVEL, 0, 0
	LWWWW	STLOUISS, DMAWNZ, M_SCRNOBJ|M_NOVEL, 0, 0
	LWWWW	TORONTOS, DMAWNZ, M_SCRNOBJ|M_NOVEL, 0, 0
	LWWWW	WINNIPES, DMAWNZ, M_SCRNOBJ|M_NOVEL, 0, 0

	LWWWW	FLORIDAS, DMAWNZ, M_SCRNOBJ|M_NOVEL, 0, 0
	LWWWW	NEWJERSS, DMAWNZ, M_SCRNOBJ|M_NOVEL, 0, 0
	LWWWW	NYISLANS, DMAWNZ, M_SCRNOBJ|M_NOVEL, 0, 0
	LWWWW	NYRANGRS, DMAWNZ, M_SCRNOBJ|M_NOVEL, 0, 0
	LWWWW	PHILADES, DMAWNZ, M_SCRNOBJ|M_NOVEL, 0, 0
	LWWWW	TAMPAS, DMAWNZ, M_SCRNOBJ|M_NOVEL, 0, 0
	LWWWW	WASHINGS, DMAWNZ, M_SCRNOBJ|M_NOVEL, 0, 0

	LWWWW	BOSTONS, DMAWNZ, M_SCRNOBJ|M_NOVEL, 0, 0
	LWWWW	BUFFALOS, DMAWNZ, M_SCRNOBJ|M_NOVEL, 0, 0
	LWWWW	HARTFORS, DMAWNZ, M_SCRNOBJ|M_NOVEL, 0, 0
	LWWWW	MONTREAS, DMAWNZ, M_SCRNOBJ|M_NOVEL, 0, 0
	LWWWW	OTTAWAS, DMAWNZ, M_SCRNOBJ|M_NOVEL, 0, 0
	LWWWW	PITTSBUS, DMAWNZ, M_SCRNOBJ|M_NOVEL, 0, 0

WEST_FLAG_INIT
	.long	WEST01
	.word	DMAWNZ,M_SCRNOBJ|M_NOVEL|M_NOSCALE
	.word	OM_OID|OM_POS|OM_ANIM|OM_INSERT
	.word	OID_SELECT_2
	.long	WEST_FLAG_ANIM
	.long	[5,0],[-10,0],0

WEST_FLAG_ANIM
	LW	WEST01,6
	LW	WEST02,6
	LW	WEST03,6
	LW	WEST04,6
	LW	WEST05,6
	LW	WEST06,6
	LW	WEST07,6
	LW	WEST08,6
	LW	WEST09,6
	LW	WEST10,6
	LW	WEST11,6
	LW	WEST12,6
	LW	WEST13,6
	LW	WEST14,6
	LW	WEST15,6
	LW	WEST16,6
	LW	WEST17,6
	LW	WEST18,6
	LW	WEST19,6
	LW	WEST20,6
	.long	0

EAST_FLAG_INIT
	.long	EAST01
	.word	DMAWNZ,M_SCRNOBJ|M_NOVEL|M_NOSCALE
	.word	OM_OID|OM_POS|OM_ANIM|OM_INSERT
	.word	OID_SELECT_2
	.long	EAST_FLAG_ANIM
	.long	[362,0],[-10,0],0

EAST_FLAG_ANIM
	LW	EAST01,6
	LW	EAST02,6
	LW	EAST03,6
	LW	EAST04,6
	LW	EAST05,6
	LW	EAST06,6
	LW	EAST07,6
	LW	EAST08,6
	LW	EAST09,6
	LW	EAST10,6
	LW	EAST11,6
	LW	EAST12,6
	LW	EAST13,6
	LW	EAST14,6
	LW	EAST15,6
	LW	EAST16,6
	LW	EAST17,6
	LW	EAST18,6
	LW	EAST19,6
	LW	EAST20,6
	.long	0

TMBKBLUP:
   .word   16
   .word   07c1fh,02ef9h,026b7h,02276h,01e54h,01a33h,015f2h,011d0h
   .word   00d8fh,0096eh,0054ch,0050bh,000eah,000c8h,000a7h,00086h

BLUFRMP:
   .word   53
   .word   07FFFh,00e7fh,00a5fh,0063fh,0021fh,001ffh,001ffh,001dfh
   .word   001dfh,001bfh,001bfh,0019fh,0019eh,0017eh,0017dh,0015dh
   .word   0015ch,0013ch,0013bh,0011bh,0011ah,000fah,000d9h,000d8h
   .word   000b8h,000b7h,00097h,00076h,00055h,00034h,00033h,00013h
   .word   00012h,00012h,00011h,00011h,00010h,00010h,0000fh,0000fh
   .word   0000eh,0000eh,0000dh,0000dh,0000ch,0000ch,0000bh,0000bh
   .word   0000ah,00009h,00008h,00007h,07FFFH

REDFRMP:
   .word   53
   .word   07FFFh,07d4bh,07d2bh,07d0bh,07cebh,078cbh,078cah,074aah
   .word   074a9h,07089h,07088h,06c68h,06c67h,06847h,06846h,06426h
   .word   06425h,06005h,06004h,05c04h,05c03h,05803h,05402h,05401h
   .word   05001h,05000h,04c00h,04800h,04400h,04000h,04000h,03c00h
   .word   03c00h,03800h,03800h,03400h,03400h,03000h,03000h,02c00h
   .word   02c00h,02c00h,02c00h,02c00h,02c00h,02c00h,02c00h,02c00h
   .word   02c00h,02c00h,02c00h,02c00h,07FFFH

GRNFRMP:
   .word   53
   .word   07c1fh,00fabh,00b8bh,0076bh,0034bh,0032bh,0032ah,0030ah
   .word   00309h,002e9h,002e8h,002c8h,002c7h,002a7h,002a6h,00286h
   .word   00285h,00265h,00264h,00244h,00243h,00223h,00202h,00201h
   .word   001e1h,001e0h,001c0h,001a0h,00180h,00160h,00160h,00140h
   .word   00140h,00120h,00120h,00100h,00100h,000e0h,000e0h,000c0h
   .word   000c0h,000a0h,000a0h,00080h,00080h,00060h,00060h,00040h
   .word   00020h,00000h,00000h,00000h,07FFFH

GLDFRMP:
   .word   53
   .word   00000h,07ffdh,07ffbh,07ff9h,07ff7h,07ff4h,07ff2h,07ff0h
   .word   07feeh,07fech,07feah,07fe8h,07fe5h,07fe3h,07fe1h,07fe0h
   .word   07bc0h,07ba0h,07780h,07780h,07760h,07740h,07320h,07320h
   .word   07300h,06ee0h,06ee0h,06ec0h,06aa0h,06aa0h,06a80h,06660h
   .word   06e80h,06e80h,06a60h,06a60h,06660h,06640h,06240h,06220h
   .word   05e20h,05e20h,05a00h,05a00h,05600h,055e0h,051e0h,051c0h
   .word   04dc0h,04dc0h,049a0h,051c0h,07FFFH

PRPFRMP:
   .word   53
   .word   00000h,07d7fh,07d5fh,07d5fh,07d3fh,07d3fh,07d1fh,07cffh
   .word   07cffh,078deh,074bdh,074bdh,0709ch,06c7bh,06c7bh,0685ah
   .word   06439h,06439h,06018h,06018h,05c17h,05816h,05816h,05415h
   .word   05014h,05014h,04c13h,04812h,04812h,04411h,04411h,04010h
   .word   03c0fh,03c0fh,0380eh,0340dh,0340dh,0300ch,02c0bh,02c0bh
   .word   0280ah,0280ah,02409h,02008h,02008h,01c07h,01806h,01806h
   .word   01405h,01004h,01004h,01004h,07FFFH

**************************************************************************
*								         *
* CENTER_ICE_BGND - MAKE THE CENTER ICE BACKGROUND			 *
* 									 *
* PASS:									 *
* NUTIN'								 *
* RETURN:								 *
* NUTIN'								 *
*								         *
* TRASHES A BUNCH O' REGISTERS!						 *
*								         *
**************************************************************************

CENTER_ICE_BGND
	MOVI	CENTER_METAL_ICE_INIT,B0
	CALLA	MULTIMAKE
	RETS


**************************************************************************
*								         *
* OPEN_ICE_BGND - MAKE THE OPEN ICE METAL BACKGROUND			 *
* 									 *
* PASS:									 *
* NUTIN'								 *
* RETURN:								 *
* NUTIN'								 *
*								         *
* TRASHES A BUNCH O' REGISTERS!						 *
*								         *
**************************************************************************

OPEN_ICE_BGND
	MOVI	METAL_OPEN_ICE_INIT,B0
	CALLA	MULTIMAKE
	RETS


**************************************************************************
*								         *
* SELECT_TIMER_PROC							 *
* 									 *
* PASS:									 *
* A11 = INITIAL SLEEP							 *
*								         *
**************************************************************************

SELECT_TIMER_PROC
	SLEEPR	A11

	MOVI	TIMER_DIGIT_INIT,B0
	CALLA	EASYMAKE
	MOVE	A8,@TIMER_DIGIT_OBJ,L			;TIMER DIGIT OBJECT
	MOVI	TEXTZVAL-100,A9
	MOVE	A9,*A8(OZVAL),L
	CALLA	INSERT_OBJ
;	MOVI	FONTGRYP,A0
	MOVI	REDTXT3P,A0
	CALLA	CHANGE_PAL

STP_RESTART
	MOVI	COUNTDOWN_TABLE,A10
STP_LUPE
	MOVE	*A10+,A1,L
	JRZ	STP_TIMES_UP				;BR=BING!

	MOVI	DMAWNZ,A4
	CALLA	ANI

	MOVI	[126,199],A1
	MOVE	*A8(OSIZE),A0,L
	MOVE	A0,A14
	SRA	1,A0					;HALF Y-SIZE
	ZEXT	A14,W
	SRA	1,A14					;HALF X-SIZE
	MOVX	A14,A0
	SUBXY	A0,A1					;UPPER LEFT
	MOVE	A9,A2
	CALLA	SET_SCRNOBJ

	CALLR	TICK_SOUND

	MOVI	DIGIT_ON_TIME,A11
STP_ON_WAIT
	SLEEP	1
	MOVE	@GAME_STATE,A14,W
	CMPI	INSUBST,A14
	JREQ	STP_ON_NEXT				;BR=DON'T RESET
	MOVE	@NEWCRED,A14,W
	JRNZ	STP_RESTART				;BR=NEW CREDIT
STP_ON_NEXT
	DSJ	A11,STP_ON_WAIT

	CALLA	OBJ_OFF

	MOVI	DIGIT_OFF_TIME,A11
STP_OFF_WAIT
	SLEEP	1
	MOVE	@GAME_STATE,A14,W
	CMPI	INSUBST,A14
	JREQ	STP_OFF_NEXT				;BR=DON'T RESET
	MOVE	@NEWCRED,A14,W
	JRNZ	STP_RESTART				;BR=NEW CREDIT
STP_OFF_NEXT
	DSJ	A11,STP_OFF_WAIT

	JRUC	STP_LUPE
STP_TIMES_UP
	CALLA	DELETE_OBJ

	CLR	A14
	MOVE	A14,@TIMER_DIGIT_OBJ,L			;NO MORE TIMER OBJECT

	MOVK	1,A14
	MOVE	A14,@TIMES_UP,W

	DIE

TICK_SOUND
	PUSH	A4
	MOVI	S_TIMER_TICK,A4
	CALLA	do_sound
	PULLQ	A4
	RETS

TIMER_DIGIT_INIT
	.long	BLACK_INFOBOX
	.word	DMAGO,M_SCRNOBJ|M_NOSCALE|M_NOVEL
	.word	OM_OID
	.word	OID_TIMER

COUNTDOWN_TABLE
	.LONG	FONT519,FONT518,FONT517,FONT516,FONT515
	.LONG	FONT514,FONT513,FONT512,FONT511,FONT510,0

;**************************************************************************
;*								         *
;* INITIAL_LAMP_PROC - FLASH LAMP IF TEAM ACTIVE				 *
;* 									 *
;* PASS:									 *
;* NUTIN'								 *
;*								         *
;**************************************************************************
;
;INITIAL_LAMP_PROC
;	CALLA	LAMPS_OFF
;ILP_LUPE
;	CLR	A0
;
;	MOVB	@TEAM_SELECT_BITS,A1
;	MOVE	A1,A2
;	ANDI	011B,A1				;MASK OUT TEAM
;	JRZ	ILP_CHECK_RIGHT			;BR=LEFT TEAM NOT ACTIVE
;	MOVK	M_LEFT_LAMP,A0
;ILP_CHECK_RIGHT
;	ANDI	01100B,A2			;MASK OUT TEAM
;	JRZ	ILP_FLASH
;	ORI	M_RGHT_LAMP,A0
;ILP_FLASH
;	CALLA	LAMP_ON
;	SLEEP	15
;	CALLA	LAMPS_OFF
;	SLEEP	15
;	JRUC	ILP_LUPE

**************************************************************************
*								         *
* DISPLAY_CREDIT_PROC - DISPLAY CREDITS					 *
* 									 *
* PASS:									 *
* A9  = [Y,X] CENTER POSITION						 *
* A10 = Z POSITION							 *
*								         *
**************************************************************************

DISPLAY_CREDIT_PROC
        MOVI    ADJFREPL,A0
        CALLA   GET_ADJ
	JRZ	DCP_CREDIT_MESSAGE

	MOVI	FREEPLAY_INIT,B0
	CALLA	EASYMAKE
	MOVE	A9,A1
	MOVE	A10,A2
	CALLA	SET_SCRNOBJ
	CALLA	INSERT_OBJ

	MOVE	@GAME_STATE,A14,W
	CMPI	INPLAY,A14
	JAEQ	SUCIDE				;BR=DON'T RESET IN PLAY

DCP_FREE_LUPE
	SLEEP	1
	CLR	A14
	MOVE	A14,@NEWCRED,W			;RESET NEW CREDIT FLAG
	JRUC	DCP_FREE_LUPE

DCP_CREDIT_MESSAGE

	MOVI	CREDIT_INIT,B0
	CALLA	EASYMAKE
	MOVE	A9,A1
	MOVE	A10,A2
	CALLA	SET_SCRNOBJ
	CALLA	INSERT_OBJ

	MOVI	CREDIT_INIT,B0			;"TENS" DIGIT OBJECT
	CALLA	EASYMAKE
	MOVI	01000H|DMAWNZ,A14
	MOVE	A14,*A8(OCTRL),W
	ADDI	[8,0],A9
	MOVE	A9,A1
	DEC	A10
	MOVE	A10,A2
	CALLA	SET_SCRNOBJ
	CALLA	INSERT_OBJ
	MOVE	A8,A11

	MOVI	CREDIT_INIT,B0			;"ONES" DIGIT OBJECT
	CALLA	EASYMAKE
	MOVI	01000H|DMAWNZ,A14
	MOVE	A14,*A8(OCTRL),W
	MOVE	A9,A1
	MOVE	A10,A2
	CALLA	SET_SCRNOBJ
	CALLA	INSERT_OBJ
	MOVE	A8,A10

	JRUC	DCP_NEW_CREDIT

DCP_WAIT_LUPE
	SLEEP	1
	MOVE	@GAME_STATE,A14,W
	CMPI	INGAME,A14
	JRNE	DCP_WL_CHECK_NEW		;BR=NOT END OF PERIOD
	MOVE	*A13(PROCID),A14,W		;MAKE DESTRUCTIBLE
	SLL	17,A14
	SRL	16,A14
	MOVE	A14,*A13(PROCID),W
DCP_WL_CHECK_NEW
	MOVE	@NEWCRED,A14,W
	JRZ	DCP_WAIT_LUPE			;BR=NO FLAG
DCP_NEW_CREDIT
	CLR	A14
	MOVE	A14,@NEWCRED,W			;RESET "NEW" CREDIT MESSAGE FLAG
	calla	update_drone_msgs
	CALLA	CRED_P
	SUBK	10,A0
	JRNN	DCP_CHECK_TEENS

	ADDK	10,A0				;SET "ONES" DIGIT
	SLL	5,A0
	ADDI	DIGIT5_TABLE,A0
	MOVE	*A0,A0,L
	MOVE	A0,*A10(OIMG),L
	MOVE	*A0(ISAG),*A10(OSAG),L
	MOVE	*A0(ISIZE),A1,L
	MOVE	A1,*A10(OUSIZE),L

	SLL	16,A1				;CENTER X POSTION
	SRA	16+1,A1
	MOVE	A9,A14
	SUBXY	A1,A14
	MOVE	A14,*A10(ODAGX),W

	MOVE	*A11(OCTRL),A14,W		;TURN "TENS" DIGIT OFF
	SRL	4,A14
	SLL	4,A14
	MOVE	A14,*A11(OCTRL),W

	JRUC	DCP_WAIT_LUPE

DCP_CHECK_TEENS
	SUBK	10,A0
	JRNN	DCP_CHECK_MORE

	ADDK	10,A0				;SET "ONES" DIGIT
	SLL	5,A0
	ADDI	DIGIT5_TABLE,A0
	MOVE	*A0,A0,L
	MOVE	A0,*A10(OIMG),L
	MOVE	*A0(ISAG),*A10(OSAG),L
	MOVE	*A0(ISIZE),A1,L
	MOVE	A1,*A10(OUSIZE),L

	INC	A1				;COMPENSATE FOR "10" DIGIT
	MOVI	FONT51,A0			;SET "TENS" DIGIT
	JRUC	DCP_UPDATE

DCP_CHECK_MORE
	MOVK	2-1,A14				;TWENTY
DCP_CM_LUPE
	ADDK	1,A14
	SUBK	10,A0
	JRNN	DCP_CM_LUPE

	ADDK	10,A0				;SET "ONES" DIGIT
	SLL	5,A0
	ADDI	DIGIT5_TABLE,A0
	MOVE	*A0,A0,L
	MOVE	A0,*A10(OIMG),L
	MOVE	*A0(ISAG),*A10(OSAG),L
	MOVE	*A0(ISIZE),A1,L
	MOVE	A1,*A10(OUSIZE),L

	SLL	5,A14				;SET "TENS" DIGIT
	ADDI	DIGIT5_TABLE,A14
	MOVE	*A14,A0,L
	JRUC	DCP_UPDATE

DCP_UPDATE
	MOVE	A0,*A11(OIMG),L
	MOVE	*A0(ISAG),*A11(OSAG),L
	MOVE	*A0(ISIZE),A2,L
	MOVE	A2,*A11(OUSIZE),L

	MOVE	*A11(OCTRL),A14,W		;TURN "TENS" DIGIT ON
	SRL	4,A14
	SLL	4,A14
	ADDK	DMAWNZ&0FH,A14
	MOVE	A14,*A11(OCTRL),W

	INC	A2
	ADDXY	A2,A1				;TOTAL WIDTH + 1 PIXEL SPACE
	SLL	16,A1				;CENTER X POSTION
	SRA	16+1,A1
	MOVE	A9,A14
	SUBXY	A1,A14
	MOVE	A14,*A11(ODAGX),W
	ADDXY	A2,A14
	MOVE	A14,*A10(ODAGX),W

	JRUC	DCP_WAIT_LUPE

FREEPLAY_INIT
	.long	FREEBOX
	.word	DMAWAL,M_SCRNOBJ|M_NOVEL
	.word	OM_OID
	.word	OID_CREDIT

CREDIT_INIT
	.long	CREDITBX
	.word	DMAWAL,M_SCRNOBJ|M_NOVEL
	.word	OM_OID
	.word	OID_CREDIT

DIGIT5_TABLE
	.LONG	FONT50,FONT51,FONT52,FONT53,FONT54
	.LONG	FONT55,FONT56,FONT57,FONT58,FONT59

**************************************************************************
*								         *
* A_UPDATE_INFOBOX_MESSAGE - UPDATE MESSAGE IN INACTIVE PLAYER'S INFOBOX *
*								         *
* PASS:									 *
* A8 = MESSAGE OBJECT							 *
* AARG+,L = LOOP BRANCH							 *
*								         *
**************************************************************************

A_UPDATE_INFOBOX_MESSAGE
;	MOVE	@PLAYER_BITS,A0,W		;GET CURRENT PLAYERS

	MOVE	@period,A1,W			;GET UNPAID PLAYERS
	INC	A1
	CALLA	get_period_players
	MOVE	*A8(ODATA),A1,W			;PLAYER NUMBER - 1
	BTST	A1,A0
	JANZ	DELETE_OBJ			;BR=PLAYER ACTIVE

	MOVE	*A8(OCTRL),A4,W
	BTST	1,A4
	JRNZ	AUIM_GO				;BR=WRITE NON-ZERO BIT SET
	ORI	DMAWNZ,A4
	MOVE	A4,*A8(OCTRL),W
	MOVK	30,A14
	MOVB	A14,*A8(ANIMLOOP)		;SET NUMBER OF LOOPS
AUIM_GO
	MOVE	*A8(ODATA+010H),A2,W		;NUMBER OF CREDITS TO START
AUIM_LUPE
	MOVI	INSERT11,A1
	CALLA	CRED_P
	CMP	A2,A0
	JRLT	AUIM_SET			;BR=NOT ENOUGH CREDITS TO START
	MOVI	PRESST11,A1
AUIM_SET
	MOVE	*A8(OIMG),A14,L
	CMP	A14,A1
	JAEQ	A_Anim_DSJ			;BR=DON'T CHANGE MESSAGE
	CALLA	ANI
	JAUC	A_Anim_DSJ

**************************************************************************
*								         *
* A_CHECK_ACTIVE_PLAYERS - IF PLAYERS ACTIVE, THEN DELETE MESSAGE	 *
* 			  ELSE TURN ON MESSAGE AND LOOP			 *
*								         *
* A8 = MESSAGE OBJECT							 *
*								         *
**************************************************************************

A_CHECK_ACTIVE_PLAYERS
	MOVE	@PLAYER_BITS,A0,W		;GET CURRENT PLAYERS
	MOVE	*A8(ODATA),A1,W			;PLAYER MASK
	MOVE	A0,A14
	AND	A1,A14
;	JANZ	DELETE_OBJ			;BR=PLAYER ACTIVE
	JRZ	ACAP_NOT_ACTIVE			;BR=PLAYER NOT ACTIVE
	MOVE	@period,A14,W
	JAZ	DELETE_OBJ			;BR=NOT INTERMISSION
	CALLA	DELETE_OBJ
	MOVE	*A8(ODATA+010H),A9,W		;PLAYER NUMBER - 1
	JAUC	GET_READY_MESSAGE

ACAP_NOT_ACTIVE
	MOVE	*A8(ANIMSCR),A14,L
	CMPI	TEAMNEED_MESSAGE_ANIM,A14
	JREQ	ACAP_CHECK_LOOPS		;BR=ALREADY NEED A TEAMMATE

	ANDI	011B,A1
	JRZ	ACAP_CHECK_RIGHT		;BR=CHECK RIGHT TEAM
	ANDI	011B,A0
	JRZ	ACAP_CHECK_LOOPS		;BR=STILL NEED A CHALLENGER
ACAP_SET_TEAMNEED
	MOVI	TEAMNEED_MESSAGE_ANIM,A1
	MOVE	A1,*A8(ANIMSCR),L
	RETS
ACAP_CHECK_RIGHT
	ANDI	01100B,A0
	JRNZ	ACAP_SET_TEAMNEED		;BR=NEED A TEAMMATE NOW
ACAP_CHECK_LOOPS
	MOVB	*A8(ANIMLOOP),A14		;CHECK FOR LOOPS
	JANZ	A_Anim_DSJ			;BR=WRITE NON-ZERO BIT SET
	MOVK	30,A14
	MOVB	A14,*A8(ANIMLOOP)		;SET NUMBER OF LOOPS
	JAUC	A_Anim_DSJ

**************************************************************************
*								         *
* PERIODS_PAID_PROC - DISPLAY "JOIN IN" OR NUMBER OF PERIODS PAID	 *
*								         *
* PASS:									 *
* A9 = PLAYER NUMBER - 1						 *
*								         *
**************************************************************************

PERIODS_PAID_PROC
	MOVE	A9,A10
	SLL	4,A10
	ADDI	INFOBOX_CENTER_XPOS_TABLE,A10
	MOVE	*A10,A10,W
;	MOVI	[INFOBOX_Y+123,-1],A14
	MOVI	[INFOBOX_Y+117,-26],A14
	ADDXY	A14,A10				;[Y,X] SCREEN ADDRESS

	MOVE	@PLAYER_BITS,A0,W		;GET CURRENT PLAYERS
	BTST	A9,A0
	JRNZ	PPP_GO				;BR=PLAYER ACTIVE

	MOVI	JOININ_INIT,B0
	CALLA	EASYMAKE
	MOVE	A10,A1
	MOVI	TEXTZVAL-4,A2
	CALLA	SET_SCRNOBJ
	CALLA	INSERT_OBJ

	MOVE	A9,A0
	SLL	5,A0
	ADDI	JOININ_PAL_TABLE,A0
	MOVE	*A0,A0,L
	MOVE	A0,A1
	CALLA	CHANGE_PAL
	MMTM	SP,A8,A9,A10
	MOVE	A1,A8				;PALETTE
	MOVK	2,A9				;START
	MOVK	15,A10				;END
	MOVK	3,A11				;TIME
	CREATE	PID_COLOR,CYCLE16
	MMFM	SP,A8,A9,A10

PPP_WAIT_LUPE
	SLEEP	1
	MOVE	@PLAYER_BITS,A0,W		;GET CURRENT PLAYERS
	BTST	A9,A0
	JRZ	PPP_WAIT_LUPE			;BR=PLAYER STILL NOT ACTIVE

	CALLR	PERIOD_PAID_SOUND

	CALLA	DELETE_OBJ			;KILL "JOIN IN"
PPP_GO
	CLR	A11				;CLEAR 2ND PERIOD OBJECT

	MOVI	[-9,-10],A14
	SUBXY	A14,A10

	MOVE	@period,A14,W
	JRZ	PPP_PERIOD_1
	CMPI	1,A14
	JREQ	PPP_PERIOD_2			;BR=SKIP 1ST PUCK
	ADDK	14,A10				;START AT 2ND PUCK POSITION
	CMPI	2,A14
	JREQ	PPP_PERIOD_3			;BR=SKIP 1ST AND 2ND PUCK

	MOVI	PAID_PUCK_INIT,B0		;4TH PERIOD NOT PAID
	CALLA	EASYMAKE
	MOVE	A10,A1
	MOVI	TEXTZVAL-4,A2
	CALLA	SET_SCRNOBJ
	CALLA	INSERT_OBJ

	INC	A9
	CMPI	3,A9
	JRLT	PPP_GET_PBLOCK			;BR=PLAYER 1 OR 2
	ADDK	2,A9
PPP_GET_PBLOCK
	GBLOCK	A9,A9

PPP_4TH_WAIT
	SLEEP	1
	MOVE	*A9(POF_PERIODS_PAID),A14,W
	BTST	3,A14
	JRZ	PPP_4TH_WAIT			;BR=NOT PAID

	MOVI	PCKCRD1P,A0			;CHANGE IT TO ORANGE
	CALLA	CHANGE_PAL

	CALLR	PERIOD_PAID_SOUND

	DIE

PPP_PERIOD_1
	MOVI	PAID_PUCK_INIT,B0		;1ST PERIOD PAID
	CALLA	EASYMAKE
	MOVE	A10,A1
	MOVI	TEXTZVAL-4,A2
	CALLA	SET_SCRNOBJ
	CALLA	INSERT_OBJ
	MOVI	PCKCRD1P,A0			;CHANGE IT TO ORANGE
	CALLA	CHANGE_PAL
PPP_PERIOD_2
	MOVI	PAID_PUCK_INIT,B0		;2ND PERIOD NOT PAID
	CALLA	EASYMAKE
	ADDK	14,A10
	MOVE	A10,A1
	MOVI	TEXTZVAL-4,A2
	CALLA	SET_SCRNOBJ
	CALLA	INSERT_OBJ
	MOVE	A8,A11
PPP_PERIOD_3
	MOVI	PAID_PUCK_INIT,B0		;3RD PERIOD NOT PAID
	CALLA	EASYMAKE
	ADDK	14,A10
	MOVE	A10,A1
	MOVI	TEXTZVAL-4,A2
	CALLA	SET_SCRNOBJ
	CALLA	INSERT_OBJ
	MOVE	A8,A10

	MOVE	A9,*A13(PDATA),W		;SAVE PLAYER NUMBER - 1

	INC	A9
	CMPI	3,A9
	JRLT	PPP_GET_PLAYER_BLOCK		;BR=PLAYER 1 OR 2
	ADDK	2,A9
PPP_GET_PLAYER_BLOCK
	GBLOCK	A9,A9

	MOVE	A11,A11
	JRZ	PPP_3RD_CHECK			;BR=END OF 2ND PERIOD

	MOVE	*A9(POF_PERIODS_PAID),A14,W
	BTST	1,A14
	JRNZ	PPP_2ND_PAL			;BR=PAID

PPP_2ND_WAIT
	SLEEP	1
	MOVE	*A9(POF_PERIODS_PAID),A14,W
	BTST	1,A14
	JRZ	PPP_2ND_WAIT			;BR=NOT PAID

	CALLR	PERIOD_PAID_SOUND
PPP_2ND_PAL
	MOVE	A11,A8
	MOVI	PCKCRD1P,A0			;CHANGE IT TO ORANGE
	CALLA	CHANGE_PAL

PPP_3RD_CHECK
	MOVE	*A9(POF_PERIODS_PAID),A11,W
PPP_3RD_WAIT
	SLEEP	1
	MOVE	*A9(POF_PERIODS_PAID),A14,W
	BTST	2,A14
	JRZ	PPP_3RD_WAIT			;BR=NOT PAID

	MOVE	A10,A8
	MOVI	PCKCRD1P,A0			;CHANGE IT TO ORANGE
	CALLA	CHANGE_PAL

	MOVE	@period,A14,W
	JRZ	PPP_FULL_GAME			;BR=START OF GAME

	BTST	2,A11
	JRNZ	PPP_DONE			;BR=ALREADY PAID

	CALLR	PERIOD_PAID_SOUND

	JRUC	PPP_DONE

PPP_FULL_GAME
	MOVI	FULL_GAME_INIT,B0		;FULL GAME PURCHASED MESSAGE
	CALLA	EASYMAKE

	MOVI	0202H,A14
	MOVE	A14,*A8(OCONST),W
	MOVK	10,A14
	MOVB	A14,*A8(ANIMLOOP)

	MOVE	*A13(PDATA),A9,W		;PLAYER NUMBER - 1
	MOVE	A9,A10
	SLL	4,A10
	ADDI	INFOBOX_CENTER_XPOS_TABLE,A10
	MOVE	*A10,A10,W
	MOVI	[INFOBOX_Y+104,-1],A14
	ADDXY	A14,A10
	MOVE	A10,A1
	MOVI	TEXTZVAL-4,A2
	CALLA	SET_SCRNOBJ
	CALLA	INSERT_OBJ

	MOVI	INFOBOX_PLATE_INIT,B0		;INFOBOX PLATE
	CALLA	EASYMAKE

	MOVI	OID_SELECT_2,A14
	MOVE	A14,*A8(OID),W

	MOVI	52 << 8 + 52,A14
;	CLR	A14
	MOVE	A14,*A8(OCONST),W
	MOVK	10,A14
	MOVB	A14,*A8(ANIMLOOP)

	MOVE	A10,A1
	MOVI	TEXTZVAL-3,A2
	CALLA	SET_SCRNOBJ
	CALLA	INSERT_OBJ
	MOVI	FULL_GAME_FLASH_ANIM,A1
	CALLA	STRT_ANIM

;	MOVI	GRNFRMP,A0
;
;;	MOVI	BLUFRMP,A0
;;	CMPI	3-1,A9
;;	JRLT	PPP_CHANGE			;BR=LEFT TEAM PALETTE
;	MOVI	REDFRMP,A0			;RIGHT TEAM PALETTE
;;PPP_CHANGE
;	CALLA	CHANGE_PAL

	CALLR	FULL_GAME_SOUND

PPP_DONE
	DIE

JOININ_INIT
	.long	JOININ
	.word	DMAWNZ,M_SCRNOBJ|M_NOVEL|M_NOSCALE
	.word	OM_OID
	.word	OID_SELECT_2

PAID_PUCK_INIT
	.long	PUCKCRD1
	.word	DMAWNZ,M_SCRNOBJ|M_NOVEL|M_NOSCALE
	.word	OM_OID
	.word	OID_SELECT_2

FULL_GAME_INIT
	.long	FULLGAME10
	.word	DMAWNZ,M_SCRNOBJ|M_NOVEL|M_NOSCALE
	.word	OM_OID|OM_ANIM
	.word	OID_SELECT_2
	.long	FULL_GAME_FLASH_ANIM

INFOBOX_PLATE_INIT
	.long	FULLBOX
	.word	DMAWNZ,M_SCRNOBJ|M_NOVEL|M_NOSCALE
	.word	0

FULL_GAME_FLASH_ANIM
	LWL	1,AFUNC|3,OBJ_ON
	LWLLLL	1,AFUNC|3,A_2FUNCS+6,OBJ_CONST,A_Anim_DSJ,FULL_GAME_FLASH_ANIM
	LWL	1,AFUNC|30,OBJ_ON
	LWL	1,AFUNC|1,DELETE_OBJ

JOININ_PAL_TABLE
	.LONG	JOINPI,JOINBL,JOINYE,JOINGR

JOINPI:
   .word   16
   .word   00000h,00000h,038aeh,040b0h,04cb3h,05896h,06479h,0703ch
   .word   07c1fh,0743dh,06c5bh,06499h,058b6h,050b4h,048d2h,040d0h
JOINBL:
   .word   16
   .word   00000h,00000h,02115h,02118h,0295ah,0319dh,039dfh,0463fh
   .word   04e7fh,0463fh,03dffh,035bfh,02d7dh,0253bh,02118h,02118h
JOINYE:
   .word   16
   .word   00000h,00000h,039c0h,04200h,04e60h,05ac0h,06720h,07380h
   .word   07fe0h,077a0h,06b40h,06300h,056a0h,04e60h,04200h,039c0h
JOINGR:
   .word   16
   .word   00000h,00000h,01184h,015e5h,01e47h,022c8h,02729h,02f8bh
   .word   033ech,02f8bh,02b4ah,026e9h,01e87h,01a26h,015e5h,01184h

PCKCRD1P:
   .word   79
   .word   07c1fh,02529h,014a5h,01084h,00c63h,00842h,00421h,00000h
   .word   07147h,06d26h,06d25h,06905h,064e5h,06505h,06526h,06105h
   .word   060e4h,060c4h,06126h,060e5h,058a3h,058c5h,058e4h,05507h
   .word   054c4h,05082h,050c4h,050a4h,04cc4h,04ce6h,048c3h,044c5h
   .word   03ca4h,038a4h,03862h,038c6h,03462h,030a4h,030a5h,02c84h
   .word   02c83h,02ca4h,01c63h,01484h,01041h,01042h,01063h,00c42h
   .word   00c41h,00821h,01d90h,0114fh,00d4fh,00d4eh,0112dh,0114dh
   .word   00d0ch,00d0bh,008ebh,00ceah,00ce9h,008c9h,004c9h,00cc9h
   .word   008a8h,008c8h,004a8h,00886h,00c86h,00885h,00865h,00c85h
   .word   00c64h,00464h,00841h,00420h,00c84h,00863h,00442h

PERIOD_PAID_SOUND
	PUSH	A4
	MOVI	S_PERIOD_PAID,A4
	CALLA	do_sound
	PULLQ	A4
	RETS

FULL_GAME_SOUND
	PUSH	A4
	MOVI	S_FULL_GAME,A4
	CALLA	do_sound
	PULLQ	A4
	RETS

**************************************************************************
*								         *
* SELECT_TEAM_MESS_PROC - FLASH MESSAGE AT TOP OF TEAM SELECT SCREEN	 *
* 									 *
* PASS:									 *
* NUTIN'								 *
*								         *
**************************************************************************

SELECT_TEAM_MESS_PROC
	MOVE	@TEAM_SELECT_STARTIRQ,B9,L
	MOVE	@WAVEIRQS,B10,L
	SUB	B9,B10
	SUBI	TEAM_SELECT_PRETIMEOUT,B10
	JRNN	STMP_GO
	SLEEP	1
	JRUC	SELECT_TEAM_MESS_PROC

STMP_GO
;	MOVI	[0,1],A10			;[Y,X] SPACING
	MOVI	H18TFONT,A11			;FONT
STMP_LUPE
	MOVI	OID_TEXT,A0
	CALLA	KILOBJ_ALL

	MOVI	OID_TEXT,B1			;[SOUND,OID]
	CLR	A0				;NO SLEEP TIL
	MOVI	STRCNCONV,A1			;ROUTINE
	MOVI	HFPAL,A5			;[COLOR,PALETTE]

	MOVI	PRESS_SHOOT_STR,A8		;POINTER TO STRING
	MOVI	[1,200],A9			;[Y,X] SCREEN ADDRESS
	MOVI	[0,1],A10			;[Y,X] SPACING
	JSRP	PRINTF

	SLEEP	60

	MOVI	OID_TEXT,A0
	CALLA	KILOBJ_ALL

	MOVI	OID_TEXT,B1			;[SOUND,OID]
	CLR	A0				;NO SLEEP TIL
	MOVI	STRCNCONV,A1			;ROUTINE
	MOVI	HFPAL,A5			;[COLOR,PALETTE]

	MOVI	PRESS_TURBO_STR,A8		;POINTER TO STRING
	MOVI	[1,200],A9			;[Y,X] SCREEN ADDRESS
	MOVI	[0,1],A10			;[Y,X] SPACING
	JSRP	PRINTF

	SLEEP	60

	MOVB	@TEAM_SELECTED_BITS,A14
	JRNZ	STMP_LUPE			;BR=NO SWAPPING ALLOWED

	MOVI	OID_TEXT,A0
	CALLA	KILOBJ_ALL

	MOVI	OID_TEXT,B1			;[SOUND,OID]
	CLR	A0				;NO SLEEP TIL
	MOVI	STRCNCONV,A1			;ROUTINE
	MOVI	HFPAL,A5			;[COLOR,PALETTE]

	MOVI	PRESS_PASS_STR,A8		;POINTER TO STRING
	MOVI	[1,200],A9			;[Y,X] SCREEN ADDRESS
	MOVI	[0,-2],A10			;[Y,X] SPACING
	JSRP	PRINTF

	SLEEP	60

	JRUC	STMP_LUPE

PRESS_SHOOT_STR
	.STRING	"PRESS \pSHOOT\p TO SELECT",0
	.LONG	REDTXT3P
	.LONG	FONTGRYP
	.EVEN

PRESS_TURBO_STR
	.STRING	"\pPRESS \pTURBO\p TO SWAP",0
	.LONG	ORGTXT1P
	.LONG	FONTGRYP
	.LONG	ORGTXT1P
	.EVEN

PRESS_PASS_STR
	.STRING	"PRESS \pPASS\p TO CHANGE HOME/AWAY",0
	.LONG	BLUTXT3P
	.LONG	FONTGRYP
	.EVEN

;PRESS_PASS_STR
;	.STRING	"PRESS \pUP-PASS\p TO RANDOM SELECT",0
;	.LONG	REDTXT3P
;	.LONG	FONTGRYP
;	.EVEN

**************************************************************************
*								         *
* INITIAL_SELECT_PROC - SELECT INITIALS AND BIRTHDAY			 *
* 									 *
* PASS:									 *
* A9 = PLAYER NUMBER - 1						 *
*								         *
**************************************************************************

ALPHA_X_SPACING	EQU	22 ;23
ALPHA_Y_SPACING EQU	24 ;20

MONTH_X_SPACING	EQU	44 ;50
MONTH_Y_SPACING EQU	28 ;24

DAY_X_SPACING	EQU	22 ;23
DAY_Y_SPACING	EQU	21 ;20

PINITIAL_STRING	EQU	PDATA			;UHL PLAYER'S INITIAL STRING
PDISPLAY_STRING	EQU	PDATA+020H		;UHL PLAYER'S DISPLAY STRING
PINITIAL_POS	EQU	PDATA+040H		;UHW PLAYER'S INITIAL POSITION
PMONTH		EQU	PDATA+050H		;UHW PLAYER'S MONTH
PDAY		EQU	PDATA+060H		;UHW PLAYER'S DAY
PPNUM		EQU	PDATA+070H		;UHW PLAYER NUMBER - 1
PHEADER_OBJ	EQU	PDATA+080H		;UHL SELECT HEADER OBJECT

DEFEATS_YPOS	EQU	10

INITIAL_SELECT_PROC
	MOVE	A9,*A13(PPNUM),W			;SAVE PLAYER NUMBER - 1

;	SLEEP	1					;CLEANUP TIME
;
;	.if	0
;	MOVE	A9,A0
;	SLL	3,A0
;	NEG	A0					;2s COMPLEMENT BULLSHIT!
;	MOVE	@SWITCH,A14,L
;	NOT	A14
;	SRL	A0,A14					;MOVE PLAYER TO LOW BYTE
;	ANDI	M_SW_T|M_SW_P|M_SW_S|M_SW_R|M_SW_L|M_SW_D|M_SW_U,A14 ;MASK
;	XORI	M_SW_P|M_SW_S|M_SW_L|M_SW_U,A14		;MASK
;	JRNZ	ISP_GO					;BR=NOPE
;
;	CALLR	a9_to_a0
;	MOVK	3,A14
;	MOVB	A14,*A0(POF_INITIAL1)
;	MOVK	14,A14
;	MOVB	A14,*A0(POF_INITIAL2)
;	MOVK	25,A14
;	MOVB	A14,*A0(POF_INITIAL3)
;	MOVK	12,A14
;	MOVB	A14,*A0(POF_BMONTH)
;	MOVK	31,A14
;	MOVB	A14,*A0(POF_BDAY)
;	CALLA	cx_player_in
;	MOVE	A0,A6
;	JRUC	ISP_CHECK_RECORD
;	.endif
;ISP_GO
;	MOVI	SELECT_HEADER_INIT,B0
;	CALLA	EASYMAKE
;	MOVE	A8,*A13(PHEADER_OBJ),L
;	MOVE	A9,A1
;	SLL	4,A1
;	ADDI	HEADER_XPOS_TABLE,A1
;	MOVE	*A1,A1,W
;	ZEXT	A1,W
;	ADDI	[2,0],A1
;	MOVK	2,A2
;	CALLA	SET_SCRNOBJ
;	CALLA	INSERT_OBJ

	MOVI	INITIALS_HEADER_INIT,B0
	CALLA	EASYMAKE
	MOVE	A8,*A13(PHEADER_OBJ),L
	MOVE	A9,A1
	SLL	4,A1
	ADDI	INITIAL_MESS_CENTER_XPOS_TABLE,A1
	MOVE	*A1,A1,W
	ZEXT	A1,W
	ADDI	[8,0],A1
	MOVK	1,A2
	CALLA	SET_SCRNOBJ
	CALLA	INSERT_OBJ

	MOVE	A9,A0
	SLL	5,A0
	ADDI	PLAYER_PAL_TABLE,A0
	MOVE	*A0,A0,L
	CALLA	CHANGE_PAL

	CLR	A14
	MOVE	A14,*A13(PINITIAL_STRING),L		;RESET STRING
	MOVE	A14,*A13(PDISPLAY_STRING),L		;RESET STRING
	MOVE	A14,*A13(PINITIAL_POS),W		;RESET POSITION

;	MOVE	A9,A0
;	SLL	4,A0
;	ADDI	PLAYER_OID_TABLE,A0
;	MOVE	*A0,A0,W
;	CALLA	KILOBJ_ALL

	MOVI	ALPHABET_INIT,B0
	CALLA	EASYMAKE

	MOVE	A9,A14
	SLL	4,A14
	ADDI	PLAYER_OID_TABLE,A14
	MOVE	*A14,A0,W
	MOVE	A0,*A8(OID),W

	MOVE	A9,A1
	SLL	4,A1
	ADDI	A_XPOS_TABLE,A1
	MOVE	*A1,A1,W
	ZEXT	A1,W
	ADDI	[21,0],A1
	MOVI	TEXTZVAL,A2
	CALLA	SET_SCRNOBJ
	CALLA	INSERT_OBJ

	MOVE	A1,A10				;[Y, X] OFFSET

	PUSHP	A0				;SAVE OID
	MOVK	28,A1				;ARRAY DIMENSION
	MOVK	4,A2				;ROW SIZE
	CLR	A3				;START ON FIRST ENTRY
	MOVI	ALPHA_ARRAY,A11
	MOVI	ALPHA_TABLE,B0
	JSRP	PICK_ENTRY

	MOVE	@TIMES_UP,A14,W
	JRZ	ISP_ALPHA_LAST_NAP		;BR=STILL GOT TIME
ISP_TIMES_UP
	PULLPQ	A0
	CALLA	KILOBJ_ALL			;DELETE ALPHABET AND CURSOR
	MOVE	B1,A0
	CALLA	KILOBJ_ALL			;DELETE OID2 OBJECTS
	MOVE	*A13(PHEADER_OBJ),A0,L
	CALLA	DELOBJ
	callr	a9_to_a0
	MOVE	A0,A6
	JRUC	ISP_CHECK_RECORD

ISP_ALPHA_LAST_NAP
	SLEEP	SELECT_FLASH_ONTIME*SELECT_FLASHES*2
	SLEEP	15+1

	PULLPQ	A0
	CALLA	KILOBJ_ALL			;DELETE ALPHABET AND CURSOR

;	*A13(PINITIAL_STRING),W HOLDS THE INITIALS

	MOVE	*A13(PHEADER_OBJ),A8,L
	MOVI	MONTH11,A1
	MOVI	DMAWNZ,A4
	CALLA	ANI

	MOVI	MONTHS_INIT,B0
	CALLA	EASYMAKE

	MOVE	A9,A14
	SLL	4,A14
	ADDI	PLAYER_OID_TABLE,A14
	MOVE	*A14,A0,W
	MOVE	A0,*A8(OID),W

	MOVE	A9,A1
	SLL	4,A1
	ADDI	JAN_XPOS_TABLE,A1
	MOVE	*A1,A1,W
	ZEXT	A1,W
	ADDI	[21,0],A1
	MOVI	TEXTZVAL,A2
	CALLA	SET_SCRNOBJ
	CALLA	INSERT_OBJ

	MOVE	A1,A10				;[Y, X] OFFSET

	PUSHP	A0
	MOVK	12,A1				;ARRAY DIMENSION
	MOVK	2,A2				;ROW SIZE
	CLR	A3				;START ON FIRST ENTRY
	MOVI	MONTH_ARRAY,A11
	MOVI	MONTH_TABLE,B0
	JSRP	PICK_ENTRY

	MOVE	@TIMES_UP,A14,W
	JRNZ	ISP_TIMES_UP			;BR=TIME'S UP DUMMY!

	MOVE	A1,*A13(PMONTH),W
	MOVE	A1,A10
	SLEEP	SELECT_FLASH_ONTIME*SELECT_FLASHES*2
	SLEEP	15+1
	PULLPQ	A0

	CALLA	KILOBJ_ALL			;DELETE MONTHS AND CURSOR

	SLL	4,A10
	ADDI	MONTH_SIZE_TABLE,A10
	MOVE	*A10,A10,W			;DAY ARRAY DIMENSION

	MOVE	*A13(PHEADER_OBJ),A8,L
	MOVI	DAY11,A1
	MOVI	DMAWNZ,A4
	CALLA	ANI

	MOVI	DAYS_INIT,B0
	CALLA	EASYMAKE

	MOVE	A9,A14
	SLL	4,A14
	ADDI	PLAYER_OID_TABLE,A14
	MOVE	*A14,A0,W
	MOVE	A0,*A8(OID),W

	MOVE	A9,A1
	SLL	4,A1
	ADDI	DAY1_XPOS_TABLE,A1
	MOVE	*A1,A1,W
	ZEXT	A1,W
	ADDI	[21,0],A1
	MOVI	TEXTZVAL,A2
	CALLA	SET_SCRNOBJ
	CALLA	INSERT_OBJ

	CMPI	30,A10
	JRLT	ISP_PICK_DAY			;BR=MUST BE FEBRUARY

	MMTM	SP,A0,A1,A2
	MOVI	DAY30_INIT,B0
	CALLA	EASYMAKE
	MMFM	SP,A0,A1,A2

	MOVE	A0,*A8(OID),W
	CALLA	SET_SCRNOBJ
	CALLA	INSERT_OBJ

	CMPI	31,A10
	JRLT	ISP_PICK_DAY			;BR=30 DAY MONTH

	MMTM	SP,A0,A1,A2
	MOVI	DAY31_INIT,B0
	CALLA	EASYMAKE
	MMFM	SP,A0,A1,A2

	MOVE	A0,*A8(OID),W
	CALLA	SET_SCRNOBJ
	CALLA	INSERT_OBJ

ISP_PICK_DAY
	SWAP	A1,A10				;SWAP [Y,X] OFFSET AND DIMENSION

	PUSHP	A0
	MOVK	4,A2				;ROW SIZE
	CLR	A3				;START ON FIRST ENTRY
	MOVI	DAY_ARRAY,A11
	MOVI	DAY_TABLE,B0
	JSRP	PICK_ENTRY

	MOVE	@TIMES_UP,A14,W
	JRNZ	ISP_TIMES_UP			;BR=TIME'S UP DUMMY!

	MOVE	A1,*A13(PDAY),W
	callr	a9_to_a0
	inc	a1
	movb	a1,*a0(POF_BDAY)

	MOVE	*A13(PMONTH),A1,W
	callr	a9_to_a0
	inc	a1
	movb	a1,*a0(POF_BMONTH)

	callr	a9_to_a0
	movb	*a13(PINITIAL_STRING),a14
	callr	cc_az
	movb	a14,*a0(POF_INITIAL1)

	movb	*a13(PINITIAL_STRING+8),a14
	callr	cc_az
	movb	a14,*a0(POF_INITIAL2)

	movb	*a13(PINITIAL_STRING+16),a14
	callr	cc_az
	movb	a14,*a0(POF_INITIAL3)

	MOVE	A0,A10

	SLEEP	SELECT_FLASH_ONTIME*SELECT_FLASHES*2
	SLEEP	15+1

	MOVE	A10,A0
	calla	cx_player_in

	MOVI	AUD_INITIALS_ENTERED,A0
	CALLA	AUD1

	PULLPQ	A0

	CALLA	KILOBJ_ALL			;DELETE DAYS AND CURSOR

	MOVE	*A13(PHEADER_OBJ),A0,L
	CALLA	DELOBJ

	MOVE	A10,A6
ISP_CHECK_RECORD
	MOVE	*A13(PPNUM),A9,W		;PLAYER NUMBER - 1
	MOVK	1,A1				;FLAG PLAYER DONE
	SLL	A9,A1
	MOVB	@PLAYER_INITIAL_BITS,A0
	OR	A1,A0
	MOVB	A0,@PLAYER_INITIAL_BITS

	MOVE	*A6(POF_LOCKED_CHAR),A14,W
	JRZ	ISP_CHECK_EXIST			;BR=NO SPECIAL CHARACTER

	CMPI	s_gordie_howe,A14
	JRNE	ISP_CHIME
	CALLA	spx_gordie_picked
	JRUC	ISP_LOCK

ISP_CHIME
;	MOVI	S_POWERUP_REPORT,A4
	MOVI	S_SPECIAL_CHAR,A4
	CALLA	do_sound
ISP_LOCK
	MOVB	@LOCKED_CHAR_BITS,A0
	OR	A1,A0
	MOVB	A0,@LOCKED_CHAR_BITS

;mdp yescmosrecord
;	MOVI	SPECIAL_CHAR_STRING,A8
;	JRUC	ISP_CMOS_MESS
;mdp yescmosrecord
	
ISP_CHECK_EXIST
	MOVE	*A6(POF_CMOS),A14,W
	JRNN	ISP_SHOW_RECORD			;BR=WE HAVE A RECORD

;ISP_NO_RECORD
;	MOVE	*A13(PPNUM),A9,W		;PLAYER NUMBER - 1
;	MOVK	1,A14				;FLAG PLAYER DONE
;	SLL	A9,A14
;	MOVB	@PLAYER_INITIAL_BITS,A0
;	OR	A14,A0
;	MOVB	A0,@PLAYER_INITIAL_BITS

	MOVI	NO_RECORD_STRING,A8		;POINTER TO STRING
ISP_CMOS_MESS
	MOVE	A9,B1
	SLL	4,B1
	ADDI	PLAYER_OID_TABLE,B1
	MOVE	*B1,B1,W			;[SOUND,OID]

	MOVE	A9,A5
	SLL	4,A5
	ADDI	PLAYER_PAL_NUM_TABLE,A5
	MOVE	*A5,A5,W			;[COLOR,PALETTE]

	SLL	4,A9
	ADDI	INITIAL_MESS_CENTER_XPOS_TABLE,A9
	MOVE	*A9,A9,W
	ADDI	[100,0],A9			;[Y,X] SCREEN ADDRESS

	CLR	A0				;NO SLEEP TIL
	MOVI	STRCNCONV,A1			;ROUTINE
;	MOVI	HFPAL,A5			;[COLOR,PALETTE]
	MOVI	[0,-2],A10			;[Y,X] SPACING
	MOVI	H11WFONT,A11			;FONT

	JSRP	PRINTF

	SLEEP	60

	JRUC	ISP_DONE
ISP_SHOW_RECORD
	MOVE	@b_rank,A14,W
	CMPI	10,A14
	JRGT	ISP_DISPLAY_RECORD		;BR=NOT A TOP TEN PLAYER

	MOVI	TOPTEN_MESS_INIT,B0
	CALLA	EASYMAKE

	MOVE	A9,A14
	SLL	4,A14
	ADDI	PLAYER_OID_TABLE,A14
	MOVE	*A14,A14,W
	MOVE	A14,*A8(OID),W
	PUSHP	A14

	MOVI	0202H,A14
	MOVE	A14,*A8(OCONST),W
	MOVK	10,A14
	MOVB	A14,*A8(ANIMLOOP)

	MOVE	A9,A10
	SLL	4,A10
	ADDI	INFOBOX_CENTER_XPOS_TABLE,A10
	MOVE	*A10,A10,W
	MOVI	[INFOBOX_Y+104,-1],A14
	ADDXY	A14,A10
	MOVE	A10,A1
	MOVI	TEXTZVAL-2,A2
	CALLA	SET_SCRNOBJ
	CALLA	INSERT_OBJ

	MOVI	INFOBOX_PLATE_INIT,B0		;INFOBOX PLATE
	CALLA	EASYMAKE

	PULLPQ	A14
	MOVE	A14,*A8(OID),W
	MOVE	A14,B1				;[SOUND,OID]

	MOVI	52 << 8 + 52,A14
;	CLR	A14
	MOVE	A14,*A8(OCONST),W
	MOVK	10,A14
	MOVB	A14,*A8(ANIMLOOP)

	MOVE	A10,A1
	MOVI	TEXTZVAL-1,A2
	CALLA	SET_SCRNOBJ
	CALLA	INSERT_OBJ
	MOVI	TOPTEN_FLASH_ANIM,A1
	CALLA	STRT_ANIM
	MOVI	GLDFRMP,A0
	CALLA	CHANGE_PAL

;	CALLR	TOPTEN_SOUND
	CALLR	FULL_GAME_SOUND

ISP_DISPLAY_RECORD
	MOVE	A9,B1
	SLL	4,B1
	ADDI	PLAYER_OID_TABLE,B1
	MOVE	*B1,B1,W			;[SOUND,OID]

	MOVE	A9,A5
	SLL	4,A5
	ADDI	PLAYER_PAL_NUM_TABLE,A5
	MOVE	*A5,A5,W			;[COLOR,PALETTE]

	SLL	4,A9
	ADDI	INITIAL_MESS_CENTER_XPOS_TABLE,A9
	MOVE	*A9,A9,W
	PUSHP	A9
	ADDI	[RANK_YPOS,0],A9		;[Y,X] SCREEN ADDRESS

	CLR	A0				;NO SLEEP TIL
	MOVI	STRCNCONV,A1			;ROUTINE
;	MOVI	HFPAL,A5			;[COLOR,PALETTE]
	MOVI	RANK_STRING,A8			;POINTER TO STRING
	MOVI	[0,-1],A10			;[Y,X] SPACING
	MOVI	H11WFONT,A11			;FONT
	JSRP	PRINTF

	MOVI	HFPAL,A5			;[COLOR,PALETTE]
	MOVI	RECORD_STRING,A8		;POINTER TO STRING
	MOVE	*A12,A9,W			;RESTORE A9, [0, X CENTER]
	ADDI	[RANK_YPOS+15,0],A9		;[Y,X] SCREEN ADDRESS
	MOVI	H10FONT,A11			;FONT
	JSRP	PRINTF

	MOVE	@b_wins,A3,W
	MOVE	A3,A6
	SLL	1,A6
	MOVE	A3,A2
	MOVE	@b_losses,A14,W
	ADD	A14,A2
	MOVE	@b_ties,A14,W
	ADD	A14,A2				;TOTAL GAMES

	MOVE	*A12,A9,W			;RESTORE A9, [0, X CENTER]

	ADD	A14,A6				;POINTS
	PUSHP	A6

	MOVI	HFPAL+0202H,A5

	SLL	1,A2
	CMP	A2,A6
	JRNE	ISP_PCTG

	MOVI	PCTG_100_STRING,A8		;POINTER TO STRING
	ADDI	[RANK_YPOS+30,0],A9		;[Y,X] SCREEN ADDRESS
	JSRP	PRINTF
	JRUC	ISP_POINTS
ISP_PCTG
	MOVE	A6,A7
	MOVI	10000,A14
	MPYU	A14,A7
	DIVU	A2,A7
	ADDK	5,A7				;ROUND UP
	MOVI	10,A14
	DIVU	A14,A7

	CLR	A6
	DIVU	A14,A6
	MOVE	A7,@RAMTEMP3,W			;THOUSANTHS
	MOVE	A6,A7
	CLR	A6
	DIVU	A14,A6
	MOVE	A7,@RAMTEMP2,W			;HUNDRETHS
	MOVE	A6,A7
	CLR	A6
	DIVU	A14,A6
	MOVE	A7,@RAMTEMP1,W			;TENTHS
	MOVI	PCTG_STRING,A8			;POINTER TO STRING
	ADDI	[RANK_YPOS+30,0],A9		;[Y,X] SCREEN ADDRESS
	JSRP	PRINTF
ISP_POINTS
	PULLPQ	A6
	MOVE	A6,@RAMTEMP1,W
	MOVI	HFPAL,A5
	MOVI	POINTS_STRING,A8		;POINTER TO STRING
	MOVE	*A12,A9,W			;RESTORE A9, [0, X CENTER]
	ADDI	[RANK_YPOS+45,0],A9		;[Y,X] SCREEN ADDRESS
	JSRP	PRINTF

	MOVE	@b_initial1,A14,W		;TRANSLATE YOUR INITIALS
	CALLR	PENACHO_TO_ASCII
	MOVE	A14,@b_initial1,W
	MOVE	@b_initial2,A14,W
	CALLR	PENACHO_TO_ASCII
	MOVE	A14,@b_initial2,W
	MOVE	@b_initial3,A14,W
	CALLR	PENACHO_TO_ASCII
	MOVE	A14,@b_initial3,W

	MOVE	@b_teammate_initial1,A14,W	;TRANSLATE YOUR TEAMMATE'S
	CALLR	PENACHO_TO_ASCII		; INITIALS
	MOVE	A14,@b_teammate_initial1,W
	MOVE	@b_teammate_initial2,A14,W
	CALLR	PENACHO_TO_ASCII
	MOVE	A14,@b_teammate_initial2,W
	MOVE	@b_teammate_initial3,A14,W
	CALLR	PENACHO_TO_ASCII
	MOVE	A14,@b_teammate_initial3,W

	MOVE	@b_opp1_initial1,A14,W		;TRANSLATE YOUR FIRST OPPONENT'S
	CALLR	PENACHO_TO_ASCII		; INITIALS
	MOVE	A14,@b_opp1_initial1,W
	MOVE	@b_opp1_initial2,A14,W
	CALLR	PENACHO_TO_ASCII
	MOVE	A14,@b_opp1_initial2,W
	MOVE	@b_opp1_initial3,A14,W
	CALLR	PENACHO_TO_ASCII
	MOVE	A14,@b_opp1_initial3,W

	MOVE	@b_opp2_initial1,A14,W		;TRANSLATE YOUR FIRST OPPONENT'S
	CALLR	PENACHO_TO_ASCII		; INITIALS
	MOVE	A14,@b_opp2_initial1,W
	MOVE	@b_opp2_initial2,A14,W
	CALLR	PENACHO_TO_ASCII
	MOVE	A14,@b_opp2_initial2,W
	MOVE	@b_opp2_initial3,A14,W
	CALLR	PENACHO_TO_ASCII
	MOVE	A14,@b_opp2_initial3,W

	MOVE	@b_lastteam1,A14,W
	cmpi	27,a14
	jrnz	oktpt
	movi	' ',a14
	jruc	prtaw
oktpt	DEC	A14
	SLL	4,A14
	ADDI	ALPHA_CITY_REMAP_TABLE,A14
	MOVE	*A14,A14,W
	ADDI	'a',A14
prtaw	MOVE	A14,@RAMTEMP1,L

	MOVE	@b_lastteam2,A14,W
	cmpi	27,a14
	jrnz	oktpt2
	movi	' ',a14
	jruc	prtaw2

oktpt2	DEC	A14
	SLL	4,A14
	ADDI	ALPHA_CITY_REMAP_TABLE,A14
	MOVE	*A14,A14,W
	ADDI	'a',A14
prtaw2	MOVE	A14,@RAMTEMP2,L

	MOVI	DEFEATED_STRING,A14
	MOVI	LAST_STRING,A8			;POINTER TO STRING

	MOVE	@b_last_score1,A2,W
	MOVE	@b_last_score2,A3,W
	CMP	A2,A3
	JRLT	ISP_CHECK_SHUTOUT		;BR=YOU WON
	JREQ	ISP_SET_TIED			;BR=YOU TIED
	MOVI	LOST_STRING,A14			;YOU LOST
	JRUC	ISP_SHOW_LAST
ISP_SET_TIED
	MOVI	TIED_STRING,A14
	JRUC	ISP_SHOW_LAST
ISP_CHECK_SHUTOUT
	MOVE	A3,A3
	JRNZ	ISP_SHOW_LAST			;BR=NO SHUTOUT
	MOVI	SHUTOUT_STRING,A14		;SHUTOUT!
ISP_SHOW_LAST
	MOVE	A14,@RAMTEMP3,L
	MOVI	HFPAL+0202H,A5
	MOVE	*A12,A9,W			;RESTORE A9, [0, X CENTER]
	ADDI	[RANK_YPOS+75,0],A9		;[Y,X] SCREEN ADDRESS
	JSRP	PRINTF

	MOVE	@b_teamsbeat,A8,L
	PUSHP	A8
	MOVE	B1,A14
	PUSHP	A14

	SLEEP	30
	MOVI	210,A8
	MOVE	*A13(PPNUM),A9,W		;PLAYER NUMBER - 1
	JSRP	PLAYER_BUTTON_SKIP

	PULLPQ	A0
	MOVE	A0,B1
	CALLA	KILOBJ_ALL

	PULLPQ	A8
	JRNZ	ISP_TOTAL_TEAMS			;BR=WE'VE DEFEATED!

	MOVE	*A13(PPNUM),A5,W		;PLAYER NUMBER - 1
	SLL	4,A5
	ADDI	PLAYER_PAL_NUM_TABLE,A5
	MOVE	*A5,A5,W			;[COLOR,PALETTE]

	CLR	A0				;NO SLEEP TIL
	MOVI	STRCNCONV,A1			;ROUTINE
;	MOVI	HFPAL,A5			;[COLOR,PALETTE]
	MOVI	NO_DEFEATS_STRING,A8		;POINTER TO STRING
	MOVE	*A12,A9,W			;RESTORE A9, [0, X CENTER]
	ADDI	[DEFEATS_YPOS,0],A9		;[Y,X] SCREEN ADDRESS
	MOVI	[0,-1],A10			;[Y,X] SPACING
	MOVI	H10FONT,A11			;FONT
	JSRP	PRINTF

ISP_ALL_OR_NONE_WAIT
	SLEEP	30
	MOVI	150,A8
	MOVE	*A13(PPNUM),A9,W		;PLAYER NUMBER - 1
	JSRP	PLAYER_BUTTON_SKIP
	JRUC	ISP_DONE

ISP_TOTAL_TEAMS
	MOVK	25,A0				;LAST NHL TEAM
	CLR	A1				;RESET TOTAL DEFEATS
	CLR	A2				;RESET ALPHA REMAP TEAM LIST
	MOVI	ALPHA_CITY_REMAP_TABLE+(010H*25),A3
ISP_TT_LUPE
	BTST	A0,A8
	JRZ	ISP_TT_NEXT			;BR=DIDN'T BEAT THIS TEAM
	INC	A1				;BEAT 'EM!
	MOVE	*A3,A4,W			;GET REMAP POSITION
	MOVK	1,A14
	SLL	A4,A14				;MAKE BIT MASK
	OR	A14,A2				;ADD REMAPPED TEAM
ISP_TT_NEXT
	SUBK	010H,A3
	DEC	A0
	JRNN	ISP_TT_LUPE			;BR=MORE TEAMS TO CHECK

	MOVE	*A13(PPNUM),A5,W		;PLAYER NUMBER - 1
	SLL	4,A5
	ADDI	PLAYER_PAL_NUM_TABLE,A5
	MOVE	*A5,A5,W			;[COLOR,PALETTE]

	MOVE	A1,A14
	SUBK	26,A14
	NEG	A14
	JRNZ	ISP_TT_STRING

;	MOVE	A1,@RAMTEMP1,W			;TOTAL DEFEATS
;	CMPI	26,A1
;	JRNE	ISP_TT_STRING			;BR=NOT ALL TEAMS

	PUSH	B1
	MOVI	OICHAMP_INIT,B0
	CALLA	EASYMAKE
	MOVE	*A12,A9,W			;RESTORE A9, [0, X CENTER]
	MOVE	A9,A1
	ADDI	[147,0],A1
	MOVI	90,A2
	CALLA	SET_SCRNOBJ
	CALLA	INSERT_OBJ
	PULLQ	B1

	CLR	A0				;NO SLEEP TIL
	MOVI	STRCNCONV,A1			;ROUTINE
;	MOVI	HFPAL,A5			;[COLOR,PALETTE]
	MOVI	ALL_DEFEATS_STRING,A8		;POINTER TO STRING
	ADDI	[DEFEATS_YPOS,0],A9		;[Y,X] SCREEN ADDRESS
	MOVI	[0,-1],A10			;[Y,X] SPACING
;	MOVI	H10FONT,A11			;FONT
	MOVI	H11WFONT,A11			;FONT
	JSRP	PRINTF

;	MOVI	TOTAL_DEFEATS_STRING,A8		;POINTER TO STRING
;	MOVE	*A13(PPNUM),A9,W		;PLAYER NUMBER - 1
;	SLL	4,A9
;	ADDI	INFOBOX_CENTER_XPOS_TABLE,A9
;	MOVE	*A9,A9,W
;	MOVI	[INFOBOX_Y+94,-1],A14
;	ADDXY	A14,A9				;[Y,X] SCREEN ADDRESS
;	MOVI	H10FONT,A11			;FONT
;	JSRP	PRINTF

	JRUC	ISP_ALL_OR_NONE_WAIT

ISP_TT_STRING
	MOVE	A14,@RAMTEMP1,W			;TOTAL DEFEATS

	MOVE	A2,A8				;REMAPPED TEAM LIST

	MOVI	DEFEATS_STRING,A0		;POINTER TO STRING
	CMPI	13,A1
	JRLE	ISP_TT_S_GO			;BR=NOT ALL TEAMS
	NOT	A8
	MOVI	MUST_PLAY_STRING,A0		;POINTER TO STRING
ISP_TT_S_GO
	MOVE	*A12,A9,W			;RESTORE A9, [0, X CENTER]
	PUSHP	A8
	MOVE	A0,A8
	CLR	A0				;NO SLEEP TIL
	MOVI	STRCNCONV,A1			;ROUTINE
;	MOVI	HFPAL,A5			;[COLOR,PALETTE]
	ADDI	[DEFEATS_YPOS,0],A9		;[Y,X] SCREEN ADDRESS
	MOVI	[0,-1],A10			;[Y,X] SPACING
	MOVI	H10FONT,A11			;FONT
	JSRP	PRINTF

;	MOVI	TOTAL_DEFEATS_STRING,A8		;POINTER TO STRING
	MOVI	WINS_TO_CUP_STRING,A8

	MOVE	@RAMTEMP1,A14,W
	DEC	A14
	JRNZ	ISP_TT_S_PRINT			;BR=NOT STANLEY CUP GAME
	MOVI	STAN_CUP_STRING,A8

ISP_TT_S_PRINT
	MOVE	*A13(PPNUM),A9,W		;PLAYER NUMBER - 1
	SLL	4,A9
	ADDI	INFOBOX_CENTER_XPOS_TABLE,A9
	MOVE	*A9,A9,W
	MOVI	[INFOBOX_Y+94,-1],A14
	ADDXY	A14,A9				;[Y,X] SCREEN ADDRESS
	JSRP	PRINTF
	PULLPQ	A8

	MOVE	*A13(PPNUM),A0,W		;PLAYER NUMBER - 1
	SLL	4,A0
	ADDI	PLAYER_OID2_TABLE,A0
	MOVE	*A0,A0,W			;[SOUND,OID]

	MOVE	A8,A1				;REMAPPED TEAM LIST

	MOVI	DEFEAT_LIST_STRING,A8
	PULLPQ	A9
	ADDI	[DEFEATS_YPOS+23,0],A9		;[Y,X] SCREEN ADDRESS
	CLR	A10
	DEC	A10				;TEAM BIT
;	CLR	A11				;NUMBER OF TEAMS Q'D UP
ISP_DEFEATS_LUPE
	INC	A10
	CMPI	26,A10
	JRGE	ISP_DL_TERM			;BR=NO MORE TEAMS
	BTST	A10,A1
	JRZ	ISP_DEFEATS_LUPE		;BR=NO DEFEAT

	MOVE	A10,A14
	ADDI	'a',A14				;CITY NAME
	MOVB	A14,*A8
	ADDK	8,A8
	MOVI	'\',A14				;NEWLINE
	MOVB	A14,*A8
	ADDK	8,A8
	MOVI	'n',A14
	MOVB	A14,*A8
	ADDK	8,A8

	JRUC	ISP_DEFEATS_LUPE

;	INC	A11				;ANOTHER TEAM LISTED
;	CMPI	13,A11
;	JRLE	ISP_DEFEATS_LUPE		;BR=NOT FULL
;
;	MOVI	'[',A14
;	MOVB	A14,*A8				;MORE PROMPT
;	ADDK	8,A8
ISP_DL_TERM
	CLR	A14
	MOVB	A14,*A8				;NULL TERMINATOR
	ADDK	8,A8

;	MMTM	A12,A0,A1,A8,A9,A10,A11
	MOVE	A0,B1
	CLR	A0				;NO SLEEP TIL
	MOVI	STRCNCONV,A1			;ROUTINE
	MOVI	HFPAL,A5			;[COLOR,PALETTE]
	MOVI	DEFEAT_LIST_STRING,A8
;	MOVI	[11,0],A10			;[Y,X] SPACING
	MOVI	[12,0],A10			;[Y,X] SPACING
	MOVI	H10FONT,A11			;FONT
	JSRP	PRINTF
;	MMFM	A12,A0,A1,A8,A9,A10,A11

;	CMPI	25,A10
;	JRGE	ISP_DL_WAIT
;
;	MMTM	A12,A0,A1,A8,A9
;	SLEEP	30
;	MOVI	150,A8
;	MOVE	*A13(PPNUM),A9,W		;PLAYER NUMBER - 1
;	JSRP	PLAYER_BUTTON_SKIP
;	MMFM	A12,A0,A1,A8,A9
;
;	CALLA	KILOBJ_ALL			;KILL LIST
;	MOVI	DEFEAT_LIST_STRING,A8		;RESTART STRING
;	MOVI	-1,A11				;FORCE NO "MORE" MESSAGE
;
;	JRUC	ISP_DEFEATS_LUPE

ISP_DL_WAIT
	SLEEP	30
	MOVI	150,A8
	MOVE	*A13(PPNUM),A9,W		;PLAYER NUMBER - 1
	JSRP	PLAYER_BUTTON_SKIP
ISP_DONE
;	MOVE	*A13(PPNUM),A9,W		;PLAYER NUMBER - 1
;	MOVK	1,A14				;FLAG PLAYER DONE
;	SLL	A9,A14
;	MOVB	@PLAYER_INITIAL_BITS,A0
;	OR	A14,A0
;	MOVB	A0,@PLAYER_INITIAL_BITS

	DIE

;SELECT_HEADER_INIT
;	.long	BDAYBCK
;	.word	DMAWNZ,M_SCRNOBJ|M_NOSCALE|M_NOVEL
;	.word	OM_OID
;	.word	OID_JUNK

INITIALS_HEADER_INIT
	.long	INITIALS11
	.word	DMAWNZ,M_SCRNOBJ|M_NOSCALE|M_NOVEL
	.word	OM_OID
	.word	OID_JUNK

OICHAMP_INIT
	.long	STANCHA2a
	.word	DMAWNZ,M_SCRNOBJ|M_NOSCALE|M_NOVEL
	.word	OM_OID|OM_ANIM
	.word	OID_JUNK
	.long	OICHAMP_ANIM

OICHAMP_ANIM
	LWLL	1,10|AFUNC,A_CHANGE_PAL+2,STAN128a
	LWLL	1,10|AFUNC,A_CHANGE_PAL+2,STAN128b
	.long	0

STAN128b
   .word   128
   .word   00000h,06421h,06063h,069f0h,05064h,06401h,06043h,04064h
   .word   03822h,01801h,06002h,02401h,05c02h,04c23h,05ca9h,04c04h
   .word   03c04h,00400h,04889h,05048h,038c9h,04828h,0402ah,03409h
   .word   0386eh,0340dh,00401h,02449h,0240eh,0288eh,02492h,00c12h
   .word   02d34h,0148ah,039b8h,0041ch,0041bh,00c5dh,01076h,00c72h
   .word   02117h,00003h,0001bh,0001ch,04e9bh,0213ah,035bch,010b8h
   .word   0529eh,02d98h,00039h,0465eh,04232h,0465bh,00058h,0002ch
   .word   00074h,00076h,00072h,056fch,0635fh,06f9fh,07bffh,073beh
   .word   031f0h,04297h,02df1h,021d0h,014e8h,05b3ah,00c84h,04695h
   .word   021aeh,03632h,02dceh,0218ch,01108h,05af7h,035ceh,01529h
   .word   02529h,018c6h,00ca5h,0156ah,04673h,00842h,0216ah,06759h
   .word   07fffh,07bfeh,06f7bh,056a8h,07fe0h,07fe1h,07fe0h,07fe0h
   .word   07fe2h,07fcfh,07fc4h,07fc0h,07fc5h,07fc5h,07fa7h,07f8ah
   .word   07b8ah,07b8ah,07b89h,07f83h,0776ah,0776ah,07f40h,0734bh
   .word   06f4bh,07f24h,06b27h,062c1h,0318ch,038e2h,01cc2h,00000h
   .word   07bbdh,041efh,060a3h,066b5h,07083h,06c42h,07fffh,02108h

HEADER_XPOS_TABLE
	.WORD	5+0,5+96,5+195,5+291

TOPTEN_SOUND
	PUSH	A4
	MOVI	S_TOPTEN_PLAYER,A4
	CALLA	do_sound
	PULLQ	A4
	RETS

**************************************************************************
*								         *
* PLAYER_BUTTON_SKIP							 *
* 									 *
* PASS:									 *
* A8 = TIME TO WAIT TIL TIMEOUT						 *
* A9 = PLAYER NUMBER - 1 TO CHECK					 *
* RETURN:								 *
* NUTIN'								 *
*								         *
**************************************************************************

PLAYER_BUTTON_SKIP
	MMTM	A12,A9,A10,A11

	KITN	4
	JREQ	PBS_GO				;BR=4 PLAYER KIT
	MOVE	A9,A9
	JRZ	PBS_GO				;PLAYER 1
	MOVK	1,A9				;PLAYER 2
PBS_GO
	MOVE	@SWITCH,A10,L
	NOT	A10
	MOVI	M_SW_T|M_SW_P|M_SW_S,A11	;BUTTON MASK
	MOVE	A9,A14
	SLL	3,A14
	SLL	A14,A11				;SET PLAYER BUTTON MASK
	AND	A11,A10				;GET CURRENT BUTTONS
PBS_LUPE
	SLEEP	1
	MOVE	@SWITCH,A0,L			;GET NEW BUTTONS
	NOT	A0
	AND	A11,A0				;MASK PLAYER BUTTONS
	MOVE	A0,A1

	XOR	A10,A0				;CLEAR STUCK BUTTONS
	MOVE	A1,A10
	AND	A0,A1				;CHECK FOR BUTTON PRESS
	JRNZ	PBS_DONE			;BR=YEP!

;	JRUC	PBS_LUPE

	DSJ	A8,PBS_LUPE			;BR=NO TIMEOUT YET
PBS_DONE
	MMFM	A12,A9,A10,A11
	RETP


**************************************************************************
*								         *
* cc_az									 *
*								         *
**************************************************************************

cc_az	cmpi	' ',a14
	jrz	ss_sp
	subi	'A',a14
	jruc	ss_st
ss_sp	movk	26,a14
ss_st	rets

**************************************************************************
*								         *
* PENACHO_TO_ASCII							 *
*								         *
**************************************************************************

PENACHO_TO_ASCII
	CMPI	26,A14
	JRLT	PTA_ALPHA			;BR=DA ALPHABET
	JREQ	PTA_SPACE			;BR=EMPTY SPACE
	MOVI	'?',A14				;Q-MARK
	RETS
PTA_SPACE
	MOVI	' ',A14
	RETS
PTA_ALPHA
	ADDI	'A',A14
	RETS

**************************************************************************
*								         *
* a9_to_a0								 *
*								         *
**************************************************************************

a9_to_a0_mod
	move	a9,a0
	sll	4,a0
	addi	p4_to_8tab,a0
	move	*a0,a14,W
	GBLOCK	a14,a0
	movb	a14,*a0(POF_NUMBER)
	rets
a9_to_a0
	move	a9,a0
	sll	4,a0
	addi	p4_to_8tab,a0
	move	*a0,a0,W
	GBLOCK	a0,a0
	rets
p4_to_8tab
	.word	1,2,5,6


TOPTEN_MESS_INIT
	.long	TOPTEN10
	.word	DMAWNZ,M_SCRNOBJ|M_NOVEL|M_NOSCALE
	.word	OM_ANIM
	.long	TOPTEN_FLASH_ANIM

TOPTEN_FLASH_ANIM
	LWL	1,AFUNC|3,OBJ_ON
	LWLLLL	1,AFUNC|3,A_2FUNCS+6,OBJ_CONST,A_Anim_DSJ,FULL_GAME_FLASH_ANIM
	LWL	1,AFUNC|30,OBJ_ON
	LWL	1,AFUNC|1,DELETE_OBJ

NO_RECORD_STRING
	.STRING	"NO\nRECORD",0
	.EVEN

SPECIAL_CHAR_STRING
	.STRING	"SPECIAL\nCHARACTER",0
	.EVEN

RANK_STRING
	.STRING	"RANK #%u",0
	.LONG	b_rank
	.EVEN

RECORD_STRING
	.STRING	"%u W - %u L - %u T",0
	.LONG	b_wins
	.LONG	b_losses
	.LONG	b_ties
	.EVEN

;WINS_STRING
;	.STRING	"%u.%u%% WINS",0
;	.LONG	RAMTEMP1
;	.LONG	RAMTEMP2

PCTG_100_STRING
	.STRING	"PCTG: 1.000",0
	.EVEN

PCTG_STRING
	.STRING	"PCTG:  .%u%u%u",0
	.LONG	RAMTEMP1
	.LONG	RAMTEMP2
	.LONG	RAMTEMP3
	.EVEN

POINTS_STRING
	.STRING	"%u POINTS",0
	.LONG	RAMTEMP1
	.EVEN

DEFEATED_STRING
	.STRING "DEFEATED",0
	.EVEN

SHUTOUT_STRING
	.STRING "SHUTOUT",0
	.EVEN

LOST_STRING
	.STRING "LOST TO",0
	.EVEN

TIED_STRING
	.STRING "TIED",0
	.EVEN

LAST_STRING
	.STRING	"LAST MATCH\n\p%c\n( %c%c%c & %c%c%c )\n\p%p\n"
	.STRING	"\p%c\n( %c%c%c & %c%c%c )\n\p%u - %u",0
	.LONG	BLUTXT3P	
	.LONG	RAMTEMP1
	.LONG	b_initial1
	.LONG	b_initial2
	.LONG	b_initial3
	.LONG	b_teammate_initial1
	.LONG	b_teammate_initial2
	.LONG	b_teammate_initial3
	.LONG	FONTGRYP
	.LONG	RAMTEMP3
	.LONG	REDTXT3P	
	.LONG	RAMTEMP2
	.LONG	b_opp1_initial1
	.LONG	b_opp1_initial2
	.LONG	b_opp1_initial3
	.LONG	b_opp2_initial1
	.LONG	b_opp2_initial2
	.LONG	b_opp2_initial3
;	.LONG	FONTGRYP
	.LONG	ORGTXT1P
	.LONG	b_last_score1
	.LONG	b_last_score2
	.EVEN

NO_DEFEATS_STRING
	.STRING "YOU HAVE\nDEFEATED\nNONE OF THE\n26 NHL TEAMS.",0
	.EVEN

ALL_DEFEATS_STRING
;	.STRING "YOU HAVE\nDEFEATED\nALL OF THE\n26 NHL TEAMS!",0
	.STRING "ALL 26\nNHL\nTEAMS\nHAVE\nBEEN\nDEFEATED!",0
	.EVEN

DEFEATS_STRING
;	.STRING "YOU HAVE\n\fDEFEATED\n\f%u OF THE\n\f26 NHL TEAMS :",0
;	.LONG	[-4,0]
;	.LONG	[-8,0]
;	.LONG	RAMTEMP1
;	.LONG	[-12,0]

;	.STRING "YOU HAVE\n\fDEFEATED :",0
	.STRING "TEAMS\n\fDEFEATED :",0
	.LONG	[-4,0]
	.EVEN

MUST_PLAY_STRING
	.STRING "TEAMS\n\fTO BEAT :",0
	.LONG	[-4,0]
	.EVEN

;TOTAL_DEFEATS_STRING
WINS_TO_CUP_STRING
;	.STRING "%u OF THE 26\n\fNHL TEAMS",0
;	.STRING "DEFEATED\n\f%u OUT OF 26",0
	.STRING "%u WINS\n\fTO THE CUP !"
	.LONG	RAMTEMP1
	.LONG	[-4,0]
;	.LONG	RAMTEMP1
	.EVEN

STAN_CUP_STRING
;	.STRING "STANLEY CUP\n\fGAME NEXT !",0
	.STRING "1 WIN\n\fTO THE CUP !",0
	.LONG	[-4,0]
	.EVEN



;**************************************************************************
;*								         *
;* DISPLAY_TABLE								 *
;* 									 *
;* PASS:									 *
;* 									 *
;* A1  = NUMBER OF TABLE ELEMENTS					 *
;* A5  = STRING TABLE							 *
;* A6  = X SPACING BETWEEN ENTRIES					 *
;* A9  = UPPER LEFT [Y,X] POSITION (X SHOULD BE LESS BY A7)		 *
;* A10 = Y SPACING BETWWEN ENTRIES << 16					 *
;* A11 = X DISTANCE FROM RIGHT TO LEFT ENTRIES				 *
;* B1  = OID								 *
;*								         *
;**************************************************************************
;
;DISPLAY_TABLE
;	PUSHP	A6
;	MOVE	A6,A7
;	CLR	A0
;DT_LUPE
;	MOVE	*A5+,A8,L
;
;	BTST	0,A8
;	JRZ	DT_NEXT_X
;
;	SRL	1,A8
;	SLL	1,A8
;
;	SUBXY	A11,A9
;	ADDXY	A10,A9
;DT_NEXT_X
;	ADDXY	A7,A9
;
;	MMTM	A12,A0,A1,A5,A7,A9,A10,A11
;
;	CLR	A0				;NO SLEEP TIL
;;	MOVI	STRCNRMO,A1			;ROUTINE
;;	MOVI	COLOR_PBLACK,A5			;[COLOR,PALETTE]
;;	MOVK	1,A10				;[Y,X] SPACING
;;	MOVI	RD15FONT,A11			;FONT
;	MOVI	STRCNCONV,A1			;ROUTINE
;	MOVI	HFPAL,A5			;[COLOR,PALETTE]
;	MOVI	[0,-2],A10				;[Y,X] SPACING
;	MOVI	H18TFONT,A11			;FONT
;
;	JSRP	PRINTF
;
;	MMFM	A12,A0,A1,A5,A7,A9,A10,A11
;
;	INC	A0
;	CMP	A1,A0
;	JRNE	DT_LUPE				;BR=NOT FINISHED
;DT_DONE
;	PULLPQ	A6
;	RETP


ALPHABET_INIT
	.long	ALPHABET
	.word	DMAWNZ,M_SCRNOBJ|M_NOSCALE|M_NOVEL
	.word	0

MONTHS_INIT
	.long	MONTHS
	.word	DMAWNZ,M_SCRNOBJ|M_NOSCALE|M_NOVEL
	.word	0

DAYS_INIT
	.long	DAYS
	.word	DMAWNZ,M_SCRNOBJ|M_NOSCALE|M_NOVEL
	.word	0

DAY30_INIT
	.long	DAY30
	.word	DMAWNZ,M_SCRNOBJ|M_NOSCALE|M_NOVEL
	.word	0

DAY31_INIT
	.long	DAY31
	.word	DMAWNZ,M_SCRNOBJ|M_NOSCALE|M_NOVEL
	.word	0


MONTH_SIZE_TABLE
	.WORD	31,29,31,30,31,30
	.WORD	31,31,30,31,30,31

A_XPOS_TABLE
	.WORD	14,110,209,305

JAN_XPOS_TABLE
	.WORD	13,109,208,304

DAY1_XPOS_TABLE
	.WORD	13,109,208,304

PLAYER_OID_TABLE
	.WORD	OID_PLAYER_1,OID_PLAYER_2,OID_PLAYER_5,OID_PLAYER_6

PLAYER_OID2_TABLE
	.WORD	OID_TURBO_1,OID_TURBO_2,OID_TURBO_5,OID_TURBO_6

PLAYER_OID3_TABLE
	.WORD	OID_TURBOBAR_1,OID_TURBOBAR_2,OID_TURBOBAR_5,OID_TURBOBAR_6

;PLAYER_OID4_TABLE
;	.WORD	OID_TURBONAME_1,OID_TURBONAME_2,OID_TURBONAME_5,OID_TURBONAME_6

;PLAYER_PID_TABLE
;	.WORD	PID_PLAYER_1,PID_PLAYER_2,PID_PLAYER_5,PID_PLAYER_6

;PLAYER_PID2_TABLE
;	.WORD	PID_PLAYER_1_MESS,PID_PLAYER_2_MESS
;	.WORD	PID_PLAYER_5_MESS,PID_PLAYER_6_MESS

ALPHA_TABLE
	.LONG	A_STR,B_STR,C_STR,D_STR
	.LONG	E_STR+1,F_STR,G_STR,H_STR
	.LONG	I_STR+1,J_STR,K_STR,L_STR
	.LONG	M_STR+1,N_STR,O_STR,P_STR
	.LONG	Q_STR+1,R_STR,S_STR,T_STR
	.LONG	U_STR+1,V_STR,W_STR,X_STR
	.LONG	Y_STR+1,Z_STR,SP_STR,RUB_STR

;A_INIT
;	.long	FONT15A
;	.word	DMAWNZ,M_SCRNOBJ|M_NOVEL
;	.word	0

MONTH_TABLE
	.LONG	JAN_STR,FEB_STR,MAR_STR+1,APR_STR,MAY_STR+1,JUN_STR
	.LONG	JUL_STR+1,AUG_STR,SEP_STR+1,OCT_STR,NOV_STR+1,DEC_STR


DAY_TABLE
	.LONG	DAY1_STR,DAY2_STR,DAY3_STR,DAY4_STR
	.LONG	DAY5_STR+1,DAY6_STR,DAY7_STR,DAY8_STR
	.LONG	DAY9_STR+1,DAY10_STR,DAY11_STR,DAY12_STR
	.LONG	DAY13_STR+1,DAY14_STR,DAY15_STR,DAY16_STR
	.LONG	DAY17_STR+1,DAY18_STR,DAY19_STR,DAY20_STR
	.LONG	DAY21_STR+1,DAY22_STR,DAY23_STR,DAY24_STR
	.LONG	DAY25_STR+1,DAY26_STR,DAY27_STR,DAY28_STR
	.LONG	DAY29_STR+1,DAY30_STR,DAY31_STR

A_STR
	.STRING	"A",0
B_STR
	.STRING	"B",0
C_STR
	.STRING	"C",0
D_STR
	.STRING	"D",0
E_STR
	.STRING	"E",0
F_STR
	.STRING	"F",0
G_STR
	.STRING	"G",0
H_STR
	.STRING	"H",0
I_STR
	.STRING	"I",0
J_STR
	.STRING	"J",0
K_STR
	.STRING	"K",0
L_STR
	.STRING	"L",0
M_STR
	.STRING	"M",0
N_STR
	.STRING	"N",0
O_STR
	.STRING	"O",0
P_STR
	.STRING	"P",0
Q_STR
	.STRING	"Q",0
R_STR
	.STRING	"R",0
S_STR
	.STRING	"S",0
T_STR
	.STRING	"T",0
U_STR
	.STRING	"U",0
V_STR
	.STRING	"V",0
W_STR
	.STRING	"W",0
X_STR
	.STRING	"X",0
Y_STR
	.STRING	"Y",0
Z_STR
	.STRING	"Z",0
SP_STR
	.BYTE	93,0
RUB_STR
	.BYTE	94,0
SPACE_STR
	.STRING	" ",0

JAN_STR
	.STRING	"JAN",0
FEB_STR
	.STRING	"FEB",0
MAR_STR
	.STRING	"MAR",0
APR_STR
	.STRING	"APR",0
MAY_STR
	.STRING	"MAY",0
JUN_STR
	.STRING	"JUN",0
JUL_STR
	.STRING	"JUL",0
AUG_STR
	.STRING	"AUG",0
SEP_STR
	.STRING	"SEP",0
OCT_STR
	.STRING	"OCT",0
NOV_STR
	.STRING	"NOV",0
DEC_STR
	.STRING	"DEC",0

DAY1_STR
	.STRING	"1",0
DAY2_STR
	.STRING	"2",0
DAY3_STR
	.STRING	"3",0
DAY4_STR
	.STRING	"4",0
DAY5_STR
	.STRING	"5",0
DAY6_STR
	.STRING	"6",0
DAY7_STR
	.STRING	"7",0
DAY8_STR
	.STRING	"8",0
DAY9_STR
	.STRING	"9",0
DAY10_STR
	.STRING	"10",0
DAY11_STR
	.STRING	"11",0
DAY12_STR
	.STRING	"12",0
DAY13_STR
	.STRING	"13",0
DAY14_STR
	.STRING	"14",0
DAY15_STR
	.STRING	"15",0
DAY16_STR
	.STRING	"16",0
DAY17_STR
	.STRING	"17",0
DAY18_STR
	.STRING	"18",0
DAY19_STR
	.STRING	"19",0
DAY20_STR
	.STRING	"20",0
DAY21_STR
	.STRING	"21",0
DAY22_STR
	.STRING	"22",0
DAY23_STR
	.STRING	"23",0
DAY24_STR
	.STRING	"24",0
DAY25_STR
	.STRING	"25",0
DAY26_STR
	.STRING	"26",0
DAY27_STR
	.STRING	"27",0
DAY28_STR
	.STRING	"28",0
DAY29_STR
	.STRING	"29",0
DAY30_STR
	.STRING	"30",0
DAY31_STR
	.STRING	"31",0
	.EVEN

**************************************************************************
*								         *
* TEAM_SELECT_PROC							 *
*								         *
* PASS:									 *
* A9  = PLAYER NUMBER - 1						 *
*								         *
**************************************************************************

PTEAMNAME_OBJ	EQU	PDATA			;UHL TEAM NAME OBJECT
PLOGO_OBJ	EQU	PDATA+0020H		;UHL LOGO OBJECT
PLEFTMUG_OBJ	EQU	PDATA+0040H		;UHL LEFT MUG SHOT OBJECT
PRGHTMUG_OBJ	EQU	PDATA+0060H		;UHL RIGHT MUG SHOT OBJECT
PLEFTNAME_OBJ	EQU	PDATA+0080H		;UHL LEFT NAME OBJECT
PRGHTNAME_OBJ	EQU	PDATA+00A0H		;UHL RIGHT NAME OBJECT
PLEFTATTR_OBJ	EQU	PDATA+00C0H		;UHL LEFT ATTRIBUTE HEAD OBJECT
PRGHTATTR_OBJ	EQU	PDATA+00E0H		;UHL RIGHT ATTRIBUTE HEAD OBJECT
PGBODY_OBJ	EQU	PDATA+0100H		;UHL GOALIE BODY OBJECT
PGHEAD_OBJ	EQU	PDATA+0120H		;UHL GOALIE HEAD OBJECT
;PSWAP		EQU	PDATA+0140H		;UHL SWAP INDEX COUNT
PTEAMMATE	EQU	PDATA+0160H		;UHW TEAMMATE PLAYER NUMBER - 1
PARROW		EQU	PDATA+0170H		;UHL ARROW POINTER OBJECT

OMUGPOS		EQU	ODATA			;UHL [Y,X] MUG POSITION

TEAM_SELECT_PROC
	MOVI	TEAM_SELECT_LEFT_POS_TABLE,A10
	MOVI	OID_TURBOBAR_1,A0
	MOVI	OID_TURBOBAR_2,A1

	MOVE	@NPLAYERS,A5,W
	SUBK	4,A5
	JRZ	TSP_CHECK_4P			;BR=4 PLAYER KIT

	MOVE	A9,A9
	JRZ	TSP_GO				;BR=PLAYER 1
	JRUC	TSP_RIGHT_TABLE			;PLAYER 2

TSP_CHECK_4P

	BTST	1,A9
	JRZ	TSP_GO				;BR=PLAYER 1 OR 2
TSP_RIGHT_TABLE
	MOVI	TEAM_SELECT_RGHT_POS_TABLE,A10
	MOVI	OID_TURBOBAR_5,A0
	MOVI	OID_TURBOBAR_6,A1

TSP_GO
	CALLA	KILOBJ_ALL
	MOVE	A1,A0
	CALLA	KILOBJ_ALL

	MOVI	TEAM_NAME_INIT,B0
	CALLA	EASYMAKE
	MOVE	A8,*A13(PTEAMNAME_OBJ),L
	MOVE	*A10+,A1,L
	CLR	A2
	CALLA	SET_SCRNOBJ
	CALLA	INSERT_OBJ

	MOVI	LOGO_INIT,B0
	CALLA	EASYMAKE
	MOVE	A8,*A13(PLOGO_OBJ),L
	MOVE	*A10+,A1,L
	MOVK	3,A2
	CALLA	SET_SCRNOBJ
	CALLA	INSERT_OBJ

	CALLR	SETUP_PLAYERS

	MOVI	DUMMY_INIT,B0			;GOALIE BODY
	CALLA	EASYMAKE
	MOVE	A8,*A13(PGBODY_OBJ),L

;	MOVI	ANIM_GSTAND_8,A6	
	MOVI	ANIM_GSWAY,A6	
	MOVI	DMAWNZ,A4			
	CMPI	1,A9
	JRGT	TSP_BODY_SET_POS		;BR=ON THE LEFT, DON'T FLIP
;	MOVI	ANIM_GSTAND_2,A6
	ORI	M_FLIPH,A4			;ON THE RIGHT
TSP_BODY_SET_POS
	MOVE	A4,*A8(OCTRL),W
;	MOVI	GST12F01,A1
	MOVI	GST32F01,A1
	CALLA	ANI

	MOVE	*A10,A1,L
	MOVI	-20,A2
	CALLA	SET_SCRNOBJ

	CALLA	INSERT_OBJ
	MOVE	A8,A7				;SAVE "HEAD" OBJECT

	MOVI	DUMMY_INIT,B0			;GOALIE HEAD
	CALLA	EASYMAKE

	MOVE	A7,*A7(OPART1),L		;LINK HEAD TO BODY (MULTIPART)
	MOVE	A7,*A8(OPART1),L
	MOVE	A8,*A7(OPARTS),L

	MOVE	A8,*A13(PGHEAD_OBJ),L

	MOVI	DMAWNZ,A4			
	CMPI	2,A9
	JRLT	TSP_HEAD_SET_POS		;BR=ON THE LEFT, DON'T FLIP
	ORI	M_FLIPH,A4			;ON THE RIGHT
TSP_HEAD_SET_POS
	MOVE	A4,*A8(OCTRL),W
	MOVI	WARMSK2,A1
	CALLA	ANI

	MOVI	02610261H,A4
	MOVE	A4,*A8(OSCALE),L
	SRA	16,A4

	MOVE	*A8(OANIOFF),A14,L		;SCALE ANIMP
	MOVE	A14,A1
	SLL	16,A1
	SRA	16-8,A1
	DIVS	A4,A1				;SCALE X ANIMP
	MOVX	A1,A14
	MOVE	A14,A1
	SRA	16,A1
	SLL	8,A1
	DIVS	A4,A1				;SCALE Y ANIMP
	SLL	16,A1
	MOVY	A1,A14
	MOVE	A14,*A8(OANIOFF),L
	CALLA	A_UPDATE_SEL_HEAD_POS

	CALLA	INSERT_OBJ

	MOVI	SELECT_HEAD_ANIM,A1
	CALLA	STRT_ANIM

	MOVE	A6,A1
	MOVE	A7,A8
	CALLA	STRT_ANIM			;BODY ANIMATION

	MOVK	26,A1
	MOVK	4,A2

	MOVI	team1,A4
	MOVI	TEAM1_SWAP,A6

	MOVE	A5,A5
	JRZ	TSP_4P				;BR=4 PLAYER KIT

	MOVE	A9,A3				;2 PLAYER KIT (START ON CHICAGO)
	JRZ	TSP_PICK			;BR=PLAYER 1
	MOVI	team2,A4
	JRUC	TSP_BOSTON			;PLAYER 2
TSP_4P
	CLR	A3				;START ON CHICAGO
	CMPI	3-1,A9
	JRLT	TSP_PICK			;BR=LEFT TEAM MEMBER
TSP_BOSTON
	MOVK	3,A3				;START ON BOSTON
;	MOVK	8,A3				;START ON DETROIT
	MOVI	team2,A4
	MOVI	TEAM2_SWAP,A6
TSP_PICK

	CLR	A14
	MOVE	A14,*A13(PSWAP),W		;CLEAR SWAP

	MOVE	@NPLAYERS,A14,W
	SUBK	4,A14
	JRN	TSP_SET_TEAMMATE		;BR=NOT 4 PLAYER KIT

	MOVK	1,A14
	BTST	0,A9
	JRZ	TSP_OFFSET_TEAMMATE		;BR=PLAYER ON LEFT OF TEAM
	SUBK	2,A14				;PLAYER ON RIGHT OF TEAM
TSP_OFFSET_TEAMMATE
	ADD	A9,A14
TSP_SET_TEAMMATE
	MOVE	A14,*A13(PTEAMMATE),W		;TEAMMATE PLAYER NUMBER - 1

	MOVE	@TEAM_SELECT_STARTIRQ,A14,L
	JRNZ	TSP_PICK_ENTRY			;BR=NOT FIRST TEAM SELECTED
	MOVE	@WAVEIRQS,@TEAM_SELECT_STARTIRQ,L
TSP_PICK_ENTRY
	CLR	A10
	MOVI	TEAM_ARRAY,A11
	CLR	B0
	MMTM	A12,A4,A6
	JSRP	PICK_ENTRY
	MMFM	A12,A4,A6

	MOVB	@TEAM_SELECTED_BITS,A14			;DISABLE SIDE SWAPPIN'
	ORI	010000B,A14
	MOVB	A14,@TEAM_SELECTED_BITS

	SLL	4,A1
	ADDI	TEAM_REMAP_TABLE,A1
	MOVE	*A1,A0,W
	MOVE	A0,*A4,W			;SET TEAM
	MOVE	A2,*A6,W			;SET TEAM SWAP

	ADDI	AUD_BRUINS-1,A0
	CALLA   AUD1

	MOVE	*A13(PGBODY_OBJ),A8,L
	MOVI	ANIM_GSMACK,A1
	CALLA	STRT_ANIM

	SLEEP	SELECT_FLASH_ONTIME*SELECT_FLASHES*2
	SLEEP	15

	MOVK	1,A14				;FLAG PLAYER DONE
	SLL	A9,A14
	MOVB	@TEAM_SELECTED_BITS,A0
	ANDI	01111B,A0			;TOSS OUT BIT 5
	OR	A14,A0
	MOVB	A0,@TEAM_SELECTED_BITS

	DIE

**************************************************************************
*								         *
* SETUP_PLAYERS								 *
* 									 *
* PASS:									 *
* A10 = POSITION TABLE OFFSET TO LEFT MUG ENTRY				 *
* A13 = PROCESS								 *
* 									 *
* RETURN:								 *
* NUTIN'								 *
*								         *
**************************************************************************

SETUP_PLAYERS
	MOVI	LEFT_MUG_INIT,B0		;LEFT MUG SHOT
	CALLA	EASYMAKE
	MOVE	A8,*A13(PLEFTMUG_OBJ),L
	MOVE	*A10+,A1,L
	MOVE	A1,*A8(OMUGPOS),L
	MOVK	2,A2
	CALLA	SET_SCRNOBJ
	CALLA	INSERT_OBJ

	MOVI	RIGHT_MUG_INIT,B0		;RIGHT MUG SHOT
	CALLA	EASYMAKE
	MOVE	A8,*A13(PRGHTMUG_OBJ),L
	MOVE	*A10+,A1,L
	MOVE	A1,*A8(OMUGPOS),L
	MOVK	2,A2
	CALLA	SET_SCRNOBJ
;	MOVK	8,A14
;	MOVE	A14,*A8(OFSET),W		;CLIP OFF RIGHT SHOULDER
	CALLA	INSERT_OBJ

	MOVI	PLAYER_NAME_INIT,B0		;LEFT PLAYER NAME
	CALLA	EASYMAKE
	MOVE	A8,*A13(PLEFTNAME_OBJ),L
	MOVE	*A10+,A1,L
	MOVI	-1,A2
	CALLA	SET_SCRNOBJ
	CALLA	INSERT_OBJ

	MOVI	PLAYER_NAME_INIT,B0		;RIGHT PLAYER NAME
	CALLA	EASYMAKE
	MOVE	A8,*A13(PRGHTNAME_OBJ),L
	MOVE	*A10+,A1,L
	MOVI	-1,A2
	CALLA	SET_SCRNOBJ
	CALLA	INSERT_OBJ

	MOVI	ATTRIBUTES_INIT,B0		;LEFT ATTRIBUTE LIST
	CALLA	EASYMAKE
	MOVE	*A10+,A1,L
	CLR	A2
	CALLA	SET_SCRNOBJ
	CALLA	INSERT_OBJ

	MOVI	ATTRIBUTES_INIT,B0		;RIGHT ATTRIBUTE LIST
	CALLA	EASYMAKE
	MOVE	*A10+,A1,L
	CLR	A2
	CALLA	SET_SCRNOBJ
	CALLA	INSERT_OBJ

	MOVI	BAR_INIT,B0
	CALLA	EASYMAKE
	MOVE	*A10+,A1,L
	CLR	A2
	CALLA	SET_SCRNOBJ
	CALLA	INSERT_OBJ

	MOVE	A8,A3
	MOVE	A3,*A13(PLEFTATTR_OBJ),L
	MOVE	A3,*A8(OPART1),L
	MOVE	A8,A4

	MOVI	BAR_INIT,B0
	CALLA	EASYMAKE
	MOVE	*A10+,A1,L
	CLR	A2
	CALLA	SET_SCRNOBJ
	CALLA	INSERT_OBJ

	MOVE	A8,A6
	MOVE	A6,*A13(PRGHTATTR_OBJ),L
	MOVE	A6,*A8(OPART1),L
	MOVE	A8,A7

	MOVK	3,A11
PS_ATTRIBUTE_LUPE
	MOVI	BAR_INIT,B0
	CALLA	EASYMAKE
	MOVE	*A10+,A1,L
	CLR	A2
	CALLA	SET_SCRNOBJ
	CALLA	INSERT_OBJ

	MOVE	A3,*A8(OPART1),L
	MOVE	A8,*A4(OPARTS),L
	MOVE	A8,A4

	MOVI	BAR_INIT,B0
	CALLA	EASYMAKE
	MOVE	*A10+,A1,L
	CLR	A2
	CALLA	SET_SCRNOBJ
	CALLA	INSERT_OBJ

	MOVE	A6,*A8(OPART1),L
	MOVE	A8,*A7(OPARTS),L
	MOVE	A8,A7

	DSJ	A11,PS_ATTRIBUTE_LUPE

	RETS

**************************************************************************
*								         *
* A_UPDATE_SEL_HEAD_POS - UPDATE SELECT HEAD POSITION WITH RESPECT TO 	 *
* 			  THE BODY					 *
* PASS:									 *
* A8 = "HEAD" OBJECT							 *
*								         *
**************************************************************************

A_UPDATE_SEL_HEAD_POS
	MOVE	*A8(OPART1),A4,L			;BODY IS HEAD OBJECT
	MOVE	*A4(OIMG),A14,L
	MOVE	*A14(ICHEADX),A3,L

	MOVE	*A4(OCTRL),A14,W
	BTST	B_FLIPH,A14
	JRZ	AUSHP_SET				;BR=NOT FLIPPED
	NEGX	A3
AUSHP_SET
	MOVE	*A4(ODAG),A1,L
	ADDXY	A3,A1
	MOVI	-21,A2
	CALLA	SET_SCRNOBJ

	RETS

SELECT_HEAD_ANIM
	LWL	1,AFUNC|1,A_UPDATE_SEL_HEAD_POS
	.long	0



;TEAM_SELECT_POS_TABLE
;	.LONG	TEAM NAME, LOGO
;	.LONG	LEFT MUG, RIGHT MUG
;	.LONG	LEFT NAME, RIGHT NAME
;	.LONG	LEFT ATTRIBUTE HEADER,RIGHT ATTRIBUTE HEADER
;	.LONG	LEFT ATTRIBUTE,RIGHT ATTRIBUTE
;	.LONG	LEFT ATTRIBUTE,RIGHT ATTRIBUTE
;	.LONG	LEFT ATTRIBUTE,RIGHT ATTRIBUTE
;	.LONG	LEFT ATTRIBUTE,RIGHT ATTRIBUTE
;	.LONG	GOALIE BODY

TEAM_SELECT_LEFT_POS_TABLE
;	.LONG	[INFOBOX_Y+4,INFOBOX_XL+94],[INFOBOX_Y+49,INFOBOX_XL+88]
	.LONG	[INFOBOX_Y+3,INFOBOX_XL+88],[INFOBOX_Y+49,INFOBOX_XL+88]
;	.LONG	[INFOBOX_Y+78,INFOBOX_XL+40],[INFOBOX_Y+78,INFOBOX_XL+131]
	.LONG	[INFOBOX_Y+78,INFOBOX_XL+40],[INFOBOX_Y+78,INFOBOX_XL+138]
	.LONG	[INFOBOX_Y+83,INFOBOX_XL+49],[INFOBOX_Y+83,INFOBOX_XL+129]
	.LONG	[INFOBOX_Y+92,INFOBOX_XL+16],[INFOBOX_Y+92,INFOBOX_XL+96]
	.LONG	[INFOBOX_Y+92,INFOBOX_XL+45],[INFOBOX_Y+92,INFOBOX_XL+125]
	.LONG	[INFOBOX_Y+98,INFOBOX_XL+45],[INFOBOX_Y+98,INFOBOX_XL+125]
	.LONG	[INFOBOX_Y+104,INFOBOX_XL+45],[INFOBOX_Y+104,INFOBOX_XL+125]
	.LONG	[INFOBOX_Y+110,INFOBOX_XL+45],[INFOBOX_Y+110,INFOBOX_XL+125]
	.LONG	[INFOBOX_Y,INFOBOX_XL+8]

TEAM_SELECT_RGHT_POS_TABLE
;	.LONG	[INFOBOX_Y+4,INFOBOX_XR+94],[INFOBOX_Y+49,INFOBOX_XR+88]
	.LONG	[INFOBOX_Y+3,INFOBOX_XR+88],[INFOBOX_Y+49,INFOBOX_XR+88]
;	.LONG	[INFOBOX_Y+78,INFOBOX_XR+40],[INFOBOX_Y+78,INFOBOX_XR+131]
	.LONG	[INFOBOX_Y+78,INFOBOX_XR+40],[INFOBOX_Y+78,INFOBOX_XR+138]
	.LONG	[INFOBOX_Y+83,INFOBOX_XR+49],[INFOBOX_Y+83,INFOBOX_XR+129]
	.LONG	[INFOBOX_Y+92,INFOBOX_XR+16],[INFOBOX_Y+92,INFOBOX_XR+96]
	.LONG	[INFOBOX_Y+92,INFOBOX_XR+45],[INFOBOX_Y+92,INFOBOX_XR+125]
	.LONG	[INFOBOX_Y+98,INFOBOX_XR+45],[INFOBOX_Y+98,INFOBOX_XR+125]
	.LONG	[INFOBOX_Y+104,INFOBOX_XR+45],[INFOBOX_Y+104,INFOBOX_XR+125]
	.LONG	[INFOBOX_Y+110,INFOBOX_XR+45],[INFOBOX_Y+110,INFOBOX_XR+125]
	.LONG	[INFOBOX_Y,INFOBOX_XR+170]

TTY	EQU	TEAMBOX_Y+5	;TEAM TOP Y
TYS	EQU	12		;TEAM Y SPACING

T1X	EQU	43	;TEAM COLUMN 1 X
T2X	EQU     106+23	;TEAM COLUMN 2 X
T3X	EQU	193	;TEAM COLUMN 3 X
T4X	EQU	282	;TEAM COLUMN 4 X

TEAM_ARRAY
	.LONG	[11,55],[TTY,T1X]
	.LONG	[11,53],[TTY,T2X]
	.LONG	[11,53],[TTY,T3X]
	.LONG	[11,51],[TTY,T4X]

	.LONG	[11,56],[TTY+TYS,T1X]
	.LONG	[11,50],[TTY+TYS,T2X]
	.LONG	[11,80],[TTY+TYS,T3X]
	.LONG	[11,57],[TTY+TYS,T4X]

	.LONG	[11,65],[TTY+TYS*2,T1X]
	.LONG	[11,55],[TTY+TYS*2,T2X]
	.LONG	[11,76],[TTY+TYS*2,T3X]
	.LONG	[11,67],[TTY+TYS*2,T4X]

	.LONG	[11,69],[TTY+TYS*3,T1X]
	.LONG	[11,57],[TTY+TYS*3,T2X]
	.LONG	[11,86],[TTY+TYS*3,T3X]
	.LONG	[11,69],[TTY+TYS*3,T4X]

	.LONG	[11,83],[TTY+TYS*4,T1X]
	.LONG	[11,60],[TTY+TYS*4,T2X]
	.LONG	[11,86],[TTY+TYS*4,T3X]
	.LONG	[11,53],[TTY+TYS*4,T4X]

	.LONG	[11,61],[TTY+TYS*5,T1X]
	.LONG	[11,58],[TTY+TYS*5,T2X]
	.LONG	[11,70],[TTY+TYS*5,T3X]
	.LONG	[11,75],[TTY+TYS*5,T4X]

	.LONG	[11,74],[TTY+TYS*6,T1X]
	.LONG	[11,80],[TTY+TYS*6,T3X]

TEAM_REMAP_TABLE
	.WORD	team_mighty_ducks,team_blackhawks,team_panthers,team_bruins
	.WORD	team_flames,team_stars,team_devils,team_sabres
	.WORD	team_avalanche,team_red_wings,team_rangers,team_whalers
	.WORD	team_oilers,team_blues,team_islanders,team_canadiens
	.WORD	team_kings,team_maple_leafs,team_flyers,team_senators
	.WORD	team_sharks,team_jets,team_lightning,team_penguins
	.WORD	team_canucks,team_capitals

TEAM_NAME_INIT
	.long	BLACKHIT
	.word	DMAWNZ,M_SCRNOBJ|M_NOSCALE
	.word	OM_OID
	.word	OID_SELECT_2

LOGO_INIT
	.long	shadow3
	.word	DMAWNZ,M_SCRNOBJ|M_NOSCALE
	.word	OM_OID
	.word	OID_SELECT_2

LEFT_MUG_INIT
	.long	M_CHELIOS
;	.word	DMAWNZ|M_LRCLIP,M_SCRNOBJ|M_NOVEL|M_NOSCALE
	.word	DMAWNZ,M_SCRNOBJ|M_NOVEL|M_NOSCALE
	.word	OM_OID
	.word	OID_SELECT_2

RIGHT_MUG_INIT
	.long	M_CHELIOS
;	.word	DMAWNZ|M_LRCLIP|M_FLIPH,M_SCRNOBJ|M_NOVEL|M_NOSCALE
	.word	DMAWNZ,M_SCRNOBJ|M_NOVEL|M_NOSCALE
	.word	OM_OID
	.word	OID_SELECT_2

PLAYER_NAME_INIT
	.long	CHELIOS1
	.word	DMAWNZ,M_SCRNOBJ|M_NOVEL|M_NOSCALE
	.word	OM_OID
	.word	OID_SELECT_2

ATTRIBUTES_INIT
	.long	ATTRIBS_HEADER
	.word	DMAWNZ,M_SCRNOBJ|M_NOVEL|M_NOSCALE
	.word	OM_OID
	.word	OID_SELECT_2

BAR_INIT
	.long	BAR0
	.word	DMAWNZ,M_SCRNOBJ|M_NOVEL|M_NOSCALE
	.word	OM_OID
	.word	OID_SELECT_2

DUMMY_INIT
	.long	shadow3
	.word	DMAGO,M_SCRNOBJ|M_NOVEL|M_NOSCALE
	.word	OM_OID
	.word	OID_SELECT_2

BARPAL_TABLE
	.LONG	BARPAL0,BARPAL1,BARPAL2,BARPAL3,BARPAL4
	.LONG	BARPAL5,BARPAL6,BARPAL7,BARPAL8,BARPAL9

BARPAL1:
   .word   11 
   .word   00000h,03defh,003e0h,07c00h,07c00h,07c00h,07c00h,07c00h
   .word   07c00h,07c00h,07c00h
BARPAL2:
   .word   11 
   .word   00000h,03defh,003e0h,003e0h,07c00h,07c00h,07c00h,07c00h
   .word   07c00h,07c00h,07c00h
BARPAL3:
   .word   11 
   .word   00000h,03defh,003e0h,003e0h,003e0h,07c00h,07c00h,07c00h
   .word   07c00h,07c00h,07c00h
BARPAL4:
   .word   11 
   .word   00000h,03defh,003e0h,003e0h,003e0h,003e0h,07c00h,07c00h
   .word   07c00h,07c00h,07c00h
BARPAL5:
   .word   11 
   .word   00000h,03defh,003e0h,003e0h,003e0h,003e0h,003e0h,07c00h
   .word   07c00h,07c00h,07c00h
BARPAL6:
   .word   11 
   .word   00000h,03defh,003e0h,003e0h,003e0h,003e0h,003e0h,003e0h
   .word   07c00h,07c00h,07c00h
BARPAL7:
   .word   11 
   .word   00000h,03defh,003e0h,003e0h,003e0h,003e0h,003e0h,003e0h
   .word   003e0h,07c00h,07c00h
BARPAL8:
   .word   11 
   .word   00000h,03defh,003e0h,003e0h,003e0h,003e0h,003e0h,003e0h
   .word   003e0h,003e0h,07c00h
BARPAL9:
   .word   11 
   .word   00000h,03defh,003e0h,003e0h,003e0h,003e0h,003e0h,003e0h
   .word   003e0h,003e0h,003e0h


**************************************************************************
*								         *
* PICK_ENTRY								 *
* 									 *
* PASS:									 *
* A1  = ARRAY DIMENSION							 *
* A2  = ROW SIZE							 *
* A3  = STARTING ENTRY							 *
* A9  = PLAYER NUMBER - 1						 *
* A10 = [Y,X] OFFSET						         *
* A11 = POSITION/SIZE ARRAY						 *
* B0  = STRING TABLE							 *
*								         *
* RETURN:							         *
* A1  = LAST SELECTED INDEX						 *
* A2  = SWAP INDEX							 *
*								         *
**************************************************************************

SELECT_FLASH_ONTIME	EQU	2			;TIME TO FLASH ON
;SELECT_FLASHES		EQU	5			;NUMBER OF FLASHES
ALPHA_SELECT_FLASHES	EQU	3			;NUMBER OF FLASHES

;TEAM_SELECT_PRETIMEOUT	EQU	20

PICK_ENTRY
	PUSH	A1
	PUSH	B0

	MOVI	PICKBOX_INIT,B0				;CREATE BOX
	CALLA	EASYMAKE

	MOVE	A9,A14					;SET OID
	SLL	4,A14
	ADDI	PLAYER_OID_TABLE,A14
	MOVE	*A14(0),*A8(OID),W

	MOVE	A9,B1					;SET OID2
	SLL	4,B1
	ADDI	PLAYER_OID2_TABLE,B1
	MOVE	*B1,B1,W

	MOVI	PICKBOX_NORMAL_FLASH_ANIM,A1		;DEFAULT FLASH ANIM

	CMPI	TEAM_ARRAY,A11
	JRNE	PE_GET_COLOR				;BR=NOT TEAM SELECT

	MOVI	PICKBOX_TEAM_FLASH_ANIM,A1
	MOVK	10,A14					;START LOOP
	MOVB	A14,*A8(ANIMLOOP)

	CMPI	2-1,A9
	JRGT	PE_DO_RED				;BR=RED SELECT OBJECT

	MOVI	COLOR_BLUE,A14
	MOVE	A8,@BLUE_SELECT_OBJ,L
	JRUC	PE_SET_COLOR
PE_DO_RED
	MOVI	COLOR_RED,A14
	MOVE	A8,@RED_SELECT_OBJ,L
	JRUC	PE_SET_COLOR

PE_GET_COLOR
	MOVE	A9,A14					;GET COLOR FROM TABLE
	SLL	4,A14
	ADDI	PLAYER_COLOR_TABLE,A14
	MOVE	*A14,A14,W
PE_SET_COLOR
	MOVE	A14,*A8(OCONST),W

	CALLA	STRT_ANIM

	PULLQ	B0
	PULLQ	A1

;	MOVI	-1,A14
	CLR	A14
	MOVE	A14,*A8(OZVAL),L

	MOVE	A3,A0					;STARTING ENTRY
	MOVB	@LOCKED_CHAR_BITS,A14
	ORI	010000B,A14				;SET LOCK OVERRIDE BIT
	MOVB	A14,@LOCKED_CHAR_BITS
	CALLR	UPDATE_PICKBOX
	MOVB	@LOCKED_CHAR_BITS,A14
	ANDI	01111B,A14				;CLR LOCK OVERRIDE BIT
	MOVB	A14,@LOCKED_CHAR_BITS

	CALLA	INSERT_OBJ

;	CALLR	MOVE_SOUND

	CMPI	TEAM_ARRAY,A11
	JRNE	PE_CHECK_KIT				;BR=NOT TEAM SELECT

	MMTM	SP,A0,A1,A2,A8
	PUSH	B0

	MOVE	A8,A2
	MOVI	ARROW_PTR_INIT,B0			;CREATE ARROW POINTER
	CALLA	EASYMAKE
	MOVE	A9,*A8(ODATA),W				;PLAYER NUMBER - 1
	MOVE	A2,*A8(ODATA+10H),L			;SELECT OBJECT
	CALLR	A_UPDATE_ARROW
	CALLA	INSERT_OBJ

	MOVE	A8,*A13(PARROW),L

	MOVE	A9,A0
	KITN	4
	JREQ	PE_GET_ARROW_IMG			;BR=4 PLAYER KIT
	MOVE	A0,A0
	JRZ	PE_GET_ARROW_IMG			;BR=PLAYER 1
	MOVK	1,A0					;PLAYER 2
PE_GET_ARROW_IMG
	SLL	5,A0
	ADDI	ARROW_IMG_TABLE,A0
	MOVE	*A0,A0,L
	MOVE	A0,*A8(OIMG),L
	MOVE	*A0(ISAG),*A8(OSAG),L
	MOVE	*A0(ICMAP),A0,L
	KITN	4
	JREQ	PE_SET_PAL				;BR=4 PLAYER KIT
	MOVE	A9,A9
	JRZ	PE_SET_PAL				;BR=PLAYER 1
	MOVI	arrg_pal,A0				;PLAYER 2
PE_SET_PAL
	CALLA	CHANGE_PAL

	PULLQ	B0
	MMFM	SP,A0,A1,A2,A8

PE_CHECK_KIT
	CLR	B7
	MOVE	*A13(PTEAMMATE),A14,W			;TEAMMATE PLAYER NUMBER
	JRN	PE_2P_KIT				;BR=2 PLAYER KIT
	SLL	3,A14					;SWITCH OFFSET
	MOVE	A14,B14
	MOVI	M_SW_T,B7
	SLL	B14,B7					;TEAMMATE TURBO MASK
PE_2P_KIT

	MOVE	A9,A3
	KITN	4
	JREQ	PE_MAKE_MASKS				;BR=4 PLAYER KIT
	MOVE	A3,A3
	JRZ	PE_MAKE_MASKS				;BR=PLAYER 1
	MOVK	1,A3					;PLAYER 2 SWITCHES
PE_MAKE_MASKS

	SLL	3,A3					;SWITCH OFFSET

	MOVK	M_SW_U|M_SW_D|M_SW_L|M_SW_R,A4
	SLL	A3,A4					;SWITCH JOYSTICK MASK

	MOVE	A3,B3
	MOVI	M_SW_S|M_SW_P|M_SW_T,B4
	SLL	B3,B4					;SWITCH BUTTON MASK

	MOVE	@SWITCH,A5,L
	NOT	A5
	MOVE	A5,B8
	AND	B7,B8					;LAST TEAMMATE'S TURBO
	MOVE	A5,B5
	AND	B4,B5					;LAST BUTTON SWITCH
	AND	A4,A5					;LAST JOYSTICK SWITCH

	CLR	A7					;STUCK COUNT

PE_READ_SWITCH
	MOVE	@SWITCH,A6,L
	NOT	A6

	CMPI	TEAM_ARRAY,A11
	JRNE	PE_CHECK_TABLE

	MOVE	A6,B6
	AND	B4,B6
	JRZ	PE_CHECK_TEAMMATE_PLAYER_SWAP		;BR=NO BUTTONS

	MOVE	B6,B14
	XOR	B5,B14

	MOVE	B6,B5					;NEW LAST BUTTONS

	MOVE	@TEAM_SELECT_STARTIRQ,B9,L
	MOVE	@WAVEIRQS,B10,L
	SUB	B9,B10
	SUBI	TEAM_SELECT_PRETIMEOUT,B10
	JRN	PE_NAP					;BR=BUTTONS ALLOWED

	AND	B6,B14
;	JRZ	PE_NAP					;BR=BUTTON(S) STUCK
	JRZ	PE_CHECK_TEAMMATE_PLAYER_SWAP

	MOVE	B3,B14
	ADDK	B_SW_S,B14
	BTST	B14,B6
	JRNZ	PE_DONE					;BR=SHOOT

	INC	B14
	BTST	B14,B6
	JRZ	PE_CHECK_TURBO				;BR=NOT PASS
	
	MOVB	@TEAM_SELECTED_BITS,A14
	JRNZ	PE_NAP					;BR=NO SWAPPING ALLOWED

	CALLR	SIDE_TOGGLE_SOUND

	MOVE	A9,B9
	SRL	1,B9
	SLL	4,B9
	ADDI	team1_home,B9
	MOVE	*B9,B14,W				
	XORI	1,B14					;TOGGLE HOME/AWAY SIDE
	MOVE	B14,*B9,W
	CALLR	UPDATE_PICKBOX
	JRUC	PE_NAP

PE_CHECK_TURBO
	INC	B14
	BTST	B14,B6
	JRZ	PE_CHECK_TEAMMATE_PLAYER_SWAP		;BR=NOT TURBO
PE_SWAP
	CALLR	SWAP_SOUND

	MOVE	*A13(PSWAP),A14,W			;NEXT SWAP
	INC	A14
	MOVE	A14,*A13(PSWAP),W

	CALLR	UPDATE_PICKBOX
	JRUC	PE_NAP

PE_CHECK_TEAMMATE_PLAYER_SWAP
	MOVE	B7,B7
	JRZ	PE_CHECK_JOYSTICK			;BR=2 PLAYER KIT

	MOVE	*A13(PTEAMMATE),A14,W			;TEAMMATE PLAYER NUMBER
	MOVE	A14,B14
	MOVE	@PLAYER_BITS,B9,W
	BTST	B14,B9
	JRZ	PE_CHECK_JOYSTICK			;BR=TEAMMATE NOT ACTIVE

	MOVE	A6,B9
	AND	B7,B9
	JRNZ	PE_CHECK_TEAMMATE_TURBO			;BR=TURBO
	MOVE	B9,B8					;NEW LAST TURBO
	JRUC	PE_CHECK_JOYSTICK
PE_CHECK_TEAMMATE_TURBO
	MOVE	B9,B14
	XOR	B8,B14

	MOVE	B9,B8					;NEW LAST TURBO

	AND	B9,B14
	JRZ	PE_CHECK_JOYSTICK			;BR=TURBO STUCK

	JRUC	PE_SWAP

PE_CHECK_TABLE
	MOVE	A6,B6
	AND	B4,B6
	JRZ	PE_CHECK_JOYSTICK			;BR=NO BUTTONS

	MOVE	B6,B14
	XOR	B5,B14

	MOVE	B6,B5					;NEW LAST BUTTONS

	AND	B6,B14
;	JRZ	PE_NAP					;BR=BUTTON(S) STUCK
	JRZ	PE_CHECK_JOYSTICK			;BR=BUTTON(S) STUCK

;	MOVE	B0,B0
;	JRZ	PE_DONE

	CMPI	ALPHA_TABLE,B0
	JRNE	PE_DONE					;BR=NOT DA ALPHABET

	MOVE	B6,B5					;NEW LAST BUTTONS
	AND	A4,A6
	MOVE	A6,A5					;NEW LAST JOYSTICK
	CLR	A7					;NO MORE STUCK

	MOVE	A13,B8

	MOVE	*B8(PINITIAL_POS),B9,W

	MOVE	A13,B7
	ADDI	PINITIAL_STRING,B7

	CMPI	26,A0
	JRLT	PE_GET_INITIAL_STRING			;BR=NOT SPECIAL
	MOVI	SPACE_STR,B6
	CMPI	26,A0
	JREQ	PE_ADD_STRING				;BR=A "SPACE"

	MOVE	B9,B9
	JRZ	PE_NAP					;BR=FIRST POSITION

	DEC	B9					;RUB OUT LAST INITIAL
	MOVE	B9,*B8(PINITIAL_POS),W
	SLL	3,B9
	ADD	B9,B7
	CLR	B14
	MOVB	B14,*B7

	CALLR	UPDATE_PICKBOX
PE_ALPHA_FLASH
	MOVE	@TIMES_UP,A14,W
	JRNZ	PE_ABORT				;BR=TIME'S UP DUMMY!

	CALLR	PICK_SOUND

	MMTM	A12,A0,A1,A2,A3,A4,A5,A7
	MOVE	A12,B14
	MMTM	B14,B0,B1,B3,B4,B5
	MOVE	B14,A12

	MOVE	*A8(OCONST),*A8(ODATA),W
	MOVI	0B0BH,A14
	MOVE	A14,*A8(OCONST),W
	MOVK	ALPHA_SELECT_FLASHES,A14
	MOVB	A14,*A8(ANIMLOOP)
	MOVI	PICKBOX_SELECT_FLASH_ANIM,A1
	CALLA	STRT_ANIM

	SLEEP	SELECT_FLASH_ONTIME*ALPHA_SELECT_FLASHES*2

	MOVE	*A8(ODATA),*A8(OCONST),W		;SET PLAYER COLOR
	CALLA	OBJ_CONST_ALL

	MOVI	PICKBOX_NORMAL_FLASH_ANIM,A1
	CALLA	STRT_ANIM

	MOVE	A12,B14
	MMFM	B14,B0,B1,B3,B4,B5
	MOVE	B14,A12
	MMFM	A12,A0,A1,A2,A3,A4,A5,A7
	JRUC	PE_READ_SWITCH

PE_GET_INITIAL_STRING
	MOVE	A0,B6
	SLL	5,B6
	ADD	B0,B6
	MOVE	*B6,B6,L
	SRL	1,B6
	SLL	1,B6
PE_ADD_STRING
	SLL	3,B9
	ADD	B9,B7
	SRL	3,B9
	MOVB	*B6,*B7

	CALLR	UPDATE_PICKBOX
	INC	B9
	CMPI	3,B9
	JREQ	PE_DONE

	MOVE	B9,*B8(PINITIAL_POS),W
	JRUC	PE_ALPHA_FLASH

PE_CHECK_JOYSTICK
	MOVE	B6,B5					;NEW LAST BUTTONS
	AND	A4,A6
	JRNZ	PE_JOYSTICK				;BR=JOYSTICK ON
	MOVE	A6,A5					;NEW LAST JOYSTICK
	CLR	A7					;NO MORE STUCK
	JRUC	PE_NAP
PE_JOYSTICK
	CMP	A5,A6
	JRNE	PE_NOSTUCK				;BR=NOT DA SAME

	INC	A7
	CMPI	9,A7
;	JRLT	PE_NAP					;BR=DON'T REPEAT YET
	JRGE	PE_NOSTUCK				;BR=REPEAT

	CMPI	TEAM_ARRAY,A11
	JRNE	PE_NAP					;BR=NOT TEAM SELECT
	BTST	A3,A6
	JRZ	PE_NAP					;BR=NOT UP
	JRUC	PE_UP_CHECK_RANDOM

PE_NOSTUCK
	MOVE	A6,A5					;NEW LAST JOYSTICK
	CLR	A7					;NO MORE STUCK

	MOVE	A3,A14
	BTST	A14,A6
	JRZ	PE_CHECK_DOWN				;BR=NOT UP
	MOVE	A0,A14

	CMPI	TEAM_ARRAY,A11				;CHECK IF TEAM ARRAY
	JREQ	PE_UP_TEAM				;BR=YES

	SUB	A2,A14
	JRN	PE_NAP					;BR=CAN'T GO UP
	JRUC	PE_UP

PE_UP_TEAM
	SUB	A2,A14
	JRNN	PE_UP_TEAM_FUDGE			;BR=CHECK FOR FUDGE
PE_UP_CHECK_RANDOM
	CLR	A14
	CMPI	2,A9
	JRLT	PE_UP_CHECK_HOME			;BR=CHICAGO IS HOME
	MOVK	3,A14					;BOSTON IS HOME
PE_UP_CHECK_HOME
	CMP	A14,A0
	JRNE	PE_NAP					;BR=NOT AT HOME

	MOVB	@RANDOM_ENABLE_BITS,A14
	BTST	A9,A14
	JRNZ	PE_RANDOM				;BR=DO THE RANDOM THING

;	MOVE	B3,B14
;	ADDK	B_SW_P,B14
;	BTST	B14,B6
;	JRNZ	PE_RANDOM				;BR=PASS

;	MOVE	@COINS,B14,L				;GET START BUTTONS
;	MOVE	A9,B6
;	SLL	4,B6
;	ADDI	START_BUTTON_BIT_TABLE,B6
;	MOVE	*B6,B6,W
;	BTST	B6,B14
;	JRZ	PE_RANDOM				;BR=DO RANDOM
	JRUC	PE_NAP

PE_UP_TEAM_FUDGE
;	CMPI	TEAM_ARRAY,A11				;CHECK IF TEAM ARRAY
;	JRNE	PE_UP					;BR=GO UP

	CMPI	24,A0					;CHECK IF BOTTOM TEAM
	JRLT	PE_UP					;BR=DON'T FUDGE
	MOVK	4,A14
	CMPI	24,A0
	JREQ	PE_UP_FUDGE				;BR=FIRST COLUMN
	DEC	A14					;THIRD COLUMN
PE_UP_FUDGE
	SUB	A14,A0					;FUDGE
	CALLR	MOVE_SOUND
	JRUC	PE_UPDATE

;	CMPI	24,A0					;CHECK IF BOTTOM TEAM
;	JRLT	PE_UP					;BR=DON'T FUDGE
;	SUBK	2,A0					;FUDGE
;	CALLR	MOVE_SOUND
;	JRUC	PE_UPDATE
PE_UP
	MOVE	A14,A0
	CALLR	MOVE_SOUND
	JRUC	PE_UPDATE

PE_CHECK_DOWN
	INC	A14
	BTST	A14,A6
	JRZ	PE_CHECK_LEFT				;BR=NOT DOWN
	MOVE	A0,A14
	ADD	A2,A14

	CMPI	TEAM_ARRAY,A11				;CHECK IF TEAM ARRAY
	JRNE	PE_CHECK_DOWN_LIMITS			;BR=CHECK LIMITS
;	CMPI	19,A0
;	JRLE	PE_DOWN					;BR=GO DOWN
;	CMPI	24,A0					;CHECK IF BOTTOM TEAM
;	JRGE	PE_NAP					;BR=CAN'T GO DOWN
;	CMPI	22,A0
;	JRLT	PE_NAP					;BR=CAN'T GO DOWN
;	ADDK	2,A0					;FUDGE
;	JRUC	PE_UPDATE

	CMPI	20,A0
	JRLT	PE_DOWN					;BR=GO DOWN
	CMPI	21,A0					;CHECK IF BOTTOM TEAM
	JREQ	PE_NAP					;BR=CAN'T GO DOWN
	CMPI	23,A0
	JRGE	PE_NAP					;BR=CAN'T GO DOWN
	MOVK	4,A14
	CMPI	20,A0
	JREQ	PE_DOWN_FUDGE				;BR=FIRST COLUMN
	DEC	A14					;THIRD COLUMN
PE_DOWN_FUDGE
	ADD	A14,A0					;FUDGE
	JRUC	PE_UPDATE

PE_CHECK_DOWN_LIMITS
	CMP	A1,A14
	JRLT	PE_DOWN					;BR=GO DOWN
	CMPI	29,A1
	JRLT	PE_NAP					;BR=NO DAY FUDGE
	CMPI	27,A0
	JRGT	PE_NAP					;BR=DON'T FUDGE

	MOVE	A1,A0
	DEC	A0					;FUDGE TO LAST ENTRY
	CALLR	MOVE_SOUND
	JRUC	PE_UPDATE
PE_DOWN
	ADD	A2,A0
	CALLR	MOVE_SOUND
	JRUC	PE_UPDATE

PE_CHECK_LEFT
	INC	A14
	BTST	A14,A6
	JRZ	PE_CHECK_RIGHT				;BR=NOT LEFT
	MOVE	A0,A0
	JRZ	PE_NAP					;BR=CAN'T GO LEFT
	DEC	A0
	CALLR	MOVE_SOUND
	JRUC	PE_UPDATE

PE_CHECK_RIGHT
	INC	A14
	BTST	A14,A6
	JRZ	PE_NAP					;BR=NOT RIGHT
	MOVE	A0,A14
	INC	A14
	CMP	A1,A14
	JREQ	PE_NAP					;BR=CAN'T GO RIGHT
	MOVE	A14,A0
	CALLR	MOVE_SOUND
PE_UPDATE
	CMPI	TEAM_ARRAY,A11
	JRNE	PE_UPDATE_GO				;BR=NOT TEAM SELECT

	CLR	A14
	MOVE	A14,*A13(PSWAP),W			;CLEAR SWAP
PE_UPDATE_GO
	CALLR	UPDATE_PICKBOX
PE_NAP
	MOVE	@TIMES_UP,A14,W
	CMPI	TEAM_ARRAY,A11
	JRNE	PE_CHECK_ABORT				;BR=NOT TEAM SELECT
	MOVE	A14,A14
	JRNZ	PE_DONE					;BR=TIME'S UP DUMMY!
	JRUC	PE_DO_NAP
PE_CHECK_ABORT
	MOVE	A14,A14
	JRNZ	PE_ABORT				;BR=TIME'S UP DUMMY!
PE_DO_NAP
	CMPI	TEAM_ARRAY,A11
	JRNE	PE_DN_NAP				;BR=NOT TEAM SELECT

	MOVE	A9,A6
	SRL	1,A6					;PLAYER TO TEAM						
	SLL	1,A6					;TEAM TO SHIFT
	MOVK	011B,A14				;LEFT TEAM MASK
	SLL	A6,A14
	MOVB	@RANDOM_ENABLE_BITS,A6
	ANDN	A14,A6					;RESET FLAGS
	MOVB	A6,@RANDOM_ENABLE_BITS
PE_DN_NAP
	MMTM	A12,A0,A1,A2,A3,A4,A5,A7
	MOVE	A12,B14
	MMTM	B14,B0,B1,B3,B4,B5,B7,B8
	MOVE	B14,A12
	SLEEP	1
	MOVE	A12,B14
	MMFM	B14,B0,B1,B3,B4,B5,B7,B8
	MOVE	B14,A12
	MMFM	A12,A0,A1,A2,A3,A4,A5,A7

	MOVB	@TEAM_SELECTED_BITS,A14
	JRZ	PE_READ_SWITCH				;BR=SWAPPING ALLOWED

	MOVE	@team1_home,A6,W
	MOVE	@team2_home,A14,W
	CMP	A6,A14
	JRNE	PE_READ_SWITCH				;BR=NO SIDE CONFLICT

	CALLR	SIDE_TOGGLE_SOUND

	MOVE	A9,B9
	SRL	1,B9
	SLL	4,B9
	ADDI	team1_home,B9
	MOVE	*B9,B14,W				
	XORI	1,B14					;TOGGLE HOME/AWAY SIDE
	MOVE	B14,*B9,W
	CALLR	UPDATE_PICKBOX
	JRUC	PE_READ_SWITCH				;BR=NO SIDE CONFLICT


;	CMPI	TEAM_ARRAY,A11
;	JRNE	PE_READ_SWITCH				;BR=NOT TEAM SELECT
;
;	MOVE	@TIMES_UP,A14,W
;	JRZ	PE_READ_SWITCH				;BR=STILL GOT TIME

PE_DONE
	CALLR	PICK_SOUND

	MOVE	A0,A1					;RETURN SELECTED INDEX
	MOVE	*A13(PSWAP),A2,W			;RETURN SWAP INDEX

	MMTM	SP,A0,A9,A10

	MOVE	B1,A9					;OID2
	MOVE	*A13(PARROW),A10,L			;ARROW POINTER OBJECT
	P_FORK	PE_FINAL_FLASH				;FINAL SELECT FLASH

	MMFM	SP,A0,A9,A10

	CMPI	TEAM_ARRAY,A11
	JRNE	PE_ABORT				;BR=NOT TEAM SELECT

	MOVB	@TEAM_SELECTED_BITS,A14
;	SLL	28,A14
;	SRL	28,A14
	JRZ	PE_ABORT				;BR=NONE SELECTED

	MOVE	@team1_home,A5,W
	MOVE	@team2_home,A6,W
	CMP	A5,A6
	JRNE	PE_ABORT				;BR=NO SIDE CONFLICT

	CALLR	SIDE_TOGGLE_SOUND

	MOVE	A9,B9
	SRL	1,B9
	SLL	4,B9
	ADDI	team1_home,B9
	MOVE	*B9,B14,W				
	XORI	1,B14					;TOGGLE HOME/AWAY SIDE
	MOVE	B14,*B9,W
	CALLR	UPDATE_PICKBOX

PE_ABORT
	RETP


PE_FINAL_FLASH
	MOVE	*A8(OCONST),A14,W

	CMPI	TEAM_ARRAY,A11
	JRNE	PE_SELECT_FLASH				;BR=NOT TEAM SELECT

	MOVE	A10,A0
	CALLA	DELOBJ					;KILL DA ARROW

	MOVE	@BLUE_SELECT_OBJ,A0,L
	MOVI	COLOR_RED,A2
	MOVI	RED_MUG_BGND_OBJ,A3
	CMP	A8,A0
	JRNE	PE_CHECK_OVERLAP			;BR=OTHER OBJECT
	MOVE	@RED_SELECT_OBJ,A0,L
	MOVI	COLOR_BLUE,A2
	MOVI	BLUE_MUG_BGND_OBJ,A3
PE_CHECK_OVERLAP

	MOVE	A8,A4
	MOVE	*A3,A8,L				;FLASH MUG BACKGROUND
	MOVI	0101H,A14
	MOVE	A14,*A8(OCONST),W
	MOVK	SELECT_FLASHES,A14
	MOVB	A14,*A8(ANIMLOOP)
	MOVI	MUG_BGND_FLASH_ANIM,A1
	CALLA	STRT_ANIM
	MOVE	A4,A8

	MOVE	A2,A14					;RESULTING CONST COLOR

	MOVE	A0,A0
	JRZ	PE_SELECT_FLASH				;BR=TEAM NOT ACTIVE

	MOVI	-1,A2					;FORCE ON TOP
	MOVE	A2,*A8(OZVAL),L

	MOVE	*A8(ODAG),A2,L
	MOVE	*A0(ODAG),A3,L
	CMP	A2,A3
	JRNE	PE_SELECT_FLASH				;BR=NOT OVERLAPPIN'

	MOVE	*A0(OFLAGS),A2,W
	BTST	B_ANIM,A2
	JRZ	PE_SAME					;BR=OTHER NOT ANIMATING

	MOVE	*A0(ANIMSCR),A2,L

	CMPI	PICKBOX_SELECT_FLASH_ANIM,A2
	JRNE	PE_SELECT_FLASH				;BR=NOT SELECT ANIMATION
PE_SAME
	MOVI	-2,A2					;FORCE ON TOP
	MOVE	A2,*A8(OZVAL),L

	MOVI	COLOR_YELLOW,A14			;BR=BOTH SAME TEAM
PE_SELECT_FLASH
	MOVE	A14,*A8(ODATA),W

	MOVI	0B0BH,A14
	MOVE	A14,*A8(OCONST),W
	MOVK	SELECT_FLASHES,A14
	MOVB	A14,*A8(ANIMLOOP)
	MOVI	PICKBOX_SELECT_FLASH_ANIM,A1
	CALLA	STRT_ANIM

	SLEEP	SELECT_FLASH_ONTIME*SELECT_FLASHES*2

	MOVE	*A8(ODATA),*A8(OCONST),W		;SET PLAYER COLOR
	CALLA	OBJ_CONST_ALL

	MOVE	*A8(OZVAL),A14,L			;FORCE BELOW
	ADDK	2,A14
	MOVE	A14,*A8(OZVAL),L

	SLEEP	15

	MOVE	A9,A0
	CALLA	KILOBJ_ALL				;DELETE OID2 OBJECTS

	DIE

PE_RANDOM
	PUSH	A0
	MOVI	AUD_RANDOM_PICKED,A0
	CALLA   AUD1
	PULLQ	A0

	MOVB	@TEAM_SELECTED_BITS,A14			;DISABLE SIDE SWAPPIN'
	ORI	010000B,A14				; BEFORE TEAM SELECTED
	MOVB	A14,@TEAM_SELECTED_BITS

	MOVK	15,A3
PE_R_LUPE
	MOVE	A0,A2
	MOVE	A1,A0
	CALLA	RAND0
	CMP	A2,A0
	JRNE	PE_R_UPDATE				;BR=NOT SAME AS LAST
	INC	A0					;NEXT TEAM
	CMP	A1,A0
	JRLT	PE_R_UPDATE				;BR=TEAM OKAY
	CLR	A0					;RESET TO FIRST TEAM
PE_R_UPDATE
;	CALLR	MOVE_SOUND
	CALLR	TOPTEN_SOUND

	CLR	A14
	DEC	A14
	MOVE	A14,*A13(PSWAP),W			;CLEAR SWAP

	CALLR	UPDATE_PICKBOX
	MMTM	A12,A0,A1,A3
	MOVE	A12,B14
	MMTM	B14,B0,B1
	MOVE	B14,A12
	SLEEP	6
	MOVE	A12,B14
	MMFM	B14,B0,B1
	MOVE	B14,A12
	MMFM	A12,A0,A1,A3

	MOVE	@TIMES_UP,A14,W
	JRNZ	PE_DONE					;BR=TIME'S UP DUMMY!

	DSJ	A3,PE_R_LUPE

	JRUC	PE_DONE

START_BUTTON_BIT_TABLE
	.WORD	34,37,41,42

MOVE_SOUND
;	PUSH	A4
;	MOVI	S_CURSOR_MOVE,A4
;	CALLA	do_sound
;	PULLQ	A4

	MMTM	SP,A1,A4
	MOVI	100,A1
	MOVI	S_CURSOR_MOVE,A4
	CALLA	do_sound_at_volume
	MMFM	SP,A1,A4

	RETS

PICK_SOUND
	PUSH	A4
	MOVI	S_CURSOR_SELECT,A4
	CALLA	do_sound
	PULLQ	A4
	RETS

SWAP_SOUND
	PUSH	A4
	MOVI	S_CURSOR_SWAP,A4
	CALLA	do_sound
	PULLQ	A4
	RETS

SIDE_TOGGLE_SOUND
	PUSH	A4
	MOVI	S_SIDE_TOGGLE,A4
	CALLA	do_sound
	PULLQ	A4
	RETS



**************************************************************************
*								         *
* UPDATE_PICKBOX							 *
* 									 *
* PASS:									 *
* A0  = ARRAY INDEX							 *
* A9  = PLAYER NUMBER - 1						 *
* A10 = [Y,X] OFFSET						         *
* A11 = POSITION/SIZE ARRAY						 *
* B0  = STRING TABLE							 *
* B1  = OID2								 *
*								         *
**************************************************************************

UPDATE_PICKBOX
	MMTM	SP,A0,A1,A2,A3,A4,A5,A7,A8,A9,A10,A11
	MMTM	SP,B0,B1,B3,B4,B5,B7,B8,B9

	MOVE	A0,A14
	SLL	6,A14
	ADD	A11,A14
	MOVE	*A14+,A1,L

	MOVE	A1,*A8(OUSIZE),L
	MOVE	A1,*A8(OSIZE),L

	MOVE	*A14+,A1,L
	ADDXY	A10,A1

	MOVE	A1,*A8(ODAG),L
	MOVE	A1,*A8(OXPOS),W
	SRL	16,A1
	MOVE	A1,*A8(OYPOS),W

	CMPI	TEAM_ARRAY,A11
	JRNE	UP_STRING

	MOVE	A0,A2
	SLL	4,A2
	ADDI	TEAM_REMAP_TABLE,A2
	MOVE	*A2,A2,W
	MOD_COL	a2			;modify a2 based if colorado
	SLL	10,A2
	ADDI	team_data,A2

	MOVE	*A13(PTEAMNAME_OBJ),A8,L
	MOVE	*A8(OCTRL),A4,W
	move	*a2(TD_ALT_NAME),a1,L
	jrnz	asjj2
	MOVE	*A2(TD_TEAMNAME_IMG),A1,L
asjj2	CALLA	ANI

	MOVE	*A13(PLOGO_OBJ),A8,L
	MOVE	*A8(OCTRL),A4,W
	MOVE	*A2(TD_TEAMLOGO_IMG),A1,L
	CALLA	ANI
	MOVE	*A1(ICMAP),A0,L
	CALLA	CHANGE_PAL

	MOVE	*A13(PTEAMNAME_OBJ),A8,L
	MOVE	*A8(OCTRL),A4,W

	move	*a2(TD_ALT_NAME),a1,L
	jrnz	asjj3
	MOVE	*A2(TD_TEAMNAME_IMG),A1,L
asjj3	CALLA	ANI

	MOVE	*A13(PGBODY_OBJ),A8,L
	MOVE	A2,A0
	MOVI	TD_GOALIE_HPAL,A1			;DEFAULT TO HOME PALETTE
	MOVE	A9,A14
	SRL	1,A14
	SLL	4,A14
	ADDI	team1_home,A14
	MOVE	*A14,A14,W
	JRNZ	UP_ADD_PAL_OFFSET			;BR=HOME TEAM	
	MOVI	TD_GOALIE_APAL,A1			;SET AWAY PALETTE
UP_ADD_PAL_OFFSET
	ADD	A1,A0
	MOVE	*A0,A0,L
	CALLA	CHANGE_PAL

	MOVE	*A13(PGHEAD_OBJ),A8,L

	MOVE	*A2(TD_GOALIE_LIST),A3,L
	MOVE	*A3,A3,W				;PLAYER INDEX
	MOVE	A3,A0
	SLL	5,A0
	ADDI	player_data,A0
	MOVE	*A0,A0,L

	MOVE	*A0(TP_HEAD_TABLE),A1,L
	MOVE	*A1(020H+010H+010H),A1,L		;OFFSET TO DIR 2 HEAD
	MOVE	*A8(OCTRL),A4,W
	CALLA	ANI

	MOVI	02610261H,A4
	CMPI	s_arturs_irbe,A3
	JRNE	UP_SET_HEAD_SCALE			;BR=NOT IRBE
	MOVI	02290229H,A4
UP_SET_HEAD_SCALE
	MOVE	A4,*A8(OSCALE),L
	SRL	16,A4

	MOVE	*A8(OANIOFF),A14,L		;SCALE ANIMP
	MOVE	A14,A1
	SLL	16,A1
	SRA	16-8,A1
	DIVS	A4,A1				;SCALE X ANIMP
	MOVX	A1,A14
	MOVE	A14,A1
	SRA	16,A1
	SLL	8,A1
	DIVS	A4,A1				;SCALE Y ANIMP
	SLL	16,A1
	MOVY	A1,A14
	MOVE	A14,*A8(OANIOFF),L
	PUSH	A2
	CALLA	A_UPDATE_SEL_HEAD_POS
	PULLQ	A2

	MOVE	*A0(TP_HELMET_TYPE),A0,W		
	SLL	5,A0
	ADDI	helmet_type_plist,A0
	MOVE	*A0,A0,L
	MOVE	*A2(TD_GOALIE_HELMET),A1,W
	SLL	5,A1
	ADD	A1,A0
	MOVE	*A0,A0,L
	CALLA	CHANGE_PAL

	CALLR	UP_UPDATE_PLAYERS

	JRUC	UP_DONE
UP_STRING
	MOVE	A0,A8

	MOVE	B1,A0
	CALLA	KILOBJ_ALL

	MOVE	A8,A0

	SLL	5,A8
	MOVE	B0,A14
	ADD	A14,A8
	MOVE	*A8,A8,L
	SRL	1,A8
	SLL	1,A8

	CMPI	ALPHA_TABLE,B0
	JRNE	UP_GO					;BR=NOT DA ALPHABET

	CMPI	26,A0
	JRNE	UP_NOSPACE				;BR=NOT A "SPACE"
	MOVI	SPACE_STR,A8
UP_NOSPACE
	MOVE	*A13(PINITIAL_STRING),A0,L
	MOVE	A0,A14
	ANDI	0FFH,A14
	JRZ	UP_GO					;BR=NO STRING

	MOVE	A8,A1

	MOVE	A13,A8
	ADDI	PDISPLAY_STRING,A8
	MOVE	A8,A10
	MOVB	A14,*A10				;DISPLAY FIRST INITIAL
	ADDK	8,A10

	MOVE	A0,A14
	SRL	8,A14
	ANDI	0FFH,A14
	JRZ	UP_ADD					;BR=ADD ON INITIAL
	MOVB	A14,*A10				;DISPLAY SECOND INITIAL
	ADDK	8,A10
UP_ADD
	MOVB	*A1,*A10				;SELECTED INITIAL
	ADDK	8,A1
	ADDK	8,A10
	MOVB	*A1,*A10				;NULL TERMINATOR
UP_GO
	MOVE	A9,A5
	SLL	4,A5
	ADDI	PLAYER_PAL_NUM_TABLE,A5
	MOVE	*A5,A5,W			;[COLOR,PALETTE]

	SLL	4,A9
	ADDI	INFOBOX_CENTER_XPOS_TABLE,A9
	MOVE	*A9,A9,W
	ZEXT	A9,W
	ADDI	[INFOBOX_Y+94,0],A9

	CLR	A0				;NO SLEEP TIL
;	MOVI	STRCNRMOS,A1			;ROUTINE
;	MOVI	COLOR_PWHITE,A5			;[COLOR,PALETTE]
;	MOVK	3,A10				;[Y,X] SPACING
;	MOVI	RD15FONT,A11			;FONT
	MOVI	STRCNCONV,A1			;ROUTINE
;	MOVI	HFPAL,A5			;[COLOR,PALETTE]
	MOVI	[0,-2],A10			;[Y,X] SPACING
;	MOVI	H18TFONT,A11			;FONT
;
;	CMPI	DAY_TABLE,B0
;	JRNE	UP_PRINTF			;BR=NOT DA NUMBERS
	MOVI	H18FONT,A11			;FONT
;UP_PRINTF
	JSRP	PRINTF
UP_DONE
	MMFM	SP,B0,B1,B3,B4,B5,B7,B8,B9
	MMFM	SP,A0,A1,A2,A3,A4,A5,A7,A8,A9,A10,A11
	RETS

**************************************************************************
*								         *
* UP_UPDATE_PLAYERS							 *
* 									 *
* PASS:									 *
* A2 = TEAM DATA ADDRESS						 *
* A9 = PLAYER NUMBER - 1						 *
* 									 *
* RETURN:								 *
* NUTIN'								 *
*								         *
* TRASHES ALMOST EVERYTHING!					         *
*								         *
**************************************************************************

UP_UPDATE_PLAYERS
	MOVE	*A2(TD_MEMBER1_LIST),A0,L
	MOVE	A0,A5
	MOVE	A0,A6

	CLR	A3
UP_PLAYER_COUNT
	MOVE	*A0+,A14,W
	JRZ	UP_CHECK_SWAP
	INC	A3
	JRUC	UP_PLAYER_COUNT
UP_CHECK_SWAP
	SUBK	2,A3
	.if	DEBUG
	LOCKON	N
	.endif
	SLL	5,A3
	ADDI	SWAP_TABLES_TABLE,A3
	MOVE	*A3,A3,L
	MOVE	*A3+,A0,W

	MOVE	*A13(PSWAP),A14,W
	JRNN	UP_CHECK_SWAP_LIMIT			;BR=NOT RANDOM
	CALLA	RAND0
	MOVE	A0,*A13(PSWAP),W
	MOVE	A0,A14
	JRUC	UP_GET_OFFSETS

UP_CHECK_SWAP_LIMIT
	CMP	A0,A14
	JRLT	UP_GET_OFFSETS
	CLR	A14
	MOVE	A14,*A13(PSWAP),W
UP_GET_OFFSETS
	SLL	5,A14
	ADD	A14,A3
	MOVE	*A3+,A0,W
	ADD	A0,A5
	MOVE	*A3+,A14,W
	ADD	A14,A6

	MOVE	A9,A0
	ANDI	010B,A0
	MOVB	@LOCKED_CHAR_BITS,A14
	BTST	A0,A14
	JRZ	UP_LEFT_GUY_GO				;BR=NO LOCKED CHARACTER

	BTST	4,A14
	JRZ	UP_RIGHT_GUY				;BR=NO LOCK OVERRIDE
	MOVI	PLAYER_1_BLOCK,A14
	BTST	1,A0
	JRZ	UP_LEFT_GET_LOCKED			;BR=PLAYER 1
	MOVI	PLAYER_5_BLOCK,A14			;PLAYER 3
UP_LEFT_GET_LOCKED
	MOVE	*A14(POF_LOCKED_CHAR),A5,W
	JRUC	UP_LEFT_GET_DATA

UP_LEFT_GUY_GO
	MOVE	*A5,A5,W
UP_LEFT_GET_DATA
	MOVE	A5,A0
	CALLA	get_bargraph_data

	SLL	5,A5
	ADDI	player_data,A5
	MOVE	*A5,A5,L

	MOVE	*A13(PLEFTATTR_OBJ),A8,L
	JRZ	UP_LEFT_MUG				;BR=JUST IN CASE

	MOVE	*A5(TP_SECRET_CHAR),A14,W
	JRZ	UP_LEFT_ATTRIBUTES			;BR=NOT SECRET

	CALLR	SECRET_MORPH

	JRUC	UP_LEFT_MUG

UP_LEFT_ATTRIBUTES
	MOVE	*A8(OIMG),A14,L
	CMPI	FONT18QUE,A14
	JRNE	UP_LEFT_ATTRIBUTE_LUPE			;BR=NOT "?"

	MOVE	*A8(ODAG),A1,L
	MOVI	QYXOFFSET,A14
	SUBXY	A14,A1
	MOVE	A1,*A8(ODAG),L

	MOVI	BAR0,A1
	MOVI	DMAWNZ,A4
	CALLA	ANI

UP_LEFT_ATTRIBUTE_LUPE
	MOVE	A2,A0
	SLL	24,A0
	SRL	24,A0
	DEC	A0
	SLL	5,A0
	ADDI	BARPAL_TABLE,A0
	MOVE	*A0,A0,L
	CALLA	CHANGE_PAL
	SRL	8,A2
	CALLA	OBJ_ON
	MOVE	*A8(OPARTS),A8,L
	JRNZ	UP_LEFT_ATTRIBUTE_LUPE			;BR=NO MORE ATTRIBUTES

UP_LEFT_MUG
	MOVE	*A13(PLEFTMUG_OBJ),A8,L
	MOVE	*A5(TP_PLYRMUG_IMG),A1,L

	MOVE	*A8(OCTRL),A4,W
	ANDNI	M_FLIPH,A4
	MOVE	A1,A14					;FLAG TO M_FLIPH
	SLL	31,A14
	SRL	31-4,A14
	OR	A14,A4
	MOVE	A4,*A8(OCTRL),W

	SRL	1,A1					;SHIFT OUT FLAG
	SLL	1,A1
	MOVE	A1,*A8(OIMG),L
	MOVE	*A1(ISAG),*A8(OSAG),L
	MOVE	*A1(ISIZE),A7,L
	MOVE	A7,*A8(OUSIZE),L
	MOVE	A7,*A8(OSIZE),L

	MOVE	*A1(IANIOFF),A2,L
	MOVE	A2,*A8(OUANIOFF),L
	MOVE	A2,*A8(OANIOFF),L

	BTST	B_FLIPH,A4
	JRZ	UP_GET_LPOS				;BR=NOT FLIPPED
	NEGX	A2
UP_GET_LPOS
	MOVE	*A8(OMUGPOS),A10,L
	MOVE	A10,A3
	SUBXY	A2,A10

	CLR	A2					;DEFAULT TO NO CLIPPING

	MOVI	[0,9-40],A14				;LEFT EDGE (-ANIOFFX)
							; - LEFT MUG X OFFSET
	ADDXY	A14,A3					;LEFT EDGE

	BTST	B_FLIPH,A4
	JRZ	UP_LCHECK				;BR=NOT FLIPPED
	SLL	16,A7					;GET X SIZE
	SRA	16,A7
	DEC	A7
	ADDXY	A7,A3					;LEFT EDGE
UP_LCHECK
	SUBXY	A10,A3					;COMPARE EDGES
	JRXN	UP_LSET					;BR=DON'T CLIP
	MOVE	A3,A2
	SEXT	A2,W
	ABS	A2
	ADDXY	A2,A10					;ADJUST POSITION
	BTST	B_FLIPH,A4
	JRZ	UP_LSET					;BR=NOT FLIPPED
	SUBXY	A2,A10					;RESTORE POSITION
	SLL	8,A2					;RIGHT CLIP
UP_LSET
;DISABLE CLIP
;	MOVE	A2,*A8(OFSET),W
	MOVE	A10,*A8(ODAG),L
	MOVE	A10,*A8(OXPOS),W
	SRA	16,A10
	MOVE	A10,*A8(OYPOS),W

	MOVE	*A1(ICMAP),A0,L
	CALLA	CHANGE_PAL

	mmtm	sp,a4
	move	*a8(OCTRL),a4,W
	calla	ANI
	mmfm	sp,a4

	MOVE	*A13(PLEFTNAME_OBJ),A8,L
	MOVE	*A8(OCTRL),A4,W
	MOVE	*A5(TP_PLYRNAME_IMG),A1,L
	CALLA	ANI

UP_RIGHT_GUY
	MOVE	A9,A0
	ORI	01B,A0
	MOVB	@LOCKED_CHAR_BITS,A14
	BTST	A0,A14
	JRZ	UP_RIGHT_GUY_GO				;BR=NO LOCKED CHARACTER

	BTST	4,A14
	JRZ	UP_UP_AND_AWAY				;BR=NO LOCK OVERRIDE
	MOVI	PLAYER_2_BLOCK,A14
	BTST	1,A0
	JRZ	UP_RIGHT_GET_LOCKED			;BR=PLAYER 2
	MOVI	PLAYER_6_BLOCK,A14			;PLAYER 4(2)
UP_RIGHT_GET_LOCKED
	MOVE	*A14(POF_LOCKED_CHAR),A6,W
	JRUC	UP_RIGHT_GET_DATA

UP_RIGHT_GUY_GO
	MOVE	*A6,A6,W
UP_RIGHT_GET_DATA
	MOVE	A6,A0
	CALLA	get_bargraph_data

	SLL	5,A6
	ADDI	player_data,A6
	MOVE	*A6,A6,L

	MOVE	*A13(PRGHTATTR_OBJ),A8,L
	JRZ	UP_RIGHT_MUG				;BR=JUST IN CASE

	MOVE	*A6(TP_SECRET_CHAR),A14,W
	JRZ	UP_RIGHT_ATTRIBUTES			;BR=NOT SECRET

	CALLR	SECRET_MORPH

	JRUC	UP_RIGHT_MUG

UP_RIGHT_ATTRIBUTES
	MOVE	*A8(OIMG),A14,L
	CMPI	FONT18QUE,A14
	JRNE	UP_RIGHT_ATTRIBUTE_LUPE			;BR=NOT "?"

	MOVE	*A8(ODAG),A1,L
	MOVI	QYXOFFSET,A14
	SUBXY	A14,A1
	MOVE	A1,*A8(ODAG),L

	MOVI	BAR0,A1
	MOVI	DMAWNZ,A4
	CALLA	ANI

UP_RIGHT_ATTRIBUTE_LUPE
	MOVE	A2,A0
	SLL	24,A0
	SRL	24,A0
	DEC	A0
	SLL	5,A0
	ADDI	BARPAL_TABLE,A0
	MOVE	*A0,A0,L
	CALLA	CHANGE_PAL
	SRL	8,A2
	CALLA	OBJ_ON
	MOVE	*A8(OPARTS),A8,L
	JRNZ	UP_RIGHT_ATTRIBUTE_LUPE			;BR=NO MORE ATTRIBUTES

UP_RIGHT_MUG
	MOVE	*A13(PRGHTMUG_OBJ),A8,L
	MOVE	*A6(TP_PLYRMUG_IMG),A1,L

	MOVE	*A8(OCTRL),A4,W
	ANDNI	M_FLIPH,A4
	MOVE	A1,A14
	SLL	31,A14					;FLAG TO M_FLIPH
	SRL	31-4,A14
	OR	A14,A4
	XORI	M_FLIPH,A4
	MOVE	A4,*A8(OCTRL),W

	SRL	1,A1					;SHIFT OUT FLAG
	SLL	1,A1
	MOVE	A1,*A8(OIMG),L
	MOVE	*A1(ISAG),*A8(OSAG),L
	MOVE	*A1(ISIZE),A7,L
	MOVE	A7,*A8(OUSIZE),L
	MOVE	A7,*A8(OSIZE),L

	MOVE	*A1(IANIOFF),A2,L
	MOVE	A2,*A8(OUANIOFF),L
	MOVE	A2,*A8(OANIOFF),L

	BTST	B_FLIPH,A4
	JRZ	UP_GET_RPOS				;BR=NOT FLIPPED
	NEGX	A2
UP_GET_RPOS
	MOVE	*A8(OMUGPOS),A10,L
	MOVE	A10,A3
	SUBXY	A2,A10					;UPPER LEFT (RIGHT)

	CLR	A2					;DEFAULT TO NO CLIPPING

	MOVI	[0,170-139],A14				;RIGHT EDGE (X SIZE)
							; - RIGHT MUG X OFFSET
	ADDXY	A14,A3					;RIGHT EDGE

	BTST	B_FLIPH,A4
	JRNZ	UP_RCHECK				;BR=FLIPPED
	SLL	16,A7					;GET X SIZE
	SRA	16,A7
	DEC	A7
	SUBXY	A7,A3					;LEFT EDGE
UP_RCHECK
	SUBXY	A10,A3					;COMPARE EDGES
	JRXNN	UP_RSET					;BR=DON'T CLIP
	MOVE	A3,A2
	SEXT	A2,W
	ABS	A2
	SUBXY	A2,A10					;ADJUST POSITION
	BTST	B_FLIPH,A4
	JRNZ	UP_RSET					;BR=FLIPPED
	ADDXY	A2,A10					;RESTORE POSITION
	SLL	8,A2					;RIGHT CLIP
UP_RSET
;DISABLE CLIP
;	MOVE	A2,*A8(OFSET),W
	MOVE	A10,*A8(ODAG),L
	MOVE	A10,*A8(OXPOS),W
	SRA	16,A10
	MOVE	A10,*A8(OYPOS),W

	MOVE	*A1(ICMAP),A0,L
	CALLA	CHANGE_PAL

	mmtm	sp,a4
	move	*a8(OCTRL),a4,W
	calla	ANI
	mmfm	sp,a4

	MOVE	*A13(PRGHTNAME_OBJ),A8,L
	MOVE	*A6(TP_PLYRNAME_IMG),A1,L
	MOVE	*A8(OCTRL),A4,W
	CALLA	ANI
UP_UP_AND_AWAY
	RETS

**************************************************************************
*								         *
* SECRET_MORPH - PUT UP THE "?"						 *
* 									 *
* PASS:									 *
* A8 = OBJECT								 *
* RETURN:								 *
* SHIT									 *
*								         *
**************************************************************************

QYXOFFSET	EQU	[3,12]

SECRET_MORPH
	MOVE	*A8(OIMG),A14,L
	CMPI	FONT18QUE,A14
	JREQ	SM_ABORT				;BR=ALREADY "?"

	CALLA	OBJ_OFF_MULTI

	MOVE	*A8(ODAG),A1,L
	MOVI	QYXOFFSET,A14
	ADDXY	A14,A1
	MOVE	A1,*A8(ODAG),L

	MOVI	FONT18QUE,A1
	MOVI	DMAWNZ,A4
	CALLA	ANI

;	MOVI	FONTGRYP,A0
	MOVI	ORGTXT1P,A0
	CALLA	CHANGE_PAL
SM_ABORT
	RETS


**************************************************************************
*								         *
* get_bargraph_data							 *
* 	input	a0 = character number					 *
* 	output	a2 = character data (bytewise CPHS)			 *
* 		 S = character's skate rating (1-10)			 *
* 		     (speed+stop+corner) / 2				 *
* 		 H = character's shoot rating (1-10)			 *
* 		     (3 x shoot + handle) / 2				 *
* 		 P = character's pass  rating (1-10)			 *
* 		     (3 x pass + handle) / 2				 *
* 		 C = character's check rating (1-10)			 *
* 		     (3 x check + faceoff) / 2				 *
*								         *
**************************************************************************
get_bargraph_data
	mmtm	sp,a1,a3,a4,a5
	move	a0,a5
	sll	5,a5
	addi	player_data,a5
	move	*a5,a5,L
	movb	*a5(TP_SPEED),a1
	movb	*a5(TP_STOP),a14
	add	a14,a1
	movb	*a5(TP_CORNER),a14
	add	a14,a1
	sra	1,a1
	movb	*a5(TP_SHOOT),a2
	move	a2,a14
	add	a14,a2
	add	a14,a2
	movb	*a5(TP_HANDLE),a14
	add	a14,a2
	sra	1,a2
	movb	*a5(TP_PASS),a3
	move	a3,a14
	add	a14,a3
	add	a14,a3
	movb	*a5(TP_HANDLE),a14
	add	a14,a3
	sra	1,a3
	movb	*a5(TP_CHECK),a4
	move	a4,a14
	add	a14,a4
	add	a14,a4
	movb	*a5(TP_FACEOFF),a14
	add	a14,a4
	sra	1,a4
	sll	24,a1
	srl	24,a1
	sll	24,a2
	srl	16,a2
	sll	24,a3
	srl	8,a3
	sll	24,a4
	add	a1,a2
	add	a3,a2
	add	a4,a2
	mmfm	sp,a1,a3,a4,a5
	rets

**************************************************************************
*								         *
* A_PICKBOX_CHECK							 *
*								         *
* PASS:									 *
* A8 = PICKBOX OBJECT							 *
*								         *
**************************************************************************

A_PICKBOX_CHECK
	MOVB	*A8(ANIMLOOP),A14
	JRNZ	APC_GET_OTHER				;BR=IN LOOP
	MOVK	10,A14					;RESTART LOOP
	MOVB	A14,*A8(ANIMLOOP)

APC_GET_OTHER
	MOVE	@BLUE_SELECT_OBJ,A0,L
	MOVI	COLOR_RED,A1
	CMP	A8,A0
	JRNE	APC_GO					;BR=OTHER TEAM
	MOVE	@RED_SELECT_OBJ,A0,L
	MOVI	COLOR_BLUE,A1
APC_GO
	MOVE	A0,A0
	JAZ	OBJ_CONST_ALL				;BR=TEAM NOT ACTIVE

	MOVE	*A8(ODAG),A2,L
	MOVE	*A0(ODAG),A3,L
	CMP	A2,A3
	JRNE	APC_DONE				;BR=NOT OVERLAPPIN'

	MOVE	*A0(OFLAGS),A14,W
	BTST	B_ANIM,A14
	JRZ	APC_DONE				;BR=OTHER NOT ANIMATING

	MOVE	*A8(ANIMSCR),A2,L
	MOVE	*A0(ANIMSCR),A3,L
	CMP	A2,A3
;	JRNE	APC_DONE				;BR=NOT SAME SCRIPTS
	JANE	OBJ_OFF					;BR=NOT SAME SCRIPTS

	MOVI	COLOR_YELLOW,A1
	MOVE	*A8(OCONST),A14,W
	CMP	A1,A14
	JAEQ	OBJ_CONST_ALL

	MOVE	*A8(ANIMSCR),*A8(ANIMFRM),L		;RESET SCRIPT
	MOVE	*A0(ANIMSCR),*A0(ANIMFRM),L
	MOVB	*A8(ANIMLOOP),*A0(ANIMLOOP)		;SYNC LOOPS
	MOVB	*A8(ANISLP),*A0(ANISLP)			;SYNC SLEEPS
	MOVE	A1,*A0(OCONST),W			;MAKE YELLA TOO!
APC_DONE
	MOVE	A1,*A8(OCONST),W
	JAUC	OBJ_CONST_ALL

**************************************************************************
*								         *
* A_UPDATE_ARROW							 *
* 									 *
* PASS:									 *
* A8 = ARROW OBJECT							 *
*								         *
**************************************************************************

A_UPDATE_ARROW
	MOVE	*A8(ODATA+010H),A0,L			;SELECT OBJECT
	MOVE	*A0(ODAG),A1,L
	CLR	A14

	MOVE	*A8(ODATA),A2,W				;PLAYER NUMBER - 1
	SUBK	2,A2
	JRN	AUA_SET					;BR=DON'T ADJUST X
	ADDK	[0,25],A14
AUA_SET
	ADDXY	A14,A1					;ADD FUDGE
	MOVI	TEXTZVAL-1,A2
	CALLA	SET_SCRNOBJ

	RETS


SWAP_TABLES_TABLE
	.LONG	SWAP_2P_TABLE,SWAP_3P_TABLE,SWAP_4P_TABLE
	.long	SWAP_5P_TABLE,SWAP_6P_TABLE

SWAP_2P_TABLE
	.WORD	2
	.LONG	[010H,0],[0,010H]
SWAP_3P_TABLE
	.WORD	6
	.LONG	[010H,0],[0,010H],[010H,020H],[020H,010H],[0,020H],[020H,0]
SWAP_4P_TABLE
	.WORD	12
	.long	[000h,010h],[010h,000h],[000h,020h],[020h,000h]
	.long	[010h,020h],[020h,010h],[000h,030h],[030h,000h]
	.long	[010h,030h],[030h,010h],[020h,030h],[030h,020h]
SWAP_5P_TABLE
	.word	20
	.long	[000h,010h],[010h,000h],[000h,020h],[020h,000h]
	.long	[010h,020h],[020h,010h],[000h,030h],[030h,000h]
	.long	[010h,030h],[030h,010h],[020h,030h],[030h,020h]
	.long	[000h,040h],[040h,000h],[010h,040h],[040h,010h]
	.long	[020h,040h],[040h,020h],[030h,040h],[040h,030h]
SWAP_6P_TABLE
	.word	30
	.long	[000h,010h],[010h,000h],[000h,020h],[020h,000h]
	.long	[010h,020h],[020h,010h],[000h,030h],[030h,000h]
	.long	[010h,030h],[030h,010h],[020h,030h],[030h,020h]
	.long	[000h,040h],[040h,000h],[010h,040h],[040h,010h]
	.long	[020h,040h],[040h,020h],[030h,040h],[040h,030h]
	.long	[000h,050h],[050h,000h],[010h,050h],[050h,010h]
	.long	[020h,050h],[050h,020h],[030h,050h],[050h,030h]
	.long	[040h,050h],[050h,040h]

PLAYER_COLOR_TABLE
	.WORD	COLOR_PURPLE,COLOR_BLUE,COLOR_YELLOW,COLOR_GREEN

;PLAYER_TEAM_COLOR_TABLE
;	.WORD	COLOR_BLUE,COLOR_BLUE,COLOR_RED,COLOR_RED

PICKBOX
	.word   00H,21,21
	.long   00H
	.word   0,0
	.long   T2FIXED

PICKBOX_INIT
	.long	PICKBOX
	.word	DMACAL,M_SCRNOBJ|M_NOSCALE|M_NOVEL
	.word	0

PICKBOX_NORMAL_FLASH_ANIM
	LWL	1,AFUNC|10,OBJ_CONST_ALL
	LWL	1,AFUNC|5,OBJ_OFF
	.long	0

PICKBOX_TEAM_FLASH_ANIM
	LWLL	1,AFUNC|1,A_2FUNCS+6,A_PICKBOX_CHECK
	.LONG	A_Anim_DSJ,PICKBOX_TEAM_FLASH_ANIM
	LWL	1,AFUNC|5,OBJ_OFF
	.long	0

PICKBOX_SELECT_FLASH_ANIM
	LWL	1,AFUNC|SELECT_FLASH_ONTIME,OBJ_CONST_ALL
	LW	1,AFUNC|SELECT_FLASH_ONTIME
	.LONG	A_2FUNCS+6,OBJ_OFF,A_Anim_DSJ,PICKBOX_SELECT_FLASH_ANIM
	LWL	1,AFUNC|1,PULL_ANIM

MUG_BGND_FLASH_ANIM
	LWL	1,AFUNC|SELECT_FLASH_ONTIME,OBJ_CONST_ALL
	LW	1,AFUNC|SELECT_FLASH_ONTIME
	.LONG	A_2FUNCS+6,OBJ_ON,A_Anim_DSJ,MUG_BGND_FLASH_ANIM
	LWL	1,AFUNC|1,PULL_ANIM

ARROW_PTR_INIT
	.long	arrow4t
	.word	DMAWNZ,M_SCRNOBJ|M_NOSCALE|M_NOVEL
	.word	OM_OID|OM_ANIM
	.word	OID_JUNK
	.long	ARROW_PTR_ANIM

ARROW_PTR_ANIM
	LWL	1,AFUNC|1,A_UPDATE_ARROW
	.long	0

ARROW_IMG_TABLE
	.LONG	arrow1t,arrow2t,arrow3t,arrow4t

ALPHA_ARRAY
	.LONG	[21,18],[-1,-1]
	.LONG	[21,18],[-1,-1+ALPHA_X_SPACING]
	.LONG	[21,18],[-1,-1+ALPHA_X_SPACING*2]
	.LONG	[21,18],[-1,-1+ALPHA_X_SPACING*3]

	.LONG	[21,18],[-1+ALPHA_Y_SPACING,-1]
	.LONG	[21,18],[-1+ALPHA_Y_SPACING,-1+ALPHA_X_SPACING]
	.LONG	[21,18],[-1+ALPHA_Y_SPACING,-1+ALPHA_X_SPACING*2]
	.LONG	[21,18],[-1+ALPHA_Y_SPACING,-1+ALPHA_X_SPACING*3]

	.LONG	[21,11],[-1+ALPHA_Y_SPACING*2,3]
	.LONG	[21,18],[-1+ALPHA_Y_SPACING*2,-1+ALPHA_X_SPACING]
	.LONG	[21,18],[-1+ALPHA_Y_SPACING*2,-1+ALPHA_X_SPACING*2]
	.LONG	[21,18],[-1+ALPHA_Y_SPACING*2,-1+ALPHA_X_SPACING*3]

	.LONG	[21,21],[-1+ALPHA_Y_SPACING*3,-2]
	.LONG	[21,19],[-1+ALPHA_Y_SPACING*3,-1+ALPHA_X_SPACING]
	.LONG	[21,18],[-1+ALPHA_Y_SPACING*3,-1+ALPHA_X_SPACING*2]
	.LONG	[21,18],[-1+ALPHA_Y_SPACING*3,-1+ALPHA_X_SPACING*3]

	.LONG	[21,18],[-1+ALPHA_Y_SPACING*4,-1]
	.LONG	[21,18],[-1+ALPHA_Y_SPACING*4,-1+ALPHA_X_SPACING]
	.LONG	[21,18],[-1+ALPHA_Y_SPACING*4,-1+ALPHA_X_SPACING*2]
	.LONG	[21,18],[-1+ALPHA_Y_SPACING*4,-1+ALPHA_X_SPACING*3]

	.LONG	[21,18],[-1+ALPHA_Y_SPACING*5,-1]
	.LONG	[21,19],[-1+ALPHA_Y_SPACING*5,-1+ALPHA_X_SPACING]
	.LONG	[21,21],[-1+ALPHA_Y_SPACING*5,-2+ALPHA_X_SPACING*2]
	.LONG	[21,18],[-1+ALPHA_Y_SPACING*5,-1+ALPHA_X_SPACING*3]

	.LONG	[21,18],[-1+ALPHA_Y_SPACING*6,-1]
	.LONG	[21,18],[-1+ALPHA_Y_SPACING*6,-1+ALPHA_X_SPACING]
	.LONG	[19,19],[ALPHA_Y_SPACING*6,-1+ALPHA_X_SPACING*2]
	.LONG	[22,17],[-2+ALPHA_Y_SPACING*6,ALPHA_X_SPACING*3]

MONTH_ARRAY
	.LONG	[21,41],[-1,0]
	.LONG	[21,40],[-1,MONTH_X_SPACING]

	.LONG	[21,43],[-1+MONTH_Y_SPACING,-1]
	.LONG	[21,40],[-1+MONTH_Y_SPACING,MONTH_X_SPACING]

	.LONG	[21,43],[-1+MONTH_Y_SPACING*2,-1]
	.LONG	[21,41],[-1+MONTH_Y_SPACING*2,MONTH_X_SPACING]

	.LONG	[21,40],[-1+MONTH_Y_SPACING*3,0]
	.LONG	[21,40],[-1+MONTH_Y_SPACING*3,MONTH_X_SPACING]

	.LONG	[21,40],[-1+MONTH_Y_SPACING*4,0]
	.LONG	[21,40],[-1+MONTH_Y_SPACING*4,MONTH_X_SPACING]

	.LONG	[21,42],[-1+MONTH_Y_SPACING*5,-1]
	.LONG	[21,40],[-1+MONTH_Y_SPACING*5,MONTH_X_SPACING]

DAY_ARRAY
	.LONG	[21,12],[-1,3]
	.LONG	[21,14],[-1,2+DAY_X_SPACING]
	.LONG	[21,14],[-1,2+DAY_X_SPACING*2]
	.LONG	[21,14],[-1,2+DAY_X_SPACING*3]

	.LONG	[21,14],[-1+DAY_Y_SPACING,2]
	.LONG	[21,14],[-1+DAY_Y_SPACING,2+DAY_X_SPACING]
	.LONG	[21,14],[-1+DAY_Y_SPACING,2+DAY_X_SPACING*2]
	.LONG	[21,14],[-1+DAY_Y_SPACING,2+DAY_X_SPACING*3]

	.LONG	[21,14],[-1+DAY_Y_SPACING*2,2]
	.LONG	[21,20],[-1+DAY_Y_SPACING*2,-1+DAY_X_SPACING]
	.LONG	[21,18],[-1+DAY_Y_SPACING*2,DAY_X_SPACING*2]
	.LONG	[21,20],[-1+DAY_Y_SPACING*2,-1+DAY_X_SPACING*3]

	.LONG	[21,20],[-1+DAY_Y_SPACING*3,-1]
	.LONG	[21,20],[-1+DAY_Y_SPACING*3,-1+DAY_X_SPACING]
	.LONG	[21,20],[-1+DAY_Y_SPACING*3,-1+DAY_X_SPACING*2]
	.LONG	[21,20],[-1+DAY_Y_SPACING*3,-1+DAY_X_SPACING*3]

	.LONG	[21,20],[-1+DAY_Y_SPACING*4,-1]
	.LONG	[21,20],[-1+DAY_Y_SPACING*4,-1+DAY_X_SPACING]
	.LONG	[21,20],[-1+DAY_Y_SPACING*4,-1+DAY_X_SPACING*2]
	.LONG	[21,22],[-1+DAY_Y_SPACING*4,-2+DAY_X_SPACING*3]

	.LONG	[21,20],[-1+DAY_Y_SPACING*5,-1]
	.LONG	[21,22],[-1+DAY_Y_SPACING*5,-2+DAY_X_SPACING]
	.LONG	[21,22],[-1+DAY_Y_SPACING*5,-2+DAY_X_SPACING*2]
	.LONG	[21,22],[-1+DAY_Y_SPACING*5,-2+DAY_X_SPACING*3]

	.LONG	[21,22],[-1+DAY_Y_SPACING*6,-2]
	.LONG	[21,22],[-1+DAY_Y_SPACING*6,-2+DAY_X_SPACING]
	.LONG	[21,22],[-1+DAY_Y_SPACING*6,-2+DAY_X_SPACING*2]
	.LONG	[21,22],[-1+DAY_Y_SPACING*6,-2+DAY_X_SPACING*3]

	.LONG	[21,22],[-1+DAY_Y_SPACING*7,-2]
	.LONG	[21,22],[-1+DAY_Y_SPACING*7,-2+DAY_X_SPACING]
	.LONG	[21,20],[-1+DAY_Y_SPACING*7,-1+DAY_X_SPACING*2]

	.end
