TMS340 COFF Macro Assembler Version 6.10     Wed Apr 21 11:31:24 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE    1

       1                            .MLIB   "HHMACS.LIB"
       2                            .FILE   "HHCONTR2.ASM"
       3                            .WIDTH  132
       4                            .OPTION B,D,L,T
       5                            .MNOLIST
       6                    
       7                    *
       8                    *GET THE SYSTEM STUFF
       9                    *
      10                            .INCLUDE        "HH.INC"
      11                            .INCLUDE        "HHSTRING.H"
      12                            .INCLUDE        "IMGTBL.GLO"
      13                            .include        "HHCONTR2.TBL"
      14                            .include        "hhcontr2.e"
      15                            .include        "hhd.g"
      16                            .include        "hhmisc.g"
      17                            .include        "hhproc.g"
      18                            .include        "hhc.g"
      19                            .include        "hhpuck.g"
      20                            .include        "hhram.g"
      21                            .include        "hhpall.g"
      22                            .include        "hhgame.g"
      23                            .include        "hhplayer.g"
      24                            .include        "hhndrone.g"
      25                            .include        "hhcontrl.g"
      26                            .include        "hhutil.g"
      27                            .include        "hhscr_ch.g"
      28                            .include        "hhscr_sk.g"
      29                            .include        "hhmath.g"
      30                            .include        "hhtimer.g"
      31                            .include        "hhscore.g"
      32                            .include        "hhtext.g"
      33                            .include        "hhcmos.g"
      34                            .include        "hhstabl2.g"
      35                            .include        "hhscr_fn.g"
      36                            .include        "hhpick.g"
      37                            .include        "hhfade.g"
      38                            .include        "hhselect.g"
      39                            .include        "hhsnd.g"
      40                            .include        "hhshow.g"
      41                            .include        "hhafunc.g"
      42                            .include        "hhpup.g"
      43                            .include        "hhscrchf.g"
      44                    
      45                    ; end of include files
      46                    
      47 00000000                   .TEXT
      48 00000000                   .EVEN
      49                    
      50 00000000                   .bss    global_shot_percentage,16
      51 00000010                   .bss    global_drone_cstate,16
      52 00000020                   .bss    puck_ctrl_object,32
      53 00000040                   .bss    time_score_left,32      ;easier
      54 00000060                   .bss    time_score_right,32     ;easier
      55 00000080                   .bss    puck_control_new,16     ;puck has recently changed, flash top
TMS340 COFF Macro Assembler Version 6.10     Wed Apr 21 11:31:24 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE    2

      56 00000090                   .bss    hot_player,16
      57 000000a0                   .bss    hot_cycle_rate,16
      58 000000b0                   .BSS    HELP_PNUM,16
      59 000000c0                   .bss    just_now_on_fire,16
      60 000000d0                   .bss    hot_goals,16
      61                                    
      62 00000000           compute_shot_tip
      63 00000000     098f          mmtm    sp,a0,a1,a2,a8,a9,a10,a11
         00000010     e0f0  
      64 00000020     09eb          movi    modify_pct_tip,a11
         00000030 000002d0' 
      65 00000050     c00b          jruc    csr_1
      66 00000060           compute_shot_onetime
      67 00000060     098f          mmtm    sp,a0,a1,a2,a8,a9,a10,a11
         00000070     e0f0  
      68 00000080     09eb          movi    modify_pct_onetime,a11
         00000090 00000310' 
      69 000000b0     c005          jruc    csr_1
      70 000000c0           compute_shot_regular
      71 000000c0     098f          mmtm    sp,a0,a1,a2,a8,a9,a10,a11
         000000d0     e0f0  
      72 000000e0     09eb          movi    modify_pct_regular,a11
         000000f0 00000350' 
      73 00000110     b6c8  csr_1   move    *a6(POF_OBJECT),a8,L
         00000120     0280  
      74 00000130     0d3f          callr   get_location_pct
         00000140     0021  
      75 00000150     0d3f          callr   modify_pct_pressure
         00000160     005b  
      76 00000170     0d3f          callr   modify_pct_deking
         00000180     00be  
      77                    
      78 00000190     0d3f          callr   modify_pct_time_scores
         000001a0     00d1  
      79                    
      80 000001b0     0d3f          callr   modify_pct_drones
         000001c0     0140  
      81 000001d0     092b          call    a11                     ;modify based on shot type
      82 000001e0     0b4a          cmpi    1024,a10
         000001f0     fbff  
      83 00000200     c203          jrls    csr2a2
      84 00000210     09ca          movi    1024,a10
         00000220     0400  
      85 00000230     c003          jruc    csr_2
      86 00000240     4d4a  csr2a2  move    a10,a10
      87 00000250     cf01          jrnn    csr_2
      88 00000260     574a          clr     a10
      89 00000270     058a  csr_2   move    a10,@global_shot_percentage,W
         00000280 00000000- 
      90 000002a0     09af          mmfm    sp,a0,a1,a2,a8,a9,a10,a11
         000002b0     0f07  
      91 000002c0     0960          rets
      92                    
      93 000002d0           modify_pct_tip                  ;we boost tips more, because they are much slower
      94 000002d0     4d4e          move    a10,a14
TMS340 COFF Macro Assembler Version 6.10     Wed Apr 21 11:31:24 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE    3

      95 000002e0     2fee          srl     1,a14
      96 000002f0     41ca          add     a14,a10
      97 00000300     0960          rets
      98 00000310           modify_pct_onetime
      99 00000310     4d4e          move    a10,a14
     100 00000320     2fce          srl     2,a14
     101 00000330     41ca          add     a14,a10
     102 00000340     0960          rets
     103                    
     104 00000350           modify_pct_regular
     105 00000350     0960          rets
     106                    
     107 00000360           get_location_pct
     108 00000360     b6c9          move    *a6(POF_S_STAB),a9,L            ;shot table
         00000370     01e0  
     109 00000380     aec1          movb    *a6(POF_NUMBER),a1
         00000390     0000  
     110 000003a0     b700          move    *a8(OXVAL),a0,L
         000003b0     0140  
     111 000003c0     0b20          addi    [0,8000h],a0
         000003d0 00008000  
     112 000003f0     2a00          sra     16,a0
     113 00000400     1421          dec     a1
     114 00000410     2bc1          sra     2,a1
     115 00000420     ca01          jrz     cs_1
     116 00000430     03a0          neg     a0
     117 00000440     4c00  cs_1    move    a0,a0
     118 00000450     ce26          jrn     cs_far          ;behind center line
     119 00000460     0b40          cmpi    233,a0
         00000470     ff16  
     120 00000480     c426          jrlt    cs_neut         ;behind blue line
     121 00000490     5642          clr     a2
     122 000004a0     0b40          cmpi    688,a0
         000004b0     fd4f  
     123 000004c0     c70d          jrgt    cs_dt1
     124 000004d0     1822          movk    1,a2
     125 000004e0     0b40          cmpi    600,a0
         000004f0     fda7  
     126 00000500     c709          jrgt    cs_dt1
     127 00000510     1842          movk    2,a2
     128 00000520     0b40          cmpi    522,a0
         00000530     fdf5  
     129 00000540     c705          jrgt    cs_dt1
     130 00000550     1862          movk    3,a2
     131 00000560     0b40          cmpi    370,a0
         00000570     fe8d  
     132 00000580     c701          jrgt    cs_dt1
     133 00000590     1882          movk    4,a2
     134 000005a0     24e2  cs_dt1  sll     7,a2
     135 000005b0     4049          add     a2,a9
     136 000005c0     b501          move    *a8(OZPOS),a1,W
         000005d0     0190  
     137 000005e0     cf01          jrnn    cs_dt3
     138 000005f0     5600          clr     a0
     139 00000600     0b40  cs_dt3  cmpi    679,a0
TMS340 COFF Macro Assembler Version 6.10     Wed Apr 21 11:31:24 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE    4

         00000610     fd58  
     140 00000620     c402          jrlt    cs_dt2
     141 00000630     09c0          movi    679,a0
         00000640     02a7  
     142 00000650     09c0  cs_dt2  movi    85,a0
         00000660     0055  
     143 00000670     5801          divs    a0,a1
     144 00000680     2481          sll     4,a1
     145 00000690     4029          add     a1,a9
     146 000006a0     852a          move    *a9,a10,W               ;a10 is our starting % for location
     147 000006b0     0960          rets
     148 000006c0     b52a  cs_far  move    *a9(290h),a10,W         ;behind center line
         000006d0     0290  
     149 000006e0     0960          rets
     150 000006f0     b52a  cs_neut move    *a9(280h),a10,W         ;behind blue line
         00000700     0280  
     151 00000710     0960          rets
     152                    
     153 00000720           modify_pct_pressure
     154 00000720     aec1          movb    *a6(POF_NUMBER),a1
         00000730     0000  
     155 00000740     1421          dec     a1
     156 00000750     2fc1          srl     2,a1
     157 00000760     03a1          neg     a1
     158 00000770     1021          inc     a1
     159 00000780     4c22          move    a1,a2
     160 00000790     4c23          move    a1,a3
     161 000007a0     2443          sll     2,a3
     162 000007b0     1023          inc     a3
     163 000007c0     24c1          sll     6,a1
     164 000007d0     0b01          addi    POF_D_1P,a1,W
         000007e0     0600  
     165 000007f0     40c1          add     a6,a1
     166 00000800     9420          move    *a1+,a0,W
     167 00000810     942e          move    *a1+,a14,W
     168 00000820     480e          cmp     a0,a14
     169 00000830     c901          jrhs    mpp1
     170 00000840     4dc0          move    a14,a0
     171 00000850     4c62  mpp1    move    a3,a2
     172 00000860     1062          addk    3,a2
     173 00000870                   GBLOCK  a2,a2
     174 000008b0     b442          move    *a2(POF_FLAGS),a2,W
         000008c0     0200  
     175 000008d0     1fa2          btst    B_PF_GOALIE,a2
     176 000008e0     cb05          jrnz    mpp2
     177 000008f0     1201          addk    16,a1
     178 00000900     942e          move    *a1+,a14,W
     179 00000910     480e          cmp     a0,a14
     180 00000920     c901          jrhs    mpp2
     181 00000930     4dc0          move    a14,a0
     182 00000940     0b40  mpp2    cmpi    60,a0
         00000950     ffc3  
     183 00000960     c207          jrls    mpp_a           ;real close
     184 00000970     0b40          cmpi    140,a0
         00000980     ff73  
TMS340 COFF Macro Assembler Version 6.10     Wed Apr 21 11:31:24 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE    5

     185 00000990     c206          jrls    mpp_b           ;fairly close
     186 000009a0     0b40          cmpi    200,a0
         000009b0     ff37  
     187 000009c0     c207          jrls    mpp_c           ;somewhat open
     188 000009d0     c009          jruc    mpp_d           ;open
     189 000009e0     2fea  mpp_a   srl     1,a10
     190 000009f0     c007          jruc    mpp_d
     191 00000a00     4d4e  mpp_b   move    a10,a14
     192 00000a10     2fce          srl     2,a14
     193 00000a20     45ca          sub     a14,a10
     194 00000a30     c003          jruc    mpp_d
     195 00000a40     4d4e  mpp_c   move    a10,a14
     196 00000a50     2fae          srl     3,a14
     197 00000a60     45ca          sub     a14,a10
     198 00000a70     b702  mpp_d   move    *a8(OXVAL),a2,L
         00000a80     0140  
     199 00000a90     0b43          cmpi    4,a3
         00000aa0     fffb  
     200 00000ab0     c901          jrhs    mpp21
     201 00000ac0     03a2          neg     a2
     202 00000ad0     0d3f  mpp21   callr   mpp3
         00000ae0     0019  
     203 00000af0     4840          cmp     a2,a0
     204 00000b00     c716          jrgt    mpp_9           ;not_in_front
     205 00000b10     0d3f          callr   mpp3
         00000b20     0015  
     206 00000b30     4840          cmp     a2,a0
     207 00000b40     c712          jrgt    mpp_9           ;not in front
     208 00000b50     1023          inc     a3
     209 00000b60                   GBLOCK  a3,a1
     210 00000bb0     b42e          move    *a1(POF_FLAGS),a14,W
         00000bc0     0200  
     211 00000bd0     1fae          btst    B_PF_GOALIE,a14
     212 00000be0     cb05          jrnz    mpp_e           ;in front
     213 00000bf0     0d3f          callr   mpp31
         00000c00     000c  
     214 00000c10     4840          cmp     a2,a0
     215 00000c20     c704          jrgt    mpp_9           ;not in front
     216 00000c30     0300          jruc    mpp_e           ;in front
     217 00000c40     4d4e  mpp_e   move    a10,a14
     218 00000c50     2fce          srl     2,a14
     219 00000c60     41ca          add     a14,a10
     220 00000c70     0960  mpp_9   rets
     221                    
     222 00000c80           mpp3    GBLOCK  a3,a1
     223 00000cd0     b620  mpp31   move    *a1(POF_OBJECT),a0,L
         00000ce0     0280  
     224 00000cf0     b600          move    *a0(OXVAL),a0,L
         00000d00     0140  
     225 00000d10     0b43          cmpi    4,a3
         00000d20     fffb  
     226 00000d30     c901          jrhs    mpp4
     227 00000d40     03a0          neg     a0
     228 00000d50     1023  mpp4    inc     a3
     229 00000d60     0960          rets
TMS340 COFF Macro Assembler Version 6.10     Wed Apr 21 11:31:24 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE    6

     230                    
     231 00000d70           modify_pct_deking
     232 00000d70     b6ce          move    *a6(POF_DEKE_TIME),a14,L
         00000d80     0a30  
     233 00000d90     07a0          move    @WAVEIRQS,a0,L
         00000da0 00000000! 
     234 00000dc0     45c0          sub     a14,a0
     235 00000dd0     0b40          cmpi    60,a0
         00000de0     ffc3  
     236 00000df0     c90b          jrhs    mpdk9
     237 00000e00     b4ce          move    *a6(POF_DEKE_COUNT),a14,W
         00000e10     0a50  
     238 00000e20     ca08          jrz     mpdk9
     239 00000e30     0b4e          cmpi    3,a14
         00000e40     fffc  
     240 00000e50     c201          jrls    mpdk1
     241 00000e60     186e          movk    3,a14
     242 00000e70     4d40  mpdk1   move    a10,a0
     243 00000e80     63c0          sll     a14,a0
     244 00000e90     2f40          srl     6,a0            ;5
     245 00000ea0     400a          add     a0,a10
     246 00000eb0     0960  mpdk9   rets
     247                    
     248 00000ec0           modify_pct_time_scores                  ;easier
     249 00000ec0           modify_pct_scores
     250 00000ec0     07a1          move    @time_score_left,a1,L
         00000ed0 00000040- 
     251 00000ef0     aec0          movb    *a6(POF_NUMBER),a0
         00000f00     0000  
     252 00000f10     0b40          cmpi    4,a0
         00000f20     fffb  
     253 00000f30     c203          jrls    mpcu1
     254 00000f40     07a1          move    @time_score_right,a1,L
         00000f50 00000060- 
     255 00000f70     07ae  mpcu1   move    @WAVEIRQS,a14,L
         00000f80 00000000! 
     256 00000fa0     442e          sub     a1,a14
     257 00000fb0     0b4e          cmpi    1200,a14
         00000fc0     fb4f  
     258 00000fd0     c203          jrls    mpcu9
     259                    
     260                    
     261 00000fe0     4d4e  mpcuh   move    a10,a14
     262 00000ff0     2fee          srl     1,a14
     263 00001000     41ca          add     a14,a10
     264 00001010           mpcu9
     265 00001010     05a1          move    @team1_score,a1,W
         00001020 00000000! 
     266 00001040     aece          movb    *a6(POF_NUMBER),a14
         00001050     0000  
     267 00001060     0b4e          cmpi    4,a14
         00001070     fffb  
     268 00001080     c203          jrls    jkmm1
     269 00001090     05a1          move    @team2_score,a1,W
         000010a0 00000000! 
TMS340 COFF Macro Assembler Version 6.10     Wed Apr 21 11:31:24 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE    7

     270 000010c0     0b41  jkmm1   cmpi    10,a1
         000010d0     fff5  
     271 000010e0     c307          jrhi    jkmmh
     272 000010f0     0b41          cmpi    2,a1
         00001100     fffd  
     273 00001110     c303          jrhi    jkmm2
     274 00001120     4d4e          move    a10,a14
     275 00001130     2bee          sra     1,a14
     276 00001140     41ca          add     a14,a10
     277 00001150     0960  jkmm2   rets
     278 00001160     b4ce  jkmmh   move    *a6(POF_DRONE_LEVEL),a14,W
         00001170     0be0  
     279 00001180     0b4e          cmpi    7,a14
         00001190     fff8  
     280 000011a0     c903          jrhs    jkhh9           ;skip if drone level >= 7 (>=7 is always a non human team)
     281 000011b0     4d4e          move    a10,a14         ;over 10 points
     282 000011c0     2bce          sra     2,a14           ; 25% less chance
     283 000011d0     45ca          sub     a14,a10
     284 000011e0     0960  jkhh9   rets
     285                    
     286 000011f0           modify_pct_time
     287 000011f0     0d3f          callr   are_we_all_drone
         00001200     0025  
     288 00001210     c923          jrnc    mpt9
     289 00001220     05ae          move    @period,a14
         00001230 00000000! 
     290 00001250     0b4e          cmpi    4,a14
         00001260     fffb  
     291 00001270     ca16          jrz     mptotc
     292 00001280     05ae          move    @minutes,a14,W
         00001290 00000000! 
     293 000012b0     0b4e          cmpi    2,a14
         000012c0     fffd  
     294 000012d0     c207          jrls    mpt1
     295 000012e0     05ae          move    @tenseconds,a14,W
         000012f0 00000000! 
     296 00001310     0b4e          cmpi    5,a14
         00001320     fffa  
     297 00001330     ca0e          jrz     mptls           ;2:50 or more, less %
     298 00001340     c010          jruc    mpt9
     299 00001350     4dce  mpt1    move    a14,a14
     300 00001360     cb0e          jrnz    mpt9
     301 00001370     05ae          move    @tenseconds,a14,W
         00001380 00000000! 
     302 000013a0     0b40          cmpi    2,a0
         000013b0     fffd  
     303 000013c0     c205          jrls    mptls           ;20 seconds left, less %
     304 000013d0     c007          jruc    mpt9
     305 000013e0     4d4e  mptotc  move    a10,a14         ;all of overtime, 12% less
     306 000013f0     2bae          sra     3,a14
     307 00001400     45ca          sub     a14,a10
     308 00001410     0960          rets
     309 00001420     4d4e  mptls   move    a10,a14
     310 00001430     2bce          sra     2,a14           ;25% less
     311 00001440     45ca          sub     a14,a10
TMS340 COFF Macro Assembler Version 6.10     Wed Apr 21 11:31:24 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE    8

     312 00001450     0960  mpt9    rets
     313                    
     314 00001460           are_we_all_drone
     315 00001460     b4ce          move    *a6(POF_FLAGS),a14,W
         00001470     0200  
     316 00001480     1fee          btst    B_PF_HUMAN,a14
     317 00001490     cb0f          jrnz    awhum
     318 000014a0     aece          movb    *a6(POF_NUMBER),a14
         000014b0     0000  
     319 000014c0     142e          dec     a14
     320 000014d0     0bce          xori    1,a14
         000014e0 00000001  
     321 00001500     102e          inc     a14
     322 00001510                   GBLOCK  a14,a14
     323 00001550     b5ce          move    *a14(POF_FLAGS),a14,W
         00001560     0200  
     324 00001570     1fee          btst    B_PF_HUMAN,a14
     325 00001580     ca02          jrz     awdron          ;all drone team
     326 00001590     0320  awhum   clrc
     327 000015a0     0960          rets
     328 000015b0     0de0  awdron  setc
     329 000015c0     0960          rets
     330                    
     331 000015d0           modify_pct_drones
     332 000015d0     0d3f          callr   are_we_all_drone
         000015e0     ffe7  
     333 000015f0     c80c          jrc     mpdron          ;all drone team
     334 00001600     05a1          move    @hot_player,a1,W
         00001610 00000090- 
     335 00001630     ca08          jrz     mpdron
     336 00001640     aece          movb    *a6(POF_NUMBER),a14
         00001650     0000  
     337 00001660     482e          cmp     a1,a14
     338 00001670     cb04          jrnz    mpdron
     339 00001680     4d4e          move    a10,a14
     340                    ;       sra     2,a14
     341 00001690     41ca          add     a14,a10         ;for hot human player % or teammate
     342 000016a0     41ca          add     a14,a10         ;for hot human player % or teammate
     343 000016b0     41ca          add     a14,a10         ;for hot human player % or teammate
     344 000016c0     b4ce  mpdron  move    *a6(POF_DRONE_LEVEL),a14,W
         000016d0     0be0  
     345 000016e0     cb04          jrnz    mpcd1
     346 000016f0     4d4e          move    a10,a14
     347 00001700     2bce          sra     2,a14
     348 00001710     45ca          sub     a14,a10         ;drone level 0, reduce probability of going in
     349 00001720     c014          jruc    mpdr9
     350 00001730     0b4e  mpcd1   cmpi    5,a14           ;drone level 1-5, reduce probability
         00001740     fffa  
     351 00001750     c504          jrge    mpcd11
     352 00001760     4d4e          move    a10,a14
     353 00001770     2bae          sra     3,a14
     354 00001780     45ca          sub     a14,a10
     355 00001790     c00d          jruc    mpdr9
     356 000017a0     0b4e  mpcd11  cmpi    8,a14
         000017b0     fff7  
TMS340 COFF Macro Assembler Version 6.10     Wed Apr 21 11:31:24 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE    9

     357 000017c0     c40a          jrlt    mpdr9           ;drone level 6-7, no probability change
     358 000017d0     0b4e          cmpi    11,a14
         000017e0     fff4  
     359 000017f0     c404          jrlt    mpnet
     360 00001800     4d4e          move    a10,a14         ;drone level 11-12, more probability
     361 00001810     41ca          add     a14,a10
     362 00001820     41ca          add     a14,a10
     363 00001830     c003          jruc    mpdr9
     364 00001840     4d4e  mpnet   move    a10,a14
     365 00001850     2bce          sra     2,a14
     366 00001860     41ca          add     a14,a10         ;drone level 8-10, add to probability of going in
     367 00001870     aece  mpdr9   movb    *a6(POF_NUMBER),a14
         00001880     0000  
     368 00001890     142e          dec     a14
     369 000018a0     2fce          srl     2,a14
     370 000018b0     142e          dec     a14
     371 000018c0     038e          abs     a14
     372 000018d0     244e          sll     2,a14
     373 000018e0     102e          inc     a14
     374 000018f0                   GBLOCK  a14,a14
     375 00001930     b5ce          move    *a14(POF_DRONE_LEVEL),a14,W     ;get drone level of other team
         00001940     0be0  
     376 00001950     0b4e          cmpi    11,a14
         00001960     fff4  
     377 00001970     c404          jrlt    mpnet2
     378 00001980     4d4e          move    a10,a14
     379 00001990     2bee          sra     1,a14
     380 000019a0     45ca          sub     a14,a10         ;percentage is 50% less against 11 or 12 drone
     381 000019b0     c006          jruc    mpdr99
     382 000019c0     0b4e  mpnet2  cmpi    7,a14
         000019d0     fff8  
     383 000019e0     c403          jrlt    mpdr99
     384 000019f0     4d4e          move    a10,a14
     385 00001a00     2bae          sra     3,a14
     386 00001a10     45ca          sub     a14,a10         ;percentage is 12.5% less against smart drone
     387 00001a20     0960  mpdr99  rets
     388                    
     389 00001a30           update_drone_msgs
     390 00001a30     1820          movk    1,a0            ;lets assume player 1
     391 00001a40     0d5f          calla   do_we_have_start_credits
         00001a50 00000000! 
     392 00001a70     c805          jrc     udm_st
     393 00001a80     1860          movk    3,a0
     394 00001a90     0580  ud2     move    a0,@global_drone_cstate,W
         00001aa0 00000010- 
     395 00001ac0     0960          rets
     396 00001ad0     1840  udm_st  movk    2,a0
     397 00001ae0     c0fa          jruc    ud2
     398                    
     399 00001af0           create_puck_control_indicator
     400 00001af0     5600          clr     a0
     401 00001b00     0580          move    a0,@last_control_pl
         00001b10 000000e0- 
     402 00001b30     09f0          movi    pcbox_init,b0
         00001b40 00002540' 
TMS340 COFF Macro Assembler Version 6.10     Wed Apr 21 11:31:24 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   10

     403 00001b60     0d5f          calla   EASYMAKE
         00001b70 00000000! 
     404 00001b90     ca09          jrz     cpci9
     405 00001ba0     0788          move    a8,@puck_ctrl_object,L
         00001bb0 00000020- 
     406 00001bd0     09e1          movi    puck_control_script,a1
         00001be0 00002600' 
     407 00001c00     c080          jauc    STRT_ANIM
         00001c10 00000000! 
     408 00001c30     0960  cpci9   rets
     409 000000e0                   .bss    last_control_pl,16
     410                    
     411 00001c40           set_puck_control_indicator
     412 00001c40     05a0          move    @PUCK_CONTROL,a0,W
         00001c50 00000000! 
     413 00001c70     05a1          move    @last_control_pl,a1,W
         00001c80 000000e0- 
     414 00001ca0     4801          cmp     a0,a1
     415 00001cb0     ca0c          jrz     specspf         ;check and do special flashing
     416 00001cc0     0d3f          callr   remove_old_control
         00001cd0     0011  
     417 00001ce0     0d3f          callr   start_flash_control
         00001cf0     0021  
     418 00001d00     0d3f          callr   move_big_puck
         00001d10     0033  
     419 00001d20     05c0          move    @PUCK_CONTROL,@last_control_pl,W
         00001d30 00000000! 
         00001d50 000000e0- 
     420 00001d70     0960          rets
     421 00001d80     05ae  specspf move    @puck_control_new,a14,W
         00001d90 00000080- 
     422 00001db0     ca01          jrz     spec9
     423 00001dc0     c001          jruc    continue_flash_control
     424 00001dd0     0960  spec9   rets
     425                    
     426 00001de0           continue_flash_control
     427 00001de0     0960          rets
     428                    
     429 00001df0           remove_old_control
     430 00001df0     4c22          move    a1,a2
     431 00001e00     ca0f          jrz     roc_9
     432 00001e10     24a2          sll     5,a2
     433 00001e20     0b22          addi    puck_box_oid_list-32,a2
         00001e30 00002420' 
     434 00001e50     09e1          movi    NAMEBARP,a1
         00001e60 00000000! 
     435 00001e80     9440          move    *a2+,a0,W
     436 00001e90     0d3f          callr   cp_oi
         00001ea0     0047  
     437 00001eb0     09e1          movi    LSTNME1P,a1
         00001ec0 00000000! 
     438 00001ee0     9440          move    *a2+,a0,W
     439 00001ef0     c042          jruc    cp_oi
     440 00001f00     0960  roc_9   rets
     441                    
TMS340 COFF Macro Assembler Version 6.10     Wed Apr 21 11:31:24 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   11

     442 00001f10           start_flash_control
     443 00001f10     05a2          move    @PUCK_CONTROL,a2,W
         00001f20 00000000! 
     444 00001f40     ca0f          jrz     sfc_9
     445 00001f50     24a2          sll     5,a2
     446 00001f60     0b22          addi    puck_box_oid_list-32,a2
         00001f70 00002420' 
     447 00001f90     09e1          movi    NAMEBAR2P,a1
         00001fa0 00000000! 
     448 00001fc0     9440          move    *a2+,a0,W
     449 00001fd0     0d3f          callr   cp_oi
         00001fe0     0033  
     450 00001ff0     09e1          movi    LSTNME2P,a1
         00002000 00000000! 
     451 00002020     9440          move    *a2+,a0,W
     452 00002030     c02e          jruc    cp_oi
     453 00002040     0960  sfc_9   rets
     454                    
     455 00002050           move_big_puck
     456 00002050     05a0          move    @PUCK_CONTROL,a0,W
         00002060 00000000! 
     457 00002080     07a8          move    @puck_ctrl_object,a8,L
         00002090 00000020- 
     458 000020b0     4c00          move    a0,a0
     459 000020c0     ca22          jrz     bp8
     460 000020d0     05ae          move    @TOP_DISP_OFF,a14,W
         000020e0 00000000! 
     461 00002100     cb1e          jrnz    bp8
     462 00002110     05ae          move    @hot_player,a14,W
         00002120 00000090- 
     463 00002140     09e1          movi    puck_control_script,a1
         00002150 00002600' 
     464                    ;       cmp     a0,a14
     465                    ;       jrnz    mbpnf
     466                    ;       movi    puck_control_fire_script,a1
     467 00002170     0d5f  mbpnf   calla   STRT_ANIM
         00002180 00000000! 
     468 000021a0                   GBLOCK  a0,a14
     469 000021f0     b5ce          move    *a14(POF_FLAGS),a14,W
         00002200     0200  
     470 00002210     1fee          btst    B_PF_HUMAN,a14
     471 00002220     ca0c          jrz     bp8
     472 00002230     2480          sll     4,a0
     473 00002240     0b20          addi    spcil,a0
         00002250 000023b0' 
     474 00002270     8400          move    *a0,a0,W
     475 00002280     09e1  bp7     movi    [14,0],a1
         00002290 000e0000  
     476 000022b0     ee20          movy    a1,a0
     477 000022c0     c080          jauc    set_scrnobj_to_pos
         000022d0 00000000! 
     478 000022f0     09c0  bp8     movi    -100,a0
         00002300     ff9c  
     479 00002310     c0f6          jruc    bp7
     480                    
TMS340 COFF Macro Assembler Version 6.10     Wed Apr 21 11:31:24 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   12

     481 00002320     0d5f  cp_oi   calla   EXIST_OBJ_ALL
         00002330 00000000! 
     482 00002350     ca04          jrz     cpoi9
     483 00002360     4c20          move    a1,a0
     484 00002370     c080          jauc    CHANGE_PAL
         00002380 00000000! 
     485 000023a0     0960  cpoi9   rets
     486                    
     487 000023b0     ff9c  spcil   .word   -100
     488 000023c0     000d          .word   13,103,-100,-100,298,388,-100,-100
     489 00002440           puck_box_oid_list
     490 00002440     0301          .word   OID_TURBO_1,OID_TURBONAME_1
     491 00002460     0302          .word   OID_TURBO_2,OID_TURBONAME_2
     492 00002480     0000          .word   0,0
     493 000024a0     0000          .word   0,0
     494 000024c0     0305          .word   OID_TURBO_5,OID_TURBONAME_5
     495 000024e0     0306          .word   OID_TURBO_6,OID_TURBONAME_6
     496 00002500     0000          .word   0,0
     497 00002520     0000          .word   0,0
     498                    
     499 00002540           pcbox_init
     500 00002540 00001830"         .long   NMPUCK01
     501 00002560     8002          .word   DMAWNZ,M_SCRNOBJ|M_NOVEL
     502 00002580     0910          .word   OM_OID|OM_POS|OM_INSERT
     503 00002590     0206          .word   OID_BIGPUCK
     504 000025a0 ff9c0000          .long   [-100,0],[6,0],[999,0]          ;x,y,z
     505                    
     506 00002600           puck_control_script
     507 00002600           pcl1    LWL     NMPUCK01,AFUNC|1,a_set_pal_to_img
     508 00002650           pcl2    LW      NMPUCK01,4
     509 00002680                   LW      NMPUCK02,4
     510 000026b0                   LW      NMPUCK03,4
     511 000026e0                   LW      NMPUCK04,4
     512 00002710                   LW      NMPUCK05,4
     513 00002740                   LW      NMPUCK06,4
     514 00002770                   LW      NMPUCK07,4
     515 000027a0                   LW      NMPUCK08,4
     516 000027d0                   LWL     NMPUCK09,AFUNC|4,a_safe_branch+4        ;we only branch once
     517 00002820 00002600'         .long   pcl1,pcl2
     518 00002860 00000000          .long   0
     519                    
     520                    ;puck_control_fire_script
     521                    ;pcf1   LWL     PUCKFR01,AFUNC|1,a_set_pal_to_img
     522                    ;pcf2   LW      PUCKFR01,4
     523                    ;       LW      PUCKFR02,4
     524                    ;       LW      PUCKFR03,4
     525                    ;       LW      PUCKFR04,4
     526                    ;       LW      PUCKFR05,4
     527                    ;       LWL     PUCKFR06,AFUNC|4,a_safe_branch+4        ;we only branch once
     528                    ;       .long   pcf1,pcf2
     529                    ;       .long   0
     530                    
     531 00002880           turbo_stuff_list
     532 00002880 00000301          .long   OID_TURBO_1,[6,0],[5,0],[1000,0]                ;box
     533 00002900 00000311          .long    OID_TURBOBAR_1,[22,0],[15,0],[999,0]           ;bar
TMS340 COFF Macro Assembler Version 6.10     Wed Apr 21 11:31:24 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   13

     534 00002980 00000321          .long    OID_TURBONAME_1,[57,0],[10,0],[999,0]          ;name
     535 00002a00 00000321          .long    OID_TURBONAME_1,[6+43,0],[10,0],[999,0]        ;press start
     536 00002a80 00000321          .long    OID_TURBONAME_1,[6+43,0],[10,0],[999,0]        ;insert coin
     537 00002b00 00000301          .long    OID_TURBO_1,[6,0],[5,0],[999,0]                ;drone box
     538 00002b80 00000321          .long    OID_TURBONAME_1,[6+43,0],[10,0],[999,0]        ;please wait
     539 00002c00 00000321          .long    OID_TURBONAME_1,[6+43,0],[10,0],[999,0]        ;name for to control
     540 00002c80 000058d0'         .long    PRPTRBOP,0,0,0
     541 00002d00 00000311          .long    OID_TURBOBAR_1,[6,0],[15,0],[999,0]            ;drone bar
     542 00002d80 00000331          .long    OID_TURBOSBAR_1,[57,0],[34,0],[998,0]          ;small bar
     543 00002e00 00000000          .long    0,0,0,0
     544 00002e80 00000000          .long    0,0,0,0
     545 00002f00 00000000          .long    0,0,0,0
     546 00002f80 00000000          .long    0,0,0,0
     547 00003000 00000000          .long    0,0,0,0
     548 00003080 00000302          .long   OID_TURBO_2,[96,0],[5,0],[1000,0]               ;box
     549 00003100 00000312          .long    OID_TURBOBAR_2,[112,0],[15,0],[999,0]          ;bar
     550 00003180 00000322          .long    OID_TURBONAME_2,[146,0],[10,0],[999,0]         ;name
     551 00003200 00000322          .long    OID_TURBONAME_2,[96+43,0],[10,0],[999,0]       ;press start
     552 00003280 00000322          .long    OID_TURBONAME_2,[96+43,0],[10,0],[999,0]       ;insert coin
     553 00003300 00000302          .long    OID_TURBO_2,[96,0],[5,0],[999,0]               ;drone box
     554 00003380 00000322          .long    OID_TURBONAME_2,[96+43,0],[10,0],[999,0]       ;please wait
     555 00003400 00000322          .long    OID_TURBONAME_2,[96+43,0],[10,0],[999,0]       ;name for to control
     556 00003480 00005970'         .long    BLUTRBOP,0,0,0
     557 00003500 00000312          .long    OID_TURBOBAR_2,[96,0],[15,0],[999,0]           ;drone bar
     558 00003580 00000332          .long    OID_TURBOSBAR_2,[146,0],[34,0],[998,0]         ;small bar
     559 00003600 00000000          .long    0,0,0,0
     560 00003680 00000000          .long    0,0,0,0
     561 00003700 00000000          .long    0,0,0,0
     562 00003780 00000000          .long    0,0,0,0
     563 00003800 00000000          .long    0,0,0,0
     564 00003880 00000000          .long   0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
     565 00003b00 00000000          .long    0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
     566 00003d80 00000000          .long    0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
     567 00004080 00000000          .long   0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
     568 00004300 00000000          .long    0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
     569 00004580 00000000          .long    0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
     570 00004880 00000305          .long   OID_TURBO_5,[304,0],[5,0],[1000,0]              ;box
     571 00004900 00000315          .long    OID_TURBOBAR_5,[288,0],[15,0],[999,0]          ;bar
     572 00004980 00000325          .long    OID_TURBONAME_5,[254,0],[10,0],[999,0]         ;name
     573 00004a00 00000325          .long    OID_TURBONAME_5,[219+43,0],[10,0],[999,0]      ;press start
     574 00004a80 00000325          .long    OID_TURBONAME_5,[219+43,0],[10,0],[999,0]      ;insert coin
     575 00004b00 00000305          .long    OID_TURBO_5,[219,0],[5,0],[999,0]              ;drone box
     576 00004b80 00000325          .long    OID_TURBONAME_5,[219+43,0],[10,0],[999,0]      ;please wait
     577 00004c00 00000325          .long    OID_TURBONAME_5,[219+43,0],[10,0],[999,0]      ;name for to control
     578 00004c80 00005920'         .long    YLWTRBOP,0,0,0
     579 00004d00 00000315          .long    OID_TURBOBAR_5,[219,0],[15,0],[999,0]          ;drone bar
     580 00004d80 00000335          .long    OID_TURBOSBAR_5,[254,0],[34,0],[998,0]         ;small bar
     581 00004e00 00000000          .long    0,0,0,0
     582 00004e80 00000000          .long    0,0,0,0
     583 00004f00 00000000          .long    0,0,0,0
     584 00004f80 00000000          .long    0,0,0,0
     585 00005000 00000000          .long    0,0,0,0
     586 00005080 00000306          .long   OID_TURBO_6,[394,0],[5,0],[1000,0]              ;box
     587 00005100 00000316          .long    OID_TURBOBAR_6,[378,0],[15,0],[999,0]          ;bar
     588 00005180 00000326          .long    OID_TURBONAME_6,[344,0],[10,0],[999,0]         ;name
TMS340 COFF Macro Assembler Version 6.10     Wed Apr 21 11:31:24 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   14

     589 00005200 00000326          .long    OID_TURBONAME_6,[308+43,0],[10,0],[999,0]      ;press start
     590 00005280 00000326          .long    OID_TURBONAME_6,[308+43,0],[10,0],[999,0]      ;insert coin
     591 00005300 00000306          .long    OID_TURBO_6,[308,0],[5,0],[999,0]              ;drone box
     592 00005380 00000326          .long    OID_TURBONAME_6,[308+43,0],[10,0],[999,0]      ;please wait
     593 00005400 00000326          .long    OID_TURBONAME_6,[308+43,0],[10,0],[999,0]      ;name for to control
     594 00005480 00005880'         .long    GRNTRBOP,0,0,0
     595 00005500 00000316          .long    OID_TURBOBAR_6,[308,0],[15,0],[999,0]          ;drone bar
     596 00005580 00000336          .long    OID_TURBOSBAR_6,[344,0],[34,0],[998,0]         ;small bar
     597 00005600 00000000          .long    0,0,0,0
     598 00005680 00000000          .long    0,0,0,0
     599 00005700 00000000          .long    0,0,0,0
     600 00005780 00000000          .long    0,0,0,0
     601 00005800 00000000          .long    0,0,0,0
     602                    
     603 00005880           GRNTRBOP:
     604 00005880     0004     .word   4
     605 00005890     7c1f     .word   07c1fh,003e0h,002a0h,00180h
     606                    
     607 000058d0           PRPTRBOP:
     608 000058d0     0004     .word   4
     609 000058e0     0000     .word   00000h,07c1fh,05415h,0300ch
     610                    
     611 00005920           YLWTRBOP:
     612 00005920     0004     .word   4
     613 00005930     0000     .word   00000h,07fe0h,056a0h,03180h
     614                    
     615 00005970           BLUTRBOP:
     616 00005970     0004     .word   4
     617 00005980     0000     .word   00000h,0001fh,00015h,0000ch
     618                    
     619 000059c0           turbo_box_init
     620 000059c0 000013b0"         .long   NAMEBAR1
     621 000059e0     8002          .word   DMAWNZ,M_SCRNOBJ|M_NOVEL
     622 00005a00     0000          .word   0
     623                    
     624 00005a10           turbo_box_init2
     625 00005a10 000013b0"         .long   NAMEBAR1
     626 00005a30     8012          .word   DMAWNZ|DMAHFL,M_SCRNOBJ|M_NOVEL
     627 00005a50     0000          .word   0
     628                    
     629 00005a60           turbo_bar_init
     630 00005a60 000014d0"         .long   GRNTRBO1
     631 00005a80     8042          .word   DMAWNZ|DMACLP,M_SCRNOBJ|M_NOVEL
     632 00005aa0     0000          .word   0
     633                    
     634 00005ab0           turbo_bar_init2
     635 00005ab0 000014d0"         .long   GRNTRBO1
     636 00005ad0     8052          .word   DMAWNZ|DMACLP|DMAHFL,M_SCRNOBJ|M_NOVEL
     637 00005af0     0000          .word   0
     638                    
     639 00005b00           turbo_name_init
     640 00005b00 00000000!         .long   CHELIOS1
     641 00005b20     8002          .word   DMAWNZ,M_SCRNOBJ|M_NOVEL
     642 00005b40     0000          .word   0
     643                    
TMS340 COFF Macro Assembler Version 6.10     Wed Apr 21 11:31:24 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   15

     644 00005b50           small_turbo_init
     645 00005b50 00000000"         .long   THERMO1
     646 00005b70     8002          .word   DMAWNZ,M_SCRNOBJ|M_NOVEL|M_NOSCALE
     647 00005b90     0000          .word   0
     648                    
     649 00005ba0           small_turbo2_init
     650 00005ba0 00000000"         .long   THERMO1
     651 00005bc0     8012          .word   DMAWNZ|DMAHFL,M_SCRNOBJ|M_NOVEL|M_NOSCALE
     652 00005be0     0000          .word   0
     653                    
     654 00005bf0           press_start_init
     655 00005bf0 000015f0"         .long   PRSSTART
     656 00005c10     8002          .word   DMAWNZ,M_SCRNOBJ|M_NOVEL
     657 00005c30     0000          .word   0
     658                    
     659 00005c40           insert_coin_init
     660 00005c40 000017a0"         .long   INSERTCN
     661 00005c60     8002          .word   DMAWNZ,M_SCRNOBJ|M_NOVEL
     662 00005c80     0000          .word   0
     663                    
     664 00005c90           please_wait_init
     665 00005c90 00001710"         .long   PLEASEWT
     666 00005cb0     8002          .word   DMAWNZ,M_SCRNOBJ|M_NOVEL
     667 00005cd0     0000          .word   0
     668                    
     669 00005ce0           turbo_drone_box_init
     670 00005ce0 00001440"         .long   NAMEBUYIN
     671 00005d00     8042          .word   DMAWNZ|DMACLP,M_SCRNOBJ|M_NOVEL
     672 00005d20     0000          .word   0
     673                    
     674 00005d30           turbo_drone_bar_init
     675 00005d30 00001560"         .long   GRNTRBOx
     676 00005d50     8002          .word   DMAWNZ,M_SCRNOBJ|M_NOVEL
     677 00005d70     0000          .word   0
     678                    
     679 00005d80           to_control_init
     680 00005d80 00001680"         .long   TOCONTROL
     681 00005da0     8002          .word   DMAWNZ,M_SCRNOBJ|M_NOVEL
     682 00005dc0     0000          .word   0
     683                    
     684 00005dd0           update_turbo_up
     685 00005dd0     098f          mmtm    sp,a8,a9
         00005de0     00c0  
     686 00005df0     b6c9          move    *a6(POF_S_SPED),a9,L
         00005e00     00e0  
     687 00005e10     0d3f          callr   set_turbo_bars
         00005e20     0331  
     688 00005e30     c02f          jruc    ut_up
     689 00005e40           update_turbo
     690 00005e40     098f          mmtm    sp,a8,a9
         00005e50     00c0  
     691 00005e60     b6c9          move    *a6(POF_S_SPED),a9,L
         00005e70     00e0  
     692 00005e80     0d3f          callr   set_turbo_bars
         00005e90     032a  
TMS340 COFF Macro Assembler Version 6.10     Wed Apr 21 11:31:24 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   16

     693 00005ea0     b4c0          move    *a6(POF_BUTTONS),a0,W
         00005eb0     0380  
     694 00005ec0     1fa0          btst    2,a0
     695 00005ed0     ca25          jrz     ut_up                   ;br= button is up
     696 00005ee0     05ae  ut_down move    @UNLIM_TURBO,a14,W
         00005ef0 00000000! 
     697 00005f10     cb07          jrnz    no_tdn
     698 00005f20     aec0          movb    *a6(POF_NUMBER),a0
         00005f30     0000  
     699 00005f40     05ae          move    @hot_player,a14,W
         00005f50 00000090- 
     700 00005f70     480e          cmp     a0,a14
     701 00005f80     cb03          jrnz    utdnhp
     702 00005f90     b6c0  no_tdn  move    *a6(POF_TURBO_AMOUNT),a0,L
         00005fa0     04c0  
     703 00005fb0     c009          jruc    ut_d1
     704 00005fc0     b6c0  utdnhp  move    *a6(POF_TURBO_AMOUNT),a0,L
         00005fd0     04c0  
     705 00005fe0     b52e          move    *a9(PS_SP_TURBO_DOWN),a14,W
         00005ff0     01a0  
     706 00006000     260e          sll     16,a14
     707 00006010     2e0e          srl     16,a14
     708 00006020     45c0          sub     a14,a0
     709 00006030     cf01          jrnn    ut_d1
     710 00006040     5600          clr     a0                      ;at bottom of turbo
     711 00006050     5621  ut_d1   clr     a1
     712 00006060     b206          move    a0,*a6(POF_TURBO_AMOUNT),L
         00006070     04c0  
     713 00006080     4c00          move    a0,a0
     714 00006090     ca01          jrz     ut_m
     715 000060a0     1021          inc     a1                      ;turbo is on
     716 000060b0     4c20  ut_m    move    a1,a0
     717 000060c0     0d3f          callr   set_turbo_state
         000060d0     02c8  
     718 000060e0     09c0          movi    35,a0                   ;delay it from going up 35 ticks
         000060f0     0023  
     719 00006100     b006          move    a0,*a6(POF_TURBO_DELAY),W
         00006110     0570  
     720 00006120     c01f          jruc    ut_8
     721 00006130     5600  ut_up   clr     a0
     722 00006140     0d3f          callr   set_turbo_state
         00006150     02c0  
     723 00006160     b4c0          move    *a6(POF_TURBO_DELAY),a0,W
         00006170     0570  
     724 00006180     ca04          jrz     ut_u1
     725 00006190     1420          dec     a0
     726 000061a0     b006          move    a0,*a6(POF_TURBO_DELAY),W
         000061b0     0570  
     727 000061c0     c015          jruc    ut_8
     728 000061d0     b6c0  ut_u1   move    *a6(POF_TURBO_AMOUNT),a0,L
         000061e0     04c0  
     729 000061f0     b52e          move    *a9(PS_SP_TURBO_UP),a14,W
         00006200     01b0  
     730 00006210     260e          sll     16,a14
     731 00006220     2e0e          srl     16,a14
TMS340 COFF Macro Assembler Version 6.10     Wed Apr 21 11:31:24 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   17

     732 00006230     b4c7          move    *a6(POF_PUP_FLAGS),a7,W
         00006240     0c50  
     733 00006250     1e87          btst    B_PUP_TURBO,a7
     734 00006260     ca01          jrz     npupt
     735 00006270     242e          sll     1,a14   ;double speed
     736 00006280     41c0  npupt   add     a14,a0
     737 00006290     0b60          cmpi    [71,0],a0               ;70 is width of bar
         000062a0 ffb8ffff  
     738 000062c0     c203          jrls    utu2
     739 000062d0     09e0          movi    [71,0],a0
         000062e0 00470000  
     740 00006300     b206  utu2    move    a0,*a6(POF_TURBO_AMOUNT),L
         00006310     04c0  
     741 00006320     b4c0  ut_8    move    *a6(POF_TURBO_AMOUNT+010h),a0,W
         00006330     04d0  
     742 00006340     b6c7          move    *a6(POF_TURBO_BAR),a7,L
         00006350     0320  
     743 00006360     0b40          cmpi    2,a0
         00006370     fffd  
     744 00006380     c306          jrhi    ut88
     745 00006390     b4e1          move    *a7(OCTRL),a1,W ;update our object based on turbo amount
         000063a0     01f0  
     746 000063b0     0b81          andni   DMAGO,a1
         000063c0 00008000  
     747 000063e0     c005          jruc    ut89
     748 000063f0     b4e1  ut88    move    *a7(OCTRL),a1,W
         00006400     01f0  
     749 00006410     0ba1          ori     DMAGO,a1
         00006420 00008000  
     750 00006440     b027  ut89    move    a1,*a7(OCTRL),W
         00006450     01f0  
     751 00006460     09c1          movi    71,a1
         00006470     0047  
     752 00006480     4401          sub     a0,a1
     753 00006490     4c20          move    a1,a0
     754 000064a0     b4e1          move    *a7(OFSET),a1,W
         000064b0     01e0  
     755 000064c0     4820          cmp     a1,a0
     756 000064d0     ca06          jrz     ut9
     757 000064e0     c702          jrgt    ut8u
     758 000064f0     1421          dec     a1
     759 00006500     c001          jruc    ut8a
     760 00006510     1021  ut8u    inc     a1
     761 00006520     b027  ut8a    move    a1,*a7(OFSET),W
         00006530     01e0  
     762 00006540     0d3f  ut9     callr   update_hot_bar
         00006550     0003  
     763 00006560     09af  utb_99  mmfm    sp,a8,a9
         00006570     0300  
     764 00006580     0960          rets
     765                    
     766 00006590           update_hot_bar
     767 00006590     05ae          move    @WAVEIRQS,a14,W
         000065a0 00000000! 
     768 000065c0     27ce          sll     30,a14
TMS340 COFF Macro Assembler Version 6.10     Wed Apr 21 11:31:24 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   18

     769 000065d0     2c4e          srl     30,a14
     770 000065e0     cb0c          jrnz    uhb1k
     771 000065f0     b4c0          move    *a6(POF_HOT_VALUE),a0,W
         00006600     0b70  
     772 00006610     b4ce          move    *a6(POF_HOT_VALUE_D),a14,W
         00006620     0bf0  
     773 00006630     480e          cmp     a0,a14
     774 00006640     ca06          jrz     uhb1k
     775 00006650     c402          jrlt    uhb2k
     776 00006660     142e          dec     a14
     777 00006670     c001          jruc    uhb3k
     778 00006680     102e  uhb2k   inc     a14
     779 00006690     b1c6  uhb3k   move    a14,*a6(POF_HOT_VALUE_D),W
         000066a0     0bf0  
     780 000066b0     b4c0  uhb1k   move    *a6(POF_HOT_VALUE),a0,W
         000066c0     0b70  
     781 000066d0     0b40          cmpi    19,a0
         000066e0     ffec  
     782 000066f0     ca0f          jrz     hb99                    ;is hot, do nothing
     783 00006700     b4c0          move    *a6(POF_HOT_VALUE_D),a0,W
         00006710     0bf0  
     784 00006720     24a0          sll     5,a0
     785 00006730     0b20          addi    miniturb_lsts,a0
         00006740 000085a0' 
     786 00006760     8600          move    *a0,a0,L
     787 00006770     b6c8          move    *a6(POF_HOT_OBJECT),a8,L
         00006780     0b50  
     788 00006790     4c01          move    a0,a1           ;save it
     789 000067a0     b504          move    *a8(OCTRL),a4,W
         000067b0     01f0  
     790 000067c0     c080          jauc    maybe_ani
         000067d0 00000000! 
     791 000067f0     0960  hb99    rets
     792                    
     793 00006800           check_on_fire
     794 00006800     5600          clr     a0
     795 00006810     0580          move    a0,@just_now_on_fire,W
         00006820 000000c0- 
     796 00006840     0580          move    a0,@FIRE_GOAL,W
         00006850 00000000! 
     797 00006870     05a0          move    @assist_by,a0,W
         00006880 00000000! 
     798 000068a0     05a1          move    @hot_player,a1,W
         000068b0 00000090- 
     799 000068d0     cb02          jrnz    cof_gg2
     800 000068e0     0d3f          callr   inc_hot_assist
         000068f0     0182  
     801 00006900     05a0  cof_gg2 move    @scored_by,a0,W
         00006910 00000000! 
     802                    ;       move    @hot_player,a1,W
     803 00006930     4c21          move    a1,a1
     804 00006940     cb1e          jrnz    cof_5           ;someone is on fire
     805 00006950     4c00          move    a0,a0
     806 00006960     ca19          jrz     cof_9           ;nobody to make hot
     807 00006970                   GBLOCK  a0,a6
TMS340 COFF Macro Assembler Version 6.10     Wed Apr 21 11:31:24 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   19

     808 000069c0     b4ce          move    *a6(POF_HOT_VALUE),a14,W
         000069d0     0b70  
     809 000069e0     0b4e          cmpi    18,a14
         000069f0     ffed  
     810 00006a00     cb10          jrnz    cof_i           ;not ready
     811 00006a10     098f          mmtm    sp,a0,a7,a8,a9
         00006a20     81c0  
     812 00006a30     0d3f          callr   become_hot
         00006a40     003b  
     813 00006a50     09c0          movi    AUD_ON_FIRE,a0
         00006a60     0029  
     814 00006a70     0d5f          calla   AUD1
         00006a80 00000000! 
     815 00006aa0     1820          movk    1,a0
     816 00006ab0     0580          move    a0,@just_now_on_fire,W
         00006ac0 000000c0- 
     817 00006ae0     09af          mmfm    sp,a0,a7,a8,a9
         00006af0     0381  
     818 00006b00     0960  cof_9   rets
     819 00006b10     c000  cof_i   jruc    inc_hot_score
         00006b20     015b  
     820 00006b30     4801  cof_5   cmp     a0,a1
     821 00006b40     ca0a          jrz     cof_59a         ;already hot
     822 00006b50     05a0          move    @team_scored,a0,W
         00006b60 00000000! 
     823 00006b80     ca05          jrz     cof_59          ;no one we know scored?
     824 00006b90     1420          dec     a0
     825 00006ba0     1421          dec     a1
     826 00006bb0     2bc1          sra     2,a1
     827 00006bc0     4801          cmp     a0,a1
     828 00006bd0     cb09          jrnz    kh1             ;other team scored, kill hot
     829 00006be0     0960  cof_59  rets
     830 00006bf0     05ae  cof_59a move    @hot_goals,a14,W
         00006c00 000000d0- 
     831 00006c20     102e          inc     a14
     832 00006c30     058e          move    a14,@hot_goals,W        ;faceoff will kill us, if 4
         00006c40 000000d0- 
     833 00006c60     0960          rets
     834 00006c70     0d3f  kh1     callr   clear_hot
         00006c80     00ae  
     835 00006c90     57ce          clr     a14
     836 00006ca0     058e          move    a14,@hot_goals,W
         00006cb0 000000d0- 
     837 00006cd0     05a0          move    @scored_by,a0,W
         00006ce0 00000000! 
     838 00006d00     ca04          jrz     kh2
     839 00006d10     0d3f          callr   inc_hot_score
         00006d20     013b  
     840 00006d30     0d3f          callr   inc_hot_score
         00006d40     0139  
     841                    ;       callr   inc_hot_score
     842 00006d50     0960  kh2     rets
     843                    
     844 00006d60           restart_hot
     845 00006d60     05a0          move    @hot_player,a0,W
TMS340 COFF Macro Assembler Version 6.10     Wed Apr 21 11:31:24 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   20

         00006d70 00000090- 
     846 00006d90     ca4c          jrz     his9
     847 00006da0                   GBLOCK  a0,a6
     848 00006df0     c015          jruc    bh1
     849                    
     850 00006e00           become_hot      ;a6 = player
     851 00006e00     57ce          clr     a14
     852 00006e10     058e          move    a14,@hot_goals,W
         00006e20 000000d0- 
     853 00006e40     0d5f          calla   on_off_fire_show
         00006e50 00000000! 
     854 00006e70     1820          movk    1,a0
     855 00006e80     0580          move    a0,@FIRE_GOAL,W
         00006e90 00000000! 
     856 00006eb0     05a0          move    @hot_player,a0,W
         00006ec0 00000090- 
     857 00006ee0     ca06          jrz     bh1                     ;nobody hot, so skip the clear
     858 00006ef0     aec8          movb    *a6(POF_NUMBER),a8
         00006f00     0000  
     859 00006f10     4900          cmp     a8,a0
     860 00006f20     ca33          jrz     his9                    ;already hot
     861 00006f30     0d3f          callr   clear_hot
         00006f40     0082  
     862 00006f50     aec8  bh1     movb    *a6(POF_NUMBER),a8
         00006f60     0000  
     863 00006f70     0588          move    a8,@hot_player,W
         00006f80 00000090- 
     864 00006fa0     0d5f          calla   set_background_tune
         00006fb0 00000000! 
     865 00006fd0     09e1          movi    hot_flash_anim,a1
         00006fe0 00008800' 
     866 00007000     0b48          cmpi    4,a8
         00007010     fffb  
     867 00007020     c303          jrhi    hi1
     868 00007030     09e1          movi    hot_flash1_anim,a1
         00007040 000089b0' 
     869 00007060     b6c8  hi1     move    *a6(POF_HOT_OBJECT),a8,L
         00007070     0b50  
     870 00007080     0d5f          calla   STRT_ANIM
         00007090 00000000! 
     871 000070b0     09e0          movi    HOTNUM1,a0
         000070c0 00000000! 
     872 000070e0     0d5f          calla   CHANGE_PAL
         000070f0 00000000! 
     873 00007110     57ce          clr     a14
     874 00007120     058e          move    a14,@PLAYER_1_BLOCK+POF_HOT_VALUE,W
         00007130 00000b70! 
     875 00007150     058e          move    a14,@PLAYER_2_BLOCK+POF_HOT_VALUE,W
         00007160 00000b70! 
     876 00007180     058e          move    a14,@PLAYER_5_BLOCK+POF_HOT_VALUE,W
         00007190 00000b70! 
     877 000071b0     058e          move    a14,@PLAYER_6_BLOCK+POF_HOT_VALUE,W
         000071c0 00000b70! 
     878 000071e0     1a6e          movk    19,a14
     879 000071f0     b1c6          move    a14,*a6(POF_HOT_VALUE),W
TMS340 COFF Macro Assembler Version 6.10     Wed Apr 21 11:31:24 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   21

         00007200     0b70  
     880 00007210     09ee          movi    [71,0],a14
         00007220 00470000  
     881 00007240     b3c6          move    a14,*a6(POF_TURBO_AMOUNT),L
         00007250     04c0  
     882 00007260     0960  his9    rets
     883                    
     884                    
     885 00007270     2441  do_bsc  sll     2,a1
     886 00007280     4c20          move    a1,a0           ;  4x minutes
     887 00007290     2421          sll     1,a1
     888 000072a0     4020          add     a1,a0           ;+ 8x minutes = 12x
     889 000072b0     2421          sll     1,a1
     890 000072c0     4020          add     a1,a0           ;+16x minutes = 28x
     891 000072d0     2421          sll     1,a1
     892 000072e0     4020          add     a1,a0           ;+32x minutes = 60x
     893 000072f0     2422          sll     1,a2
     894 00007300     4040          add     a2,a0           ;+ 2x tenseconds
     895 00007310     2442          sll     2,a2
     896 00007320     4040          add     a2,a0           ;+ 8x tenseconds = 10x
     897 00007330     4060          add     a3,a0           ;+ 1x seconds
     898 00007340     0960          rets
     899                    
     900 00007350           hotbar_periodstart
     901 00007350     0d3f          callr   set_hotcycle_rate
         00007360     0009  
     902 00007370                   CREATE  PID_HOT_CYCLE,cycle_hot
     903 000073f0     c096          jruc    restart_hot
     904                    ;       clr     a1
     905                    ;       movk    1,a0
     906                    ;       callr   htbp
     907                    ;       callr   htbp
     908                    ;       movk    5,a0
     909                    ;       callr   htbp
     910                    ;htbp   GBLOCK  a0,a6
     911                    ;       move    *a6(POF_HOT_VALUE),a14,W
     912                    ;       cmpi    10,a14
     913                    ;       jrnz    htbp1
     914                    ;       move    a1,*a6(POF_HOT_VALUE),W
     915                    ;htbp1  inc     a0
     916                    ;       rets
     917                    
     918                    
     919 00007400           set_hotcycle_rate
     920 00007400     05a0          move    @PLAYER_1_BLOCK+POF_HOT_VALUE,a0,W
         00007410 00000b70! 
     921 00007430     05ae          move    @PLAYER_2_BLOCK+POF_HOT_VALUE,a14,W
         00007440 00000b70! 
     922 00007460     0d3f          callr   shr1
         00007470     0013  
     923 00007480     05ae          move    @PLAYER_5_BLOCK+POF_HOT_VALUE,a14,W
         00007490 00000b70! 
     924 000074b0     0d3f          callr   shr1
         000074c0     000e  
     925 000074d0     05ae          move    @PLAYER_6_BLOCK+POF_HOT_VALUE,a14,W
TMS340 COFF Macro Assembler Version 6.10     Wed Apr 21 11:31:24 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   22

         000074e0 00000b70! 
     926 00007500     0d3f          callr   shr1
         00007510     0009  
     927 00007520     2480          sll     4,a0
     928 00007530     0b20          addi    shr_del_list,a0
         00007540 000075f0' 
     929 00007560     840e          move    *a0,a14,W
     930 00007570     058e          move    a14,@hot_cycle_rate,W
         00007580 000000a0- 
     931 000075a0     0960          rets
     932 000075b0     480e  shr1    cmp     a0,a14
     933 000075c0     c201          jrls    shr2
     934 000075d0     4dc0          move    a14,a0
     935 000075e0     0960  shr2    rets
     936 000075f0           shr_del_list
     937 000075f0     001e          .word   30,30,30,30,29,28,26,25,24,22,21,20
     938 000076b0     0012          .word   18,17,16,14,13,12,04,31,31,31,31,31
     939                    
     940 00007770           clear_hot
     941 00007770     05a0          move    @hot_player,a0,W
         00007780 00000090- 
     942 000077a0     ca37          jrz     chan9
     943 000077b0     57ce          clr     a14
     944 000077c0     142e          dec     a14
     945 000077d0     058e          move    a14,@FIRE_GOAL,W
         000077e0 00000000! 
     946 00007800     0d5f          calla   on_off_fire_show
         00007810 00000000! 
     947 00007830     57ce          clr     a14
     948 00007840     058e          move    a14,@hot_player,W
         00007850 00000090- 
     949 00007870     058e          move    a14,@hot_goals,W
         00007880 000000d0- 
     950 000078a0     058e          move    a14,@show_puck_on_fire,W
         000078b0 00000000! 
     951 000078d0                   GBLOCK  a0,a0
     952 00007910     b1c0          move    a14,*a0(POF_HOT_VALUE),W
         00007920     0b70  
     953 00007930     0d5f          calla   set_background_tune
         00007940 00000000! 
     954 00007960     b608          move    *a0(POF_HOT_OBJECT),a8,L
         00007970     0b50  
     955 00007980     4d00          move    a8,a0
     956 00007990     0d5f          calla   CKPULLANIM
         000079a0 00000000! 
     957 000079c0     09e0          movi    NEWBARx3,a0
         000079d0 00000000! 
     958 000079f0     0d5f          calla   CHANGE_PAL
         00007a00 00000000! 
     959 00007a20     09e1          movi    THERMO1,a1
         00007a30 00000000" 
     960 00007a50     b504          move    *a8(OCTRL),a4,W
         00007a60     01f0  
     961 00007a70     b50e          move    *a8(OXPOS),a14,W        ;we use oxpos here to determine flip
         00007a80     0150  
TMS340 COFF Macro Assembler Version 6.10     Wed Apr 21 11:31:24 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   23

     962 00007a90     0b4e          cmpi    200,a14
         00007aa0     ff37  
     963 00007ab0     c703          jrgt    chr8
     964 00007ac0     0ba4          ori     M_FLIPH,a4
         00007ad0 00000010  
     965 00007af0     c080  chr8    jauc    maybe_ani
         00007b00 00000000! 
     966 00007b20     0960  chan9   rets
     967                    
     968 00007b30           chh_0   SLEEP   10
     969 00007b70           cycle_hot
     970 00007b70     09e0          movi    NEWBARx3,a0
         00007b80 00000000! 
     971 00007ba0     0d5f          calla   FINDPAL
         00007bb0 00000000! 
     972 00007bd0     caf5          jrz     chh_0           ;not found
     973 00007be0     4c08          move    a0,a8
     974 00007bf0     4c05          move    a0,a5
     975 00007c00     0d5f          calla   INC_PALCNT
         00007c10 00000000! 
     976 00007c30     0528          ZEXT    A8
     977 00007c40     2f08          SRL     8,A8
     978 00007c50     2508          SLL     8,A8
     979 00007c60     4d09          move    a8,a9
     980 00007c70     1881          movk    4,a1                    ;# of palette entry
     981 00007c80     5428          or      a1,a8                   ; 'or' in palette address to palette entry
     982 00007c90     09e0  ccx1    movi    color_data1,a0          ;6 words of color data
         00007ca0 00007ef0' 
     983 00007cc0     0d3f          callr   gopcc
         00007cd0     0017  
     984 00007ce0     05ae          move    @hot_cycle_rate,a14,W
         00007cf0 000000a0- 
     985 00007d10     0b4e          cmpi    31,a14
         00007d20     ffe0  
     986 00007d30     ca0c          jrz     ccx2
     987 00007d40                   SLEEPR  a14
     988 00007d80     09e0          movi    color_data2,a0
         00007d90 00007f50' 
     989 00007db0     0d3f          callr   gopcc
         00007dc0     0008  
     990 00007dd0     05ae          move    @hot_cycle_rate,a14,W
         00007de0 000000a0- 
     991 00007e00           ccx2    SLEEPR  a14
     992 00007e40     c0e4          jruc    ccx1
     993 00007e50     4d01  gopcc   move    a8,a1
     994 00007e60     18c2          movk    6,a2                    ;3 colors to stuff
     995 00007e70     c080          jauc    PALSET
         00007e80 00000000! 
     996 00007ea0     4d21  gopcc2  move    a9,a1
     997 00007eb0     1862          movk    3,a2                    ;3 colors to stuff
     998 00007ec0     c080          jauc    PALSET
         00007ed0 00000000! 
     999                    
    1000 00007ef0           color_data1
    1001 00007ef0     7e60     .word   07e60h,07d00h,05c00h,07e60h,07d00h,05c00h
TMS340 COFF Macro Assembler Version 6.10     Wed Apr 21 11:31:24 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   24

    1002 00007f50           color_data2
    1003 00007f50     7ee0     .word   07ee0h,07e20h,07d20h,07ff5h,07fe0h,07ec0h
    1004                    
    1005 00007fb0           clear_all_hot
    1006 00007fb0     0d3f          callr   clear_hot
         00007fc0     ff7a  
    1007 00007fd0     57ce          clr     a14
    1008 00007fe0     058e          move    a14,@hot_player,W
         00007ff0 00000090- 
    1009 00008010     058e          move    a14,@PLAYER_1_BLOCK+POF_HOT_VALUE,W
         00008020 00000b70! 
    1010 00008040     058e          move    a14,@PLAYER_2_BLOCK+POF_HOT_VALUE,W
         00008050 00000b70! 
    1011 00008070     058e          move    a14,@PLAYER_5_BLOCK+POF_HOT_VALUE,W
         00008080 00000b70! 
    1012 000080a0     058e          move    a14,@PLAYER_6_BLOCK+POF_HOT_VALUE,W
         000080b0 00000b70! 
    1013 000080d0     0960          rets
    1014                    
    1015                    **************************************************************************
    1016                    *                                                                        *
    1017                    * inc_hot                                                                *
    1018                    *       a6 = player block                                                *
    1019                    *       a7 = player hit                                                  *
    1020                    *                                                                        *
    1021                    **************************************************************************
    1022 000080e0           inc_hot_score
    1023 000080e0     0d3f  ihs4    callr   ihs2
         000080f0     0000  
    1024 00008100     0d3f  ihs2    callr   inc_hot_assist
         00008110     0000  
    1025 00008120           inc_hot_assist
    1026 00008120     098f          mmtm    sp,a0,a7,a8,a9
         00008130     81c0  
    1027 00008140     05ae          move    @hot_player,a14,W
         00008150 00000090- 
    1028 00008170     cb3d          jrnz    ichg99
    1029 00008180                   GBLOCK  a0,a6
    1030 000081d0     0b40          cmpi    4,a0
         000081e0     fffb  
    1031 000081f0     ca35          jrz     ichg99
    1032 00008200     0b40          cmpi    8,a0
         00008210     fff7  
    1033 00008220     ca32          jrz     ichg99
    1034 00008230     c023          jruc    ichi
    1035                    
    1036 00008240           inc_hot_ifp_a7
    1037 00008240     05ae          move    @PUCK_CONTROL,a14,W
         00008250 00000000! 
    1038 00008270     aee0          movb    *a7(POF_NUMBER),a0
         00008280     0000  
    1039 00008290     480e          cmp     a0,a14
    1040 000082a0     cb02          jrnz    inc_hot_single
    1041                            ;
    1042 000082b0           inc_hot
TMS340 COFF Macro Assembler Version 6.10     Wed Apr 21 11:31:24 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   25

    1043 000082b0     0d3f          callr   inc_hot_single
         000082c0     0000  
    1044 000082d0           inc_hot_single
    1045 000082d0     098f          mmtm    sp,a0,a7,a8,a9
         000082e0     81c0  
    1046 000082f0     05ae          move    @hot_player,a14,W
         00008300 00000090- 
    1047 00008320     cb22          jrnz    ichg99
    1048 00008330     aec0          movb    *a6(POF_NUMBER),a0
         00008340     0000  
    1049 00008350     0b40          cmpi    4,a0
         00008360     fffb  
    1050 00008370     ca1d          jrz     ichg99
    1051 00008380     0b40          cmpi    8,a0
         00008390     fff7  
    1052 000083a0     ca1a          jrz     ichg99
    1053 000083b0     aeee          movb    *a7(POF_NUMBER),a14
         000083c0     0000  
    1054 000083d0     1420          dec     a0
    1055 000083e0     142e          dec     a14
    1056 000083f0     2fc0          srl     2,a0
    1057 00008400     2fce          srl     2,a14
    1058 00008410     480e          cmp     a0,a14
    1059 00008420     ca12          jrz     ichg99
    1060 00008430     b4ee          move    *a7(POF_FLAGS),a14,W
         00008440     0200  
    1061 00008450     1fae          btst    B_PF_GOALIE,a14
    1062 00008460     cb0e          jrnz    ichg99
    1063 00008470     b4ce  ichi    move    *a6(POF_FLAGS),a14,W
         00008480     0200  
    1064 00008490     1fae          btst    B_PF_GOALIE,a14
    1065 000084a0     cb0a          jrnz    ichg99
    1066                    ;       btst    B_PF_HUMAN,a14
    1067                    ;       jrz     ichg99
    1068 000084b0     b4ce          move    *a6(POF_HOT_VALUE),a14,W
         000084c0     0b70  
    1069 000084d0     102e          inc     a14
    1070 000084e0     0b4e          cmpi    18,a14
         000084f0     ffed  
    1071 00008500     c402          jrlt    ichg1
    1072 00008510     0300          jrgt    ichd
    1073                    ;       callr   become_hot      ;instead, do ready to hot show
    1074 00008520     1a4e  ichd    movk    18,a14
    1075 00008530     b1c6  ichg1   move    a14,*a6(POF_HOT_VALUE),W
         00008540     0b70  
    1076 00008550     0d3f  ichg99  callr   set_hotcycle_rate
         00008560     fee9  
    1077 00008570     09af          mmfm    sp,a0,a7,a8,a9
         00008580     0381  
    1078 00008590     0960          rets
    1079                    
    1080 000085a0           miniturb_lsts
    1081 000085a0 00000000"         .long   THERMO1,THERMO1a,THERMO2,THERMO2a,THERMO3,THERMO3a
    1082 00008660 000001b0"         .long   THERMO4,THERMO4a,THERMO5,THERMO5a,THERMO6,THERMO6a
    1083 00008720 00000360"         .long   THERMO7,THERMO7a,THERMO8,THERMO8a,THERMO9,THERMO9a
TMS340 COFF Macro Assembler Version 6.10     Wed Apr 21 11:31:24 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   26

    1084 000087e0 00000510"         .long   THERMO10
    1085                    
    1086 00008800           hot_flash_anim
    1087 00008800                   LWW     HOTFLSHr1,AFLIP|6,0
    1088 00008840                   LW      HOTFLSHr2,6
    1089 00008870                   LW      HOTFLSHr3,6
    1090 000088a0                   LW      HOTFLSHr7,6
    1091 000088d0                   LW      HOTFLSHr4,6
    1092 00008900                   LW      HOTFLSHr5,6
    1093 00008930                   LW      HOTFLSHr6,6
    1094 00008960                   LW      BIGHOT3,6
    1095 00008990 00000000          .long   0
    1096                    
    1097 000089b0           hot_flash1_anim
    1098 000089b0                   LWW     HOTFLSHl1,AFLIP|6,0
    1099 000089f0                   LW      HOTFLSHl2,6
    1100 00008a20                   LW      HOTFLSHl3,6
    1101 00008a50                   LW      HOTFLSHl7,6
    1102 00008a80                   LW      HOTFLSHl4,6
    1103 00008ab0                   LW      HOTFLSHl5,6
    1104 00008ae0                   LW      HOTFLSHl6,6
    1105 00008b10                   LW      BIGHOT3l,6
    1106 00008b40 00000000          .long   0
    1107                    
    1108 00008b60           create_mini_bar
    1109 00008b60     aec8          movb    *a6(POF_NUMBER),a8
         00008b70     0000  
    1110 00008b80     0b48          cmpi    4,a8
         00008b90     fffb  
    1111 00008ba0     ca1a          jrz     cmb_99
    1112 00008bb0     0b48          cmpi    8,a8
         00008bc0     fff7  
    1113 00008bd0     ca17          jrz     cmb_99
    1114 00008be0     4d03          move    a8,a3
    1115 00008bf0     2563          sll     11,a3
    1116 00008c00     0b23          addi    turbo_stuff_list-2048+10*128,a3
         00008c10 00002580' 
    1117 00008c30     866e          move    *a3,a14,L
    1118 00008c40     ca10          jrz     cmb_99
    1119 00008c50     09f0          movi    small_turbo_init,b0
         00008c60 00005b50' 
    1120 00008c80     0b48          cmpi    2,a8
         00008c90     fffd  
    1121 00008ca0     c303          jrhi    doido
    1122 00008cb0     09f0          movi    small_turbo2_init,b0
         00008cc0 00005ba0' 
    1123 00008ce0     0d5f  doido   calla   EASYMAKE
         00008cf0 00000000! 
    1124 00008d10     0d3f          callr   stbb1
         00008d20     00a6  
    1125 00008d30     b306          move    a8,*a6(POF_HOT_OBJECT),L
         00008d40     0b50  
    1126                    ;       clr     a14
    1127                    ;       move    a14,*a6(POF_HOT_VALUE),W
    1128 00008d50     0960  cmb_99  rets
TMS340 COFF Macro Assembler Version 6.10     Wed Apr 21 11:31:24 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   27

    1129                    
    1130 00008d60           set_turbo_state
    1131 00008d60     b6c8          move    *a6(POF_OBJECT),a8,L
         00008d70     0280  
    1132 00008d80     4c00          move    a0,a0
    1133 00008d90     ca1d          jrz     sts_f
    1134 00008da0     57ce          clr     a14
    1135 00008db0     b1c6          move    a14,*a6(POF_TURBO_OB),W
         00008dc0     05c0  
    1136 00008dd0     b4ce          move    *a6(POF_TURBO_MODE),a14,W
         00008de0     0580  
    1137 00008df0     cb33          jrnz    sts999
    1138 00008e00     b006          move    a0,*a6(POF_TURBO_MODE),W
         00008e10     0580  
    1139 00008e20     5600          clr     a0
    1140 00008e30     b006          move    a0,*a6(POF_TURBO_OB),W
         00008e40     05c0  
    1141 00008e50     05ae          move    @minutes,a14,W
         00008e60 00000000! 
    1142 00008e80     0b4e          cmpi    2,a14
         00008e90     fffd  
    1143 00008ea0     cb07          jrnz    stn2
    1144 00008eb0     b4ce          move    *a6(POF_FREEZE_BITS),a14,W
         00008ec0     0c00  
    1145 00008ed0     0bae          ori     M_PFRAZ_TURBOED,a14
         00008ee0 00000400  
    1146 00008f00     b1c6          move    a14,*a6(POF_FREEZE_BITS),W
         00008f10     0c00  
    1147 00008f20     b6c0  stn2    move    *a6(POF_TURBOPAL),a0,L
         00008f30     0260  
    1148 00008f40     c080          jauc    CHANGE_PAL
         00008f50 00000000! 
    1149 00008f70     b4c0  sts_f   move    *a6(POF_TURBO_OB),a0,W
         00008f80     05c0  
    1150 00008f90     ca0f          jrz     stsof
    1151 00008fa0     1420          dec     a0
    1152 00008fb0     b006          move    a0,*a6(POF_TURBO_OB),W
         00008fc0     05c0  
    1153 00008fd0     ca10          jrz     sts_0
    1154 00008fe0     05a0          move    @WAVEIRQS,a0,W  ;just get low bits
         00008ff0 00000000! 
    1155 00009010     27c0          sll     30,a0
    1156 00009020     2c20          srl     31,a0
    1157 00009030     ca0a          jrz     sts_0
    1158 00009040     b6c0          move    *a6(POF_TURBOPAL),a0,L
         00009050     0260  
    1159 00009060     c080          jauc    CHANGE_PAL
         00009070 00000000! 
    1160 00009090     b4ce  stsof   move    *a6(POF_TURBO_MODE),a14,W
         000090a0     0580  
    1161 000090b0     ca07          jrz     sts999
    1162 000090c0     b006          move    a0,*a6(POF_TURBO_MODE),W
         000090d0     0580  
    1163 000090e0     b6c0  sts_0   move    *a6(POF_NORMALPAL),a0,L
         000090f0     0240  
TMS340 COFF Macro Assembler Version 6.10     Wed Apr 21 11:31:24 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   28

    1164 00009100     c080          jauc    CHANGE_PAL
         00009110 00000000! 
    1165 00009130     0960  sts999  rets
    1166                    
    1167 00009140           set_turbo_bars
    1168 00009140     aec0          movb    *a6(POF_TOP_MODE),a0
         00009150     05a8  
    1169 00009160     ca0e          jrz     stb_c                   ;nothing on top, create bars
    1170 00009170     0b40          cmpi    1,a0
         00009180     fffe  
    1171 00009190     ca4e          jrz     stb_9
    1172 000091a0     0d3f          callr   deltop
         000091b0     0082  
    1173 000091c0     b6c8          move    *a6(POF_ARROW_CPU),a8,L
         000091d0     0360  
    1174 000091e0     ca06          jrz     stb_c
    1175 000091f0     09e0          movi    GFONT10CP,a0
         00009200 00000000! 
    1176 00009220     0d5f          calla   CHANGE_PAL
         00009230 00000000! 
    1177 00009250     aec3  stb_c   movb    *a6(POF_NUMBER),a3
         00009260     0000  
    1178 00009270     4c6e          move    a3,a14
    1179 00009280     2563          sll     11,a3
    1180 00009290     0b23          addi    turbo_stuff_list-2048,a3
         000092a0 00002080' 
    1181 000092c0     09f0          movi    turbo_box_init,b0
         000092d0 000059c0' 
    1182 000092f0     142e          dec     a14
    1183 00009300     2fce          srl     2,a14
    1184 00009310     ca03          jrz     stbc1
    1185 00009320     09f0          movi    turbo_box_init2,b0
         00009330 00005a10' 
    1186 00009350     0d5f  stbc1   calla   EASYMAKE
         00009360 00000000! 
    1187 00009380     0d3f          callr   stbb1
         00009390     003f  
    1188 000093a0     b306          move    a8,*a6(POF_TURBO_BOX),L
         000093b0     0300  
    1189 000093c0     09f0          movi    turbo_bar_init,b0
         000093d0 00005a60' 
    1190 000093f0     aece          movb    *a6(POF_NUMBER),a14
         00009400     0000  
    1191 00009410     142e          dec     a14
    1192 00009420     2fce          srl     2,a14
    1193 00009430     ca03          jrz     stw1
    1194 00009440     09f0          movi    turbo_bar_init2,b0
         00009450 00005ab0' 
    1195 00009470     0d5f  stw1    calla   EASYMAKE
         00009480 00000000! 
    1196 000094a0     b660          move    *a3(7*128),a0,L
         000094b0     0380  
    1197 000094c0     0d5f          calla   CHANGE_PAL
         000094d0 00000000! 
    1198 000094f0     b306          move    a8,*a6(POF_TURBO_BAR),L
TMS340 COFF Macro Assembler Version 6.10     Wed Apr 21 11:31:24 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   29

         00009500     0320  
    1199 00009510     0d3f          callr   stbb1
         00009520     0026  
    1200 00009530     09f0          movi    turbo_name_init,b0
         00009540 00005b00' 
    1201 00009560     0d5f          calla   EASYMAKE
         00009570 00000000! 
    1202 00009590     b6c0          move    *a6(POF_IMAGE_TABLE),a0,L
         000095a0     0020  
    1203 000095b0     8601          move    *a0,a1,L
    1204 000095c0     b504          move    *a8(OCTRL),a4,W
         000095d0     01f0  
    1205 000095e0     0d5f          calla   ANI
         000095f0 00000000! 
    1206 00009610     0d3f          callr   stbb1
         00009620     0016  
    1207 00009630     b306          move    a8,*a6(POF_TURBO_NAME),L
         00009640     0340  
    1208 00009650     1820          movk    1,a0
    1209 00009660     ac06          movb    a0,*a6(POF_TOP_MODE)
         00009670     05a8  
    1210 00009680     0960  stb_9   rets
    1211                    
    1212 00009690     0d3f  stbb1p  callr   stbb1
         000096a0     000e  
    1213 000096b0     aec0          movb    *a6(POF_NUMBER),a0
         000096c0     0000  
    1214 000096d0     05ae          move    @PUCK_CONTROL,a14,W
         000096e0 00000000! 
    1215 00009700     480e          cmp     a0,a14
    1216 00009710     cb06          jrnz    stbbp9
    1217 00009720     09e0          movi    LSTNME2P,a0
         00009730 00000000! 
    1218 00009750     c080          jauc    CHANGE_PAL
         00009760 00000000! 
    1219 00009780     0960  stbbp9  rets
    1220 00009790     9660  stbb1   move    *a3+,a0,L
    1221 000097a0     b008          move    a0,*a8(OID),W
         000097b0     0430  
    1222 000097c0     9660          move    *a3+,a0,L
    1223 000097d0     4c0e          move    a0,a14
    1224 000097e0     2e0e          srl     16,a14
    1225 000097f0     9660          move    *a3+,a0,L
    1226                    
    1227 00009800     098f          mmtm    sp,a14
         00009810     0002  
    1228 00009820     05ae          move    @TOP_DISP_OFF,a14,W
         00009830 00000000! 
    1229 00009850     ca03          jrz     ndof
    1230 00009860     0d00          subi    [100,0],a0
         00009870 ff9bffff  
    1231 00009890     09af  ndof    mmfm    sp,a14
         000098a0     4000  
    1232                    
    1233 000098b0     edc0          movx    a14,a0
TMS340 COFF Macro Assembler Version 6.10     Wed Apr 21 11:31:24 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   30

    1234 000098c0     0d5f          calla   set_scrnobj_to_pos_flips
         000098d0 00000000! 
    1235 000098f0     9660          move    *a3+,a0,L
    1236 00009900     b208          move    a0,*a8(OZVAL),L
         00009910     0180  
    1237 00009920     c080          jauc    INSERT_OBJ
         00009930 00000000! 
    1238                    
    1239 00009950           deldronetop
    1240 00009950     b6c8          move    *a6(POF_TURBO_NAME),a8,L
         00009960     0340  
    1241 00009970     ca05          jrz     ddt3
    1242 00009980     0d5f          calla   DELETE_OBJ
         00009990 00000000! 
    1243 000099b0     b206          move    a0,*a6(POF_TURBO_NAME),L
         000099c0     0340  
    1244 000099d0     0960  ddt3    rets
    1245                    
    1246 000099e0     5600  deltop  clr     a0
    1247 000099f0     b6c8          move    *a6(POF_TURBO_BOX),a8,L
         00009a00     0300  
    1248 00009a10     ca05          jrz     dt1
    1249 00009a20     0d5f          calla   DELETE_OBJ
         00009a30 00000000! 
    1250 00009a50     b206          move    a0,*a6(POF_TURBO_BOX),L
         00009a60     0300  
    1251 00009a70     b6c8  dt1     move    *a6(POF_TURBO_BAR),a8,L
         00009a80     0320  
    1252 00009a90     ca05          jrz     dt2
    1253 00009aa0     0d5f          calla   DELETE_OBJ
         00009ab0 00000000! 
    1254 00009ad0     b206          move    a0,*a6(POF_TURBO_BAR),L
         00009ae0     0320  
    1255 00009af0     b6c8  dt2     move    *a6(POF_TURBO_NAME),a8,L
         00009b00     0340  
    1256 00009b10     ca05          jrz     dt3
    1257 00009b20     0d5f          calla   DELETE_OBJ
         00009b30 00000000! 
    1258 00009b50     b206          move    a0,*a6(POF_TURBO_NAME),L
         00009b60     0340  
    1259 00009b70     0960  dt3     rets
    1260                    
    1261 00009b80           update_turbo_drone
    1262 00009b80     098f          mmtm    sp,a8
         00009b90     0080  
    1263 00009ba0     aec0          movb    *a6(POF_NUMBER),a0
         00009bb0     0000  
    1264 00009bc0     2480          sll     4,a0
    1265 00009bd0     0b20          addi    utd_okl,a0
         00009be0 00009eb0' 
    1266 00009c00     8400          move    *a0,a0,W
    1267 00009c10     ca18          jrz     utd_9
    1268 00009c20     aec0          movb    *a6(POF_TOP_MODE),a0
         00009c30     05a8  
    1269 00009c40     0d3f          callr   get_correct_drone_top
TMS340 COFF Macro Assembler Version 6.10     Wed Apr 21 11:31:24 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   31

         00009c50     00ab  
    1270 00009c60     aec1          movb    *a6(POF_TOP_MODE),a1    ;get this again (we lost it)
         00009c70     05a8  
    1271 00009c80     4801          cmp     a0,a1
    1272 00009c90     ca10          jrz     utd_9
    1273 00009ca0     ac06          movb    a0,*a6(POF_TOP_MODE)
         00009cb0     05a8  
    1274 00009cc0     4c21          move    a1,a1
    1275 00009cd0     cb02          jrnz    utd_td1
    1276 00009ce0     0d3f          callr   drone_box_bar
         00009cf0     0074  
    1277 00009d00     0d3f  utd_td1 callr   deldronetop
         00009d10     ffc3  
    1278 00009d20     aec0          movb    *a6(POF_TOP_MODE),a0                    ;create objects
         00009d30     05a8  
    1279 00009d40     24a0          sll     5,a0
    1280 00009d50     0b20          addi    utd_ml,a0
         00009d60 00009df0' 
    1281 00009d80     8600          move    *a0,a0,L
    1282 00009d90     0920          call    a0
    1283 00009da0     0d3f  utd_9   callr   update_hot_bar
         00009db0     fc7d  
    1284 00009dc0     09af          mmfm    sp,a8
         00009dd0     0100  
    1285 00009de0     0960          rets
    1286                    
    1287 00009df0 00009f40' utd_ml  .long   notop           ;nothing
    1288 00009e10 00009140'         .long   set_turbo_bars  ;real turbo bar (here only for attract mode)
    1289 00009e30 00009f50'         .long   pstart          ;press start
    1290 00009e50 0000a060'         .long   icoin           ;insert coin
    1291 00009e70 0000a170'         .long   tcontrl         ;to control
    1292 00009e90 0000a330'         .long   pwait           ;please wait
    1293                    
    1294 00009eb0     0000  utd_okl .word   0,1,1,0,0,1,1,0,0
    1295                    
    1296 00009f40     c0a9  notop   jruc    deltop
    1297                    
    1298 00009f50     aec3  pstart  movb    *a6(POF_NUMBER),a3
         00009f60     0000  
    1299 00009f70     2563          sll     11,a3
    1300 00009f80     0b23          addi    turbo_stuff_list-2048+3*128,a3
         00009f90 00002200' 
    1301 00009fb0     09f0          movi    press_start_init,b0
         00009fc0 00005bf0' 
    1302 00009fe0     0d5f          calla   EASYMAKE
         00009ff0 00000000! 
    1303 0000a010     0d3f          callr   stbb1p
         0000a020     ff66  
    1304 0000a030     b306          move    a8,*a6(POF_TURBO_NAME),L
         0000a040     0340  
    1305 0000a050     0960          rets
    1306                    
    1307 0000a060     aec3  icoin   movb    *a6(POF_NUMBER),a3
         0000a070     0000  
    1308 0000a080     2563          sll     11,a3
TMS340 COFF Macro Assembler Version 6.10     Wed Apr 21 11:31:24 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   32

    1309 0000a090     0b23          addi    turbo_stuff_list-2048+4*128,a3
         0000a0a0 00002280' 
    1310 0000a0c0     09f0          movi    insert_coin_init,b0
         0000a0d0 00005c40' 
    1311 0000a0f0     0d5f          calla   EASYMAKE
         0000a100 00000000! 
    1312 0000a120     0d3f          callr   stbb1p
         0000a130     ff55  
    1313 0000a140     b306          move    a8,*a6(POF_TURBO_NAME),L
         0000a150     0340  
    1314 0000a160     0960          rets
    1315                    
    1316 0000a170     05a3  tcontrl move    @GAME_STATE,a3,W
         0000a180 00000000! 
    1317 0000a1a0     aec3          movb    *a6(POF_NUMBER),a3
         0000a1b0     0000  
    1318 0000a1c0     2563          sll     11,a3
    1319 0000a1d0     0b23          addi    turbo_stuff_list-2048+6*128,a3
         0000a1e0 00002380' 
    1320 0000a200     09f0          movi    turbo_name_init,b0
         0000a210 00005b00' 
    1321 0000a230     0d5f          calla   EASYMAKE
         0000a240 00000000! 
    1322 0000a260     b6c0          move    *a6(POF_IMAGE_TABLE),a0,L
         0000a270     0020  
    1323 0000a280     8601          move    *a0,a1,L
    1324 0000a290     b504          move    *a8(OCTRL),a4,W
         0000a2a0     01f0  
    1325 0000a2b0     0d5f          calla   ANI
         0000a2c0 00000000! 
    1326 0000a2e0     0d3f          callr   stbb1p
         0000a2f0     ff39  
    1327 0000a300     b306          move    a8,*a6(POF_TURBO_NAME),L
         0000a310     0340  
    1328 0000a320     0960  tcn9    rets
    1329                    
    1330 0000a330     aec3  pwait   movb    *a6(POF_NUMBER),a3
         0000a340     0000  
    1331 0000a350     2563          sll     11,a3
    1332 0000a360     0b23          addi    turbo_stuff_list-2048+6*128,a3
         0000a370 00002380' 
    1333 0000a390     09f0          movi    please_wait_init,b0
         0000a3a0 00005c90' 
    1334 0000a3c0     0d5f          calla   EASYMAKE
         0000a3d0 00000000! 
    1335 0000a3f0     0d3f          callr   stbb1p
         0000a400     ff28  
    1336 0000a410     b306          move    a8,*a6(POF_TURBO_NAME),L
         0000a420     0340  
    1337 0000a430     0960          rets
    1338                    
    1339 0000a440           drone_box_bar
    1340 0000a440     098f          mmtm    sp,a3
         0000a450     1000  
    1341 0000a460     aec3          movb    *a6(POF_NUMBER),a3
TMS340 COFF Macro Assembler Version 6.10     Wed Apr 21 11:31:24 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   33

         0000a470     0000  
    1342 0000a480     2563          sll     11,a3
    1343 0000a490     0b23          addi    turbo_stuff_list-2048+5*128,a3
         0000a4a0 00002300' 
    1344 0000a4c0     09f0          movi    turbo_drone_box_init,b0
         0000a4d0 00005ce0' 
    1345 0000a4f0     0d5f          calla   EASYMAKE
         0000a500 00000000! 
    1346 0000a520     0d3f          callr   stbb1
         0000a530     ff25  
    1347 0000a540     09e0          movi    NAMEBARP,a0
         0000a550 00000000! 
    1348 0000a570     0d5f          calla   CHANGE_PAL
         0000a580 00000000! 
    1349 0000a5a0     b306          move    a8,*a6(POF_TURBO_BOX),L
         0000a5b0     0300  
    1350 0000a5c0     0b03          addi    3*128,a3
         0000a5d0     0180  
    1351 0000a5e0     09f0          movi    turbo_drone_bar_init,b0
         0000a5f0 00005d30' 
    1352 0000a610     0d5f          calla   EASYMAKE
         0000a620 00000000! 
    1353 0000a640     0d3f          callr   stbb1
         0000a650     ff13  
    1354 0000a660     b306          move    a8,*a6(POF_TURBO_BAR),L
         0000a670     0320  
    1355 0000a680     0be3          subi    256,a3
         0000a690     feff  
    1356 0000a6a0     9660          move    *a3+,a0,L
    1357 0000a6b0     0d5f          calla   CHANGE_PAL
         0000a6c0 00000000! 
    1358 0000a6e0     09af          mmfm    sp,a3
         0000a6f0     0008  
    1359 0000a700     0960          rets
    1360                    
    1361 0000a710           get_correct_drone_top
    1362 0000a710     05a1          move    @GAME_STATE,a1,W
         0000a720 00000000! 
    1363 0000a740     0b40          cmpi    7,a0
         0000a750     fff8  
    1364 0000a760     ca1c          jrz     gcd5
    1365 0000a770     0b40          cmpi    5,a0
         0000a780     fffa  
    1366 0000a790     ca18          jrz     gcdt9                   ;if we are on please wait, leave us there
    1367 0000a7a0                   KITN    4
    1368 0000a7e0     ca08          jrz     arcdt
    1369 0000a7f0     aece          movb    *a6(POF_NUMBER),a14
         0000a800     0000  
    1370 0000a810     0b4e          cmpi    1,a14
         0000a820     fffe  
    1371 0000a830     ca03          jrz     arcdt
    1372 0000a840     0b4e          cmpi    6,a14
         0000a850     fff9  
    1373 0000a860     cb0a          jrnz    gcd4                    ;on player != 1,6, 2 player game is just name
    1374 0000a870     05a1  arcdt   move    @WAVEIRQS,a1,W          ;get lower half of longword
TMS340 COFF Macro Assembler Version 6.10     Wed Apr 21 11:31:24 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   34

         0000a880 00000000! 
    1375 0000a8a0     05a0          move    @global_drone_cstate,a0,W
         0000a8b0 00000010- 
    1376 0000a8d0     cb01          jrnz    gcdk
    1377 0000a8e0     1840          movk    2,a0
    1378 0000a8f0     1f21  gcdk    btst    6,a1                    ;top display changes every second (64 ticks)
    1379 0000a900     cb01          jrnz    gcdt9
    1380 0000a910     1880  gcd4    movk    4,a0
    1381 0000a920     0960  gcdt9   rets
    1382 0000a930     18a0  gcd5    movk    5,a0
    1383 0000a940     0960          rets
    1384                    
    1385 0000a950           fix_players_trail
    1386 0000a950     b4ce          move    *a6(POF_FLAGS),a14,W
         0000a960     0200  
    1387 0000a970     1e2e          btst    B_PF_TRAILS,a14
    1388 0000a980     ca4f          jrz     eopil
    1389                    
    1390 0000a990     b6c8          move    *a6(POF_OBJECT),a8,L
         0000a9a0     0280  
    1391 0000a9b0     0d5f          calla   GETOBJ
         0000a9c0 00000000! 
    1392 0000a9e0     ca49          jrz     eopil
    1393 0000a9f0     bb00          move    *a8(OXVAL),*a0(OXVAL),L
         0000aa00     0140  
         0000aa10     0140  
    1394 0000aa20     bb00          move    *a8(OYVAL),*a0(OYVAL),L
         0000aa30     0160  
         0000aa40     0160  
    1395 0000aa50     b70e          move    *a8(OZVAL),a14,L
         0000aa60     0180  
    1396 0000aa70     0b0e          addi    500,a14
         0000aa80     01f4  
    1397 0000aa90     b3c0          move    a14,*a0(OZVAL),L
         0000aaa0     0180  
    1398 0000aab0     bb00          move    *a8(OANIOFF),*a0(OANIOFF),L
         0000aac0     01c0  
         0000aad0     01c0  
    1399 0000aae0     b900          move    *a8(OFSET),*a0(OFSET),W
         0000aaf0     01e0  
         0000ab00     01e0  
    1400 0000ab10     b900          move    *a8(OCTRL),*a0(OCTRL),W
         0000ab20     01f0  
         0000ab30     01f0  
    1401 0000ab40     bb00          move    *a8(OSAG),*a0(OSAG),L
         0000ab50     0200  
         0000ab60     0200  
    1402 0000ab70     bb00          move    *a8(ODAG),*a0(ODAG),L
         0000ab80     0220  
         0000ab90     0220  
    1403 0000aba0     bb00          move    *a8(OUSIZE),*a0(OUSIZE),L
         0000abb0     0240  
         0000abc0     0240  
    1404 0000abd0     bb00          move    *a8(OSIZE),*a0(OSIZE),L
         0000abe0     0260  
TMS340 COFF Macro Assembler Version 6.10     Wed Apr 21 11:31:24 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   35

         0000abf0     0260  
    1405 0000ac00     b900          move    *a8(OCONST),*a0(OCONST),W
         0000ac10     0290  
         0000ac20     0290  
    1406 0000ac30     bb00          move    *a8(OSCALE),*a0(OSCALE),L
         0000ac40     02a0  
         0000ac50     02a0  
    1407 0000ac60     bb00          move    *a8(OIMG),*a0(OIMG),L
         0000ac70     02c0  
         0000ac80     02c0  
    1408 0000ac90     b900          move    *a8(OFLAGS),*a0(OFLAGS),W
         0000aca0     0420  
         0000acb0     0420  
    1409 0000acc0     bb00          move    *a8(OUANIOFF),*a0(OUANIOFF),L
         0000acd0     0440  
         0000ace0     0440  
    1410 0000acf0     bb00          move    *a8(OSCTAB),*a0(OSCTAB),L
         0000ad00     0470  
         0000ad10     0470  
    1411 0000ad20     09ce          movi    OID_PLAYER_TRAILS,a14
         0000ad30     0701  
    1412 0000ad40     b1c0          move    a14,*a0(OID),W
         0000ad50     0430  
    1413 0000ad60     4c08          move    a0,a8
    1414 0000ad70     b6c0          move    *a6(POF_TRAIL_PAL),a0,L
         0000ad80     0a10  
    1415 0000ad90     0d5f          calla   GETFPAL
         0000ada0 00000000! 
    1416 0000adc0     b008          move    a0,*a8(OPAL),W
         0000add0     0280  
    1417 0000ade0     4d00          move    a8,a0
    1418 0000adf0     0d5f          calla   INSOBJ
         0000ae00 00000000! 
    1419 0000ae20     09e1          movi    del_aft_scr,a1
         0000ae30 0000ae90' 
    1420 0000ae50     c080          jauc    STRT_ANIM
         0000ae60 00000000! 
    1421 0000ae80     0960  eopil   rets
    1422                    
    1423 0000ae90           del_aft_scr
    1424 0000ae90                   LW      1,6
    1425 0000aec0                   LWL     1,1|AFUNC,DELETE_OBJ
    1426 0000af10 00000000          .long   0
    1427                    
    1428 0000af30           do_check
    1429 0000af30     57ce          clr     a14
    1430 0000af40     b1c6          move    a14,*a6(POF_HIT_BOARDS),W
         0000af50     0d30  
    1431 0000af60     0d3f          callr   are_we_skating_backwards
         0000af70     0016  
    1432 0000af80     c904          jrnc    dc_1
    1433 0000af90     0d3f          callr   are_we_fast_enough
         0000afa0     0018  
    1434 0000afb0     c800          jrc     do_backwards_check
         0000afc0     00aa  
TMS340 COFF Macro Assembler Version 6.10     Wed Apr 21 11:31:24 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   36

    1435 0000afd0     0d3f  dc_1    callr   are_we_chasing_puck_player
         0000afe0     001e  
    1436 0000aff0     c800          jrc     slash_check
         0000b000     00e0  
    1437                    ;       callr   do_we_anticipate_a_hit
    1438                    ;       jrnc    dc_3
    1439                    ;       callr   are_we_near_boards
    1440                    ;       jrnc    dc_3
    1441 0000b010     0d3f          callr   can_we_head_into_boards
         0000b020     006d  
    1442 0000b030     c904          jrnc    dc_3
    1443 0000b040     0d3f          callr   can_we_body_check
         0000b050     0068  
    1444 0000b060     c800          jrc     body_check
         0000b070     00e2  
    1445 0000b080     0d3f  dc_3    callr   do_we_high_stick
         0000b090     0094  
    1446 0000b0a0     c800          jrc     high_stick
         0000b0b0     00eb  
    1447 0000b0c0     c000          jruc    cross_check
         0000b0d0     00f5  
    1448                    
    1449 0000b0e0           are_we_skating_backwards
    1450 0000b0e0     aec0          movb    *a6(POF_DIRECTION),a0
         0000b0f0     0390  
    1451 0000b100     c080          jauc    are_we_backwards
         0000b110 00000000! 
    1452                    
    1453 0000b130           are_we_fast_enough
    1454 0000b130     b70e          move    *a8(ODT_VEL),a14,L
         0000b140     04d0  
    1455 0000b150     0b6e          cmpi    [6,0],a14
         0000b160 fff9ffff  
    1456 0000b180     c202          jrls    awfn
    1457 0000b190     0de0  awfy    setc
    1458 0000b1a0     0960          rets
    1459 0000b1b0     0320  awfn    clrc
    1460 0000b1c0     0960          rets
    1461                    
    1462 0000b1d0           are_we_chasing_puck_player
    1463 0000b1d0     05ae          move    @PUCK_CONTROL,a14,W
         0000b1e0 00000000! 
    1464 0000b200     ca4b          jrz     spdr
    1465 0000b210     aec0          movb    *a6(POF_NUMBER),a0
         0000b220     0000  
    1466 0000b230                   EQTEAM  a0,a14
    1467 0000b280     ca43          jrz     spdr                    ;if puck carrier is same team, no slash
    1468 0000b290     05a0          move    @PUCK_CONTROL,a0,W
         0000b2a0 00000000! 
    1469 0000b2c0                   GBLOCK  a0,a7
    1470 0000b310     aee1          movb    *a7(POF_DIRECTION),a1
         0000b320     0390  
    1471 0000b330     aec2          movb    *a6(POF_DIRECTION),a2
         0000b340     0390  
    1472 0000b350     4822          cmp     a1,a2
TMS340 COFF Macro Assembler Version 6.10     Wed Apr 21 11:31:24 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   37

    1473 0000b360     cb35          jrnz    spdr                    ;if puck carrier is not going same direction as us, no slash
    1474 0000b370     b6e9          move    *a7(POF_OBJECT),a9,L
         0000b380     0280  
    1475 0000b390     b720          move    *a9(OXVAL),a0,L
         0000b3a0     0140  
    1476 0000b3b0     0b20          addi    [0,08000h],a0
         0000b3c0 00008000  
    1477 0000b3e0     2a00          sra     16,a0
    1478 0000b3f0     b521          move    *a9(OZPOS),a1,W
         0000b400     0190  
    1479 0000b410     b702          move    *a8(OXVAL),a2,L
         0000b420     0140  
    1480 0000b430     0b22          addi    [0,08000h],a2
         0000b440 00008000  
    1481 0000b460     2a02          sra     16,a2
    1482 0000b470     b503          move    *a8(OZPOS),a3,W
         0000b480     0190  
    1483 0000b490     0d5f          calla   find_dist_quick
         0000b4a0 00000000! 
    1484 0000b4c0     0b44          cmpi    110,a4
         0000b4d0     ff91  
    1485 0000b4e0     c31d          jrhi    spdr
    1486 0000b4f0     b700          move    *a8(ODT_VEL),a0,L
         0000b500     04d0  
    1487 0000b510     0b60          cmpi    [3,0],a0
         0000b520 fffcffff  
    1488 0000b540     c217          jrls    spdr
    1489 0000b550     b720          move    *a9(ODT_VEL),a0,L
         0000b560     04d0  
    1490 0000b570     0b60          cmpi    [3,0],a0
         0000b580 fffcffff  
    1491 0000b5a0     c211          jrls    spdr
    1492 0000b5b0     b720          move    *a9(OXVAL),a0,L
         0000b5c0     0140  
    1493 0000b5d0     b721          move    *a9(OZVAL),a1,L
         0000b5e0     0180  
    1494 0000b5f0     b702          move    *a8(OXVAL),a2,L
         0000b600     0140  
    1495 0000b610     b703          move    *a8(OZVAL),a3,L
         0000b620     0180  
    1496 0000b630     0d5f          calla   find_dir_to_point_18
         0000b640 00000000! 
    1497 0000b660     aee1          movb    *a7(POF_DIRECTION),a1
         0000b670     0390  
    1498 0000b680     4801          cmp     a0,a1
    1499 0000b690     cb02          jrnz    spdr
    1500 0000b6a0     0de0          setc
    1501 0000b6b0     0960          rets
    1502 0000b6c0     0320  spdr    clrc
    1503 0000b6d0     0960          rets
    1504                    
    1505                    ;do_we_anticipate_a_hit
    1506 0000b6e0           are_we_near_boards
    1507 0000b6e0           can_we_body_check
    1508 0000b6e0     0de0          setc
TMS340 COFF Macro Assembler Version 6.10     Wed Apr 21 11:31:24 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   38

    1509 0000b6f0     0960          rets
    1510                    
    1511 0000b700           can_we_head_into_boards
    1512 0000b700     098f          mmtm    sp,a0,a1
         0000b710     c000  
    1513 0000b720     b700          move    *a8(ODT_REALXVEL),a0,L
         0000b730     04f0  
    1514 0000b740     4c0e          move    a0,a14
    1515 0000b750     2bce          sra     2,a14
    1516 0000b760     41c0          add     a14,a0
    1517 0000b770     2480          sll     4,a0
    1518 0000b780     b701          move    *a8(OZVEL),a1,L
         0000b790     00e0  
    1519 0000b7a0     4c2e          move    a1,a14
    1520 0000b7b0     2bce          sra     2,a14
    1521 0000b7c0     41c1          add     a14,a1
    1522 0000b7d0     2481          sll     4,a1            ;within next 24 ticks
    1523 0000b7e0     b70e          move    *a8(OXVAL),a14,L
         0000b7f0     0140  
    1524 0000b800     400e          add     a0,a14
    1525 0000b810     2be0          sra     1,a0
    1526 0000b820     41c0          add     a14,a0
    1527 0000b830     b70e          move    *a8(OZVAL),a14,L
         0000b840     0180  
    1528 0000b850     402e          add     a1,a14
    1529 0000b860     2be1          sra     1,a1
    1530 0000b870     41c1          add     a14,a1          ;predicted point
    1531 0000b880     0b60          cmpi    [-798,0],a0
         0000b890 031dffff  
    1532 0000b8b0     c40e          jrlt    cwhy
    1533 0000b8c0     0b60          cmpi    [798,0],a0
         0000b8d0 fce1ffff  
    1534 0000b8f0     c70a          jrgt    cwhy
    1535 0000b900     4c21          move    a1,a1
    1536 0000b910     ce08          jrn     cwhy
    1537 0000b920     0b61          cmpi    [679,0],a1
         0000b930 fd58ffff  
    1538 0000b950     c704          jrgt    cwhy
    1539 0000b960     0320          clrc
    1540 0000b970     09af          mmfm    sp,a0,a1
         0000b980     0003  
    1541 0000b990     0960          rets
    1542 0000b9a0     0de0  cwhy    setc
    1543 0000b9b0     09af          mmfm    sp,a0,a1
         0000b9c0     0003  
    1544 0000b9d0     0960          rets
    1545                    
    1546 0000b9e0           do_we_high_stick
    1547 0000b9e0     b4c0          move    *a6(POF_TURBO_AMOUNT+010h),a0
         0000b9f0     04d0  
    1548 0000ba00     0b40          cmpi    53,a0
         0000ba10     ffca  
    1549 0000ba20     c202          jrls    dwhn
    1550 0000ba30     0de0          setc
    1551 0000ba40     0960          rets
TMS340 COFF Macro Assembler Version 6.10     Wed Apr 21 11:31:24 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   39

    1552 0000ba50     0320  dwhn    clrc
    1553 0000ba60     0960          rets
    1554                    
    1555 0000ba70           do_backwards_check
    1556 0000ba70     1a20          movk    PM_HIP,a0
    1557 0000ba80     b006          move    a0,*a6(POF_MODE),W
         0000ba90     0210  
    1558 0000baa0     0d5f          calla   get_push_block          ;returns a11
         0000bab0 00000000! 
    1559 0000bad0     9560          move    *a11+,a0,W
    1560 0000bae0     0d3f          callr   can_we_hip
         0000baf0     0024  
    1561 0000bb00     c810          jrc     set_hdv
    1562 0000bb10     9560          move    *a11+,a0,W
    1563 0000bb20     0d3f          callr   can_we_hip
         0000bb30     0020  
    1564 0000bb40     c80c          jrc     set_hdv
    1565 0000bb50     9560          move    *a11+,a0,W
    1566 0000bb60     0d3f          callr   can_we_hip
         0000bb70     001c  
    1567 0000bb80     c808          jrc     set_hdv
    1568 0000bb90           set_hip_check_script
    1569 0000bb90     09ce  set_hdn movi    339,a14
         0000bba0     0153  
    1570 0000bbb0     b501          move    *a8(OZPOS),a1,W
         0000bbc0     0190  
    1571 0000bbd0     0be1          subi    679,a1
         0000bbe0     fd58  
    1572 0000bbf0     03a1          neg     a1
    1573 0000bc00     c00b          jruc    stf1
    1574 0000bc10           set_hdv GBLOCK  a0,a7
    1575 0000bc60     b6e7          move    *a7(POF_OBJECT),a7,L
         0000bc70     0280  
    1576 0000bc80     b4ee          move    *a7(OZPOS),a14,W
         0000bc90     0190  
    1577 0000bca0     b501          move    *a8(OZPOS),a1,W
         0000bcb0     0190  
    1578 0000bcc0     49c1  stf1    cmp     a14,a1
    1579 0000bcd0     c703          jrgt    shdown
    1580 0000bce0     c080  shup    jauc    set_hip_check_up_script
         0000bcf0 00000000! 
    1581 0000bd10     c080  shdown  jauc    set_hip_check_down_script
         0000bd20 00000000! 
    1582                    
    1583 0000bd40           can_we_hip
    1584 0000bd40     4c0e          move    a0,a14
    1585 0000bd50     248e          sll     4,a14
    1586 0000bd60     0b0e          addi    POF_D_1P-16,a14
         0000bd70     05f0  
    1587 0000bd80     40ce          add     a6,a14
    1588 0000bd90     85ce          move    *a14,a14,W
    1589 0000bda0     0b4e          cmpi    120,a14
         0000bdb0     ff87  
    1590 0000bdc0     c302          jrhi    cwen
    1591 0000bdd0     0de0          setc
TMS340 COFF Macro Assembler Version 6.10     Wed Apr 21 11:31:24 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   40

    1592 0000bde0     0960          rets
    1593 0000bdf0     0320  cwen    clrc
    1594 0000be00     0960          rets
    1595                    
    1596 0000be10           slash_check
    1597 0000be10     bb08          move    *a8(ODT_REALXVEL),*a8(OXVEL),L
         0000be20     04f0  
         0000be30     0100  
    1598 0000be40     19e1          movk    PM_SLASH,a1
    1599 0000be50     b026          move    a1,*a6(POF_MODE),W
         0000be60     0210  
    1600 0000be70     c080          jauc    set_player_script
         0000be80 00000000! 
    1601                    
    1602 0000bea0           body_check
    1603 0000bea0     57ce          clr     a14
    1604 0000beb0     adc6          movb    a14,*a6(POF_BDIRECTION)
         0000bec0     03d0  
    1605 0000bed0     b700          move    *a8(ODT_DIR),a0,L
         0000bee0     04b0  
    1606 0000bef0     0d5f          calla   dir_to_18
         0000bf00 00000000! 
    1607 0000bf20     ac06          movb    a0,*a6(POF_DIRECTION)
         0000bf30     0390  
    1608 0000bf40     c080          jauc    set_body_check_script
         0000bf50 00000000! 
    1609                    
    1610 0000bf70           high_stick
    1611 0000bf70     19c1          movk    PM_HIGHSTICK,a1
    1612 0000bf80     09c0          movi    400,a0
         0000bf90     0190  
    1613 0000bfa0     0d5f          calla   RANDPER
         0000bfb0 00000000! 
    1614 0000bfd0     0300          jrnc    hs2
    1615                    ;       movk    PM_SWING,a1             ;400/1024 chance of blatant swing
    1616 0000bfe0     b026  hs2     move    a1,*a6(POF_MODE),W
         0000bff0     0210  
    1617 0000c000     c080          jauc    set_player_script
         0000c010 00000000! 
    1618                    
    1619 0000c030           cross_check
    1620 0000c030     18c1          movk    PM_CROSSCHECK,a1
    1621 0000c040     b026          move    a1,*a6(POF_MODE),W
         0000c050     0210  
    1622 0000c060     c080          jauc    set_player_script
         0000c070 00000000! 
    1623                    
    1624                    
    1625                            .if     NO_HELP_WINDOWS
    1626                    ;       .if     0
    1627                    
    1628                    check_freeze_offscreen
    1629                    check_freeze_shootfar
    1630                    check_freeze_shootpass
    1631                    check_freeze_drone_shootpass
TMS340 COFF Macro Assembler Version 6.10     Wed Apr 21 11:31:24 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   41

    1632                    check_freeze_turbo
    1633                    check_freeze_smotherpass
    1634                    annoy_player_shootpass
    1635                    check_for_all_turbos
    1636                            rets
    1637                    
    1638                    quick_freeze_check
    1639                    quick_period_check
    1640                            clrc
    1641                            rets
    1642                    
    1643                            .else
    1644                    
    1645 0000c090           check_freeze_offscreen
    1646 0000c090     182a          movk    PFRZ_OFFSCREEN,a10
    1647 0000c0a0     c000          jruc    cfrz_q
         0000c0b0     008d  
    1648                    
    1649 0000c0c0           check_freeze_shootfar
    1650 0000c0c0     184a          movk    PFRZ_SHOOTFAR,a10
    1651 0000c0d0     c000          jruc    cfrz_q
         0000c0e0     008a  
    1652                    
    1653 0000c0f0           annoy_player_shootpass
    1654 0000c0f0     098f          mmtm    sp,a6,a9,a10
         0000c100     0260  
    1655 0000c110                   GBLOCK  a0,a6
    1656 0000c160     b4ce          move    *a6(POF_FLAGS),a14,W
         0000c170     0200  
    1657 0000c180     1fae          btst    B_PF_GOALIE,a14
    1658 0000c190     cb17          jrnz    apsd9
    1659 0000c1a0     1fee          btst    B_PF_HUMAN,a14
    1660 0000c1b0     ca03          jrz     apsdr
    1661 0000c1c0     0d3f          callr   check_freeze_shootpass
         0000c1d0     0016  
    1662 0000c1e0     c012          jruc    apsd9
    1663 0000c1f0     0b40  apsdr   cmpi    4,a0
         0000c200     fffb  
    1664 0000c210     ca08          jrz     apspl
    1665 0000c220     0b40          cmpi    8,a0
         0000c230     fff7  
    1666 0000c240     ca05          jrz     apspl
    1667 0000c250     1420          dec     a0
    1668 0000c260     0bc0          xori    1,a0
         0000c270 00000001  
    1669 0000c290     1020          inc     a0
    1670 0000c2a0           apspl   GBLOCK  a0,a6
    1671 0000c2f0     0d3f          callr   check_freeze_drone_shootpass
         0000c300     0005  
    1672 0000c310     09af  apsd9   mmfm    sp,a6,a9,a10
         0000c320     0640  
    1673 0000c330     0960          rets
    1674                    
    1675 0000c340           check_freeze_shootpass
    1676 0000c340     186a          movk    PFRZ_SHOOTPASS,a10
TMS340 COFF Macro Assembler Version 6.10     Wed Apr 21 11:31:24 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   42

    1677 0000c350     c063          jruc    cfrz_q
    1678 0000c360           check_freeze_drone_shootpass
    1679 0000c360     188a          movk    PFRZ_DRONE_SHOOTPASS,a10
    1680 0000c370     c061          jruc    cfrz_q
    1681                    
    1682 0000c380           check_for_all_turbos
    1683 0000c380     098f          mmtm    sp,a0,a1,a7
         0000c390     c100  
    1684 0000c3a0                   CREATE  PID_FROZEN_TURBOCHECK,cktrb
    1685 0000c420     09af          mmfm    sp,a0,a1,a7
         0000c430     0083  
    1686 0000c440     0960          rets
    1687 0000c450     1820  cktrb   movk    1,a0
    1688 0000c460     0d3f          callr   ckrrt
         0000c470     0018  
    1689 0000c480                   SLEEP   1
    1690 0000c4c0     1840          movk    2,a0
    1691 0000c4d0     0d3f          callr   ckrrt
         0000c4e0     0011  
    1692 0000c4f0                   SLEEP   1
    1693 0000c530     18a0          movk    5,a0
    1694 0000c540     0d3f          callr   ckrrt
         0000c550     000a  
    1695 0000c560                   SLEEP   1
    1696 0000c5a0     18c0          movk    6,a0
    1697 0000c5b0     0d3f          callr   ckrrt
         0000c5c0     0003  
    1698 0000c5d0     c080          jauc    SUCIDE
         0000c5e0 00000000! 
    1699 0000c600           ckrrt   GBLOCK  a0,a6
    1700 0000c650     b4ce          move    *a6(POF_FREEZE_BITS),a14,W
         0000c660     0c00  
    1701 0000c670     1eae          btst    PFRAZ_TURBOED,a14
    1702 0000c680     cb02          jrnz    ckrrt9
    1703 0000c690     0d3f          callr   check_freeze_turbo
         0000c6a0     0001  
    1704 0000c6b0     0960  ckrrt9  rets
    1705                    
    1706 0000c6c0           check_freeze_turbo
    1707 0000c6c0     18aa          movk    PFRZ_TURBO,a10
    1708 0000c6d0     c02b          jruc    cfrz_q
    1709                    
    1710 0000c6e0           check_freeze_smotherpass
    1711 0000c6e0     0d3f          callr   quick_period_check
         0000c6f0     0044  
    1712 0000c700     c937          jrnc    cfrz9
    1713 0000c710     aec9          movb    *a6(POF_NUMBER),a9
         0000c720     0000  
    1714 0000c730     4d22          move    a9,a2
    1715 0000c740     1422          dec     a2
    1716 0000c750     2bc2          sra     2,a2
    1717 0000c760     2442          sll     2,a2
    1718 0000c770     1022          inc     a2
    1719 0000c780                   GBLOCK  a2,a14
    1720 0000c7d0     b5ce          move    *a14(POF_FLAGS),a14,W
TMS340 COFF Macro Assembler Version 6.10     Wed Apr 21 11:31:24 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   43

         0000c7e0     0200  
    1721 0000c7f0     1fee          btst    B_PF_HUMAN,a14
    1722 0000c800     cb0a          jrnz    qfsmp1
    1723 0000c810     1022          inc     a2
    1724 0000c820                   GBLOCK  a2,a14
    1725 0000c870     b5ce          move    *a14(POF_FLAGS),a14,W
         0000c880     0200  
    1726 0000c890     1fee          btst    B_PF_HUMAN,a14
    1727 0000c8a0     ca1d          jrz     cfrz9
    1728 0000c8b0           qfsmp1  ;
    1729 0000c8b0     18ca          movk    PFRZ_SMOTHERPASS,a10
    1730 0000c8c0     b4ce          move    *a6(POF_FREEZE_BITS),a14,W
         0000c8d0     0c00  
    1731 0000c8e0     4b4e          btst    a10,a14
    1732 0000c8f0     cb08          jrnz    acfrz9
    1733 0000c900     1822          movk    1,a2
    1734 0000c910     6342          sll     a10,a2
    1735 0000c920     544e          or      a2,a14
    1736 0000c930     b1c6          move    a14,*a6(POF_FREEZE_BITS),W
         0000c940     0c00  
    1737 0000c950     aec9          movb    *a6(POF_NUMBER),a9
         0000c960     0000  
    1738 0000c970     c026          jruc    freeze_message_nt
    1739 0000c980     0960  acfrz9  rets
    1740                    
    1741 0000c990     0d3f  cfrz_q  callr   quick_freeze_check
         0000c9a0     000e  
    1742 0000c9b0     c90c          jrnc    cfrz9
    1743 0000c9c0     b4ce  cfrz    move    *a6(POF_FREEZE_BITS),a14,W
         0000c9d0     0c00  
    1744 0000c9e0     4b4e          btst    a10,a14
    1745 0000c9f0     cb08          jrnz    cfrz9
    1746 0000ca00     1822          movk    1,a2
    1747 0000ca10     6342          sll     a10,a2
    1748 0000ca20     544e          or      a2,a14
    1749 0000ca30     b1c6          move    a14,*a6(POF_FREEZE_BITS),W
         0000ca40     0c00  
    1750 0000ca50     aec9          movb    *a6(POF_NUMBER),a9
         0000ca60     0000  
    1751 0000ca70     c024          jruc    freeze_message
    1752 0000ca80     0960  cfrz9   rets
    1753                    
    1754 0000ca90           quick_freeze_check
    1755 0000ca90     b4ce          move    *a6(POF_CMOS),a14,W
         0000caa0     0060  
    1756 0000cab0     cf10          jrnn    qfc_n
    1757 0000cac0     b4ce          move    *a6(POF_FLAGS),a14,W
         0000cad0     0200  
    1758 0000cae0     1fee          btst    B_PF_HUMAN,a14
    1759 0000caf0     ca0c          jrz     qfc_n
    1760 0000cb00     05ae          move    @timer_ok,a14,W
         0000cb10 00000000! 
    1761 0000cb30     ca08          jrz     qfc_n
    1762 0000cb40           quick_period_check
    1763 0000cb40     05ae          move    @period,a14,W
TMS340 COFF Macro Assembler Version 6.10     Wed Apr 21 11:31:24 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   44

         0000cb50 00000000! 
    1764 0000cb70     0b4e          cmpi    1,a14
         0000cb80     fffe  
    1765 0000cb90     cb02          jrnz    qfc_n
    1766 0000cba0     0de0  qfc_y   setc
    1767 0000cbb0     0960          rets
    1768 0000cbc0     0320  qfc_n   clrc
    1769 0000cbd0     0960          rets
    1770                    
    1771                            .endif
    1772                    
    1773                    **************************************************************************
    1774                    *                                                                        *
    1775                    * freeze_message                                                         *
    1776                    *       input   a9  = player                                             *
    1777                    *               a10 = freeze code                                        *
    1778                    *                                                                        *
    1779                    **************************************************************************
    1780 0000cbe0           freeze_message_nt               ;don't turn on or off small timer
    1781 0000cbe0     098f          mmtm    sp,a0,a1,a7
         0000cbf0     c100  
    1782 0000cc00                   CREATE  PID_FROZEN_MESSAGE,frms_nt
    1783 0000cc90     09af          mmfm    sp,a0,a1,a7
         0000cca0     0083  
    1784 0000ccb0     0960          rets
    1785 0000ccc0           freeze_message
    1786 0000ccc0     098f          mmtm    sp,a0,a1,a7
         0000ccd0     c100  
    1787 0000cce0                   CREATE  PID_FROZEN_MESSAGE,frms
    1788 0000cd70     09af          mmfm    sp,a0,a1,a7
         0000cd80     0083  
    1789 0000cd90     0960          rets
    1790                    
    1791 0000cda0           frms_nt JSRP    frms_sb
    1792 0000ce10     c080          jauc    SUCIDE
         0000ce20 00000000! 
    1793                    
    1794 0000ce40     5600  frms    clr     a0
    1795 0000ce50     0580          move    a0,@small_timer_on
         0000ce60 00000000! 
    1796 0000ce80                   JSRP    frms_sb
    1797 0000cef0     05ae          move    @timer_on,a14,W
         0000cf00 00000000! 
    1798 0000cf20     cb04          jrnz    nolto
    1799 0000cf30     1820          movk    1,a0
    1800 0000cf40     0580          move    a0,@small_timer_on,W
         0000cf50 00000000! 
    1801 0000cf70     c080  nolto   jauc    SUCIDE
         0000cf80 00000000! 
    1802                    
    1803 0000cfa0     1820  frms_sb movk    1,a0
    1804 0000cfb0     0580          move    a0,@game_frozen,W
         0000cfc0 00000000! 
    1805 0000cfe0     05a0          move    @PUCK_CONTROL,a0,W
         0000cff0 00000000! 
TMS340 COFF Macro Assembler Version 6.10     Wed Apr 21 11:31:24 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   45

    1806 0000d010     ca14          jrz     fruu1
    1807 0000d020                   GBLOCK  a0,a6
    1808 0000d070     b4ce          move    *a6(POF_FLAGS),a14,W
         0000d080     0200  
    1809 0000d090     1fee          btst    B_PF_HUMAN,a14
    1810 0000d0a0     ca0b          jrz     fruu1           ;puck carrier is drone
    1811 0000d0b0     b6c8          move    *a6(POF_ARROW),a8,L
         0000d0c0     02e0  
    1812 0000d0d0     ca08          jrz     fruu1
    1813 0000d0e0     09e4          movi    DMAWNZ,a4
         0000d0f0 00008002  
    1814 0000d110     b701          move    *a8(OIMG),a1,L
         0000d120     02c0  
    1815 0000d130     0d5f          calla   maybe_ani
         0000d140 00000000! 
    1816 0000d160           fruu1   SLEEP   1
    1817 0000d1a0     09ce          MOVI    99,A14
         0000d1b0     0063  
    1818 0000d1c0     058e          MOVE    A14,@MAX_PALXFERS,W
         0000d1d0 00000000! 
    1819 0000d1f0     09e0          MOVI    FROZE_HELP_PAL_LIST,A0
         0000d200 0000d5f0' 
    1820 0000d220     0d5f          calla   FROZE_FADE_FULL2HALF
         0000d230 00000000! 
    1821 0000d250                   JSRP    FADE_WAIT
    1822 0000d2c0     0d5f          CALLA   RESET_MAX_PALXFERS
         0000d2d0 00000000! 
    1823 0000d2f0     24ca          sll     6,a10
    1824 0000d300     0b2a          addi    freeze_type_list-64,a10
         0000d310 0000df30' 
    1825 0000d330     974e          move    *a10+,a14,L
    1826 0000d340     092e          call    a14             ;get location (in 2,3,4)
    1827 0000d350     874e          move    *a10,a14,L
    1828 0000d360     092e          call    a14             ;create objects 
    1829 0000d370                   JSRP    watch_button_delay_pa9
    1830 0000d3e0     09c0          movi    OID_FROZEN_MESSAGE,a0
         0000d3f0     0503  
    1831 0000d400     0d5f          calla   KILOBJ_ALL
         0000d410 00000000! 
    1832 0000d430     09ce          MOVI    99,A14
         0000d440     0063  
    1833 0000d450     058e          MOVE    A14,@MAX_PALXFERS,W
         0000d460 00000000! 
    1834 0000d480     09e0          MOVI    FROZE_HELP_PAL_LIST,A0
         0000d490 0000d5f0' 
    1835 0000d4b0     0d5f          calla   FROZE_FADE_HALF2FULL
         0000d4c0 00000000! 
    1836 0000d4e0                   JSRP    FADE_WAIT
    1837 0000d550     0d5f          CALLA   RESET_MAX_PALXFERS
         0000d560 00000000! 
    1838 0000d580     5600          clr     a0
    1839 0000d590     0580          move    a0,@game_frozen,W
         0000d5a0 00000000! 
    1840 0000d5c0                   RETP
    1841                    
TMS340 COFF Macro Assembler Version 6.10     Wed Apr 21 11:31:24 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   46

    1842 0000d5f0           FROZE_HELP_PAL_LIST
    1843 0000d5f0 00000000!         .long   FREEBOXP
    1844 0000d610 00000000!         .LONG   arrp_pal,arrb_pal,arry_pal,arrg_pal
    1845 0000d690 00000000          .long   0
    1846                    
    1847 0000d6b0           watch_button_delay_pa9
    1848 0000d6b0     0b49          cmpi    4,a9
         0000d6c0     fffb  
    1849 0000d6d0     ca1d          jrz     wbd_tm1
    1850 0000d6e0     0b49          cmpi    8,a9
         0000d6f0     fff7  
    1851 0000d700     ca32          jrz     wbd_tm2
    1852 0000d710     0d5f          calla   read_just_buttons
         0000d720 00000000! 
    1853 0000d740     4c4a          move    a2,a10
    1854 0000d750     03ea          not     a10
    1855 0000d760                   SLEEP   20
    1856 0000d7a0     09cb          movi    70,a11
         0000d7b0     0046  
    1857 0000d7c0     0d5f  wbdp1   calla   read_just_buttons
         0000d7d0 00000000! 
    1858 0000d7f0     504a          and     a2,a10
    1859 0000d800     cb07          jrnz    wbd_8
    1860 0000d810     4c4a          move    a2,a10
    1861 0000d820     03ea          not     a10
    1862 0000d830                   SLEEP   1
    1863 0000d870     3d8b          dsjs    a11,wbdp1
    1864 0000d880           wbd_8   RETP
    1865                    
    1866 0000d8b0     0d3f  wbd_tm1 callr   read_t1_buttons
         0000d8c0     002e  
    1867 0000d8d0     4c4a          move    a2,a10
    1868 0000d8e0     03ea          not     a10
    1869 0000d8f0                   SLEEP   20
    1870 0000d930     09cb          movi    150,a11
         0000d940     0096  
    1871 0000d950     0d3f  wbd1p1  callr   read_t1_buttons
         0000d960     0024  
    1872 0000d970     504a          and     a2,a10
    1873 0000d980     cb07          jrnz    wbd1_8
    1874 0000d990     4c4a          move    a2,a10
    1875 0000d9a0     03ea          not     a10
    1876 0000d9b0                   SLEEP   1
    1877 0000d9f0     3d6b          dsjs    a11,wbd1p1
    1878 0000da00           wbd1_8  RETP
    1879                    
    1880 0000da30     0d3f  wbd_tm2 callr   read_t2_buttons
         0000da40     0020  
    1881 0000da50     4c4a          move    a2,a10
    1882 0000da60     03ea          not     a10
    1883 0000da70                   SLEEP   20
    1884 0000dab0     09cb          movi    150,a11
         0000dac0     0096  
    1885 0000dad0     0d3f  wbd2p1  callr   read_t2_buttons
         0000dae0     0016  
TMS340 COFF Macro Assembler Version 6.10     Wed Apr 21 11:31:24 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   47

    1886 0000daf0     504a          and     a2,a10
    1887 0000db00     cb07          jrnz    wbd2_8
    1888 0000db10     4c4a          move    a2,a10
    1889 0000db20     03ea          not     a10
    1890 0000db30                   SLEEP   1
    1891 0000db70     3d6b          dsjs    a11,wbd2p1
    1892 0000db80           wbd2_8  RETP
    1893                    
    1894 0000dbb0           read_t1_buttons
    1895 0000dbb0     1829          movk    1,a9
    1896 0000dbc0     0d3f          callr   read_if_just_buttons
         0000dbd0     0011  
    1897 0000dbe0     2462          sll     3,a2
    1898 0000dbf0     4c43          move    a2,a3
    1899 0000dc00     1849          movk    2,a9
    1900 0000dc10     0d3f          callr   read_if_just_buttons
         0000dc20     000c  
    1901 0000dc30     5462          or      a3,a2
    1902 0000dc40     0960          rets
    1903                    
    1904 0000dc50           read_t2_buttons
    1905 0000dc50     18a9          movk    5,a9
    1906 0000dc60     0d3f          callr   read_if_just_buttons
         0000dc70     0007  
    1907 0000dc80     2462          sll     3,a2
    1908 0000dc90     4c43          move    a2,a3
    1909 0000dca0     18c9          movk    6,a9
    1910 0000dcb0     0d3f          callr   read_if_just_buttons
         0000dcc0     0002  
    1911 0000dcd0     5462          or      a3,a2
    1912 0000dce0     0960          rets
    1913                    
    1914 0000dcf0           read_if_just_buttons
    1915 0000dcf0     5642          clr     a2
    1916 0000dd00                   GBLOCK  a9,a14
    1917 0000dd50     b5ce          move    *a14(POF_FLAGS),a14,W
         0000dd60     0200  
    1918 0000dd70     1fee          btst    B_PF_HUMAN,a14
    1919 0000dd80     ca03          jrz     rijb9
    1920 0000dd90     0d5f          calla   read_just_buttons
         0000dda0 00000000! 
    1921 0000ddc0     0960  rijb9   rets
    1922                    
    1923 0000ddd0           frblink_player
    1924 0000ddd0                   GBLOCK  a9,a11
    1925 0000de20     b768          move    *a11(POF_OBJECT),a8,L
         0000de30     0280  
    1926 0000de40     b760  frbl1   move    *a11(POF_TRAIL_PAL),a0,L
         0000de50     0a10  
    1927 0000de60     0d5f          calla   CHANGE_PAL
         0000de70 00000000! 
    1928 0000de90                   SLEEP   4
    1929 0000ded0     b760          move    *a11(POF_NORMALPAL),a0,L
         0000dee0     0240  
    1930 0000def0     0d5f          calla   CHANGE_PAL
TMS340 COFF Macro Assembler Version 6.10     Wed Apr 21 11:31:24 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   48

         0000df00 00000000! 
    1931 0000df20                   SLEEP   4
    1932 0000df60     c0ed          jruc    frbl1
    1933                    
    1934 0000df70           freeze_type_list
    1935 0000df70 0000e0f0'         .long   get_edge_to_player,create_offscreen     ;player is off screen
    1936 0000dfb0 0000e320'         .long   get_above_player,create_shootfar        ;player is shooting from far away
    1937 0000dff0 0000e320'         .long   get_above_player,create_shootpass       ;player is not shooting or passing
    1938 0000e030 0000e320'         .long   get_above_player,create_drone_shootpass ;player is not telling his drone to do anything
    1939 0000e070 0000e320'         .long   get_above_player,create_turbo           ;player is not using turbo
    1940 0000e0b0 0000e320'         .long   get_above_player,create_smotherpass     ;player is letting goalie smother puck
    1941                    
    1942 0000e0f0           get_edge_to_player
    1943 0000e0f0                   GBLOCK  a9,a8
    1944 0000e140     b708          move    *a8(POF_OBJECT),a8,L
         0000e150     0280  
    1945 0000e160     b705          move    *a8(OXVAL),a5,L
         0000e170     0140  
    1946 0000e180     b703          move    *a8(OZVAL),a3,L
         0000e190     0180  
    1947 0000e1a0     09e4          movi    [-40,0],a4
         0000e1b0 ffd80000  
    1948 0000e1d0     0b63          cmpi    [339,0],a3
         0000e1e0 feacffff  
    1949 0000e200     c303          jrhi    gety1
    1950 0000e210     09e4          movi    [-85,0],a4
         0000e220 ffab0000  
    1951 0000e240     0d03  gety1   subi    [2350,0],a3             ;put us in front
         0000e250 f6d1ffff  
    1952 0000e270     09e2          movi    [140,0],a2
         0000e280 008c0000  
    1953 0000e2a0     07ae          move    @WORLDX,a14,L
         0000e2b0 00000000! 
    1954 0000e2d0     48ae          cmp     a5,a14
    1955 0000e2e0     c401          jrlt    getp1
    1956 0000e2f0     03a2          neg     a2
    1957 0000e300     41c2  getp1   add     a14,a2
    1958 0000e310     0960          rets
    1959                    
    1960 0000e320           get_above_player
    1961 0000e320                   GBLOCK  a9,a8
    1962 0000e370     b708          move    *a8(POF_OBJECT),a8,L
         0000e380     0280  
    1963 0000e390     b702          move    *a8(OXVAL),a2,L
         0000e3a0     0140  
    1964 0000e3b0     07ae          move    @WORLDX,a14,L
         0000e3c0 00000000! 
    1965 0000e3e0     444e          sub     a2,a14
    1966 0000e3f0     038e          abs     a14
    1967 0000e400     0b6e          cmpi    [150,0],a14
         0000e410 ff69ffff  
    1968 0000e430     c7cb          jrgt    get_edge_to_player
    1969 0000e440     b703          move    *a8(OZVAL),a3,L
         0000e450     0180  
    1970 0000e460     4c6e          move    a3,a14
TMS340 COFF Macro Assembler Version 6.10     Wed Apr 21 11:31:24 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   49

    1971 0000e470     0d03          subi    [2350,0],a3             ;put us in front
         0000e480 f6d1ffff  
    1972 0000e4a0     b504          move    *a8(OSIZEY),a4,W
         0000e4b0     0270  
    1973 0000e4c0     0b04          addi    40,a4           ;9
         0000e4d0     0028  
    1974 0000e4e0     2604          sll     16,a4
    1975 0000e4f0     03a4          neg     a4
    1976                    ;       cmpi    [290,0],a14
    1977 0000e500     0b6e          cmpi    [300,0],a14     ;try to keep us off bottom of screen
         0000e510 fed3ffff  
    1978 0000e530     c403          jrlt    gap_1
    1979 0000e540     09e4          movi    [4,0],a4
         0000e550 00040000  
    1980 0000e570     0960  gap_1   rets
    1981                    
    1982 0000e580           create_offscreen
    1983 0000e580     09f0          movi    mh_offscreen_init,b0
         0000e590 0000f830' 
    1984 0000e5b0     09e5          movi    mh_helpbox3_init,a5
         0000e5c0 0000f530' 
    1985 0000e5e0     c01b          jruc    regpbox
    1986                    
    1987 0000e5f0           create_shootfar
    1988 0000e5f0     09f0          movi    mh_shootfar_init,b0
         0000e600 0000f9b0' 
    1989 0000e620     09e5          movi    mh_helpbox3_init,a5
         0000e630 0000f530' 
    1990 0000e650     c014          jruc    regpbox
    1991                    
    1992 0000e660           create_shootpass
    1993 0000e660     09f0          movi    mh_shootpass_init,b0
         0000e670 0000fb30' 
    1994 0000e690     09e5          movi    mh_helpbox4_init,a5
         0000e6a0 0000f6b0' 
    1995 0000e6c0     c00d          jruc    regpbox
    1996                    
    1997 0000e6d0           create_drone_shootpass
    1998 0000e6d0     09f0          movi    mh_drone_shootpass_init,b0
         0000e6e0 0000fcb0' 
    1999 0000e700     09e5          movi    mh_helpbox2_init,a5
         0000e710 0000f3b0' 
    2000 0000e730     c006          jruc    regpbox
    2001                    
    2002 0000e740           create_turbo
    2003 0000e740     09f0          movi    mh_turbo_init,b0
         0000e750 0000fe30' 
    2004 0000e770     09e5          movi    mh_helpbox1_init,a5
         0000e780 0000f230' 
    2005 0000e7a0           regpbox
    2006 0000e7a0     0589          MOVE    A9,@HELP_PNUM,W                 ;PLAYER NUMBER FOR C_FUNCS
         0000e7b0 000000b0- 
    2007 0000e7d0     0d3f          callr   rgtr
         0000e7e0     0035  
    2008 0000e7f0     0b49          cmpi    4,a9
TMS340 COFF Macro Assembler Version 6.10     Wed Apr 21 11:31:24 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   50

         0000e800     fffb  
    2009 0000e810     ca30          jrz     rskn
    2010 0000e820     0b49          cmpi    8,a9
         0000e830     fff7  
    2011 0000e840     ca2d          jrz     rskn
    2012 0000e850     09f0          movi    dum_num_init,b0
         0000e860 0000ffb0' 
    2013 0000e880     0d5f          calla   EASYMAKE
         0000e890 00000000! 
    2014 0000e8b0     09e0          movi    GFONT10CP,a0
         0000e8c0 00000000! 
    2015 0000e8e0     0d5f          calla   CHANGE_PAL
         0000e8f0 00000000! 
    2016                    
    2017 0000e910     4d20          move    a9,A0
    2018 0000e920     24a0          sll     5,A0
    2019                    
    2020 0000e930     09e1          MOVI    num_tab-32,A1
         0000e940 0000ed90' 
    2021 0000e960                   KITN    4
    2022 0000e9a0     ca03          JREQ    R_GET_NUM                       ;BR=4 PLAYER KIT
    2023 0000e9b0     09e1          MOVI    num_2P_tab-32,A1                ;2 PLAYER KIT
         0000e9c0 0000ee90' 
    2024 0000e9e0           R_GET_NUM
    2025 0000e9e0     4001          ADD     A0,A1
    2026                    
    2027 0000e9f0     8621          move    *a1,a1,L
    2028 0000ea00     098f          mmtm    sp,a4
         0000ea10     0800  
    2029 0000ea20     b504          move    *a8(OCTRL),a4,W
         0000ea30     01f0  
    2030 0000ea40     0d5f          calla   ANI
         0000ea50 00000000! 
    2031 0000ea70     09af          mmfm    sp,a4
         0000ea80     0010  
    2032                    
    2033 0000ea90     0b20          ADDI    HELP_TEXT_PAL_TABLE-32,A0
         0000eaa0 0000ef90' 
    2034 0000eac0     8600          MOVE    *A0,A0,L
    2035 0000ead0     0d5f          CALLA   CHANGE_PAL
         0000eae0 00000000! 
    2036                    
    2037                    ;       addi    [31,0],a2
    2038                    ;       addi    [7,0],a4
    2039 0000eb00     0d3f          callr   rgtpl
         0000eb10     0009  
    2040                    ;       subi    [31,0],a2
    2041                    ;       subi    [7,0],a4
    2042 0000eb20     4ea0  rskn    move    a5,b0
    2043 0000eb30     1023          inc     a3
    2044 0000eb40           rgtr
    2045                    ;       calla   EASYMAKE
    2046                    
    2047 0000eb40     098f          MMTM    SP,A2,A3,A4
         0000eb50     3800  
TMS340 COFF Macro Assembler Version 6.10     Wed Apr 21 11:31:24 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   51

    2048 0000eb60     0d5f          CALLA   MULTIMAKE
         0000eb70 00000000! 
    2049 0000eb90     09af          MMFM    SP,A2,A3,A4
         0000eba0     001c  
    2050                    
    2051 0000ebb0           rgtpl
    2052                    ;       move    a2,*a8(OXVAL),L
    2053                    ;       move    a3,*a8(OZVAL),L
    2054                    ;       move    a4,*a8(OYVAL),L
    2055                    
    2056 0000ebb0     4d00          MOVE    A8,A0
    2057 0000ebc0           RGTPL_LUPE
    2058 0000ebc0     b240          MOVE    A2,*A0(OXVAL),L
         0000ebd0     0140  
    2059 0000ebe0     ae0e          MOVB    *A0(OZOFF),A14
         0000ebf0     03c8  
    2060 0000ec00     406e          ADD     A3,A14
    2061 0000ec10     b3c0          MOVE    A14,*A0(OZVAL),L
         0000ec20     0180  
    2062 0000ec30     b280          MOVE    A4,*A0(OYVAL),L
         0000ec40     0160  
    2063 0000ec50     b600          MOVE    *A0(OPARTS),A0,L
         0000ec60     00c0  
    2064 0000ec70     cbf4          JRNZ    RGTPL_LUPE                      ;BR=ANOTHER PART
    2065                    
    2066 0000ec80     c080          jauc    INSERT_OBJ
         0000ec90 00000000! 
    2067                    
    2068                    **************************************************************************
    2069                    *                                                                        *
    2070                    * C_CHANGE_PPAL - CHANGE TO PLAYER PALETTE CFUNC                         *
    2071                    *                                                                        *
    2072                    * REQUIRES                                                               *
    2073                    *       .LONG   PALETTE TABLE                                            *
    2074                    *                                                                        *
    2075                    **************************************************************************
    2076                    
    2077 0000ecb0           C_CHANGE_PPAL
    2078 0000ecb0                   PUSH    A8
    2079 0000ecc0     4c08          MOVE    A0,A8
    2080                    
    2081 0000ecd0     961e          MOVE    *B0+,B14,L                      ;GET TABLE
    2082 0000ece0     4fde          MOVE    B14,A14
    2083                    
    2084 0000ecf0     05a0          MOVE    @HELP_PNUM,A0,W
         0000ed00 000000b0- 
    2085 0000ed20     1420          DEC     A0
    2086 0000ed30     24a0          SLL     5,A0                            ;TABLE OFFSET
    2087 0000ed40     41c0          ADD     A14,A0
    2088 0000ed50     8600          MOVE    *A0,A0,L                        ;GET PALETTE
    2089                    
    2090 0000ed60     0d5f          CALLA   CHANGE_PAL
         0000ed70 00000000! 
    2091                    
    2092 0000ed90                   PULLQ   A8
TMS340 COFF Macro Assembler Version 6.10     Wed Apr 21 11:31:24 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   52

    2093 0000eda0     0960          RETS
    2094                            
    2095 0000edb0 000025b0" num_tab .long   HNUM1
    2096 0000edd0 00002640"         .long   HNUM2
    2097 0000edf0 00002640"         .long   HNUM2
    2098 0000ee10 00002640"         .long   HNUM2
    2099 0000ee30 000026d0"         .long   HNUM3
    2100 0000ee50 00002760"         .long   HNUM4
    2101 0000ee70 00002760"         .long   HNUM4
    2102 0000ee90 00002760"         .long   HNUM4
    2103                    
    2104 0000eeb0           num_2P_tab
    2105 0000eeb0 000025b0"         .long   HNUM1
    2106 0000eed0 00002640"         .long   HNUM2
    2107 0000eef0 00002640"         .long   HNUM2
    2108 0000ef10 00002640"         .long   HNUM2
    2109 0000ef30 00002640"         .long   HNUM2
    2110 0000ef50 00002640"         .long   HNUM2
    2111 0000ef70 00002640"         .long   HNUM2
    2112 0000ef90 00002640"         .long   HNUM2
    2113                    
    2114 0000efb0           HELP_TEXT_PAL_TABLE
    2115 0000efb0 00000000!         .LONG   PRPTXT3P
    2116 0000efd0 00000000!         .LONG   BLUTXT3P
    2117 0000eff0 00000000!         .LONG   BLUTXT3P
    2118 0000f010 00000000!         .LONG   BLUTXT3P
    2119 0000f030 00000000!         .LONG   GLDTXT1P
    2120 0000f050 00000000!         .LONG   GRNTXT3P
    2121 0000f070 00000000!         .LONG   GRNTXT3P
    2122 0000f090 00000000!         .LONG   REDTXT3P
    2123                    
    2124 0000f0b0           HELP_FRAME_PAL_TABLE
    2125 0000f0b0 00000000!         .LONG   PRPFRMP
    2126 0000f0d0 00000000!         .LONG   BLUFRMP
    2127 0000f0f0 00000000!         .LONG   BLUFRMP
    2128 0000f110 00000000!         .LONG   BLUFRMP
    2129 0000f130 00000000!         .LONG   GLDFRMP
    2130 0000f150 00000000!         .LONG   GRNFRMP
    2131 0000f170 00000000!         .LONG   GRNFRMP
    2132 0000f190 00000000!         .LONG   REDFRMP
    2133                    
    2134 0000f1b0           create_smotherpass
    2135 0000f1b0     09f0          movi    mh_smotherpass_init,b0
         0000f1c0 00010010' 
    2136 0000f1e0     09e5          movi    mh_helpbox4_init,a5
         0000f1f0 0000f6b0' 
    2137 0000f210     c000          jruc    regpbox
         0000f220     ff57  
    2138                    
    2139                    ;mh_helpbox1_init
    2140                    ;       .long   HELPBX1
    2141                    ;       .word   DMAWNZ,M_NOSCALE|M_NOVEL
    2142                    ;       .word   OM_OID
    2143                    ;       .word   OID_FROZEN_MESSAGE
    2144                    ;
TMS340 COFF Macro Assembler Version 6.10     Wed Apr 21 11:31:24 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   53

    2145                    ;mh_helpbox2_init
    2146                    ;       .long   HELPBX2
    2147                    ;       .word   DMAWNZ,M_NOSCALE|M_NOVEL
    2148                    ;       .word   OM_OID
    2149                    ;       .word   OID_FROZEN_MESSAGE
    2150                    ;
    2151                    ;mh_helpbox3_init
    2152                    ;       .long   HELPBX3
    2153                    ;       .word   DMAWNZ,M_NOSCALE|M_NOVEL
    2154                    ;       .word   OM_OID
    2155                    ;       .word   OID_FROZEN_MESSAGE
    2156                    ;
    2157                    ;mh_helpbox4_init
    2158                    ;       .long   HELPBX4
    2159                    ;       .word   DMAWNZ,M_NOSCALE|M_NOVEL
    2160                    ;       .word   OM_OID
    2161                    ;       .word   OID_FROZEN_MESSAGE
    2162                    
    2163 0000f230           mh_helpbox1_init
    2164 0000f230       02          .byte   2, 0, 0, 2      ;OBJCNT, PRCCNT, IMGPALCNT, PALCNT
    2165 0000f250 00000000!         .long   GRYBLOCKP       ;IMGPAL
    2166 0000f270 00000000!         .long   HELPBK2P        ;IMGPAL
    2167 0000f290     0503          .word   OID_FROZEN_MESSAGE, 0   ;OID, GLOBAL_OPTIONS
    2168                    *        .long IMG
    2169                    *        .word OCTRL, OFLAGS, OZOFF
    2170                    *        .word OPTIONS
    2171                    
    2172 0000f2b0                   LWWWW   HELPBX1, DMAWNZ, M_NOSCALE|M_NOVEL, 0, OM_CFUNC
    2173 0000f310 0000ecb0'         .LONG   C_CHANGE_PPAL
    2174 0000f330 0000f0b0'         .LONG   HELP_FRAME_PAL_TABLE
    2175 0000f350                   LWWWW   HELPBK1, DMAWNZ, M_NOSCALE|M_NOVEL, 1, 0
    2176                    
    2177 0000f3b0           mh_helpbox2_init
    2178 0000f3b0       02          .byte   2, 0, 0, 2      ;OBJCNT, PRCCNT, IMGPALCNT, PALCNT
    2179 0000f3d0 00000000!         .long   GRYBLOCKP       ;IMGPAL
    2180 0000f3f0 00000000!         .long   HELPBK2P        ;IMGPAL
    2181 0000f410     0503          .word   OID_FROZEN_MESSAGE, 0   ;OID, GLOBAL_OPTIONS
    2182                    *        .long IMG
    2183                    *        .word OCTRL, OFLAGS, OZOFF
    2184                    *        .word OPTIONS
    2185                    
    2186 0000f430                   LWWWW   HELPBX2, DMAWNZ, M_NOSCALE|M_NOVEL, 0, OM_CFUNC
    2187 0000f490 0000ecb0'         .LONG   C_CHANGE_PPAL
    2188 0000f4b0 0000f0b0'         .LONG   HELP_FRAME_PAL_TABLE
    2189 0000f4d0                   LWWWW   HELPBK2, DMAWNZ, M_NOSCALE|M_NOVEL, 1, 0
    2190                    
    2191 0000f530           mh_helpbox3_init
    2192 0000f530       02          .byte   2, 0, 0, 2      ;OBJCNT, PRCCNT, IMGPALCNT, PALCNT
    2193 0000f550 00000000!         .long   GRYBLOCKP       ;IMGPAL
    2194 0000f570 00000000!         .long   HELPBK2P        ;IMGPAL
    2195 0000f590     0503          .word   OID_FROZEN_MESSAGE, 0   ;OID, GLOBAL_OPTIONS
    2196                    *        .long IMG
    2197                    *        .word OCTRL, OFLAGS, OZOFF
    2198                    *        .word OPTIONS
    2199                    
TMS340 COFF Macro Assembler Version 6.10     Wed Apr 21 11:31:24 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   54

    2200 0000f5b0                   LWWWW   HELPBX3, DMAWNZ, M_NOSCALE|M_NOVEL, 0, OM_CFUNC
    2201 0000f610 0000ecb0'         .LONG   C_CHANGE_PPAL
    2202 0000f630 0000f0b0'         .LONG   HELP_FRAME_PAL_TABLE
    2203 0000f650                   LWWWW   HELPBK3, DMAWNZ, M_NOSCALE|M_NOVEL, 1, 0
    2204                    
    2205 0000f6b0           mh_helpbox4_init
    2206 0000f6b0       02          .byte   2, 0, 0, 2      ;OBJCNT, PRCCNT, IMGPALCNT, PALCNT
    2207 0000f6d0 00000000!         .long   GRYBLOCKP       ;IMGPAL
    2208 0000f6f0 00000000!         .long   HELPBK2P        ;IMGPAL
    2209 0000f710     0503          .word   OID_FROZEN_MESSAGE, 0   ;OID, GLOBAL_OPTIONS
    2210                    *        .long IMG
    2211                    *        .word OCTRL, OFLAGS, OZOFF
    2212                    *        .word OPTIONS
    2213                    
    2214 0000f730                   LWWWW   HELPBX4, DMAWNZ, M_NOSCALE|M_NOVEL, 0, OM_CFUNC
    2215 0000f790 0000ecb0'         .LONG   C_CHANGE_PPAL
    2216 0000f7b0 0000f0b0'         .LONG   HELP_FRAME_PAL_TABLE
    2217 0000f7d0                   LWWWW   HELPBK4, DMAWNZ, M_NOSCALE|M_NOVEL, 1, 0
    2218                    
    2219                    ;mh_offscreen_init
    2220                    ;       .long   HLPJOYS1
    2221                    ;       .word   DMAWNZ,M_NOSCALE|M_NOVEL
    2222                    ;       .word   OM_OID
    2223                    ;       .word   OID_FROZEN_MESSAGE
    2224                    ;
    2225                    ;mh_shootfar_init
    2226                    ;       .long   HLPSHOT1
    2227                    ;       .word   DMAWNZ,M_NOSCALE|M_NOVEL
    2228                    ;       .word   OM_OID
    2229                    ;       .word   OID_FROZEN_MESSAGE
    2230                    ;
    2231                    ;mh_shootpass_init
    2232                    ;       .long   HLPBUTN1
    2233                    ;       .word   DMAWNZ,M_NOSCALE|M_NOVEL
    2234                    ;       .word   OM_OID
    2235                    ;       .word   OID_FROZEN_MESSAGE
    2236                    ;
    2237                    ;mh_drone_shootpass_init
    2238                    ;       .long   HLPCPU1
    2239                    ;       .word   DMAWNZ,M_NOSCALE|M_NOVEL
    2240                    ;       .word   OM_OID
    2241                    ;       .word   OID_FROZEN_MESSAGE
    2242                    ;
    2243                    ;mh_turbo_init
    2244                    ;       .long   HLPTRBO1
    2245                    ;       .word   DMAWNZ,M_NOSCALE|M_NOVEL
    2246                    ;       .word   OM_OID
    2247                    ;       .word   OID_FROZEN_MESSAGE
    2248                    
    2249 0000f830           mh_offscreen_init
    2250 0000f830       02          .byte   2, 0, 0, 2      ;OBJCNT, PRCCNT, IMGPALCNT, PALCNT
    2251 0000f850 00000000!         .long   GFONT10CP       ;IMGPAL
    2252 0000f870 00000000!         .long   INSTRUCP        ;IMGPAL
    2253 0000f890     0503          .word   OID_FROZEN_MESSAGE, 0   ;OID, GLOBAL_OPTIONS
    2254                    *        .long IMG
TMS340 COFF Macro Assembler Version 6.10     Wed Apr 21 11:31:24 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   55

    2255                    *        .word OCTRL, OFLAGS, OZOFF
    2256                    *        .word OPTIONS
    2257                    
    2258 0000f8b0                   LWWWW   PLAYERN, DMAWNZ, M_NOSCALE|M_NOVEL, 0, OM_CFUNC
    2259 0000f910 0000ecb0'         .LONG   C_CHANGE_PPAL
    2260 0000f930 0000efb0'         .LONG   HELP_TEXT_PAL_TABLE
    2261 0000f950                   LWWWW   HLPJOYS1, DMAWNZ, M_NOSCALE|M_NOVEL, 0, 0
    2262                    
    2263 0000f9b0           mh_shootfar_init
    2264 0000f9b0       02          .byte   2, 0, 0, 2      ;OBJCNT, PRCCNT, IMGPALCNT, PALCNT
    2265 0000f9d0 00000000!         .long   GFONT10CP       ;IMGPAL
    2266 0000f9f0 00000000!         .long   INSTRUCP        ;IMGPAL
    2267 0000fa10     0503          .word   OID_FROZEN_MESSAGE, 0   ;OID, GLOBAL_OPTIONS
    2268                    *        .long IMG
    2269                    *        .word OCTRL, OFLAGS, OZOFF
    2270                    *        .word OPTIONS
    2271                    
    2272 0000fa30                   LWWWW   PLAYERN, DMAWNZ, M_NOSCALE|M_NOVEL, 0, OM_CFUNC
    2273 0000fa90 0000ecb0'         .LONG   C_CHANGE_PPAL
    2274 0000fab0 0000efb0'         .LONG   HELP_TEXT_PAL_TABLE
    2275 0000fad0                   LWWWW   HLPSHOT1, DMAWNZ, M_NOSCALE|M_NOVEL, 0, 0
    2276                    
    2277 0000fb30           mh_shootpass_init
    2278 0000fb30       02          .byte   2, 0, 0, 2      ;OBJCNT, PRCCNT, IMGPALCNT, PALCNT
    2279 0000fb50 00000000!         .long   GFONT10CP       ;IMGPAL
    2280 0000fb70 00000000!         .long   INSTRUCP        ;IMGPAL
    2281 0000fb90     0503          .word   OID_FROZEN_MESSAGE, 0   ;OID, GLOBAL_OPTIONS
    2282                    *        .long IMG
    2283                    *        .word OCTRL, OFLAGS, OZOFF
    2284                    *        .word OPTIONS
    2285                    
    2286 0000fbb0                   LWWWW   PLAYERN, DMAWNZ, M_NOSCALE|M_NOVEL, 0, OM_CFUNC
    2287 0000fc10 0000ecb0'         .LONG   C_CHANGE_PPAL
    2288 0000fc30 0000efb0'         .LONG   HELP_TEXT_PAL_TABLE
    2289 0000fc50                   LWWWW   HLPBUTN1, DMAWNZ, M_NOSCALE|M_NOVEL, 0, 0
    2290                    
    2291 0000fcb0           mh_drone_shootpass_init
    2292 0000fcb0       02          .byte   2, 0, 0, 2      ;OBJCNT, PRCCNT, IMGPALCNT, PALCNT
    2293 0000fcd0 00000000!         .long   GFONT10CP       ;IMGPAL
    2294 0000fcf0 00000000!         .long   INSTRUCP        ;IMGPAL
    2295 0000fd10     0503          .word   OID_FROZEN_MESSAGE, 0   ;OID, GLOBAL_OPTIONS
    2296                    *        .long IMG
    2297                    *        .word OCTRL, OFLAGS, OZOFF
    2298                    *        .word OPTIONS
    2299                    
    2300 0000fd30                   LWWWW   PLAYERN, DMAWNZ, M_NOSCALE|M_NOVEL, 0, OM_CFUNC
    2301 0000fd90 0000ecb0'         .LONG   C_CHANGE_PPAL
    2302 0000fdb0 0000efb0'         .LONG   HELP_TEXT_PAL_TABLE
    2303 0000fdd0                   LWWWW   HLPCPU1, DMAWNZ, M_NOSCALE|M_NOVEL, 0, 0
    2304                    
    2305 0000fe30           mh_turbo_init
    2306 0000fe30       02          .byte   2, 0, 0, 2      ;OBJCNT, PRCCNT, IMGPALCNT, PALCNT
    2307 0000fe50 00000000!         .long   GFONT10CP       ;IMGPAL
    2308 0000fe70 00000000!         .long   INSTRUCP        ;IMGPAL
    2309 0000fe90     0503          .word   OID_FROZEN_MESSAGE, 0   ;OID, GLOBAL_OPTIONS
TMS340 COFF Macro Assembler Version 6.10     Wed Apr 21 11:31:24 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   56

    2310                    *        .long IMG
    2311                    *        .word OCTRL, OFLAGS, OZOFF
    2312                    *        .word OPTIONS
    2313                    
    2314 0000feb0                   LWWWW   PLAYERN, DMAWNZ, M_NOSCALE|M_NOVEL, 0, OM_CFUNC
    2315 0000ff10 0000ecb0'         .LONG   C_CHANGE_PPAL
    2316 0000ff30 0000efb0'         .LONG   HELP_TEXT_PAL_TABLE
    2317 0000ff50                   LWWWW   HLPTRBO1, DMAWNZ, M_NOSCALE|M_NOVEL, 0, 0
    2318                    
    2319 0000ffb0           dum_num_init
    2320 0000ffb0 000022e0"         .long   HLPGOAL1
    2321 0000ffd0     8002          .word   DMAWNZ,M_NOSCALE|M_NOVEL
    2322 0000fff0     0100          .word   OM_OID
    2323 00010000     0503          .word   OID_FROZEN_MESSAGE
    2324                    
    2325 00010010           mh_smotherpass_init
    2326 00010010       01          .byte   1, 0, 0, 1      ;OBJCNT, PRCCNT, IMGPALCNT, PALCNT
    2327 00010030 00000000!         .long   INSTRUCP        ;IMGPAL
    2328 00010050     0503          .word   OID_FROZEN_MESSAGE, 0   ;OID, GLOBAL_OPTIONS
    2329                    *        .long IMG
    2330                    *        .word OCTRL, OFLAGS, OZOFF
    2331                    *        .word OPTIONS
    2332                    
    2333 00010070                   LWWWW   HLPGOAL1, DMAWNZ, M_NOSCALE|M_NOVEL, 0, 0
    2334                    
    2335                    **************************************************************************
    2336                    *                                                                        *
    2337                    * PUCK_PTR_PROC - POINT TO STOPPED PUCK AFTER SOMETIME                   *
    2338                    *                                                                        *
    2339                    * PASS:                                                                  *
    2340                    * NUTIN'                                                                 *
    2341                    *                                                                        *
    2342                    **************************************************************************
    2343                    
    2344              001e  PUCK_STOPPED_TIME       EQU     30 ;120         ;MUST REMAIN STOPPED FOR THIS
    2345                    
    2346 000100d0           PUCK_PTR_PROC
    2347 000100d0     07a9          MOVE    @PUCK_OBJECT,A9,L
         000100e0 00000000! 
    2348 00010100           PPP_WAIT
    2349 00010100                   SLEEP   10
    2350 00010140     b72e          MOVE    *A9(ODT_VEL),A14,L
         00010150     04d0  
    2351 00010160     cbf9          JRNZ    PPP_WAIT                        ;BR=MOVIN' AROUND
    2352                    
    2353 00010170     05ae          MOVE    @PUCK_CONTROL,A14,W
         00010180 00000000! 
    2354 000101a0     cbf5          JRNZ    PPP_WAIT                        ;BR=SOMEBODY GOTS IT
    2355                    
    2356 000101b0     05ae          MOVE    @PUCK_MODE,A14,W
         000101c0 00000000! 
    2357 000101e0     cbf1          JRNZ    PPP_WAIT                        ;BR=NOT OPEN
    2358                    
    2359 000101f0     07a8          MOVE    @WAVEIRQS,A8,L
         00010200 00000000! 
TMS340 COFF Macro Assembler Version 6.10     Wed Apr 21 11:31:24 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   57

    2360 00010220           PPP_STOPPED_WAIT
    2361 00010220                   SLEEP   1
    2362 00010260     05ae          MOVE    @PUCK_CONTROL,A14,W
         00010270 00000000! 
    2363 00010290     cbe6          JRNZ    PPP_WAIT                        ;BR=SOMEBODY GOTS IT
    2364                    
    2365 000102a0     05ae          MOVE    @PUCK_MODE,A14,W
         000102b0 00000000! 
    2366 000102d0     cbe2          JRNZ    PPP_WAIT                        ;BR=NOT OPEN
    2367                    
    2368 000102e0     b72e          MOVE    *A9(ODT_VEL),A14,L
         000102f0     04d0  
    2369 00010300     cbdf          JRNZ    PPP_WAIT                        ;BR=STARTED MOVIN' AGAIN
    2370                    
    2371 00010310     07ae          MOVE    @WAVEIRQS,A14,L
         00010320 00000000! 
    2372 00010340     450e          SUB     A8,A14
    2373 00010350     0b4e          CMPI    PUCK_STOPPED_TIME,A14
         00010360     ffe1  
    2374 00010370     c4ea          JRLT    PPP_STOPPED_WAIT                ;BR=NOT LONG ENOUGH             
    2375                    
    2376                    ;       MOVE    *A9(ODAG),A3,L
    2377                    
    2378 00010380     b723          MOVE    *A9(OXVAL),A3,L
         00010390     0140  
    2379                    
    2380 000103a0     b722          MOVE    *A9(OZVAL),A2,L
         000103b0     0180  
    2381                    
    2382 000103c0     05ae          MOVE    @BIG_PUCK,A14,W
         000103d0 00000000! 
    2383 000103f0     ca03          JRZ     PPP_MAKE_BIGPUCK                ;BR=NORMAL PUCK
    2384 00010400     0b23          ADDI    040000H,A3
         00010410 00040000  
    2385                    
    2386 00010430           PPP_MAKE_BIGPUCK
    2387 00010430     09f0          MOVI    BIGPUCK_PTR_INIT,B0
         00010440 000108c0' 
    2388 00010460     0d5f          CALLA   EASYMAKE
         00010470 00000000! 
    2389 00010490     cac6          JRZ     PPP_WAIT                        ;BR=NO FREE OBJECTS
    2390                    
    2391                    ;       MOVE    A3,A1
    2392                    ;       ADDI    [-52,4],A1
    2393                    ;       MOVE    @BIG_PUCK,A4,W
    2394                    ;       JRZ     PPP_SET_PTR                     ;BR=NORMAL PUCK
    2395                    ;       ADDK    4,A1
    2396                    ;PPP_SET_PTR
    2397                    ;       CALLA   SET_SCRNOBJ
    2398                    
    2399 000104a0     09ee          MOVI    -0380000H,A14
         000104b0 ffc80000  
    2400 000104d0     b3c8          MOVE    A14,*A8(OYVAL),L
         000104e0     0160  
    2401 000104f0     b268          MOVE    A3,*A8(OXVAL),L
TMS340 COFF Macro Assembler Version 6.10     Wed Apr 21 11:31:24 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   58

         00010500     0140  
    2402 00010510     b248          MOVE    A2,*A8(OZVAL),L
         00010520     0180  
    2403                    
    2404 00010530     0d5f          CALLA   INSERT_OBJ
         00010540 00000000! 
    2405 00010560     4d0a          MOVE    A8,A10
    2406                    
    2407 00010570     09f0          MOVI    PUCK_PTR_INIT,B0
         00010580 00010840' 
    2408 000105a0     0d5f          CALLA   EASYMAKE
         000105b0 00000000! 
    2409 000105d0     ca22          JRZ     PPP_PTR_DELETE                  ;BR=NO FREE OBJECTS
    2410                    
    2411                    ;       MOVE    A3,A1
    2412                    ;       ADDK    [0,4],A1
    2413                    ;       MOVE    A4,A4
    2414                    ;       JRZ     PPP_SET_PUCK                    ;BR=NORMAL PUCK
    2415                    ;       ADDK    4,A1
    2416                    ;PPP_SET_PUCK
    2417 000105e0     1022          INC     A2
    2418                    ;       CALLA   SET_SCRNOBJ
    2419                    
    2420 000105f0     09ee          MOVI    -020000H,A14
         00010600 fffe0000  
    2421 00010620     b3c8          MOVE    A14,*A8(OYVAL),L
         00010630     0160  
    2422 00010640     b268          MOVE    A3,*A8(OXVAL),L
         00010650     0140  
    2423 00010660     b248          MOVE    A2,*A8(OZVAL),L
         00010670     0180  
    2424                    
    2425 00010680     0d5f          CALLA   INSERT_OBJ
         00010690 00000000! 
    2426                    
    2427 000106b0     b30a          MOVE    A8,*A10(OPART1),L
         000106c0     00a0  
    2428 000106d0     b308          MOVE    A8,*A8(OPART1),L
         000106e0     00a0  
    2429 000106f0     b348          MOVE    A10,*A8(OPARTS),L
         00010700     00c0  
    2430                    
    2431 00010710           PPP_PTR_WAIT
    2432 00010710                   SLEEP   1
    2433 00010750     05ae          MOVE    @PUCK_CONTROL,A14,W
         00010760 00000000! 
    2434 00010780     cb07          JRNZ    PPP_PTR_DELETE                  ;BR=NOBODY GOTS IT
    2435                    
    2436 00010790     05ae          MOVE    @PUCK_MODE,A14,W
         000107a0 00000000! 
    2437 000107c0     cb03          JRNZ    PPP_PTR_DELETE                  ;BR=NOT OPEN
    2438                    
    2439 000107d0     b72e          MOVE    *A9(ODT_VEL),A14,L
         000107e0     04d0  
    2440 000107f0     caf1          JRZ     PPP_PTR_WAIT                    ;BR=NOT MOVIN'
TMS340 COFF Macro Assembler Version 6.10     Wed Apr 21 11:31:24 2021
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE   59

    2441                    
    2442 00010800           PPP_PTR_DELETE
    2443 00010800     0d5f          CALLA   DELETE_OBJ
         00010810 00000000! 
    2444                    
    2445 00010830     c08c          JRUC    PPP_WAIT
    2446                    
    2447 00010840           PUCK_PTR_INIT
    2448 00010840 00001d40"         .long   PUCKPNTR1
    2449                    ;       .word   DMAWNZ,M_SCRNOBJ|M_NOSCALE|M_NOVEL
    2450 00010860     8002          .word   DMAWNZ,M_NOSCALE|M_NOVEL
    2451 00010880     0104          .word   OM_OID|OM_ANIM
    2452 00010890     0504          .word   OID_PUCK_PTR
    2453 000108a0 00010940'         .long   PUCK_PTR_ANIM
    2454                    
    2455 000108c0           BIGPUCK_PTR_INIT
    2456 000108c0 00001830"         .long   NMPUCK01
    2457                    ;       .word   DMAWNZ,M_SCRNOBJ|M_NOSCALE|M_NOVEL
    2458 000108e0     8002          .word   DMAWNZ,M_NOSCALE|M_NOVEL
    2459 00010900     0104          .word   OM_OID|OM_ANIM
    2460 00010910     0504          .word   OID_PUCK_PTR
    2461 00010920 00010a50'         .long   BIGPUCK_PTR_ANIM
    2462                    
    2463 00010940           PUCK_PTR_ANIM
    2464                    ;       LWL     1,10|AFUNC,OBJ_ON
    2465                    ;       LWL     1,10|AFUNC,OBJ_OFF
    2466                    
    2467 00010940                   LWLLLW  1,11|AFUNC,A_2FUNCS+5,OBJ_ON,A_DO_SOUND,S_PUCK_POINT
    2468 000109e0                   LWL     1,11|AFUNC,OBJ_OFF
    2469 00010a30 00000000          .long   0
    2470                    
    2471 00010a50           BIGPUCK_PTR_ANIM
    2472 00010a50                   LW      NMPUCK01,4
    2473 00010a80                   LW      NMPUCK02,4
    2474 00010ab0                   LW      NMPUCK03,4
    2475 00010ae0                   LW      NMPUCK04,4
    2476 00010b10                   LW      NMPUCK05,4
    2477 00010b40                   LW      NMPUCK06,4
    2478 00010b70                   LW      NMPUCK07,4
    2479 00010ba0                   LW      NMPUCK08,4
    2480 00010bd0                   LW      NMPUCK09,4
    2481 00010c00 00000000          .long   0

 No Errors,  No Warnings
